<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Subversion: Working copy status.</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Working copy status.</div>  </div>
<div class="ingroups"><a class="el" href="group__svn__wc.html">Working copy management</a></div></div>
<div class="contents">

<p>We have three functions for getting working copy status: one function for getting the status of exactly one thing, another for getting the statuses of (potentially) multiple things and a third for getting the working copy out-of-dateness with respect to the repository.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for holding the "status" of a working copy item.  <a href="structsvn__wc__status3__t.html#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">### All diffs are not yet known.  <a href="structsvn__wc__status2__t.html#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="structsvn__wc__status2__t.html" title="### All diffs are not yet known.">svn_wc_status2_t</a>, but without the <a class="el" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> 'repos_lock' field.  <a href="structsvn__wc__status__t.html#details">More...</a><br/></td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gaaacb0e6f51c41931bd570da2df072ded">svn_wc_status3_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for holding the "status" of a working copy item.  <a href="#gaaacb0e6f51c41931bd570da2df072ded"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gaabad10f458b21f75780e0ef732c0ae1c">svn_wc_status2_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">### All diffs are not yet known.  <a href="#gaabad10f458b21f75780e0ef732c0ae1c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#ga03f227a4ca2b2a55c69375b3b7d225b5">svn_wc_status_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="structsvn__wc__status2__t.html" title="### All diffs are not yet known.">svn_wc_status2_t</a>, but without the <a class="el" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> 'repos_lock' field.  <a href="#ga03f227a4ca2b2a55c69375b3b7d225b5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d">svn_wc_status_func4_t</a> )(void *baton, const char *local_abspath, const <a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a> *status, apr_pool_t *scratch_pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A callback for reporting a <em>status</em> about <em>local_abspath</em>.  <a href="#gac4d4bbb3b4cbe9c20ef772d4ac8f940d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a">svn_wc_status_func3_t</a> )(void *baton, const char *path, <a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a> *status, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as svn_wc_status_func4_t, but with a non-const status and a relative path.  <a href="#ga29ecaaf89f883d1a308f1f5320ca967a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">svn_wc_status_func2_t</a> )(void *baton, const char *path, <a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a> *status)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors.  <a href="#gaf68700e38ff4fd0a8a246e5c9290b14e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a">svn_wc_status_func_t</a> )(void *baton, const char *path, <a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a> *status)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as svn_wc_status_func2_t, but for older <a class="el" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> structures.  <a href="#gac19e1c47c044d86aaa9e3a0790efa17a"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d">svn_wc_status_kind</a> { <br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da991bbf1a444aa18593ff11948bbea60a">svn_wc_status_none</a> =  1, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da7e9e322307b1442dff9e289fba9b00e8">svn_wc_status_unversioned</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da2389c6b75fea54f05c5a6c9633a71087">svn_wc_status_normal</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da0da8dafa7cea122186d1c00ec665afa6">svn_wc_status_added</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da72aa0c31b345f4168ca0ccb862704643">svn_wc_status_missing</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96daba05805344c060627f5cc039a01c1cdc">svn_wc_status_deleted</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da80748e7146540a5ea5ba0d26c4a42ba5">svn_wc_status_replaced</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96daa68c26e1f269943abf2769a3df4d730b">svn_wc_status_modified</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da8c67a4d2576ed30014313088a4d972de">svn_wc_status_merged</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da5786df1c38c41b28ff33c3ee692550ba">svn_wc_status_conflicted</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96daafdcb2e885d5d000adc048235b9e38cd">svn_wc_status_ignored</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da8693ff658ce80dc8f9a8b4ff9b332b37">svn_wc_status_obstructed</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da4f106daa9dfd6a7dde0002b2f54e001b">svn_wc_status_external</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da971458b88498d03b7af67280c3f12c3f">svn_wc_status_incomplete</a>
<br/>
 }</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of status for the working copy.  <a href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d">More...</a><br/></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#ga29408615c14deb823ab2dafa3de10a5d">svn_wc_dup_status3</a> (const <a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a> *orig_stat, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a deep copy of the <em>orig_stat</em> status structure, allocated in <em>pool</em>.  <a href="#ga29408615c14deb823ab2dafa3de10a5d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gac330f5bc134efdbcf4b36c88faa78579">svn_wc_dup_status2</a> (const <a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a> *orig_stat, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__svn__wc__status.html#ga29408615c14deb823ab2dafa3de10a5d" title="Return a deep copy of the orig_stat status structure, allocated in pool.">svn_wc_dup_status3()</a>, but for older <a class="el" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> structures.  <a href="#gac330f5bc134efdbcf4b36c88faa78579"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#ga4eb3742e8ac569f2467ef77d885b7a57">svn_wc_dup_status</a> (const <a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a> *orig_stat, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__svn__wc__status.html#gac330f5bc134efdbcf4b36c88faa78579" title="Same as svn_wc_dup_status3(), but for older svn_wc_status_t structures.">svn_wc_dup_status2()</a>, but for older <a class="el" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> structures.  <a href="#ga4eb3742e8ac569f2467ef77d885b7a57"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#ga0e93907a864fb509616bc84477c83a40">svn_wc_status3</a> (<a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a> **status, <a class="el" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae">svn_wc_context_t</a> *wc_ctx, const char *local_abspath, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill <em>*status</em> for <em>local_abspath</em>, allocating in <em>result_pool</em>.  <a href="#ga0e93907a864fb509616bc84477c83a40"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#ga83f1370500939a518fdd46c909a0587d">svn_wc_status2</a> (<a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a> **status, const char *path, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *adm_access, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__wc__status.html#ga0e93907a864fb509616bc84477c83a40" title="Fill *status for local_abspath, allocating in result_pool.">svn_wc_status3()</a>, but with a adm_access baton and absolute path.  <a href="#ga83f1370500939a518fdd46c909a0587d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#ga2dfbf2bcac68c534a4d54cf251d7abd6">svn_wc_status</a> (<a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a> **status, const char *path, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *adm_access, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__svn__wc__status.html#ga83f1370500939a518fdd46c909a0587d" title="Similar to svn_wc_status3(), but with a adm_access baton and absolute path.">svn_wc_status2()</a>, but for older <a class="el" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> structures.  <a href="#ga2dfbf2bcac68c534a4d54cf251d7abd6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#ga456c84ac9b3bcd268722f3d7689a337a">svn_wc_walk_status</a> (<a class="el" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae">svn_wc_context_t</a> *wc_ctx, const char *local_abspath, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_text_mods, const apr_array_header_t *ignore_patterns, <a class="el" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d">svn_wc_status_func4_t</a> status_func, void *status_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *scratch_pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Walk the working copy status of <em>local_abspath</em> using <em>wc_ctx</em>, by creating <a class="el" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a> structures and sending these through <em>status_func</em> / <em>status_baton</em>.  <a href="#ga456c84ac9b3bcd268722f3d7689a337a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#ga97e9c50ae801b942989859e36810aeed">svn_wc_get_status_editor5</a> (const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **editor, void **edit_baton, void **set_locks_baton, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *edit_revision, <a class="el" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae">svn_wc_context_t</a> *wc_ctx, const char *anchor_abspath, const char *target_basename, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> depth_as_sticky, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> server_performs_filtering, const apr_array_header_t *ignore_patterns, <a class="el" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d">svn_wc_status_func4_t</a> status_func, void *status_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*editor</em> and <em>*edit_baton</em> to an editor that generates <a class="el" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a> structures and sends them through <em>status_func</em> / <em>status_baton</em>.  <a href="#ga97e9c50ae801b942989859e36810aeed"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gad76e728aaadd7e46b02fba84c0ca5aeb">svn_wc_get_status_editor4</a> (const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **editor, void **edit_baton, void **set_locks_baton, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *edit_revision, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *anchor, const char *target, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, const apr_array_header_t *ignore_patterns, <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a">svn_wc_status_func3_t</a> status_func, void *status_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, <a class="el" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf">svn_wc_traversal_info_t</a> *traversal_info, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as svn_wc_get_status_editor5, but using <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a" title="Same as svn_wc_status_func4_t, but with a non-const status and a relative path.">svn_wc_status_func3_t</a> instead of <a class="el" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d" title="A callback for reporting a status about local_abspath.">svn_wc_status_func4_t</a>.  <a href="#gad76e728aaadd7e46b02fba84c0ca5aeb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gafbd5836dd65c99007a3c5258f513eaef">svn_wc_get_status_editor3</a> (const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **editor, void **edit_baton, void **set_locks_baton, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *edit_revision, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *anchor, const char *target, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, const apr_array_header_t *ignore_patterns, <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">svn_wc_status_func2_t</a> status_func, void *status_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, <a class="el" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf">svn_wc_traversal_info_t</a> *traversal_info, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__svn__wc__status.html#gad76e728aaadd7e46b02fba84c0ca5aeb" title="Same as svn_wc_get_status_editor5, but using svn_wc_status_func3_t instead of svn_wc_status_func4_t.">svn_wc_get_status_editor4()</a>, but using <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a> instead of <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a" title="Same as svn_wc_status_func4_t, but with a non-const status and a relative path.">svn_wc_status_func3_t</a>.  <a href="#gafbd5836dd65c99007a3c5258f513eaef"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gae384903ef5abbbebc26a73622e010a4d">svn_wc_get_status_editor2</a> (const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **editor, void **edit_baton, void **set_locks_baton, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *edit_revision, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *anchor, const char *target, apr_hash_t *config, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> recurse, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">svn_wc_status_func2_t</a> status_func, void *status_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, <a class="el" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf">svn_wc_traversal_info_t</a> *traversal_info, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Like <a class="el" href="group__svn__wc__status.html#gafbd5836dd65c99007a3c5258f513eaef" title="Same as svn_wc_get_status_editor4(), but using svn_wc_status_func2_t instead of svn_wc_status_func3_t...">svn_wc_get_status_editor3()</a>, but with <em>ignore_patterns</em> provided from the corresponding value in <em>config</em>, and <em>recurse</em> instead of <em>depth</em>.  <a href="#gae384903ef5abbbebc26a73622e010a4d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#ga4fa9b6de93c3b3e5aafc07b39b68ea13">svn_wc_get_status_editor</a> (const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **editor, void **edit_baton, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *edit_revision, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *anchor, const char *target, apr_hash_t *config, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> recurse, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, <a class="el" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a">svn_wc_status_func_t</a> status_func, void *status_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, <a class="el" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf">svn_wc_traversal_info_t</a> *traversal_info, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__svn__wc__status.html#gae384903ef5abbbebc26a73622e010a4d" title="Like svn_wc_get_status_editor3(), but with ignore_patterns provided from the corresponding value in c...">svn_wc_get_status_editor2()</a>, but with <em>set_locks_baton</em> set to <code>NULL</code>, and taking a deprecated svn_wc_status_func_t argument.  <a href="#ga4fa9b6de93c3b3e5aafc07b39b68ea13"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__status.html#gabfd8e5c78af1b718a60fed0ee2a8e590">svn_wc_status_set_repos_locks</a> (void *set_locks_baton, apr_hash_t *locks, const char *repos_root, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Associate <em>locks</em>, a hash table mapping <code>const char*</code> absolute repository paths to <code><a class="el" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a></code> objects, with a <em>set_locks_baton</em> returned by an earlier call to <a class="el" href="group__svn__wc__status.html#gafbd5836dd65c99007a3c5258f513eaef" title="Same as svn_wc_get_status_editor4(), but using svn_wc_status_func2_t instead of svn_wc_status_func3_t...">svn_wc_get_status_editor3()</a>.  <a href="#gabfd8e5c78af1b718a60fed0ee2a8e590"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<p>We have three functions for getting working copy status: one function for getting the status of exactly one thing, another for getting the statuses of (potentially) multiple things and a third for getting the working copy out-of-dateness with respect to the repository. </p>
<p>Why do we have two different functions for getting working copy status? The concept of depth, as explained in the documentation for svn_depth_t, may be useful in understanding this. Suppose we're getting the status of directory D:</p>
<p>To offer all three levels, we could have one unified function, taking a `depth' parameter. Unfortunately, because this function would have to handle multiple return values as well as the single return value case, getting the status of just one entity would become cumbersome: you'd have to roll through a hash to find one lone status.</p>
<p>So we have <a class="el" href="group__svn__wc__status.html#ga0e93907a864fb509616bc84477c83a40" title="Fill *status for local_abspath, allocating in result_pool.">svn_wc_status3()</a> for depth-empty (just D itself), and <a class="el" href="group__svn__wc__status.html#ga456c84ac9b3bcd268722f3d7689a337a" title="Walk the working copy status of local_abspath using wc_ctx, by creating svn_wc_status3_t structures a...">svn_wc_walk_status()</a> for depth-immediates and depth-infinity, since the latter two involve multiple return values. And for out-of-dateness information we have <a class="el" href="group__svn__wc__status.html#ga97e9c50ae801b942989859e36810aeed" title="Set *editor and *edit_baton to an editor that generates svn_wc_status3_t structures and sends them th...">svn_wc_get_status_editor5()</a>. </p>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="gaabad10f458b21f75780e0ef732c0ae1c"></a><!-- doxytag: member="svn_wc.h::svn_wc_status2_t" ref="gaabad10f458b21f75780e0ef732c0ae1c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a>  <a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>### All diffs are not yet known. </p>
<p>Same as <a class="el" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a>, but without the <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> 'versioned' field. Instead an item that is not versioned has the 'entry' field set to <code>NULL</code>.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.2. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000402">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gaaacb0e6f51c41931bd570da2df072ded"></a><!-- doxytag: member="svn_wc.h::svn_wc_status3_t" ref="gaaacb0e6f51c41931bd570da2df072ded" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a>  <a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Structure for holding the "status" of a working copy item. </p>
<dl class="note"><dt><b>Note:</b></dt><dd>Fields may be added to the end of this structure in future versions. Therefore, to preserve binary compatibility, users should not directly allocate structures of this type.</dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.7. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf68700e38ff4fd0a8a246e5c9290b14e"></a><!-- doxytag: member="svn_wc.h::svn_wc_status_func2_t" ref="gaf68700e38ff4fd0a8a246e5c9290b14e" args=")(void *baton, const char *path, svn_wc_status2_t *status)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">svn_wc_status_func2_t</a>)(void *baton, const char *path, <a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a> *status)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors. </p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.2. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000409">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.5 API. </dd></dl>

<p>Definition at line <a class="el" href="svn__wc_8h_source.html#l03906">3906</a> of file <a class="el" href="svn__wc_8h_source.html">svn_wc.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga29ecaaf89f883d1a308f1f5320ca967a"></a><!-- doxytag: member="svn_wc.h::svn_wc_status_func3_t" ref="ga29ecaaf89f883d1a308f1f5320ca967a" args=")(void *baton, const char *path, svn_wc_status2_t *status, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a">svn_wc_status_func3_t</a>)(void *baton, const char *path, <a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a> *status, apr_pool_t *pool)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Same as svn_wc_status_func4_t, but with a non-const status and a relative path. </p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.6. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000408">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

<p>Definition at line <a class="el" href="svn__wc_8h_source.html#l03894">3894</a> of file <a class="el" href="svn__wc_8h_source.html">svn_wc.h</a>.</p>

</div>
</div>
<a class="anchor" id="gac4d4bbb3b4cbe9c20ef772d4ac8f940d"></a><!-- doxytag: member="svn_wc.h::svn_wc_status_func4_t" ref="gac4d4bbb3b4cbe9c20ef772d4ac8f940d" args=")(void *baton, const char *local_abspath, const svn_wc_status3_t *status, apr_pool_t *scratch_pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* <a class="el" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d">svn_wc_status_func4_t</a>)(void *baton, const char *local_abspath, const <a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a> *status, apr_pool_t *scratch_pool)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>A callback for reporting a <em>status</em> about <em>local_abspath</em>. </p>
<p><em>baton</em> is a closure object; it should be provided by the implementation, and passed by the caller.</p>
<p><em>scratch_pool</em> will be cleared between invocations to the callback.</p>
<p>### we might be revamping the status infrastructure, and this callback ### could totally disappear by the end of 1.7 development. however, we ### need to mark the STATUS parameter as "const" so that it is easier ### to reason about who/what can modify those structures.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.7. </dd></dl>

<p>Definition at line <a class="el" href="svn__wc_8h_source.html#l03882">3882</a> of file <a class="el" href="svn__wc_8h_source.html">svn_wc.h</a>.</p>

</div>
</div>
<a class="anchor" id="gac19e1c47c044d86aaa9e3a0790efa17a"></a><!-- doxytag: member="svn_wc.h::svn_wc_status_func_t" ref="gac19e1c47c044d86aaa9e3a0790efa17a" args=")(void *baton, const char *path, svn_wc_status_t *status)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* <a class="el" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a">svn_wc_status_func_t</a>)(void *baton, const char *path, <a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a> *status)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Same as svn_wc_status_func2_t, but for older <a class="el" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> structures. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000410">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.1 API. </dd></dl>

<p>Definition at line <a class="el" href="svn__wc_8h_source.html#l03915">3915</a> of file <a class="el" href="svn__wc_8h_source.html">svn_wc.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga03f227a4ca2b2a55c69375b3b7d225b5"></a><!-- doxytag: member="svn_wc.h::svn_wc_status_t" ref="ga03f227a4ca2b2a55c69375b3b7d225b5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a>  <a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Same as <a class="el" href="structsvn__wc__status2__t.html" title="### All diffs are not yet known.">svn_wc_status2_t</a>, but without the <a class="el" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> 'repos_lock' field. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000403">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.1 API. </dd></dl>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="gad90a5ae2e412cd6fc047a64d627bd96d"></a><!-- doxytag: member="svn_wc.h::svn_wc_status_kind" ref="gad90a5ae2e412cd6fc047a64d627bd96d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d">svn_wc_status_kind</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>The type of status for the working copy. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da991bbf1a444aa18593ff11948bbea60a"></a><!-- doxytag: member="svn_wc_status_none" ref="ggad90a5ae2e412cd6fc047a64d627bd96da991bbf1a444aa18593ff11948bbea60a" args="" -->svn_wc_status_none</em>&nbsp;</td><td>
<p>does not exist </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da7e9e322307b1442dff9e289fba9b00e8"></a><!-- doxytag: member="svn_wc_status_unversioned" ref="ggad90a5ae2e412cd6fc047a64d627bd96da7e9e322307b1442dff9e289fba9b00e8" args="" -->svn_wc_status_unversioned</em>&nbsp;</td><td>
<p>is not a versioned thing in this wc </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da2389c6b75fea54f05c5a6c9633a71087"></a><!-- doxytag: member="svn_wc_status_normal" ref="ggad90a5ae2e412cd6fc047a64d627bd96da2389c6b75fea54f05c5a6c9633a71087" args="" -->svn_wc_status_normal</em>&nbsp;</td><td>
<p>exists, but uninteresting </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da0da8dafa7cea122186d1c00ec665afa6"></a><!-- doxytag: member="svn_wc_status_added" ref="ggad90a5ae2e412cd6fc047a64d627bd96da0da8dafa7cea122186d1c00ec665afa6" args="" -->svn_wc_status_added</em>&nbsp;</td><td>
<p>is scheduled for addition </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da72aa0c31b345f4168ca0ccb862704643"></a><!-- doxytag: member="svn_wc_status_missing" ref="ggad90a5ae2e412cd6fc047a64d627bd96da72aa0c31b345f4168ca0ccb862704643" args="" -->svn_wc_status_missing</em>&nbsp;</td><td>
<p>under v.c., but is missing </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96daba05805344c060627f5cc039a01c1cdc"></a><!-- doxytag: member="svn_wc_status_deleted" ref="ggad90a5ae2e412cd6fc047a64d627bd96daba05805344c060627f5cc039a01c1cdc" args="" -->svn_wc_status_deleted</em>&nbsp;</td><td>
<p>scheduled for deletion </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da80748e7146540a5ea5ba0d26c4a42ba5"></a><!-- doxytag: member="svn_wc_status_replaced" ref="ggad90a5ae2e412cd6fc047a64d627bd96da80748e7146540a5ea5ba0d26c4a42ba5" args="" -->svn_wc_status_replaced</em>&nbsp;</td><td>
<p>was deleted and then re-added </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96daa68c26e1f269943abf2769a3df4d730b"></a><!-- doxytag: member="svn_wc_status_modified" ref="ggad90a5ae2e412cd6fc047a64d627bd96daa68c26e1f269943abf2769a3df4d730b" args="" -->svn_wc_status_modified</em>&nbsp;</td><td>
<p>text or props have been modified </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da8c67a4d2576ed30014313088a4d972de"></a><!-- doxytag: member="svn_wc_status_merged" ref="ggad90a5ae2e412cd6fc047a64d627bd96da8c67a4d2576ed30014313088a4d972de" args="" -->svn_wc_status_merged</em>&nbsp;</td><td>
<p>local mods received repos mods (### unused) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da5786df1c38c41b28ff33c3ee692550ba"></a><!-- doxytag: member="svn_wc_status_conflicted" ref="ggad90a5ae2e412cd6fc047a64d627bd96da5786df1c38c41b28ff33c3ee692550ba" args="" -->svn_wc_status_conflicted</em>&nbsp;</td><td>
<p>local mods received conflicting repos mods </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96daafdcb2e885d5d000adc048235b9e38cd"></a><!-- doxytag: member="svn_wc_status_ignored" ref="ggad90a5ae2e412cd6fc047a64d627bd96daafdcb2e885d5d000adc048235b9e38cd" args="" -->svn_wc_status_ignored</em>&nbsp;</td><td>
<p>is unversioned but configured to be ignored </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da8693ff658ce80dc8f9a8b4ff9b332b37"></a><!-- doxytag: member="svn_wc_status_obstructed" ref="ggad90a5ae2e412cd6fc047a64d627bd96da8693ff658ce80dc8f9a8b4ff9b332b37" args="" -->svn_wc_status_obstructed</em>&nbsp;</td><td>
<p>an unversioned resource is in the way of the versioned resource </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da4f106daa9dfd6a7dde0002b2f54e001b"></a><!-- doxytag: member="svn_wc_status_external" ref="ggad90a5ae2e412cd6fc047a64d627bd96da4f106daa9dfd6a7dde0002b2f54e001b" args="" -->svn_wc_status_external</em>&nbsp;</td><td>
<p>an unversioned directory path populated by an svn:externals property; this status is not used for file externals </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggad90a5ae2e412cd6fc047a64d627bd96da971458b88498d03b7af67280c3f12c3f"></a><!-- doxytag: member="svn_wc_status_incomplete" ref="ggad90a5ae2e412cd6fc047a64d627bd96da971458b88498d03b7af67280c3f12c3f" args="" -->svn_wc_status_incomplete</em>&nbsp;</td><td>
<p>a directory doesn't contain a complete entries list </p>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="svn__wc_8h_source.html#l03445">3445</a> of file <a class="el" href="svn__wc_8h_source.html">svn_wc.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga4eb3742e8ac569f2467ef77d885b7a57"></a><!-- doxytag: member="svn_wc.h::svn_wc_dup_status" ref="ga4eb3742e8ac569f2467ef77d885b7a57" args="(const svn_wc_status_t *orig_stat, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a>* svn_wc_dup_status </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a> *&#160;</td>
          <td class="paramname"><em>orig_stat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Same as <a class="el" href="group__svn__wc__status.html#gac330f5bc134efdbcf4b36c88faa78579" title="Same as svn_wc_dup_status3(), but for older svn_wc_status_t structures.">svn_wc_dup_status2()</a>, but for older <a class="el" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> structures. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000405">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.1 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gac330f5bc134efdbcf4b36c88faa78579"></a><!-- doxytag: member="svn_wc.h::svn_wc_dup_status2" ref="gac330f5bc134efdbcf4b36c88faa78579" args="(const svn_wc_status2_t *orig_stat, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a>* svn_wc_dup_status2 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a> *&#160;</td>
          <td class="paramname"><em>orig_stat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Same as <a class="el" href="group__svn__wc__status.html#ga29408615c14deb823ab2dafa3de10a5d" title="Return a deep copy of the orig_stat status structure, allocated in pool.">svn_wc_dup_status3()</a>, but for older <a class="el" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> structures. </p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.2 </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000404">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga29408615c14deb823ab2dafa3de10a5d"></a><!-- doxytag: member="svn_wc.h::svn_wc_dup_status3" ref="ga29408615c14deb823ab2dafa3de10a5d" args="(const svn_wc_status3_t *orig_stat, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a>* svn_wc_dup_status3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a> *&#160;</td>
          <td class="paramname"><em>orig_stat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Return a deep copy of the <em>orig_stat</em> status structure, allocated in <em>pool</em>. </p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.7. </dd></dl>

</div>
</div>
<a class="anchor" id="ga4fa9b6de93c3b3e5aafc07b39b68ea13"></a><!-- doxytag: member="svn_wc.h::svn_wc_get_status_editor" ref="ga4fa9b6de93c3b3e5aafc07b39b68ea13" args="(const svn_delta_editor_t **editor, void **edit_baton, svn_revnum_t *edit_revision, svn_wc_adm_access_t *anchor, const char *target, apr_hash_t *config, svn_boolean_t recurse, svn_boolean_t get_all, svn_boolean_t no_ignore, svn_wc_status_func_t status_func, void *status_baton, svn_cancel_func_t cancel_func, void *cancel_baton, svn_wc_traversal_info_t *traversal_info, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_get_status_editor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **&#160;</td>
          <td class="paramname"><em>editor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>edit_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>edit_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>anchor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_hash_t *&#160;</td>
          <td class="paramname"><em>config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>recurse</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a">svn_wc_status_func_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf">svn_wc_traversal_info_t</a> *&#160;</td>
          <td class="paramname"><em>traversal_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Same as <a class="el" href="group__svn__wc__status.html#gae384903ef5abbbebc26a73622e010a4d" title="Like svn_wc_get_status_editor3(), but with ignore_patterns provided from the corresponding value in c...">svn_wc_get_status_editor2()</a>, but with <em>set_locks_baton</em> set to <code>NULL</code>, and taking a deprecated svn_wc_status_func_t argument. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000414">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.1 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gae384903ef5abbbebc26a73622e010a4d"></a><!-- doxytag: member="svn_wc.h::svn_wc_get_status_editor2" ref="gae384903ef5abbbebc26a73622e010a4d" args="(const svn_delta_editor_t **editor, void **edit_baton, void **set_locks_baton, svn_revnum_t *edit_revision, svn_wc_adm_access_t *anchor, const char *target, apr_hash_t *config, svn_boolean_t recurse, svn_boolean_t get_all, svn_boolean_t no_ignore, svn_wc_status_func2_t status_func, void *status_baton, svn_cancel_func_t cancel_func, void *cancel_baton, svn_wc_traversal_info_t *traversal_info, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_get_status_editor2 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **&#160;</td>
          <td class="paramname"><em>editor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>edit_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>set_locks_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>edit_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>anchor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_hash_t *&#160;</td>
          <td class="paramname"><em>config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>recurse</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">svn_wc_status_func2_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf">svn_wc_traversal_info_t</a> *&#160;</td>
          <td class="paramname"><em>traversal_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Like <a class="el" href="group__svn__wc__status.html#gafbd5836dd65c99007a3c5258f513eaef" title="Same as svn_wc_get_status_editor4(), but using svn_wc_status_func2_t instead of svn_wc_status_func3_t...">svn_wc_get_status_editor3()</a>, but with <em>ignore_patterns</em> provided from the corresponding value in <em>config</em>, and <em>recurse</em> instead of <em>depth</em>. </p>
<p>If <em>recurse</em> is TRUE, behave as if for <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a>; else if <em>recurse</em> is FALSE, behave as if for <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca68873e015456e384e4f63f3bbd515c8a" title="D + immediate children (D and its entries).">svn_depth_immediates</a>.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.2. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000413">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.4 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gafbd5836dd65c99007a3c5258f513eaef"></a><!-- doxytag: member="svn_wc.h::svn_wc_get_status_editor3" ref="gafbd5836dd65c99007a3c5258f513eaef" args="(const svn_delta_editor_t **editor, void **edit_baton, void **set_locks_baton, svn_revnum_t *edit_revision, svn_wc_adm_access_t *anchor, const char *target, svn_depth_t depth, svn_boolean_t get_all, svn_boolean_t no_ignore, const apr_array_header_t *ignore_patterns, svn_wc_status_func2_t status_func, void *status_baton, svn_cancel_func_t cancel_func, void *cancel_baton, svn_wc_traversal_info_t *traversal_info, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_get_status_editor3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **&#160;</td>
          <td class="paramname"><em>editor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>edit_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>set_locks_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>edit_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>anchor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>ignore_patterns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">svn_wc_status_func2_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf">svn_wc_traversal_info_t</a> *&#160;</td>
          <td class="paramname"><em>traversal_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Same as <a class="el" href="group__svn__wc__status.html#gad76e728aaadd7e46b02fba84c0ca5aeb" title="Same as svn_wc_get_status_editor5, but using svn_wc_status_func3_t instead of svn_wc_status_func4_t.">svn_wc_get_status_editor4()</a>, but using <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a> instead of <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a" title="Same as svn_wc_status_func4_t, but with a non-const status and a relative path.">svn_wc_status_func3_t</a>. </p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.5. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000412">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.5 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gad76e728aaadd7e46b02fba84c0ca5aeb"></a><!-- doxytag: member="svn_wc.h::svn_wc_get_status_editor4" ref="gad76e728aaadd7e46b02fba84c0ca5aeb" args="(const svn_delta_editor_t **editor, void **edit_baton, void **set_locks_baton, svn_revnum_t *edit_revision, svn_wc_adm_access_t *anchor, const char *target, svn_depth_t depth, svn_boolean_t get_all, svn_boolean_t no_ignore, const apr_array_header_t *ignore_patterns, svn_wc_status_func3_t status_func, void *status_baton, svn_cancel_func_t cancel_func, void *cancel_baton, svn_wc_traversal_info_t *traversal_info, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_get_status_editor4 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **&#160;</td>
          <td class="paramname"><em>editor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>edit_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>set_locks_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>edit_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>anchor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>ignore_patterns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a">svn_wc_status_func3_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf">svn_wc_traversal_info_t</a> *&#160;</td>
          <td class="paramname"><em>traversal_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Same as svn_wc_get_status_editor5, but using <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a" title="Same as svn_wc_status_func4_t, but with a non-const status and a relative path.">svn_wc_status_func3_t</a> instead of <a class="el" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d" title="A callback for reporting a status about local_abspath.">svn_wc_status_func4_t</a>. </p>
<p>And <em>server_performs_filtering</em> always set to <a class="el" href="svn__types_8h.html#aa8cecfc5c5c054d2875c03e77b7be15d" title="uhh...">TRUE</a>.</p>
<p>This also uses a single pool parameter, stating that all temporary allocations are performed in manually constructed/destroyed subpool.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.6. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000411">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga97e9c50ae801b942989859e36810aeed"></a><!-- doxytag: member="svn_wc.h::svn_wc_get_status_editor5" ref="ga97e9c50ae801b942989859e36810aeed" args="(const svn_delta_editor_t **editor, void **edit_baton, void **set_locks_baton, svn_revnum_t *edit_revision, svn_wc_context_t *wc_ctx, const char *anchor_abspath, const char *target_basename, svn_depth_t depth, svn_boolean_t get_all, svn_boolean_t no_ignore, svn_boolean_t depth_as_sticky, svn_boolean_t server_performs_filtering, const apr_array_header_t *ignore_patterns, svn_wc_status_func4_t status_func, void *status_baton, svn_cancel_func_t cancel_func, void *cancel_baton, apr_pool_t *result_pool, apr_pool_t *scratch_pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_get_status_editor5 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **&#160;</td>
          <td class="paramname"><em>editor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>edit_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>set_locks_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>edit_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae">svn_wc_context_t</a> *&#160;</td>
          <td class="paramname"><em>wc_ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>anchor_abspath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target_basename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>depth_as_sticky</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>server_performs_filtering</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>ignore_patterns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d">svn_wc_status_func4_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>result_pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>scratch_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set <em>*editor</em> and <em>*edit_baton</em> to an editor that generates <a class="el" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a> structures and sends them through <em>status_func</em> / <em>status_baton</em>. </p>
<p><em>anchor_abspath</em> is a working copy directory directory which will be used as the root of our editor. If <em>target_basename</em> is not "", it represents a node in the <em>anchor_abspath</em> which is the subject of the editor drive (otherwise, the <em>anchor_abspath</em> is the subject).</p>
<p>If <em>set_locks_baton</em> is non-<code>NULL</code>, it will be set to a baton that can be used in a call to the <a class="el" href="group__svn__wc__status.html#gabfd8e5c78af1b718a60fed0ee2a8e590" title="Associate locks, a hash table mapping const char* absolute repository paths to svn_lock_t objects...">svn_wc_status_set_repos_locks()</a> function.</p>
<p>Callers drive this editor to describe working copy out-of-dateness with respect to the repository. If this information is not available or not desired, callers should simply call the close_edit() function of the <em>editor</em> vtable.</p>
<p>If the editor driver calls <em>editor's</em> set_target_revision() vtable function, then when the edit drive is completed, <em>*edit_revision</em> will contain the revision delivered via that interface.</p>
<p>Assuming the target is a directory, then:</p>
<ul>
<li>If <em>get_all</em> is FALSE, then only locally-modified entries will be returned. If TRUE, then all entries will be returned.</li>
</ul>
<ul>
<li>If <em>depth</em> is <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca8783254e886077b74a05341491fc353c" title="Just the named directory D, no entries.">svn_depth_empty</a>, a status structure will be returned for the target only; if <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca0c4df7073a6d268f0e26bbf961f35345" title="D + its file children, but not subdirs.">svn_depth_files</a>, for the target and its immediate file children; if <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca68873e015456e384e4f63f3bbd515c8a" title="D + immediate children (D and its entries).">svn_depth_immediates</a>, for the target and its immediate children; if <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a>, for the target and everything underneath it, fully recursively.</li>
</ul>
<p>If <em>depth</em> is <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2cacf4538edb8e8823b0b9cdeaaac245ebf" title="Depth undetermined or ignored.">svn_depth_unknown</a>, take depths from the working copy and behave as above in each directory's case.</p>
<p>If the given <em>depth</em> is incompatible with the depth found in a working copy directory, the found depth always governs.</p>
<p>If <em>no_ignore</em> is set, statuses that would typically be ignored will instead be reported.</p>
<p><em>ignore_patterns</em> is an array of file patterns matching unversioned files to ignore for the purposes of status reporting, or <code>NULL</code> if the default set of ignorable file patterns should be used.</p>
<p>If <em>cancel_func</em> is non-NULL, call it with <em>cancel_baton</em> while building the <em>statushash</em> to determine if the client has canceled the operation.</p>
<p>If <em>depth_as_sticky</em> is set handle <em>depth</em> like when depth_is_sticky is passed for updating. This will show excluded nodes show up as added in the repository.</p>
<p>If <em>server_performs_filtering</em> is TRUE, assume that the server handles the ambient depth filtering, so this doesn't have to be handled in the editor.</p>
<p>Allocate the editor itself in <em>result_pool</em>, and use <em>scratch_pool</em> for temporary allocations. The editor will do its temporary allocations in a subpool of <em>result_pool</em>.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.7. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2dfbf2bcac68c534a4d54cf251d7abd6"></a><!-- doxytag: member="svn_wc.h::svn_wc_status" ref="ga2dfbf2bcac68c534a4d54cf251d7abd6" args="(svn_wc_status_t **status, const char *path, svn_wc_adm_access_t *adm_access, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_status </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__wc__status__t.html">svn_wc_status_t</a> **&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Same as <a class="el" href="group__svn__wc__status.html#ga83f1370500939a518fdd46c909a0587d" title="Similar to svn_wc_status3(), but with a adm_access baton and absolute path.">svn_wc_status2()</a>, but for older <a class="el" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> structures. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000407">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.1 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga83f1370500939a518fdd46c909a0587d"></a><!-- doxytag: member="svn_wc.h::svn_wc_status2" ref="ga83f1370500939a518fdd46c909a0587d" args="(svn_wc_status2_t **status, const char *path, svn_wc_adm_access_t *adm_access, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_status2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__wc__status2__t.html">svn_wc_status2_t</a> **&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Similar to <a class="el" href="group__svn__wc__status.html#ga0e93907a864fb509616bc84477c83a40" title="Fill *status for local_abspath, allocating in result_pool.">svn_wc_status3()</a>, but with a adm_access baton and absolute path. </p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.2. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000406">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0e93907a864fb509616bc84477c83a40"></a><!-- doxytag: member="svn_wc.h::svn_wc_status3" ref="ga0e93907a864fb509616bc84477c83a40" args="(svn_wc_status3_t **status, svn_wc_context_t *wc_ctx, const char *local_abspath, apr_pool_t *result_pool, apr_pool_t *scratch_pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_status3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__wc__status3__t.html">svn_wc_status3_t</a> **&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae">svn_wc_context_t</a> *&#160;</td>
          <td class="paramname"><em>wc_ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>local_abspath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>result_pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>scratch_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Fill <em>*status</em> for <em>local_abspath</em>, allocating in <em>result_pool</em>. </p>
<p>Use <em>scratch_pool</em> for temporary allocations.</p>
<p>Here are some things to note about the returned structure. A quick examination of the <code>status-&gt;text_status</code> after a successful return of this function can reveal the following things:</p>
<ul>
<li><a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da991bbf1a444aa18593ff11948bbea60a" title="does not exist">svn_wc_status_none</a> : <em>local_abspath</em> is not versioned, and is not present on disk</li>
</ul>
<ul>
<li><a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da72aa0c31b345f4168ca0ccb862704643" title="under v.c., but is missing">svn_wc_status_missing</a> : <em>local_abspath</em> is versioned, but is missing from the working copy.</li>
</ul>
<ul>
<li><a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da7e9e322307b1442dff9e289fba9b00e8" title="is not a versioned thing in this wc">svn_wc_status_unversioned</a> : <em>local_abspath</em> is not versioned, but is present on disk and not being ignored (see above).</li>
</ul>
<p>The other available results for the <code>text_status</code> field are more straightforward in their meanings. See the comments on the <a class="el" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> structure for some hints.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.7. </dd></dl>

</div>
</div>
<a class="anchor" id="gabfd8e5c78af1b718a60fed0ee2a8e590"></a><!-- doxytag: member="svn_wc.h::svn_wc_status_set_repos_locks" ref="gabfd8e5c78af1b718a60fed0ee2a8e590" args="(void *set_locks_baton, apr_hash_t *locks, const char *repos_root, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_status_set_repos_locks </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>set_locks_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_hash_t *&#160;</td>
          <td class="paramname"><em>locks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>repos_root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Associate <em>locks</em>, a hash table mapping <code>const char*</code> absolute repository paths to <code><a class="el" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a></code> objects, with a <em>set_locks_baton</em> returned by an earlier call to <a class="el" href="group__svn__wc__status.html#gafbd5836dd65c99007a3c5258f513eaef" title="Same as svn_wc_get_status_editor4(), but using svn_wc_status_func2_t instead of svn_wc_status_func3_t...">svn_wc_get_status_editor3()</a>. </p>
<p><em>repos_root</em> is the repository root URL. Perform all allocations in <em>pool</em>.</p>
<dl class="note"><dt><b>Note:</b></dt><dd><em>locks</em> will not be copied, so it must be valid throughout the edit. <em>pool</em> must also not be destroyed or cleared before the edit is finished.</dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.2. </dd></dl>

</div>
</div>
<a class="anchor" id="ga456c84ac9b3bcd268722f3d7689a337a"></a><!-- doxytag: member="svn_wc.h::svn_wc_walk_status" ref="ga456c84ac9b3bcd268722f3d7689a337a" args="(svn_wc_context_t *wc_ctx, const char *local_abspath, svn_depth_t depth, svn_boolean_t get_all, svn_boolean_t no_ignore, svn_boolean_t ignore_text_mods, const apr_array_header_t *ignore_patterns, svn_wc_status_func4_t status_func, void *status_baton, svn_cancel_func_t cancel_func, void *cancel_baton, apr_pool_t *scratch_pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_walk_status </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae">svn_wc_context_t</a> *&#160;</td>
          <td class="paramname"><em>wc_ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>local_abspath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_text_mods</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>ignore_patterns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d">svn_wc_status_func4_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>scratch_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Walk the working copy status of <em>local_abspath</em> using <em>wc_ctx</em>, by creating <a class="el" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a> structures and sending these through <em>status_func</em> / <em>status_baton</em>. </p>
<p>* Assuming the target is a directory, then:</p>
<ul>
<li>If <em>get_all</em> is FALSE, then only locally-modified entries will be returned. If TRUE, then all entries will be returned.</li>
</ul>
<ul>
<li>If <em>ignore_text_mods</em> is TRUE, then the walk will not check for modified files. Any <a class="el" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a> structures returned for files will always have a text_status field set to svn_wc_status_normal. If <em>ignore_text_mods</em> is FALSE, the walk checks for text changes and returns <a class="el" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a> structures describing any changes.</li>
</ul>
<ul>
<li>If <em>depth</em> is <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca8783254e886077b74a05341491fc353c" title="Just the named directory D, no entries.">svn_depth_empty</a>, a status structure will be returned for the target only; if <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca0c4df7073a6d268f0e26bbf961f35345" title="D + its file children, but not subdirs.">svn_depth_files</a>, for the target and its immediate file children; if <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca68873e015456e384e4f63f3bbd515c8a" title="D + immediate children (D and its entries).">svn_depth_immediates</a>, for the target and its immediate children; if <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a>, for the target and everything underneath it, fully recursively.</li>
</ul>
<p>If <em>depth</em> is <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2cacf4538edb8e8823b0b9cdeaaac245ebf" title="Depth undetermined or ignored.">svn_depth_unknown</a>, take depths from the working copy and behave as above in each directory's case.</p>
<p>If the given <em>depth</em> is incompatible with the depth found in a working copy directory, the found depth always governs.</p>
<p>If <em>no_ignore</em> is set, statuses that would typically be ignored will instead be reported.</p>
<p><em>ignore_patterns</em> is an array of file patterns matching unversioned files to ignore for the purposes of status reporting, or <code>NULL</code> if the default set of ignorable file patterns should be used.</p>
<p>If <em>cancel_func</em> is non-NULL, call it with <em>cancel_baton</em> while walking to determine if the client has canceled the operation.</p>
<p>This function uses <em>scratch_pool</em> for temporary allocations.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.7. </dd></dl>

</div>
</div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Fri Dec 23 2011 09:20:41 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.5.1
</small></address>

</body>
</html>
