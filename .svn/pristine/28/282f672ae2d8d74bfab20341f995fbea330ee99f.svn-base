<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: Dumping and loading filesystem data</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Dumping and loading filesystem data</div>  </div>
</div><!--header-->
<div class="contents">

<p>The filesystem 'dump' format contains nothing but the abstract structure of the filesystem &ndash; independent of any internal node-id schema or database back-end.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html">svn_repos_parse_fns3_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#gae5ed3287ba9df58687aaaeb2b9095c05" title="Read and parse dumpfile-formatted stream, calling callbacks in parse_fns/parse_baton, and using pool for allocations. ">svn_repos_parse_dumpstream3()</a>.  <a href="structsvn__repos__parse__fns3__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns2__t.html">svn_repos_parse_fns2_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#ga90194c5a0349596106d5355872cb5e47" title="Similar to svn_repos_parse_dumpstream3(), but uses the more limited svn_repos_parser_fns2_t vtable ty...">svn_repos_parse_dumpstream2()</a>.  <a href="structsvn__repos__parse__fns2__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns__t.html">svn_repos_parse_fns_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#ga62a01bf6688524b7ac598ee8c7b0290a" title="Similar to svn_repos_parse_dumpstream2(), but uses the more limited svn_repos_parser_fns_t vtable typ...">svn_repos_parse_dumpstream()</a>.  <a href="structsvn__repos__parse__fns__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:gaf2854f5ffc49fddfb22452bff421636d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaf2854f5ffc49fddfb22452bff421636d"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_MAGIC_HEADER</b>&#160;&#160;&#160;&quot;SVN-fs-dump-format-version&quot;</td></tr>
<tr class="separator:gaf2854f5ffc49fddfb22452bff421636d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c5a40b287ef20e27acddc7e318eeea2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga8c5a40b287ef20e27acddc7e318eeea2"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_FORMAT_VERSION</b>&#160;&#160;&#160;3</td></tr>
<tr class="separator:ga8c5a40b287ef20e27acddc7e318eeea2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9686e7cb481a2e628a2f9014a9a369c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gac9686e7cb481a2e628a2f9014a9a369c"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_FORMAT_VERSION_DELTAS</b>&#160;&#160;&#160;3</td></tr>
<tr class="separator:gac9686e7cb481a2e628a2f9014a9a369c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11096c793cd2602535b55cc89452619f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga11096c793cd2602535b55cc89452619f"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_UUID</b>&#160;&#160;&#160;&quot;UUID&quot;</td></tr>
<tr class="separator:ga11096c793cd2602535b55cc89452619f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabed91b26ad28ee585fbbe4f25910a4de"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gabed91b26ad28ee585fbbe4f25910a4de"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_CONTENT_LENGTH</b>&#160;&#160;&#160;&quot;Content-length&quot;</td></tr>
<tr class="separator:gabed91b26ad28ee585fbbe4f25910a4de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga96010ee0a74a83e34bb79b43a418da19"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga96010ee0a74a83e34bb79b43a418da19"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_REVISION_NUMBER</b>&#160;&#160;&#160;&quot;Revision-number&quot;</td></tr>
<tr class="separator:ga96010ee0a74a83e34bb79b43a418da19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3695f0b9d961843b69360ea617e5b684"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga3695f0b9d961843b69360ea617e5b684"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_NODE_PATH</b>&#160;&#160;&#160;&quot;Node-path&quot;</td></tr>
<tr class="separator:ga3695f0b9d961843b69360ea617e5b684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacac754df92b4a18fa18721e84ca2eb67"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gacac754df92b4a18fa18721e84ca2eb67"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_NODE_KIND</b>&#160;&#160;&#160;&quot;Node-kind&quot;</td></tr>
<tr class="separator:gacac754df92b4a18fa18721e84ca2eb67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9867603161f934ef1a8fecb037782784"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga9867603161f934ef1a8fecb037782784"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_NODE_ACTION</b>&#160;&#160;&#160;&quot;Node-action&quot;</td></tr>
<tr class="separator:ga9867603161f934ef1a8fecb037782784"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f3836b622b3407e3272da82c3c6411a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga9f3836b622b3407e3272da82c3c6411a"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_NODE_COPYFROM_PATH</b>&#160;&#160;&#160;&quot;Node-copyfrom-path&quot;</td></tr>
<tr class="separator:ga9f3836b622b3407e3272da82c3c6411a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5640c234b689b9914c3b7a817d7d4b89"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga5640c234b689b9914c3b7a817d7d4b89"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_NODE_COPYFROM_REV</b>&#160;&#160;&#160;&quot;Node-copyfrom-rev&quot;</td></tr>
<tr class="separator:ga5640c234b689b9914c3b7a817d7d4b89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3dacc07dd2aa575d557b5ae3d693fcce"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga3dacc07dd2aa575d557b5ae3d693fcce">SVN_REPOS_DUMPFILE_TEXT_COPY_SOURCE_MD5</a>&#160;&#160;&#160;&quot;Text-copy-source-md5&quot;</td></tr>
<tr class="separator:ga3dacc07dd2aa575d557b5ae3d693fcce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72e1e1d52bbab024210848d93193d1bf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga72e1e1d52bbab024210848d93193d1bf">SVN_REPOS_DUMPFILE_TEXT_COPY_SOURCE_SHA1</a>&#160;&#160;&#160;&quot;Text-copy-source-sha1&quot;</td></tr>
<tr class="separator:ga72e1e1d52bbab024210848d93193d1bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f1c9cbdd18eca8c2470631282f7a60a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga0f1c9cbdd18eca8c2470631282f7a60a"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_TEXT_COPY_SOURCE_CHECKSUM</b>&#160;&#160;&#160;<a class="el" href="group__svn__repos__dump__load.html#ga3dacc07dd2aa575d557b5ae3d693fcce">SVN_REPOS_DUMPFILE_TEXT_COPY_SOURCE_MD5</a></td></tr>
<tr class="separator:ga0f1c9cbdd18eca8c2470631282f7a60a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadebde7ef107bbeff3bf5cba8bbe8d2f6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gadebde7ef107bbeff3bf5cba8bbe8d2f6">SVN_REPOS_DUMPFILE_TEXT_CONTENT_MD5</a>&#160;&#160;&#160;&quot;Text-content-md5&quot;</td></tr>
<tr class="separator:gadebde7ef107bbeff3bf5cba8bbe8d2f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d8bb5dedc1e722c941d4ae1baec8e6b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga6d8bb5dedc1e722c941d4ae1baec8e6b">SVN_REPOS_DUMPFILE_TEXT_CONTENT_SHA1</a>&#160;&#160;&#160;&quot;Text-content-sha1&quot;</td></tr>
<tr class="separator:ga6d8bb5dedc1e722c941d4ae1baec8e6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae003798ad5dc3a3432e0e4d4f3a1fa80"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gae003798ad5dc3a3432e0e4d4f3a1fa80"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_TEXT_CONTENT_CHECKSUM</b>&#160;&#160;&#160;<a class="el" href="group__svn__repos__dump__load.html#gadebde7ef107bbeff3bf5cba8bbe8d2f6">SVN_REPOS_DUMPFILE_TEXT_CONTENT_MD5</a></td></tr>
<tr class="separator:gae003798ad5dc3a3432e0e4d4f3a1fa80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0d03c43c47c12b5a5aeaf20e9ac626a1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga0d03c43c47c12b5a5aeaf20e9ac626a1"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_PROP_CONTENT_LENGTH</b>&#160;&#160;&#160;&quot;Prop-content-length&quot;</td></tr>
<tr class="separator:ga0d03c43c47c12b5a5aeaf20e9ac626a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga66e84bca207c187704f44ef4a9c4ea5e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga66e84bca207c187704f44ef4a9c4ea5e"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_REPOS_DUMPFILE_TEXT_CONTENT_LENGTH</b>&#160;&#160;&#160;&quot;Text-content-length&quot;</td></tr>
<tr class="separator:ga66e84bca207c187704f44ef4a9c4ea5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae55aa05a65b2fefeaf62c0ec5d5871b7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gae55aa05a65b2fefeaf62c0ec5d5871b7">SVN_REPOS_DUMPFILE_PROP_DELTA</a>&#160;&#160;&#160;&quot;Prop-delta&quot;</td></tr>
<tr class="separator:gae55aa05a65b2fefeaf62c0ec5d5871b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga87121466d49a1b73498b6d663caff3df"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga87121466d49a1b73498b6d663caff3df">SVN_REPOS_DUMPFILE_TEXT_DELTA</a>&#160;&#160;&#160;&quot;Text-delta&quot;</td></tr>
<tr class="separator:ga87121466d49a1b73498b6d663caff3df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ccb91bebc77544d7b8be28bd86641fd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga7ccb91bebc77544d7b8be28bd86641fd">SVN_REPOS_DUMPFILE_TEXT_DELTA_BASE_MD5</a>&#160;&#160;&#160;&quot;Text-delta-base-md5&quot;</td></tr>
<tr class="separator:ga7ccb91bebc77544d7b8be28bd86641fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga14d9009204e6c5788c8aaa328e4c6370"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga14d9009204e6c5788c8aaa328e4c6370">SVN_REPOS_DUMPFILE_TEXT_DELTA_BASE_SHA1</a>&#160;&#160;&#160;&quot;Text-delta-base-sha1&quot;</td></tr>
<tr class="separator:ga14d9009204e6c5788c8aaa328e4c6370"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa5c18f984678fd4592eb4c286f7dc54"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gaaa5c18f984678fd4592eb4c286f7dc54">SVN_REPOS_DUMPFILE_TEXT_DELTA_BASE_CHECKSUM</a>&#160;&#160;&#160;<a class="el" href="group__svn__repos__dump__load.html#ga7ccb91bebc77544d7b8be28bd86641fd">SVN_REPOS_DUMPFILE_TEXT_DELTA_BASE_MD5</a></td></tr>
<tr class="separator:gaaa5c18f984678fd4592eb4c286f7dc54"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga5faefd58fdcb7e520f89c2a457613647"><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__repos__parse__fns3__t.html">svn_repos_parse_fns3_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga5faefd58fdcb7e520f89c2a457613647">svn_repos_parse_fns3_t</a></td></tr>
<tr class="memdesc:ga5faefd58fdcb7e520f89c2a457613647"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#gae5ed3287ba9df58687aaaeb2b9095c05" title="Read and parse dumpfile-formatted stream, calling callbacks in parse_fns/parse_baton, and using pool for allocations. ">svn_repos_parse_dumpstream3()</a>.  <a href="#ga5faefd58fdcb7e520f89c2a457613647">More...</a><br/></td></tr>
<tr class="separator:ga5faefd58fdcb7e520f89c2a457613647"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd77d65bf6708f7115532af4b3fbd70b"><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__repos__parse__fns2__t.html">svn_repos_parse_fns2_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gadd77d65bf6708f7115532af4b3fbd70b">svn_repos_parse_fns2_t</a></td></tr>
<tr class="memdesc:gadd77d65bf6708f7115532af4b3fbd70b"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#ga90194c5a0349596106d5355872cb5e47" title="Similar to svn_repos_parse_dumpstream3(), but uses the more limited svn_repos_parser_fns2_t vtable ty...">svn_repos_parse_dumpstream2()</a>.  <a href="#gadd77d65bf6708f7115532af4b3fbd70b">More...</a><br/></td></tr>
<tr class="separator:gadd77d65bf6708f7115532af4b3fbd70b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed00d258abbe1a0fdc2cc4f89b420daf"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__repos__parse__fns2__t.html">svn_repos_parse_fns2_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gaed00d258abbe1a0fdc2cc4f89b420daf">svn_repos_parser_fns2_t</a></td></tr>
<tr class="separator:gaed00d258abbe1a0fdc2cc4f89b420daf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga03b3b5fdffc4cd7b7ce052542562f131"><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__repos__parse__fns__t.html">svn_repos_parse_fns_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga03b3b5fdffc4cd7b7ce052542562f131">svn_repos_parser_fns_t</a></td></tr>
<tr class="memdesc:ga03b3b5fdffc4cd7b7ce052542562f131"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#ga62a01bf6688524b7ac598ee8c7b0290a" title="Similar to svn_repos_parse_dumpstream2(), but uses the more limited svn_repos_parser_fns_t vtable typ...">svn_repos_parse_dumpstream()</a>.  <a href="#ga03b3b5fdffc4cd7b7ce052542562f131">More...</a><br/></td></tr>
<tr class="separator:ga03b3b5fdffc4cd7b7ce052542562f131"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaa03411f59dbccf0eced1b0d0f83d2ec9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gaa03411f59dbccf0eced1b0d0f83d2ec9">svn_repos_verify_fs2</a> (<a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> start_rev, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> end_rev, <a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a> notify_func, void *notify_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel, void *cancel_baton, apr_pool_t *scratch_pool)</td></tr>
<tr class="memdesc:gaa03411f59dbccf0eced1b0d0f83d2ec9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Verify the contents of the file system in <em>repos</em>.  <a href="#gaa03411f59dbccf0eced1b0d0f83d2ec9">More...</a><br/></td></tr>
<tr class="separator:gaa03411f59dbccf0eced1b0d0f83d2ec9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e92b908f1c85cdacce5a1cf20a18896"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga4e92b908f1c85cdacce5a1cf20a18896">svn_repos_verify_fs</a> (<a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *feedback_stream, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> start_rev, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> end_rev, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga4e92b908f1c85cdacce5a1cf20a18896"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#gaa03411f59dbccf0eced1b0d0f83d2ec9" title="Verify the contents of the file system in repos. ">svn_repos_verify_fs2()</a>, but with a feedback_stream instead of handling feedback via the notify_func handler.  <a href="#ga4e92b908f1c85cdacce5a1cf20a18896">More...</a><br/></td></tr>
<tr class="separator:ga4e92b908f1c85cdacce5a1cf20a18896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad8eda99e1105b33c4dd3ff1777dbe8ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gad8eda99e1105b33c4dd3ff1777dbe8ec">svn_repos_dump_fs3</a> (<a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *dumpstream, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> start_rev, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> end_rev, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> incremental, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_deltas, <a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a> notify_func, void *notify_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *scratch_pool)</td></tr>
<tr class="memdesc:gad8eda99e1105b33c4dd3ff1777dbe8ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dump the contents of the filesystem within already-open <em>repos</em> into writable <em>dumpstream</em>.  <a href="#gad8eda99e1105b33c4dd3ff1777dbe8ec">More...</a><br/></td></tr>
<tr class="separator:gad8eda99e1105b33c4dd3ff1777dbe8ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga197042c66a63ee85b19bd4186bea97d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga197042c66a63ee85b19bd4186bea97d8">svn_repos_dump_fs2</a> (<a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *dumpstream, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *feedback_stream, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> start_rev, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> end_rev, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> incremental, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_deltas, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga197042c66a63ee85b19bd4186bea97d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#gad8eda99e1105b33c4dd3ff1777dbe8ec" title="Dump the contents of the filesystem within already-open repos into writable dumpstream. ">svn_repos_dump_fs3()</a>, but with a feedback_stream instead of handling feedback via the notify_func handler.  <a href="#ga197042c66a63ee85b19bd4186bea97d8">More...</a><br/></td></tr>
<tr class="separator:ga197042c66a63ee85b19bd4186bea97d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4cbd1b87289a2cff7bf1e114537a040a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga4cbd1b87289a2cff7bf1e114537a040a">svn_repos_dump_fs</a> (<a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *dumpstream, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *feedback_stream, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> start_rev, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> end_rev, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> incremental, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga4cbd1b87289a2cff7bf1e114537a040a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#ga197042c66a63ee85b19bd4186bea97d8" title="Similar to svn_repos_dump_fs3(), but with a feedback_stream instead of handling feedback via the noti...">svn_repos_dump_fs2()</a>, but with the <em>use_deltas</em> parameter always set to <code>FALSE</code>.  <a href="#ga4cbd1b87289a2cff7bf1e114537a040a">More...</a><br/></td></tr>
<tr class="separator:ga4cbd1b87289a2cff7bf1e114537a040a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga28ca21c3cbf3a24018943a17154d952d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga28ca21c3cbf3a24018943a17154d952d">svn_repos_load_fs4</a> (<a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *dumpstream, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> start_rev, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> end_rev, enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a> uuid_action, const char *parent_dir, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_pre_commit_hook, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_post_commit_hook, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> validate_props, <a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a> notify_func, void *notify_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga28ca21c3cbf3a24018943a17154d952d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read and parse dumpfile-formatted <em>dumpstream</em>, reconstructing filesystem revisions in already-open <em>repos</em>, handling uuids in accordance with <em>uuid_action</em>.  <a href="#ga28ca21c3cbf3a24018943a17154d952d">More...</a><br/></td></tr>
<tr class="separator:ga28ca21c3cbf3a24018943a17154d952d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68ee91da669943b091b62e77a0811cd1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga68ee91da669943b091b62e77a0811cd1">svn_repos_load_fs3</a> (<a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *dumpstream, enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a> uuid_action, const char *parent_dir, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_pre_commit_hook, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_post_commit_hook, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> validate_props, <a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a> notify_func, void *notify_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga68ee91da669943b091b62e77a0811cd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#ga28ca21c3cbf3a24018943a17154d952d" title="Read and parse dumpfile-formatted dumpstream, reconstructing filesystem revisions in already-open rep...">svn_repos_load_fs4()</a>, but with <em>start_rev</em> and <em>end_rev</em> always passed as <a class="el" href="svn__types_8h.html#a8857d4630bf116eaba54a1b65d43ad92" title="The &#39;official&#39; invalid revision num. ">SVN_INVALID_REVNUM</a>.  <a href="#ga68ee91da669943b091b62e77a0811cd1">More...</a><br/></td></tr>
<tr class="separator:ga68ee91da669943b091b62e77a0811cd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa3af3c924339279ba9a528f441210ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gaaa3af3c924339279ba9a528f441210ea">svn_repos_load_fs2</a> (<a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *dumpstream, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *feedback_stream, enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a> uuid_action, const char *parent_dir, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_pre_commit_hook, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_post_commit_hook, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaaa3af3c924339279ba9a528f441210ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#ga68ee91da669943b091b62e77a0811cd1" title="Similar to svn_repos_load_fs4(), but with start_rev and end_rev always passed as SVN_INVALID_REVNUM. ">svn_repos_load_fs3()</a>, but with <em>feedback_stream</em> in place of the <a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe" title="Callback for providing notification from the repository. ">svn_repos_notify_func_t</a> and baton and with <em>validate_props</em> always FALSE.  <a href="#gaaa3af3c924339279ba9a528f441210ea">More...</a><br/></td></tr>
<tr class="separator:gaaa3af3c924339279ba9a528f441210ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f159b7efd59c845860e99a734841285"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga3f159b7efd59c845860e99a734841285">svn_repos_load_fs</a> (<a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *dumpstream, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *feedback_stream, enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a> uuid_action, const char *parent_dir, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga3f159b7efd59c845860e99a734841285"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#gaaa3af3c924339279ba9a528f441210ea" title="Similar to svn_repos_load_fs3(), but with feedback_stream in place of the svn_repos_notify_func_t and...">svn_repos_load_fs2()</a>, but with <em>use_pre_commit_hook</em> and <em>use_post_commit_hook</em> always <code>FALSE</code>.  <a href="#ga3f159b7efd59c845860e99a734841285">More...</a><br/></td></tr>
<tr class="separator:ga3f159b7efd59c845860e99a734841285"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5ed3287ba9df58687aaaeb2b9095c05"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gae5ed3287ba9df58687aaaeb2b9095c05">svn_repos_parse_dumpstream3</a> (<a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream, const <a class="el" href="structsvn__repos__parse__fns3__t.html">svn_repos_parse_fns3_t</a> *parse_fns, void *parse_baton, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> deltas_are_text, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gae5ed3287ba9df58687aaaeb2b9095c05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read and parse dumpfile-formatted <em>stream</em>, calling callbacks in <em>parse_fns/<em>parse_baton</em>,</em> and using <em>pool</em> for allocations.  <a href="#gae5ed3287ba9df58687aaaeb2b9095c05">More...</a><br/></td></tr>
<tr class="separator:gae5ed3287ba9df58687aaaeb2b9095c05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf40a165018dd98a9b2d2b2dbf74d73aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gaf40a165018dd98a9b2d2b2dbf74d73aa">svn_repos_get_fs_build_parser4</a> (const <a class="el" href="structsvn__repos__parse__fns3__t.html">svn_repos_parse_fns3_t</a> **parser, void **parse_baton, <a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> start_rev, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> end_rev, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_history, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> validate_props, enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a> uuid_action, const char *parent_dir, <a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a> notify_func, void *notify_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaf40a165018dd98a9b2d2b2dbf74d73aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*parser</em> and <em>*parse_baton</em> to a vtable parser which commits new revisions to the fs in <em>repos</em>.  <a href="#gaf40a165018dd98a9b2d2b2dbf74d73aa">More...</a><br/></td></tr>
<tr class="separator:gaf40a165018dd98a9b2d2b2dbf74d73aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90194c5a0349596106d5355872cb5e47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga90194c5a0349596106d5355872cb5e47">svn_repos_parse_dumpstream2</a> (<a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream, const <a class="el" href="group__svn__repos__dump__load.html#gaed00d258abbe1a0fdc2cc4f89b420daf">svn_repos_parser_fns2_t</a> *parse_fns, void *parse_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga90194c5a0349596106d5355872cb5e47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#gae5ed3287ba9df58687aaaeb2b9095c05" title="Read and parse dumpfile-formatted stream, calling callbacks in parse_fns/parse_baton, and using pool for allocations. ">svn_repos_parse_dumpstream3()</a>, but uses the more limited <a class="el" href="group__svn__repos__dump__load.html#gaed00d258abbe1a0fdc2cc4f89b420daf">svn_repos_parser_fns2_t</a> vtable type.  <a href="#ga90194c5a0349596106d5355872cb5e47">More...</a><br/></td></tr>
<tr class="separator:ga90194c5a0349596106d5355872cb5e47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62a01bf6688524b7ac598ee8c7b0290a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga62a01bf6688524b7ac598ee8c7b0290a">svn_repos_parse_dumpstream</a> (<a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream, const <a class="el" href="group__svn__repos__dump__load.html#ga03b3b5fdffc4cd7b7ce052542562f131">svn_repos_parser_fns_t</a> *parse_fns, void *parse_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga62a01bf6688524b7ac598ee8c7b0290a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#ga90194c5a0349596106d5355872cb5e47" title="Similar to svn_repos_parse_dumpstream3(), but uses the more limited svn_repos_parser_fns2_t vtable ty...">svn_repos_parse_dumpstream2()</a>, but uses the more limited <a class="el" href="group__svn__repos__dump__load.html#ga03b3b5fdffc4cd7b7ce052542562f131" title="A vtable that is driven by svn_repos_parse_dumpstream(). ">svn_repos_parser_fns_t</a> vtable type.  <a href="#ga62a01bf6688524b7ac598ee8c7b0290a">More...</a><br/></td></tr>
<tr class="separator:ga62a01bf6688524b7ac598ee8c7b0290a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe145ff80070adc54f6f2f45f0217d5f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gabe145ff80070adc54f6f2f45f0217d5f">svn_repos_get_fs_build_parser3</a> (const <a class="el" href="structsvn__repos__parse__fns2__t.html">svn_repos_parse_fns2_t</a> **parser, void **parse_baton, <a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_history, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> validate_props, enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a> uuid_action, const char *parent_dir, <a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a> notify_func, void *notify_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gabe145ff80070adc54f6f2f45f0217d5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#gaf40a165018dd98a9b2d2b2dbf74d73aa" title="Set *parser and *parse_baton to a vtable parser which commits new revisions to the fs in repos...">svn_repos_get_fs_build_parser4()</a>, but with <em>start_rev</em> and <em>end_rev</em> always passed as <a class="el" href="svn__types_8h.html#a8857d4630bf116eaba54a1b65d43ad92" title="The &#39;official&#39; invalid revision num. ">SVN_INVALID_REVNUM</a>, and yielding the more limited <a class="el" href="structsvn__repos__parse__fns2__t.html" title="A vtable that is driven by svn_repos_parse_dumpstream2(). ">svn_repos_parse_fns2_t</a>.  <a href="#gabe145ff80070adc54f6f2f45f0217d5f">More...</a><br/></td></tr>
<tr class="separator:gabe145ff80070adc54f6f2f45f0217d5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga77d6f795abc868bb0321b0e1f1f4005f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#ga77d6f795abc868bb0321b0e1f1f4005f">svn_repos_get_fs_build_parser2</a> (const <a class="el" href="structsvn__repos__parse__fns2__t.html">svn_repos_parse_fns2_t</a> **parser, void **parse_baton, <a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_history, enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a> uuid_action, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *outstream, const char *parent_dir, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga77d6f795abc868bb0321b0e1f1f4005f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#gabe145ff80070adc54f6f2f45f0217d5f" title="Similar to svn_repos_get_fs_build_parser4(), but with start_rev and end_rev always passed as SVN_INVA...">svn_repos_get_fs_build_parser3()</a>, but with <em>outstream</em> in place if a <a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe" title="Callback for providing notification from the repository. ">svn_repos_notify_func_t</a> and baton and with <em>validate_props</em> always FALSE.  <a href="#ga77d6f795abc868bb0321b0e1f1f4005f">More...</a><br/></td></tr>
<tr class="separator:ga77d6f795abc868bb0321b0e1f1f4005f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf1ab8b01abc03d1b045d090cd78ad8b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__repos__dump__load.html#gadf1ab8b01abc03d1b045d090cd78ad8b">svn_repos_get_fs_build_parser</a> (const <a class="el" href="group__svn__repos__dump__load.html#ga03b3b5fdffc4cd7b7ce052542562f131">svn_repos_parser_fns_t</a> **parser, void **parse_baton, <a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *repos, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> use_history, enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a> uuid_action, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *outstream, const char *parent_dir, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gadf1ab8b01abc03d1b045d090cd78ad8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__repos__dump__load.html#ga77d6f795abc868bb0321b0e1f1f4005f" title="Similar to svn_repos_get_fs_build_parser3(), but with outstream in place if a svn_repos_notify_func_t...">svn_repos_get_fs_build_parser2()</a>, but yields the more limited svn_repos_parser_fns_t vtable type.  <a href="#gadf1ab8b01abc03d1b045d090cd78ad8b">More...</a><br/></td></tr>
<tr class="separator:gadf1ab8b01abc03d1b045d090cd78ad8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>The filesystem 'dump' format contains nothing but the abstract structure of the filesystem &ndash; independent of any internal node-id schema or database back-end. </p>
<p>All of the data in the dumpfile is acquired by public function calls into <a class="el" href="svn__fs_8h.html" title="Interface to the Subversion filesystem. ">svn_fs.h</a>. Similarly, the parser which reads the dumpfile is able to reconstruct the filesystem using only public <a class="el" href="svn__fs_8h.html" title="Interface to the Subversion filesystem. ">svn_fs.h</a> routines.</p>
<p>Thus the dump/load feature's main purpose is for <em>migrating</em> data from one svn filesystem to another &ndash; presumably two filesystems which have different internal implementations.</p>
<p>If you simply want to backup your filesystem, you're probably better off using the built-in facilities of the DB backend (using Berkeley DB's hot-backup feature, for example.)</p>
<p>For a description of the dumpfile format, see /trunk/notes/fs_dumprestore.txt. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="gae55aa05a65b2fefeaf62c0ec5d5871b7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_REPOS_DUMPFILE_PROP_DELTA&#160;&#160;&#160;&quot;Prop-delta&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section since"><dt>Since</dt><dd>New in 1.1. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02531">2531</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="gadebde7ef107bbeff3bf5cba8bbe8d2f6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_REPOS_DUMPFILE_TEXT_CONTENT_MD5&#160;&#160;&#160;&quot;Text-content-md5&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02521">2521</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga6d8bb5dedc1e722c941d4ae1baec8e6b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_REPOS_DUMPFILE_TEXT_CONTENT_SHA1&#160;&#160;&#160;&quot;Text-content-sha1&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02523">2523</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga3dacc07dd2aa575d557b5ae3d693fcce"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_REPOS_DUMPFILE_TEXT_COPY_SOURCE_MD5&#160;&#160;&#160;&quot;Text-copy-source-md5&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02515">2515</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga72e1e1d52bbab024210848d93193d1bf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_REPOS_DUMPFILE_TEXT_COPY_SOURCE_SHA1&#160;&#160;&#160;&quot;Text-copy-source-sha1&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02517">2517</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga87121466d49a1b73498b6d663caff3df"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_REPOS_DUMPFILE_TEXT_DELTA&#160;&#160;&#160;&quot;Text-delta&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section since"><dt>Since</dt><dd>New in 1.1. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02533">2533</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaaa5c18f984678fd4592eb4c286f7dc54"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_REPOS_DUMPFILE_TEXT_DELTA_BASE_CHECKSUM&#160;&#160;&#160;<a class="el" href="group__svn__repos__dump__load.html#ga7ccb91bebc77544d7b8be28bd86641fd">SVN_REPOS_DUMPFILE_TEXT_DELTA_BASE_MD5</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section since"><dt>Since</dt><dd>New in 1.5. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02539">2539</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga7ccb91bebc77544d7b8be28bd86641fd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_REPOS_DUMPFILE_TEXT_DELTA_BASE_MD5&#160;&#160;&#160;&quot;Text-delta-base-md5&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02535">2535</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga14d9009204e6c5788c8aaa328e4c6370"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_REPOS_DUMPFILE_TEXT_DELTA_BASE_SHA1&#160;&#160;&#160;&quot;Text-delta-base-sha1&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02537">2537</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="gadd77d65bf6708f7115532af4b3fbd70b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structsvn__repos__parse__fns2__t.html">svn_repos_parse_fns2_t</a>  <a class="el" href="structsvn__repos__parse__fns2__t.html">svn_repos_parse_fns2_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#ga90194c5a0349596106d5355872cb5e47" title="Similar to svn_repos_parse_dumpstream3(), but uses the more limited svn_repos_parser_fns2_t vtable ty...">svn_repos_parse_dumpstream2()</a>. </p>
<p>Similar to <a class="el" href="structsvn__repos__parse__fns3__t.html" title="A vtable that is driven by svn_repos_parse_dumpstream3(). ">svn_repos_parse_fns3_t</a> except that it lacks the delete_node_property and apply_textdelta callbacks.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000374">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5faefd58fdcb7e520f89c2a457613647"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structsvn__repos__parse__fns3__t.html">svn_repos_parse_fns3_t</a>  <a class="el" href="structsvn__repos__parse__fns3__t.html">svn_repos_parse_fns3_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#gae5ed3287ba9df58687aaaeb2b9095c05" title="Read and parse dumpfile-formatted stream, calling callbacks in parse_fns/parse_baton, and using pool for allocations. ">svn_repos_parse_dumpstream3()</a>. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.8. </dd></dl>

</div>
</div>
<a class="anchor" id="gaed00d258abbe1a0fdc2cc4f89b420daf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structsvn__repos__parse__fns2__t.html">svn_repos_parse_fns2_t</a> <a class="el" href="group__svn__repos__dump__load.html#gaed00d258abbe1a0fdc2cc4f89b420daf">svn_repos_parser_fns2_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000375">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l03034">3034</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga03b3b5fdffc4cd7b7ce052542562f131"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structsvn__repos__parse__fns__t.html">svn_repos_parse_fns_t</a>  <a class="el" href="group__svn__repos__dump__load.html#ga03b3b5fdffc4cd7b7ce052542562f131">svn_repos_parser_fns_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#ga62a01bf6688524b7ac598ee8c7b0290a" title="Similar to svn_repos_parse_dumpstream2(), but uses the more limited svn_repos_parser_fns_t vtable typ...">svn_repos_parse_dumpstream()</a>. </p>
<p>Similar to <a class="el" href="structsvn__repos__parse__fns2__t.html" title="A vtable that is driven by svn_repos_parse_dumpstream2(). ">svn_repos_parse_fns2_t</a> except that it lacks the delete_node_property and apply_textdelta callbacks.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000376">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.0 API. </dd></dl>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga4cbd1b87289a2cff7bf1e114537a040a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_dump_fs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>dumpstream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>feedback_stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>start_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>end_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>incremental</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#ga197042c66a63ee85b19bd4186bea97d8" title="Similar to svn_repos_dump_fs3(), but with a feedback_stream instead of handling feedback via the noti...">svn_repos_dump_fs2()</a>, but with the <em>use_deltas</em> parameter always set to <code>FALSE</code>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000370">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.0 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga197042c66a63ee85b19bd4186bea97d8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_dump_fs2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>dumpstream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>feedback_stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>start_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>end_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>incremental</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_deltas</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#gad8eda99e1105b33c4dd3ff1777dbe8ec" title="Dump the contents of the filesystem within already-open repos into writable dumpstream. ">svn_repos_dump_fs3()</a>, but with a feedback_stream instead of handling feedback via the notify_func handler. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.1. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000369">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gad8eda99e1105b33c4dd3ff1777dbe8ec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_dump_fs3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>dumpstream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>start_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>end_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>incremental</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_deltas</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a>&#160;</td>
          <td class="paramname"><em>notify_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>notify_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>scratch_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Dump the contents of the filesystem within already-open <em>repos</em> into writable <em>dumpstream</em>. </p>
<p>Begin at revision <em>start_rev</em>, and dump every revision up through <em>end_rev</em>. Use <em>pool</em> for all allocation. If non-<code>NULL</code>, send feedback to <em>feedback_stream</em>. If <em>dumpstream</em> is <code>NULL</code>, this is effectively a primitive verify. It is not complete, however; <a class="el" href="group__svn__repos__dump__load.html#gaa03411f59dbccf0eced1b0d0f83d2ec9" title="Verify the contents of the file system in repos. ">svn_repos_verify_fs2()</a> and <a class="el" href="group__fs__handling.html#ga2c8730657b4f8b55ba45e1449ae4285f" title="Perform backend-specific data consistency and correctness validations to the Subversion filesystem (m...">svn_fs_verify()</a>.</p>
<p>If <em>start_rev</em> is <a class="el" href="svn__types_8h.html#a8857d4630bf116eaba54a1b65d43ad92" title="The &#39;official&#39; invalid revision num. ">SVN_INVALID_REVNUM</a>, then start dumping at revision 0. If <em>end_rev</em> is <a class="el" href="svn__types_8h.html#a8857d4630bf116eaba54a1b65d43ad92" title="The &#39;official&#39; invalid revision num. ">SVN_INVALID_REVNUM</a>, then dump through the <code>HEAD</code> revision.</p>
<p>If <em>incremental</em> is <code>TRUE</code>, the first revision dumped will be a diff against the previous revision (usually it looks like a full dump of the tree).</p>
<p>If <em>use_deltas</em> is <code>TRUE</code>, output only node properties which have changed relative to the previous contents, and output text contents as svndiff data against the previous contents. Regardless of how this flag is set, the first revision of a non-incremental dump will be done with full plain text. A dump with <em>use_deltas</em> set cannot be loaded by Subversion 1.0.x.</p>
<p>If <em>notify_func</em> is not <code>NULL</code>, then for every dumped revision call <em>notify_func</em> with <em>rev</em> set to the dumped revision and <em>warning_text</em> <code>NULL</code>. For warnings call <em>notify_func</em> with <em>warning_text</em>.</p>
<p>If <em>cancel_func</em> is not <code>NULL</code>, it is called periodically with <em>cancel_baton</em> as argument to see if the client wishes to cancel the dump.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.7. </dd></dl>

</div>
</div>
<a class="anchor" id="gadf1ab8b01abc03d1b045d090cd78ad8b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_get_fs_build_parser </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__svn__repos__dump__load.html#ga03b3b5fdffc4cd7b7ce052542562f131">svn_repos_parser_fns_t</a> **&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>parse_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_history</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a>&#160;</td>
          <td class="paramname"><em>uuid_action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>outstream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>parent_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#ga77d6f795abc868bb0321b0e1f1f4005f" title="Similar to svn_repos_get_fs_build_parser3(), but with outstream in place if a svn_repos_notify_func_t...">svn_repos_get_fs_build_parser2()</a>, but yields the more limited svn_repos_parser_fns_t vtable type. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000381">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.0 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga77d6f795abc868bb0321b0e1f1f4005f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_get_fs_build_parser2 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__repos__parse__fns2__t.html">svn_repos_parse_fns2_t</a> **&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>parse_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_history</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a>&#160;</td>
          <td class="paramname"><em>uuid_action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>outstream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>parent_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#gabe145ff80070adc54f6f2f45f0217d5f" title="Similar to svn_repos_get_fs_build_parser4(), but with start_rev and end_rev always passed as SVN_INVA...">svn_repos_get_fs_build_parser3()</a>, but with <em>outstream</em> in place if a <a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe" title="Callback for providing notification from the repository. ">svn_repos_notify_func_t</a> and baton and with <em>validate_props</em> always FALSE. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.1. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000380">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gabe145ff80070adc54f6f2f45f0217d5f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_get_fs_build_parser3 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__repos__parse__fns2__t.html">svn_repos_parse_fns2_t</a> **&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>parse_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_history</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>validate_props</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a>&#160;</td>
          <td class="paramname"><em>uuid_action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>parent_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a>&#160;</td>
          <td class="paramname"><em>notify_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>notify_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#gaf40a165018dd98a9b2d2b2dbf74d73aa" title="Set *parser and *parse_baton to a vtable parser which commits new revisions to the fs in repos...">svn_repos_get_fs_build_parser4()</a>, but with <em>start_rev</em> and <em>end_rev</em> always passed as <a class="el" href="svn__types_8h.html#a8857d4630bf116eaba54a1b65d43ad92" title="The &#39;official&#39; invalid revision num. ">SVN_INVALID_REVNUM</a>, and yielding the more limited <a class="el" href="structsvn__repos__parse__fns2__t.html" title="A vtable that is driven by svn_repos_parse_dumpstream2(). ">svn_repos_parse_fns2_t</a>. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.7. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000379">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf40a165018dd98a9b2d2b2dbf74d73aa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_get_fs_build_parser4 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__repos__parse__fns3__t.html">svn_repos_parse_fns3_t</a> **&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>parse_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>start_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>end_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_history</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>validate_props</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a>&#160;</td>
          <td class="paramname"><em>uuid_action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>parent_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a>&#160;</td>
          <td class="paramname"><em>notify_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>notify_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*parser</em> and <em>*parse_baton</em> to a vtable parser which commits new revisions to the fs in <em>repos</em>. </p>
<p>The constructed parser will treat UUID records in a manner consistent with <em>uuid_action</em>. Use <em>pool</em> to operate on the fs.</p>
<p><em>start_rev</em> and <em>end_rev</em> act as filters, the lower and upper (inclusive) range values of revisions in <em>dumpstream</em> which will be loaded. Either both of these values are <a class="el" href="svn__types_8h.html#a8857d4630bf116eaba54a1b65d43ad92" title="The &#39;official&#39; invalid revision num. ">SVN_INVALID_REVNUM</a> (in which case no revision-based filtering occurs at all), or both are valid revisions (where <em>start_rev</em> is older than or equivalent to <em>end_rev</em>).</p>
<p>If <em>use_history</em> is set, then the parser will require relative 'copyfrom' history to exist in the repository when it encounters nodes that are added-with-history.</p>
<p>If <em>validate_props</em> is set, then validate Subversion revision and node properties (those in the svn: namespace) against established rules for those things.</p>
<p>If <em>parent_dir</em> is not NULL, then the parser will reparent all the loaded nodes, from root to <em>parent_dir</em>. The directory <em>parent_dir</em> must be an existing directory in the repository.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.8. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3f159b7efd59c845860e99a734841285"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_load_fs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>dumpstream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>feedback_stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a>&#160;</td>
          <td class="paramname"><em>uuid_action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>parent_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#gaaa3af3c924339279ba9a528f441210ea" title="Similar to svn_repos_load_fs3(), but with feedback_stream in place of the svn_repos_notify_func_t and...">svn_repos_load_fs2()</a>, but with <em>use_pre_commit_hook</em> and <em>use_post_commit_hook</em> always <code>FALSE</code>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000373">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.1 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gaaa3af3c924339279ba9a528f441210ea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_load_fs2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>dumpstream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>feedback_stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a>&#160;</td>
          <td class="paramname"><em>uuid_action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>parent_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_pre_commit_hook</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_post_commit_hook</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#ga68ee91da669943b091b62e77a0811cd1" title="Similar to svn_repos_load_fs4(), but with start_rev and end_rev always passed as SVN_INVALID_REVNUM. ">svn_repos_load_fs3()</a>, but with <em>feedback_stream</em> in place of the <a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe" title="Callback for providing notification from the repository. ">svn_repos_notify_func_t</a> and baton and with <em>validate_props</em> always FALSE. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.2. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000372">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga68ee91da669943b091b62e77a0811cd1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_load_fs3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>dumpstream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a>&#160;</td>
          <td class="paramname"><em>uuid_action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>parent_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_pre_commit_hook</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_post_commit_hook</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>validate_props</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a>&#160;</td>
          <td class="paramname"><em>notify_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>notify_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#ga28ca21c3cbf3a24018943a17154d952d" title="Read and parse dumpfile-formatted dumpstream, reconstructing filesystem revisions in already-open rep...">svn_repos_load_fs4()</a>, but with <em>start_rev</em> and <em>end_rev</em> always passed as <a class="el" href="svn__types_8h.html#a8857d4630bf116eaba54a1b65d43ad92" title="The &#39;official&#39; invalid revision num. ">SVN_INVALID_REVNUM</a>. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.7. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000371">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga28ca21c3cbf3a24018943a17154d952d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_load_fs4 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>dumpstream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>start_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>end_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360">svn_repos_load_uuid</a>&#160;</td>
          <td class="paramname"><em>uuid_action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>parent_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_pre_commit_hook</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>use_post_commit_hook</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>validate_props</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a>&#160;</td>
          <td class="paramname"><em>notify_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>notify_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read and parse dumpfile-formatted <em>dumpstream</em>, reconstructing filesystem revisions in already-open <em>repos</em>, handling uuids in accordance with <em>uuid_action</em>. </p>
<p>Use <em>pool</em> for all allocation.</p>
<p>If the dumpstream contains copy history that is unavailable in the repository, an error will be thrown.</p>
<p>The repository's UUID will be updated iff the dumpstream contains a UUID and <em>uuid_action</em> is not equal to <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360a0284c3d4a36f2fd481eabcd68fe3cdf0" title="never update uuid. ">svn_repos_load_uuid_ignore</a> and either the repository contains no revisions or <em>uuid_action</em> is equal to <a class="el" href="svn__repos_8h.html#a3f25f6afc6c9fc6de9327ea8960a5360a72df785dbc140628df1bfe4cbfc7371f" title="always update uuid. ">svn_repos_load_uuid_force</a>.</p>
<p>If the dumpstream contains no UUID, then <em>uuid_action</em> is ignored and the repository UUID is not touched.</p>
<p><em>start_rev</em> and <em>end_rev</em> act as filters, the lower and upper (inclusive) range values of revisions in <em>dumpstream</em> which will be loaded. Either both of these values are <a class="el" href="svn__types_8h.html#a8857d4630bf116eaba54a1b65d43ad92" title="The &#39;official&#39; invalid revision num. ">SVN_INVALID_REVNUM</a> (in which case no revision-based filtering occurs at all), or both are valid revisions (where <em>start_rev</em> is older than or equivalent to <em>end_rev</em>).</p>
<p>If <em>parent_dir</em> is not NULL, then the parser will reparent all the loaded nodes, from root to <em>parent_dir</em>. The directory <em>parent_dir</em> must be an existing directory in the repository.</p>
<p>If <em>use_pre_commit_hook</em> is set, call the repository's pre-commit hook before committing each loaded revision.</p>
<p>If <em>use_post_commit_hook</em> is set, call the repository's post-commit hook after committing each loaded revision.</p>
<p>If <em>validate_props</em> is set, then validate Subversion revision and node properties (those in the svn: namespace) against established rules for those things.</p>
<p>If non-NULL, use <em>notify_func</em> and <em>notify_baton</em> to send notification of events to the caller.</p>
<p>If <em>cancel_func</em> is not <code>NULL</code>, it is called periodically with <em>cancel_baton</em> as argument to see if the client wishes to cancel the load.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.8. </dd></dl>

</div>
</div>
<a class="anchor" id="ga62a01bf6688524b7ac598ee8c7b0290a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_parse_dumpstream </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="group__svn__repos__dump__load.html#ga03b3b5fdffc4cd7b7ce052542562f131">svn_repos_parser_fns_t</a> *&#160;</td>
          <td class="paramname"><em>parse_fns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>parse_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#ga90194c5a0349596106d5355872cb5e47" title="Similar to svn_repos_parse_dumpstream3(), but uses the more limited svn_repos_parser_fns2_t vtable ty...">svn_repos_parse_dumpstream2()</a>, but uses the more limited <a class="el" href="group__svn__repos__dump__load.html#ga03b3b5fdffc4cd7b7ce052542562f131" title="A vtable that is driven by svn_repos_parse_dumpstream(). ">svn_repos_parser_fns_t</a> vtable type. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000378">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.0 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga90194c5a0349596106d5355872cb5e47"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_parse_dumpstream2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="group__svn__repos__dump__load.html#gaed00d258abbe1a0fdc2cc4f89b420daf">svn_repos_parser_fns2_t</a> *&#160;</td>
          <td class="paramname"><em>parse_fns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>parse_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#gae5ed3287ba9df58687aaaeb2b9095c05" title="Read and parse dumpfile-formatted stream, calling callbacks in parse_fns/parse_baton, and using pool for allocations. ">svn_repos_parse_dumpstream3()</a>, but uses the more limited <a class="el" href="group__svn__repos__dump__load.html#gaed00d258abbe1a0fdc2cc4f89b420daf">svn_repos_parser_fns2_t</a> vtable type. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000377">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gae5ed3287ba9df58687aaaeb2b9095c05"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_parse_dumpstream3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__repos__parse__fns3__t.html">svn_repos_parse_fns3_t</a> *&#160;</td>
          <td class="paramname"><em>parse_fns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>parse_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>deltas_are_text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read and parse dumpfile-formatted <em>stream</em>, calling callbacks in <em>parse_fns/<em>parse_baton</em>,</em> and using <em>pool</em> for allocations. </p>
<p>If <em>deltas_are_text</em> is <code>TRUE</code>, handle text-deltas with the <em>set_fulltext</em> callback. This is useful when manipulating a dump stream without loading it. Otherwise handle text-deltas with the <em>apply_textdelta</em> callback.</p>
<p>If <em>cancel_func</em> is not <code>NULL</code>, it is called periodically with <em>cancel_baton</em> as argument to see if the client wishes to cancel the dump.</p>
<p>This parser has built-in knowledge of the dumpfile format, but only in a limited sense:</p>
<ul>
<li>it recognizes the "magic" format-version header.</li>
<li>it recognizes the UUID header.</li>
<li>it recognizes revision and node records by looking for either a REVISION_NUMBER or NODE_PATH headers.</li>
<li>it recognizes the CONTENT-LENGTH headers, so it knows if and how to suck up the content body.</li>
<li>it knows how to parse a content body into two parts: props and text, and pass the pieces to the vtable.</li>
</ul>
<p>This is enough knowledge to make it easy on vtable implementors, but still allow expansion of the format: most headers do not have to be handled explicitly.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.8. </dd></dl>

</div>
</div>
<a class="anchor" id="ga4e92b908f1c85cdacce5a1cf20a18896"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_verify_fs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>feedback_stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>start_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>end_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__repos__dump__load.html#gaa03411f59dbccf0eced1b0d0f83d2ec9" title="Verify the contents of the file system in repos. ">svn_repos_verify_fs2()</a>, but with a feedback_stream instead of handling feedback via the notify_func handler. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.5. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000368">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa03411f59dbccf0eced1b0d0f83d2ec9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_repos_verify_fs2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#aab0243728cac2a99eeaa18d7e72f77de">svn_repos_t</a> *&#160;</td>
          <td class="paramname"><em>repos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>start_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td>
          <td class="paramname"><em>end_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__repos_8h.html#a387f44a9ac5041bceee3f105c7f197fe">svn_repos_notify_func_t</a>&#160;</td>
          <td class="paramname"><em>notify_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>notify_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>scratch_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Verify the contents of the file system in <em>repos</em>. </p>
<p>If <em>feedback_stream</em> is not <code>NULL</code>, write feedback to it (lines of the form "* Verified revision %ld\n").</p>
<p>If <em>start_rev</em> is <a class="el" href="svn__types_8h.html#a8857d4630bf116eaba54a1b65d43ad92" title="The &#39;official&#39; invalid revision num. ">SVN_INVALID_REVNUM</a>, then start verifying at revision 0. If <em>end_rev</em> is <a class="el" href="svn__types_8h.html#a8857d4630bf116eaba54a1b65d43ad92" title="The &#39;official&#39; invalid revision num. ">SVN_INVALID_REVNUM</a>, then verify through the <code>HEAD</code> revision.</p>
<p>For every verified revision call <em>notify_func</em> with <em>rev</em> set to the verified revision and <em>warning_text</em> <code>NULL</code>. For warnings call <em>notify_func</em> with <em>warning_text</em> set.</p>
<p>If <em>cancel_func</em> is not <code>NULL</code>, call it periodically with <em>cancel_baton</em> as argument to see if the caller wishes to cancel the verification.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.7. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:37:25 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
