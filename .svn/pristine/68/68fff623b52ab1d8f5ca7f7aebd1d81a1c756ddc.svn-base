<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Subversion: svn_cmdline.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">svn_cmdline.h</div>  </div>
</div>
<div class="contents">
<a href="svn__cmdline_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**</span>
<a name="l00002"></a>00002 <span class="comment"> * @copyright</span>
<a name="l00003"></a>00003 <span class="comment"> * ====================================================================</span>
<a name="l00004"></a>00004 <span class="comment"> *    Licensed to the Apache Software Foundation (ASF) under one</span>
<a name="l00005"></a>00005 <span class="comment"> *    or more contributor license agreements.  See the NOTICE file</span>
<a name="l00006"></a>00006 <span class="comment"> *    distributed with this work for additional information</span>
<a name="l00007"></a>00007 <span class="comment"> *    regarding copyright ownership.  The ASF licenses this file</span>
<a name="l00008"></a>00008 <span class="comment"> *    to you under the Apache License, Version 2.0 (the</span>
<a name="l00009"></a>00009 <span class="comment"> *    &quot;License&quot;); you may not use this file except in compliance</span>
<a name="l00010"></a>00010 <span class="comment"> *    with the License.  You may obtain a copy of the License at</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00013"></a>00013 <span class="comment"> *</span>
<a name="l00014"></a>00014 <span class="comment"> *    Unless required by applicable law or agreed to in writing,</span>
<a name="l00015"></a>00015 <span class="comment"> *    software distributed under the License is distributed on an</span>
<a name="l00016"></a>00016 <span class="comment"> *    &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span>
<a name="l00017"></a>00017 <span class="comment"> *    KIND, either express or implied.  See the License for the</span>
<a name="l00018"></a>00018 <span class="comment"> *    specific language governing permissions and limitations</span>
<a name="l00019"></a>00019 <span class="comment"> *    under the License.</span>
<a name="l00020"></a>00020 <span class="comment"> * ====================================================================</span>
<a name="l00021"></a>00021 <span class="comment"> * @endcopyright</span>
<a name="l00022"></a>00022 <span class="comment"> *</span>
<a name="l00023"></a>00023 <span class="comment"> * @file svn_cmdline.h</span>
<a name="l00024"></a>00024 <span class="comment"> * @brief Support functions for command line programs</span>
<a name="l00025"></a>00025 <span class="comment"> */</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="preprocessor">#ifndef SVN_CMDLINE_H</span>
<a name="l00031"></a>00031 <span class="preprocessor"></span><span class="preprocessor">#define SVN_CMDLINE_H</span>
<a name="l00032"></a>00032 <span class="preprocessor"></span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;apr_pools.h&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;apr_getopt.h&gt;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span><span class="preprocessor">#define APR_WANT_STDIO</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span><span class="preprocessor">#include &lt;apr_want.h&gt;</span>
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="svn__types_8h.html" title="Subversion&#39;s data types.">svn_types.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="svn__auth_8h.html" title="Subversion&#39;s authentication system.">svn_auth.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="svn__config_8h.html" title="Accessing SVN configuration files.">svn_config.h</a>&quot;</span>
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00046"></a>00046 <span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {
<a name="l00047"></a>00047 <span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span>
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 <span class="comment"></span>
<a name="l00050"></a>00050 <span class="comment">/** Set up the locale for character conversion, and initialize APR.</span>
<a name="l00051"></a>00051 <span class="comment"> * If @a error_stream is non-NULL, print error messages to the stream,</span>
<a name="l00052"></a>00052 <span class="comment"> * using @a progname as the program name.  Attempt to set @c stdout to</span>
<a name="l00053"></a>00053 <span class="comment"> * line-buffered mode, and @a error_stream to unbuffered mode.  Return</span>
<a name="l00054"></a>00054 <span class="comment"> * @c EXIT_SUCCESS if successful, otherwise @c EXIT_FAILURE.</span>
<a name="l00055"></a>00055 <span class="comment"> *</span>
<a name="l00056"></a>00056 <span class="comment"> * @note This function should be called exactly once at program startup,</span>
<a name="l00057"></a>00057 <span class="comment"> *       before calling any other APR or Subversion functions.</span>
<a name="l00058"></a>00058 <span class="comment"> */</span>
<a name="l00059"></a>00059 <span class="keywordtype">int</span>
<a name="l00060"></a>00060 <a class="code" href="svn__cmdline_8h.html#a495610db565445986afaa1716e144eb5" title="Set up the locale for character conversion, and initialize APR.">svn_cmdline_init</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *progname,
<a name="l00061"></a>00061                  FILE *error_stream);
<a name="l00062"></a>00062 
<a name="l00063"></a>00063 <span class="comment"></span>
<a name="l00064"></a>00064 <span class="comment">/** Set @a *dest to an output-encoded C string from UTF-8 C string @a</span>
<a name="l00065"></a>00065 <span class="comment"> * src; allocate @a *dest in @a pool.</span>
<a name="l00066"></a>00066 <span class="comment"> */</span>
<a name="l00067"></a>00067 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00068"></a>00068 <a class="code" href="svn__cmdline_8h.html#a119a36c3816bc0a9ca07bc2b9842aefc" title="Set *dest to an output-encoded C string from UTF-8 C string src; allocate *dest in pool...">svn_cmdline_cstring_from_utf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **dest,
<a name="l00069"></a>00069                               <span class="keyword">const</span> <span class="keywordtype">char</span> *src,
<a name="l00070"></a>00070                               apr_pool_t *pool);
<a name="l00071"></a>00071 <span class="comment"></span>
<a name="l00072"></a>00072 <span class="comment">/** Like svn_utf_cstring_from_utf8_fuzzy(), but converts to an</span>
<a name="l00073"></a>00073 <span class="comment"> * output-encoded C string. */</span>
<a name="l00074"></a>00074 <span class="keyword">const</span> <span class="keywordtype">char</span> *
<a name="l00075"></a>00075 <a class="code" href="svn__cmdline_8h.html#aff41587f47402e8f0f77068fa7245e8b" title="Like svn_utf_cstring_from_utf8_fuzzy(), but converts to an output-encoded C string.">svn_cmdline_cstring_from_utf8_fuzzy</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *src,
<a name="l00076"></a>00076                                     apr_pool_t *pool);
<a name="l00077"></a>00077 <span class="comment"></span>
<a name="l00078"></a>00078 <span class="comment">/** Set @a *dest to a UTF-8-encoded C string from input-encoded C</span>
<a name="l00079"></a>00079 <span class="comment"> * string @a src; allocate @a *dest in @a pool.</span>
<a name="l00080"></a>00080 <span class="comment"> */</span>
<a name="l00081"></a>00081 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00082"></a>00082 <a class="code" href="svn__cmdline_8h.html#a1361c95492a2c36dd78616fb93751453" title="Set *dest to a UTF-8-encoded C string from input-encoded C string src; allocate *dest in pool...">svn_cmdline_cstring_to_utf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **dest,
<a name="l00083"></a>00083                             <span class="keyword">const</span> <span class="keywordtype">char</span> *src,
<a name="l00084"></a>00084                             apr_pool_t *pool);
<a name="l00085"></a>00085 <span class="comment"></span>
<a name="l00086"></a>00086 <span class="comment">/** Set @a *dest to an output-encoded natively-formatted path string</span>
<a name="l00087"></a>00087 <span class="comment"> * from canonical path @a src; allocate @a *dest in @a pool.</span>
<a name="l00088"></a>00088 <span class="comment"> */</span>
<a name="l00089"></a>00089 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00090"></a>00090 <a class="code" href="svn__cmdline_8h.html#a58e8bb01acb2646d5843fc9224c9f0d9" title="Set *dest to an output-encoded natively-formatted path string from canonical path src; allocate *dest...">svn_cmdline_path_local_style_from_utf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **dest,
<a name="l00091"></a>00091                                        <span class="keyword">const</span> <span class="keywordtype">char</span> *src,
<a name="l00092"></a>00092                                        apr_pool_t *pool);
<a name="l00093"></a>00093 <span class="comment"></span>
<a name="l00094"></a>00094 <span class="comment">/** Write to stdout, using a printf-like format string @a fmt, passed</span>
<a name="l00095"></a>00095 <span class="comment"> * through apr_pvsprintf().  All string arguments are in UTF-8; the output</span>
<a name="l00096"></a>00096 <span class="comment"> * is converted to the output encoding.  Use @a pool for temporary</span>
<a name="l00097"></a>00097 <span class="comment"> * allocation.</span>
<a name="l00098"></a>00098 <span class="comment"> *</span>
<a name="l00099"></a>00099 <span class="comment"> * @since New in 1.1.</span>
<a name="l00100"></a>00100 <span class="comment"> */</span>
<a name="l00101"></a>00101 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00102"></a>00102 <a class="code" href="svn__cmdline_8h.html#a2ceef7dceddc2fc7b9e16e64640495c2" title="Write to stdout, using a printf-like format string fmt, passed through apr_pvsprintf().">svn_cmdline_printf</a>(apr_pool_t *pool,
<a name="l00103"></a>00103                    <span class="keyword">const</span> <span class="keywordtype">char</span> *fmt,
<a name="l00104"></a>00104                    ...)
<a name="l00105"></a>00105        __attribute__((format(printf, 2, 3)));
<a name="l00106"></a>00106 <span class="comment"></span>
<a name="l00107"></a>00107 <span class="comment">/** Write to the stdio @a stream, using a printf-like format string @a fmt,</span>
<a name="l00108"></a>00108 <span class="comment"> * passed through apr_pvsprintf().  All string arguments are in UTF-8;</span>
<a name="l00109"></a>00109 <span class="comment"> * the output is converted to the output encoding.  Use @a pool for</span>
<a name="l00110"></a>00110 <span class="comment"> * temporary allocation.</span>
<a name="l00111"></a>00111 <span class="comment"> *</span>
<a name="l00112"></a>00112 <span class="comment"> * @since New in 1.1.</span>
<a name="l00113"></a>00113 <span class="comment"> */</span>
<a name="l00114"></a>00114 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00115"></a>00115 <a class="code" href="svn__cmdline_8h.html#a7240217dcc8de124dbb8d38620a97404" title="Write to the stdio stream, using a printf-like format string fmt, passed through apr_pvsprintf().">svn_cmdline_fprintf</a>(FILE *stream,
<a name="l00116"></a>00116                     apr_pool_t *pool,
<a name="l00117"></a>00117                     const <span class="keywordtype">char</span> *fmt,
<a name="l00118"></a>00118                     ...)
<a name="l00119"></a>00119        __attribute__((format(printf, 3, 4)));
<a name="l00120"></a>00120 <span class="comment"></span>
<a name="l00121"></a>00121 <span class="comment">/** Output the @a string to the stdio @a stream, converting from UTF-8</span>
<a name="l00122"></a>00122 <span class="comment"> * to the output encoding.  Use @a pool for temporary allocation.</span>
<a name="l00123"></a>00123 <span class="comment"> *</span>
<a name="l00124"></a>00124 <span class="comment"> * @since New in 1.1.</span>
<a name="l00125"></a>00125 <span class="comment"> */</span>
<a name="l00126"></a>00126 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00127"></a>00127 <a class="code" href="svn__cmdline_8h.html#abe1b2cfd58c9eb1e7c1839d395a4747f" title="Output the string to the stdio stream, converting from UTF-8 to the output encoding.">svn_cmdline_fputs</a>(const <span class="keywordtype">char</span> *<span class="keywordtype">string</span>,
<a name="l00128"></a>00128                   FILE *stream,
<a name="l00129"></a>00129                   apr_pool_t *pool);
<a name="l00130"></a>00130 <span class="comment"></span>
<a name="l00131"></a>00131 <span class="comment">/** Flush output buffers of the stdio @a stream, returning an error if that</span>
<a name="l00132"></a>00132 <span class="comment"> * fails.  This is just a wrapper for the standard fflush() function for</span>
<a name="l00133"></a>00133 <span class="comment"> * consistent error handling.</span>
<a name="l00134"></a>00134 <span class="comment"> *</span>
<a name="l00135"></a>00135 <span class="comment"> * @since New in 1.1.</span>
<a name="l00136"></a>00136 <span class="comment"> */</span>
<a name="l00137"></a>00137 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00138"></a>00138 <a class="code" href="svn__cmdline_8h.html#a3048d33ccc459e8fc61a15691b8963ae" title="Flush output buffers of the stdio stream, returning an error if that fails.">svn_cmdline_fflush</a>(FILE *stream);
<a name="l00139"></a>00139 <span class="comment"></span>
<a name="l00140"></a>00140 <span class="comment">/** Return the name of the output encoding allocated in @a pool, or @c</span>
<a name="l00141"></a>00141 <span class="comment"> * APR_LOCALE_CHARSET if the output encoding is the same as the locale</span>
<a name="l00142"></a>00142 <span class="comment"> * encoding.</span>
<a name="l00143"></a>00143 <span class="comment"> *</span>
<a name="l00144"></a>00144 <span class="comment"> * @since New in 1.3.</span>
<a name="l00145"></a>00145 <span class="comment"> */</span>
<a name="l00146"></a>00146 const <span class="keywordtype">char</span> *
<a name="l00147"></a>00147 <a class="code" href="svn__cmdline_8h.html#ad90550e33f15beb0143e44d2a53b4a20" title="Return the name of the output encoding allocated in pool, or APR_LOCALE_CHARSET if the output encodin...">svn_cmdline_output_encoding</a>(apr_pool_t *pool);
<a name="l00148"></a>00148 <span class="comment"></span>
<a name="l00149"></a>00149 <span class="comment">/** Handle @a error in preparation for immediate exit from a</span>
<a name="l00150"></a>00150 <span class="comment"> * command-line client.  Specifically:</span>
<a name="l00151"></a>00151 <span class="comment"> *</span>
<a name="l00152"></a>00152 <span class="comment"> * Call svn_handle_error2(@a error, stderr, FALSE, @a prefix), clear</span>
<a name="l00153"></a>00153 <span class="comment"> * @a error, destroy @a pool iff it is non-NULL, and return EXIT_FAILURE.</span>
<a name="l00154"></a>00154 <span class="comment"> *</span>
<a name="l00155"></a>00155 <span class="comment"> * @since New in 1.3.</span>
<a name="l00156"></a>00156 <span class="comment"> */</span>
<a name="l00157"></a>00157 <span class="keywordtype">int</span>
<a name="l00158"></a>00158 <a class="code" href="svn__cmdline_8h.html#a42970262887c6621aa4e9d34b08fd5df" title="Handle error in preparation for immediate exit from a command-line client.">svn_cmdline_handle_exit_error</a>(<a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *error,
<a name="l00159"></a>00159                               apr_pool_t *pool,
<a name="l00160"></a>00160                               const <span class="keywordtype">char</span> *prefix);
<a name="l00161"></a>00161 <span class="comment"></span>
<a name="l00162"></a>00162 <span class="comment">/** A cancellation function/baton pair, and the path to the configuration</span>
<a name="l00163"></a>00163 <span class="comment"> * directory. To be passed as the baton argument to the</span>
<a name="l00164"></a>00164 <span class="comment"> * @c svn_cmdline_*_prompt functions.</span>
<a name="l00165"></a>00165 <span class="comment"> *</span>
<a name="l00166"></a>00166 <span class="comment"> * @since New in 1.6.</span>
<a name="l00167"></a>00167 <span class="comment"> */</span>
<a name="l00168"></a><a class="code" href="structsvn__cmdline__prompt__baton2__t.html">00168</a> typedef struct <a class="code" href="structsvn__cmdline__prompt__baton2__t.html" title="A cancellation function/baton pair, and the path to the configuration directory.">svn_cmdline_prompt_baton2_t</a> {
<a name="l00169"></a>00169   <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func;
<a name="l00170"></a>00170   <span class="keywordtype">void</span> *cancel_baton;
<a name="l00171"></a>00171   <span class="keyword">const</span> <span class="keywordtype">char</span> *config_dir;
<a name="l00172"></a>00172 } <a class="code" href="svn__cmdline_8h.html#a7ac248527a1f28b45d272fe66e64cbfe" title="A cancellation function/baton pair, and the path to the configuration directory.">svn_cmdline_prompt_baton2_t</a>;
<a name="l00173"></a>00173 <span class="comment"></span>
<a name="l00174"></a>00174 <span class="comment">/** Like svn_cmdline_prompt_baton2_t, but without the path to the</span>
<a name="l00175"></a>00175 <span class="comment"> * configuration directory.</span>
<a name="l00176"></a>00176 <span class="comment"> *</span>
<a name="l00177"></a>00177 <span class="comment"> * @since New in 1.4.</span>
<a name="l00178"></a>00178 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l00179"></a>00179 <span class="comment"> */</span>
<a name="l00180"></a><a class="code" href="structsvn__cmdline__prompt__baton__t.html">00180</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__cmdline__prompt__baton__t.html" title="Like svn_cmdline_prompt_baton2_t, but without the path to the configuration directory.">svn_cmdline_prompt_baton_t</a> {
<a name="l00181"></a>00181   <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func;
<a name="l00182"></a>00182   <span class="keywordtype">void</span> *cancel_baton;
<a name="l00183"></a>00183 } <a class="code" href="svn__cmdline_8h.html#af22924e1c622daf82e1c332eb4ff3983" title="Like svn_cmdline_prompt_baton2_t, but without the path to the configuration directory.">svn_cmdline_prompt_baton_t</a>;
<a name="l00184"></a>00184 <span class="comment"></span>
<a name="l00185"></a>00185 <span class="comment">/** Prompt the user for input, using @a prompt_str for the prompt and</span>
<a name="l00186"></a>00186 <span class="comment"> * @a baton (which may be @c NULL) for cancellation, and returning the</span>
<a name="l00187"></a>00187 <span class="comment"> * user&#39;s response in @a result, allocated in @a pool.</span>
<a name="l00188"></a>00188 <span class="comment"> *</span>
<a name="l00189"></a>00189 <span class="comment"> * @since New in 1.5.</span>
<a name="l00190"></a>00190 <span class="comment"> */</span>
<a name="l00191"></a>00191 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00192"></a>00192 <a class="code" href="svn__cmdline_8h.html#a2cb201f6106832e5eb82a46a3d598609" title="Prompt the user for input, using prompt_str for the prompt and baton (which may be NULL) for cancella...">svn_cmdline_prompt_user2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **result,
<a name="l00193"></a>00193                          <span class="keyword">const</span> <span class="keywordtype">char</span> *prompt_str,
<a name="l00194"></a>00194                          <a class="code" href="structsvn__cmdline__prompt__baton__t.html" title="Like svn_cmdline_prompt_baton2_t, but without the path to the configuration directory.">svn_cmdline_prompt_baton_t</a> *baton,
<a name="l00195"></a>00195                          apr_pool_t *pool);
<a name="l00196"></a>00196 <span class="comment"></span>
<a name="l00197"></a>00197 <span class="comment">/** Similar to svn_cmdline_prompt_user2, but without cancellation</span>
<a name="l00198"></a>00198 <span class="comment"> * support.</span>
<a name="l00199"></a>00199 <span class="comment"> *</span>
<a name="l00200"></a>00200 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l00201"></a>00201 <span class="comment"> */</span>
<a name="l00202"></a>00202 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00203"></a>00203 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00204"></a>00204 <a class="code" href="svn__cmdline_8h.html#ae10b705f133a49938410330373b0f12b" title="Similar to svn_cmdline_prompt_user2, but without cancellation support.">svn_cmdline_prompt_user</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **result,
<a name="l00205"></a>00205                         <span class="keyword">const</span> <span class="keywordtype">char</span> *prompt_str,
<a name="l00206"></a>00206                         apr_pool_t *pool);
<a name="l00207"></a>00207 <span class="comment"></span>
<a name="l00208"></a>00208 <span class="comment">/** An implementation of @c svn_auth_simple_prompt_func_t that prompts</span>
<a name="l00209"></a>00209 <span class="comment"> * the user for keyboard input on the command line.</span>
<a name="l00210"></a>00210 <span class="comment"> *</span>
<a name="l00211"></a>00211 <span class="comment"> * @since New in 1.4.</span>
<a name="l00212"></a>00212 <span class="comment"> *</span>
<a name="l00213"></a>00213 <span class="comment"> * Expects a @c svn_cmdline_prompt_baton_t to be passed as @a baton.</span>
<a name="l00214"></a>00214 <span class="comment"> */</span>
<a name="l00215"></a>00215 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00216"></a>00216 <a class="code" href="svn__cmdline_8h.html#ad2a7bbc13444988a059507651134ec59" title="An implementation of svn_auth_simple_prompt_func_t that prompts the user for keyboard input on the co...">svn_cmdline_auth_simple_prompt</a>(<a class="code" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials.">svn_auth_cred_simple_t</a> **cred_p,
<a name="l00217"></a>00217                                <span class="keywordtype">void</span> *baton,
<a name="l00218"></a>00218                                <span class="keyword">const</span> <span class="keywordtype">char</span> *realm,
<a name="l00219"></a>00219                                <span class="keyword">const</span> <span class="keywordtype">char</span> *username,
<a name="l00220"></a>00220                                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> may_save,
<a name="l00221"></a>00221                                apr_pool_t *pool);
<a name="l00222"></a>00222 
<a name="l00223"></a>00223 <span class="comment"></span>
<a name="l00224"></a>00224 <span class="comment">/** An implementation of @c svn_auth_username_prompt_func_t that prompts</span>
<a name="l00225"></a>00225 <span class="comment"> * the user for their username via the command line.</span>
<a name="l00226"></a>00226 <span class="comment"> *</span>
<a name="l00227"></a>00227 <span class="comment"> * @since New in 1.4.</span>
<a name="l00228"></a>00228 <span class="comment"> *</span>
<a name="l00229"></a>00229 <span class="comment"> * Expects a @c svn_cmdline_prompt_baton_t to be passed as @a baton.</span>
<a name="l00230"></a>00230 <span class="comment"> */</span>
<a name="l00231"></a>00231 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00232"></a>00232 <a class="code" href="svn__cmdline_8h.html#aacc8ed1aa6409a726930f9c0d964b5bd" title="An implementation of svn_auth_username_prompt_func_t that prompts the user for their username via the...">svn_cmdline_auth_username_prompt</a>(<a class="code" href="structsvn__auth__cred__username__t.html" title="SVN_AUTH_CRED_USERNAME credentials.">svn_auth_cred_username_t</a> **cred_p,
<a name="l00233"></a>00233                                  <span class="keywordtype">void</span> *baton,
<a name="l00234"></a>00234                                  <span class="keyword">const</span> <span class="keywordtype">char</span> *realm,
<a name="l00235"></a>00235                                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> may_save,
<a name="l00236"></a>00236                                  apr_pool_t *pool);
<a name="l00237"></a>00237 
<a name="l00238"></a>00238 <span class="comment"></span>
<a name="l00239"></a>00239 <span class="comment">/** An implementation of @c svn_auth_ssl_server_trust_prompt_func_t that</span>
<a name="l00240"></a>00240 <span class="comment"> * asks the user if they trust a specific ssl server via the command line.</span>
<a name="l00241"></a>00241 <span class="comment"> *</span>
<a name="l00242"></a>00242 <span class="comment"> * @since New in 1.4.</span>
<a name="l00243"></a>00243 <span class="comment"> *</span>
<a name="l00244"></a>00244 <span class="comment"> * Expects a @c svn_cmdline_prompt_baton_t to be passed as @a baton.</span>
<a name="l00245"></a>00245 <span class="comment"> */</span>
<a name="l00246"></a>00246 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00247"></a>00247 <a class="code" href="svn__cmdline_8h.html#a7e67981d9ec2d42fa85a85128c2e8532" title="An implementation of svn_auth_ssl_server_trust_prompt_func_t that asks the user if they trust a speci...">svn_cmdline_auth_ssl_server_trust_prompt</a>(
<a name="l00248"></a>00248   <a class="code" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials.">svn_auth_cred_ssl_server_trust_t</a> **cred_p,
<a name="l00249"></a>00249   <span class="keywordtype">void</span> *baton,
<a name="l00250"></a>00250   <span class="keyword">const</span> <span class="keywordtype">char</span> *realm,
<a name="l00251"></a>00251   apr_uint32_t failures,
<a name="l00252"></a>00252   <span class="keyword">const</span> <a class="code" href="structsvn__auth__ssl__server__cert__info__t.html" title="SSL server certificate information used by SVN_AUTH_CRED_SSL_SERVER_TRUST providers.">svn_auth_ssl_server_cert_info_t</a> *cert_info,
<a name="l00253"></a>00253   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> may_save,
<a name="l00254"></a>00254   apr_pool_t *pool);
<a name="l00255"></a>00255 
<a name="l00256"></a>00256 <span class="comment"></span>
<a name="l00257"></a>00257 <span class="comment">/** An implementation of @c svn_auth_ssl_client_cert_prompt_func_t that</span>
<a name="l00258"></a>00258 <span class="comment"> * prompts the user for the filename of their SSL client certificate via</span>
<a name="l00259"></a>00259 <span class="comment"> * the command line.</span>
<a name="l00260"></a>00260 <span class="comment"> *</span>
<a name="l00261"></a>00261 <span class="comment"> * Records absolute path of the SSL client certificate file.</span>
<a name="l00262"></a>00262 <span class="comment"> *</span>
<a name="l00263"></a>00263 <span class="comment"> * @since New in 1.4.</span>
<a name="l00264"></a>00264 <span class="comment"> *</span>
<a name="l00265"></a>00265 <span class="comment"> * Expects a @c svn_cmdline_prompt_baton_t to be passed as @a baton.</span>
<a name="l00266"></a>00266 <span class="comment"> */</span>
<a name="l00267"></a>00267 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00268"></a>00268 <a class="code" href="svn__cmdline_8h.html#ad982c8979a685567c7ced82d9ba33084" title="An implementation of svn_auth_ssl_client_cert_prompt_func_t that prompts the user for the filename of...">svn_cmdline_auth_ssl_client_cert_prompt</a>(
<a name="l00269"></a>00269   <a class="code" href="structsvn__auth__cred__ssl__client__cert__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT credentials.">svn_auth_cred_ssl_client_cert_t</a> **cred_p,
<a name="l00270"></a>00270   <span class="keywordtype">void</span> *baton,
<a name="l00271"></a>00271   <span class="keyword">const</span> <span class="keywordtype">char</span> *realm,
<a name="l00272"></a>00272   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> may_save,
<a name="l00273"></a>00273   apr_pool_t *pool);
<a name="l00274"></a>00274 
<a name="l00275"></a>00275 <span class="comment"></span>
<a name="l00276"></a>00276 <span class="comment">/** An implementation of @c svn_auth_ssl_client_cert_pw_prompt_func_t that</span>
<a name="l00277"></a>00277 <span class="comment"> * prompts the user for their SSL certificate password via the command line.</span>
<a name="l00278"></a>00278 <span class="comment"> *</span>
<a name="l00279"></a>00279 <span class="comment"> * @since New in 1.4.</span>
<a name="l00280"></a>00280 <span class="comment"> *</span>
<a name="l00281"></a>00281 <span class="comment"> * Expects a @c svn_cmdline_prompt_baton_t to be passed as @a baton.</span>
<a name="l00282"></a>00282 <span class="comment"> */</span>
<a name="l00283"></a>00283 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00284"></a>00284 <a class="code" href="svn__cmdline_8h.html#ae36f037a4a37313e37627a84b97eb923" title="An implementation of svn_auth_ssl_client_cert_pw_prompt_func_t that prompts the user for their SSL ce...">svn_cmdline_auth_ssl_client_cert_pw_prompt</a>(
<a name="l00285"></a>00285   <a class="code" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials.">svn_auth_cred_ssl_client_cert_pw_t</a> **cred_p,
<a name="l00286"></a>00286   <span class="keywordtype">void</span> *baton,
<a name="l00287"></a>00287   <span class="keyword">const</span> <span class="keywordtype">char</span> *realm,
<a name="l00288"></a>00288   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> may_save,
<a name="l00289"></a>00289   apr_pool_t *pool);
<a name="l00290"></a>00290 <span class="comment"></span>
<a name="l00291"></a>00291 <span class="comment">/** An implementation of @c svn_auth_plaintext_prompt_func_t that</span>
<a name="l00292"></a>00292 <span class="comment"> * prompts the user whether storing unencrypted passwords to disk is OK.</span>
<a name="l00293"></a>00293 <span class="comment"> *</span>
<a name="l00294"></a>00294 <span class="comment"> * Expects a @c svn_cmdline_prompt_baton2_t to be passed as @a baton.</span>
<a name="l00295"></a>00295 <span class="comment"> *</span>
<a name="l00296"></a>00296 <span class="comment"> * @since New in 1.6.</span>
<a name="l00297"></a>00297 <span class="comment"> */</span>
<a name="l00298"></a>00298 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00299"></a>00299 <a class="code" href="svn__cmdline_8h.html#a6020d0cdcf490faea00794080556aed4" title="An implementation of svn_auth_plaintext_prompt_func_t that prompts the user whether storing unencrypt...">svn_cmdline_auth_plaintext_prompt</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *may_save_plaintext,
<a name="l00300"></a>00300                                   <span class="keyword">const</span> <span class="keywordtype">char</span> *realmstring,
<a name="l00301"></a>00301                                   <span class="keywordtype">void</span> *baton,
<a name="l00302"></a>00302                                   apr_pool_t *pool);
<a name="l00303"></a>00303 <span class="comment"></span>
<a name="l00304"></a>00304 <span class="comment">/** An implementation of @c svn_auth_plaintext_passphrase_prompt_func_t that</span>
<a name="l00305"></a>00305 <span class="comment"> * prompts the user whether storing unencrypted passphrase to disk is OK.</span>
<a name="l00306"></a>00306 <span class="comment"> *</span>
<a name="l00307"></a>00307 <span class="comment"> * Expects a @c svn_cmdline_prompt_baton2_t to be passed as @a baton.</span>
<a name="l00308"></a>00308 <span class="comment"> *</span>
<a name="l00309"></a>00309 <span class="comment"> * @since New in 1.6.</span>
<a name="l00310"></a>00310 <span class="comment"> */</span>
<a name="l00311"></a>00311 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00312"></a>00312 <a class="code" href="svn__cmdline_8h.html#abc5468e67cbb296a803a5ae986112eff" title="An implementation of svn_auth_plaintext_passphrase_prompt_func_t that prompts the user whether storin...">svn_cmdline_auth_plaintext_passphrase_prompt</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *may_save_plaintext,
<a name="l00313"></a>00313                                              <span class="keyword">const</span> <span class="keywordtype">char</span> *realmstring,
<a name="l00314"></a>00314                                              <span class="keywordtype">void</span> *baton,
<a name="l00315"></a>00315                                              apr_pool_t *pool);
<a name="l00316"></a>00316 
<a name="l00317"></a>00317 <span class="comment"></span>
<a name="l00318"></a>00318 <span class="comment">/** Set @a *ab to an authentication baton allocated from @a pool and</span>
<a name="l00319"></a>00319 <span class="comment"> * initialized with the standard set of authentication providers used</span>
<a name="l00320"></a>00320 <span class="comment"> * by the command line client.</span>
<a name="l00321"></a>00321 <span class="comment"> *</span>
<a name="l00322"></a>00322 <span class="comment"> * @a non_interactive, @a username, @a password, @a config_dir,</span>
<a name="l00323"></a>00323 <span class="comment"> * @a no_auth_cache, and @a trust_server_cert are the values of the</span>
<a name="l00324"></a>00324 <span class="comment"> * command line options of the corresponding names.</span>
<a name="l00325"></a>00325 <span class="comment"> *</span>
<a name="l00326"></a>00326 <span class="comment"> * @a cfg is the @c SVN_CONFIG_CATEGORY_CONFIG configuration, and</span>
<a name="l00327"></a>00327 <span class="comment"> * @a cancel_func and @a cancel_baton control the cancellation of the</span>
<a name="l00328"></a>00328 <span class="comment"> * prompting providers that are initialized.</span>
<a name="l00329"></a>00329 <span class="comment"> *</span>
<a name="l00330"></a>00330 <span class="comment"> * Use @a pool for all allocations.</span>
<a name="l00331"></a>00331 <span class="comment"> *</span>
<a name="l00332"></a>00332 <span class="comment"> * @since New in 1.6.</span>
<a name="l00333"></a>00333 <span class="comment"> */</span>
<a name="l00334"></a>00334 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00335"></a>00335 <a class="code" href="svn__cmdline_8h.html#a83693b19ce1eacda69dee9449df3fee3" title="Set *ab to an authentication baton allocated from pool and initialized with the standard set of authe...">svn_cmdline_create_auth_baton</a>(<a class="code" href="group__auth__fns.html#gaa77a422f326606f52366fb2fb0a43f8d" title="The type of a Subversion authentication object.">svn_auth_baton_t</a> **ab,
<a name="l00336"></a>00336                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> non_interactive,
<a name="l00337"></a>00337                               <span class="keyword">const</span> <span class="keywordtype">char</span> *username,
<a name="l00338"></a>00338                               <span class="keyword">const</span> <span class="keywordtype">char</span> *password,
<a name="l00339"></a>00339                               <span class="keyword">const</span> <span class="keywordtype">char</span> *config_dir,
<a name="l00340"></a>00340                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_auth_cache,
<a name="l00341"></a>00341                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> trust_server_cert,
<a name="l00342"></a>00342                               <a class="code" href="svn__config_8h.html#aab78e7d9b95c9bcfe0bdf1d9f3212596" title="Opaque structure describing a set of configuration options.">svn_config_t</a> *cfg,
<a name="l00343"></a>00343                               <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l00344"></a>00344                               <span class="keywordtype">void</span> *cancel_baton,
<a name="l00345"></a>00345                               apr_pool_t *pool);
<a name="l00346"></a>00346 <span class="comment"></span>
<a name="l00347"></a>00347 <span class="comment">/** Similar to svn_cmdline_create_auth_baton(), but with</span>
<a name="l00348"></a>00348 <span class="comment"> * @a trust_server_cert always set to false.</span>
<a name="l00349"></a>00349 <span class="comment"> *</span>
<a name="l00350"></a>00350 <span class="comment"> * @since New in 1.4.</span>
<a name="l00351"></a>00351 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l00352"></a>00352 <span class="comment"> * Use svn_cmdline_create_auth_baton() instead.</span>
<a name="l00353"></a>00353 <span class="comment"> *</span>
<a name="l00354"></a>00354 <span class="comment"> * @note This deprecation does not follow the usual pattern of putting</span>
<a name="l00355"></a>00355 <span class="comment"> * a new number on end of the function&#39;s name.  Instead, the new</span>
<a name="l00356"></a>00356 <span class="comment"> * function name is distinguished from the old by a grammatical</span>
<a name="l00357"></a>00357 <span class="comment"> * improvement: the verb &quot;create&quot; instead of the noun &quot;setup&quot;.</span>
<a name="l00358"></a>00358 <span class="comment"> */</span>
<a name="l00359"></a>00359 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00360"></a>00360 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00361"></a>00361 <a class="code" href="svn__cmdline_8h.html#a2916c3e2a2738121eab6b0bc420b3470" title="Similar to svn_cmdline_create_auth_baton(), but with trust_server_cert always set to false...">svn_cmdline_setup_auth_baton</a>(<a class="code" href="group__auth__fns.html#gaa77a422f326606f52366fb2fb0a43f8d" title="The type of a Subversion authentication object.">svn_auth_baton_t</a> **ab,
<a name="l00362"></a>00362                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> non_interactive,
<a name="l00363"></a>00363                              <span class="keyword">const</span> <span class="keywordtype">char</span> *username,
<a name="l00364"></a>00364                              <span class="keyword">const</span> <span class="keywordtype">char</span> *password,
<a name="l00365"></a>00365                              <span class="keyword">const</span> <span class="keywordtype">char</span> *config_dir,
<a name="l00366"></a>00366                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_auth_cache,
<a name="l00367"></a>00367                              <a class="code" href="svn__config_8h.html#aab78e7d9b95c9bcfe0bdf1d9f3212596" title="Opaque structure describing a set of configuration options.">svn_config_t</a> *cfg,
<a name="l00368"></a>00368                              <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l00369"></a>00369                              <span class="keywordtype">void</span> *cancel_baton,
<a name="l00370"></a>00370                              apr_pool_t *pool);
<a name="l00371"></a>00371 <span class="comment"></span>
<a name="l00372"></a>00372 <span class="comment">/** Wrapper for apr_getopt_init(), which see.</span>
<a name="l00373"></a>00373 <span class="comment"> *</span>
<a name="l00374"></a>00374 <span class="comment"> * @since New in 1.4.</span>
<a name="l00375"></a>00375 <span class="comment"> *</span>
<a name="l00376"></a>00376 <span class="comment"> * This is a private API for Subversion&#39;s own use.</span>
<a name="l00377"></a>00377 <span class="comment"> */</span>
<a name="l00378"></a>00378 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00379"></a>00379 <a class="code" href="svn__cmdline_8h.html#ad80da8be37b4f54830e8b845a1cbf54a" title="Wrapper for apr_getopt_init(), which see.">svn_cmdline__getopt_init</a>(apr_getopt_t **os,
<a name="l00380"></a>00380                          <span class="keywordtype">int</span> argc,
<a name="l00381"></a>00381                          <span class="keyword">const</span> <span class="keywordtype">char</span> *argv[],
<a name="l00382"></a>00382                          apr_pool_t *pool);
<a name="l00383"></a>00383 
<a name="l00384"></a>00384 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00385"></a>00385 <span class="preprocessor"></span>}
<a name="l00386"></a>00386 <span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span>
<a name="l00387"></a>00387 
<a name="l00388"></a>00388 <span class="preprocessor">#endif </span><span class="comment">/* SVN_CMDLINE_H */</span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Fri Dec 23 2011 09:20:36 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.5.1
</small></address>

</body>
</html>
