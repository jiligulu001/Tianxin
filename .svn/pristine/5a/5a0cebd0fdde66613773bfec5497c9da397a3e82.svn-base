<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Subversion: svn_fs.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">svn_fs.h File Reference</div>  </div>
</div>
<div class="contents">

<p>Interface to the Subversion filesystem.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;apr.h&gt;</code><br/>
<code>#include &lt;apr_pools.h&gt;</code><br/>
<code>#include &lt;apr_hash.h&gt;</code><br/>
<code>#include &lt;apr_tables.h&gt;</code><br/>
<code>#include &lt;apr_time.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="svn__types_8h_source.html">svn_types.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__string_8h_source.html">svn_string.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__delta_8h_source.html">svn_delta.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__io_8h_source.html">svn_io.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__mergeinfo_8h_source.html">svn_mergeinfo.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__checksum_8h_source.html">svn_checksum.h</a>&quot;</code><br/>
</div>
<p><a href="svn__fs_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__fs__path__change2__t.html">svn_fs_path_change2_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Change descriptor.  <a href="structsvn__fs__path__change2__t.html#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__fs__path__change__t.html">svn_fs_path_change_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="structsvn__fs__path__change2__t.html" title="Change descriptor.">svn_fs_path_change2_t</a>, but without kind and copyfrom information.  <a href="structsvn__fs__path__change__t.html#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__fs__dirent__t.html">svn_fs_dirent_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of a Subversion directory entry.  <a href="structsvn__fs__dirent__t.html#details">More...</a><br/></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__begin__txn2__flags.html#ga0df9366c31b46e85a489cee5b4bd255f">SVN_FS_TXN_CHECK_OOD</a>&#160;&#160;&#160;0x00001</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Do on-the-fly out-of-dateness checks.  <a href="group__svn__fs__begin__txn2__flags.html#ga0df9366c31b46e85a489cee5b4bd255f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__begin__txn2__flags.html#gadfec12e42f42d68094402529085827f5">SVN_FS_TXN_CHECK_LOCKS</a>&#160;&#160;&#160;0x00002</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Do on-the-fly lock checks.  <a href="group__svn__fs__begin__txn2__flags.html#gadfec12e42f42d68094402529085827f5"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Filesystem configuration options</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaab167e36e29a071fa657b15690153fd6"></a><!-- doxytag: member="svn_fs.h::SVN_FS_CONFIG_BDB_TXN_NOSYNC" ref="gaab167e36e29a071fa657b15690153fd6" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_FS_CONFIG_BDB_TXN_NOSYNC</b>&#160;&#160;&#160;&quot;bdb-txn-nosync&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga164c04ce6347133c7b3404c02237c885"></a><!-- doxytag: member="svn_fs.h::SVN_FS_CONFIG_BDB_LOG_AUTOREMOVE" ref="ga164c04ce6347133c7b3404c02237c885" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_FS_CONFIG_BDB_LOG_AUTOREMOVE</b>&#160;&#160;&#160;&quot;bdb-log-autoremove&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gabc9c69b38e7648f51d44c19d30264768">SVN_FS_CONFIG_FSFS_CACHE_DELTAS</a>&#160;&#160;&#160;&quot;fsfs-cache-deltas&quot;</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable / disable text delta caching for a FSFS repository.  <a href="group__fs__handling.html#gabc9c69b38e7648f51d44c19d30264768"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga5723e5da32aff3655370c74df55869ec">SVN_FS_CONFIG_FSFS_CACHE_FULLTEXTS</a>&#160;&#160;&#160;&quot;fsfs-cache-fulltexts&quot;</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable / disable full-text caching for a FSFS repository.  <a href="group__fs__handling.html#ga5723e5da32aff3655370c74df55869ec"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga8cce99342f8830d9541901fcbc5fa8b3">SVN_FS_CONFIG_FS_TYPE</a>&#160;&#160;&#160;&quot;fs-type&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga29b820d53571bccdf8f381652f584ab9">SVN_FS_TYPE_BDB</a>&#160;&#160;&#160;&quot;bdb&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gad9fcc8cddb1a0cd207b53196d88152d8">SVN_FS_TYPE_FSFS</a>&#160;&#160;&#160;&quot;fsfs&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gadc13f77df450863a919070b29b21c781">SVN_FS_CONFIG_PRE_1_4_COMPATIBLE</a>&#160;&#160;&#160;&quot;pre-1.4-compatible&quot;</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create repository format compatible with Subversion versions earlier than 1.4.  <a href="group__fs__handling.html#gadc13f77df450863a919070b29b21c781"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga1c752f75cbf1c1baa0e9162a69c3d726">SVN_FS_CONFIG_PRE_1_5_COMPATIBLE</a>&#160;&#160;&#160;&quot;pre-1.5-compatible&quot;</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create repository format compatible with Subversion versions earlier than 1.5.  <a href="group__fs__handling.html#ga1c752f75cbf1c1baa0e9162a69c3d726"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga3a32c49aff9bb931c07c6cca5f4f80c9">SVN_FS_CONFIG_PRE_1_6_COMPATIBLE</a>&#160;&#160;&#160;&quot;pre-1.6-compatible&quot;</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create repository format compatible with Subversion versions earlier than 1.6.  <a href="group__fs__handling.html#ga3a32c49aff9bb931c07c6cca5f4f80c9"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">An object representing a Subversion filesystem.  <a href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gafa2c790fffb1abbd103c954a5d983646">svn_fs_warning_callback_t</a> )(void *baton, <a class="el" href="structsvn__error__t.html">svn_error_t</a> *err)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of a warning callback function.  <a href="group__fs__handling.html#gafa2c790fffb1abbd103c954a5d983646"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__svn__fs__access__ctx.html#ga7fe2e31558e4e2e764fb33c0065704eb">svn_fs_access_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__access__ctx.html#ga7fe2e31558e4e2e764fb33c0065704eb">svn_fs_access_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">An opaque object representing temporary user data.  <a href="group__svn__fs__access__ctx.html#ga7fe2e31558e4e2e764fb33c0065704eb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106">svn_fs_id_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106">svn_fs_id_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">An object representing a node-revision id.  <a href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of a Subversion transaction object.  <a href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The Filesystem Root object.  <a href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef enum <br class="typebreak"/>
<a class="el" href="group__svn__fs__directories.html#ga4b9c73aaf4c6e441814391fe453809ed">svn_fs_path_change_kind_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__directories.html#gabdca583f50edff2cc547cdd38a2027a8">svn_fs_path_change_kind_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The kind of change that occurred on the path.  <a href="group__svn__fs__directories.html#gabdca583f50edff2cc547cdd38a2027a8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__fs__path__change2__t.html">svn_fs_path_change2_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__directories.html#ga50807b41848e447ca797063524d31389">svn_fs_path_change2_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Change descriptor.  <a href="group__svn__fs__directories.html#ga50807b41848e447ca797063524d31389"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structsvn__fs__path__change__t.html">svn_fs_path_change_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__directories.html#gafc7f95263f8edd2c4855e762983813b5">svn_fs_path_change_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="structsvn__fs__path__change2__t.html" title="Change descriptor.">svn_fs_path_change2_t</a>, but without kind and copyfrom information.  <a href="group__svn__fs__directories.html#gafc7f95263f8edd2c4855e762983813b5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__fs__handling.html#gaa31b679ed9ca7b53241ebda04c035140">svn_fs_history_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaa31b679ed9ca7b53241ebda04c035140">svn_fs_history_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">An opaque node history object.  <a href="group__fs__handling.html#gaa31b679ed9ca7b53241ebda04c035140"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structsvn__fs__dirent__t.html">svn_fs_dirent_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga2697d2b291384d9511aef9857daf8aa1">svn_fs_dirent_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of a Subversion directory entry.  <a href="group__fs__handling.html#ga2697d2b291384d9511aef9857daf8aa1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__locks.html#ga668d3961d6663956afaa1747353ce543">svn_fs_get_locks_callback_t</a> )(void *baton, <a class="el" href="structsvn__lock__t.html">svn_lock_t</a> *lock, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of a lock discovery callback function.  <a href="group__svn__fs__locks.html#ga668d3961d6663956afaa1747353ce543"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef enum <br class="typebreak"/>
<a class="el" href="group__fs__handling.html#ga7c9b681798a28beb90cb747c0626b5b2">svn_fs_pack_notify_action_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga32fc8b28e63f9f0e7cab74c8a44f819c">svn_fs_pack_notify_action_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The kind of action being taken by 'pack'.  <a href="group__fs__handling.html#ga32fc8b28e63f9f0e7cab74c8a44f819c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga418eae984b0da828404197edf9fcc46e">svn_fs_pack_notify_t</a> )(void *baton, apr_int64_t shard, <a class="el" href="group__fs__handling.html#ga7c9b681798a28beb90cb747c0626b5b2">svn_fs_pack_notify_action_t</a> action, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of a pack notification function.  <a href="group__fs__handling.html#ga418eae984b0da828404197edf9fcc46e"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__directories.html#ga4b9c73aaf4c6e441814391fe453809ed">svn_fs_path_change_kind_t</a> { <br/>
&#160;&#160;<a class="el" href="group__svn__fs__directories.html#gga4b9c73aaf4c6e441814391fe453809eda5baa73bf484f0555122529554786a9d9">svn_fs_path_change_modify</a> =  0, 
<br/>
&#160;&#160;<a class="el" href="group__svn__fs__directories.html#gga4b9c73aaf4c6e441814391fe453809eda05141754cb7a3e8ce0176d70438b1b2d">svn_fs_path_change_add</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__fs__directories.html#gga4b9c73aaf4c6e441814391fe453809eda88647e84de7d07f658e15503ccb85a08">svn_fs_path_change_delete</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__fs__directories.html#gga4b9c73aaf4c6e441814391fe453809eda61e2667079746d940d3049c276fb6bee">svn_fs_path_change_replace</a>, 
<br/>
&#160;&#160;<a class="el" href="group__svn__fs__directories.html#gga4b9c73aaf4c6e441814391fe453809eda84048643b283a014f3ec9c2ae382c477">svn_fs_path_change_reset</a>
<br/>
 }</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The kind of change that occurred on the path.  <a href="group__svn__fs__directories.html#ga4b9c73aaf4c6e441814391fe453809ed">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga7c9b681798a28beb90cb747c0626b5b2">svn_fs_pack_notify_action_t</a> { <br/>
&#160;&#160;<a class="el" href="group__fs__handling.html#gga7c9b681798a28beb90cb747c0626b5b2afba8e92df732aad1d260c907a671d974">svn_fs_pack_notify_start</a> =  0, 
<br/>
&#160;&#160;<a class="el" href="group__fs__handling.html#gga7c9b681798a28beb90cb747c0626b5b2a418f1ef1d170f644d49d055b4d4e244f">svn_fs_pack_notify_end</a>, 
<br/>
&#160;&#160;<a class="el" href="group__fs__handling.html#gga7c9b681798a28beb90cb747c0626b5b2a7e2b473fa5c9367b08a76f92f7e856fa">svn_fs_pack_notify_start_revprop</a>, 
<br/>
&#160;&#160;<a class="el" href="group__fs__handling.html#gga7c9b681798a28beb90cb747c0626b5b2a3d08320b848ebe9a3f5b6846e67cda2f">svn_fs_pack_notify_end_revprop</a>
<br/>
 }</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">The kind of action being taken by 'pack'.  <a href="group__fs__handling.html#ga7c9b681798a28beb90cb747c0626b5b2">More...</a><br/></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structsvn__version__t.html">svn_version_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__fs_8h.html#a4a163d8904518931349cb5df82a7e0b9">svn_fs_version</a> (void)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get libsvn_fs version information.  <a href="#a4a163d8904518931349cb5df82a7e0b9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaf3bce1e26521c4432f14f3adfc617f17">svn_fs_initialize</a> (apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Callers should invoke this function to initialize global state in the FS library before creating FS objects.  <a href="group__fs__handling.html#gaf3bce1e26521c4432f14f3adfc617f17"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gabc881c866ebe2cbd41767374264532e8">svn_fs_set_warning_func</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, <a class="el" href="group__fs__handling.html#gafa2c790fffb1abbd103c954a5d983646">svn_fs_warning_callback_t</a> warning, void *warning_baton)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Provide a callback function, <em>warning</em>, that <em>fs</em> should use to report (non-fatal) errors.  <a href="group__fs__handling.html#gabc881c866ebe2cbd41767374264532e8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga24b9cee11c6d584ddb0b9d74efca5dd5">svn_fs_create</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> **fs_p, const char *path, apr_hash_t *fs_config, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new, empty Subversion filesystem, stored in the directory <em>path</em>, and return a pointer to it in <em>*fs_p</em>.  <a href="group__fs__handling.html#ga24b9cee11c6d584ddb0b9d74efca5dd5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaf31aff19f6ddd70e665235ff1857fc35">svn_fs_open</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> **fs_p, const char *path, apr_hash_t *fs_config, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Open a Subversion filesystem located in the directory <em>path</em>, and return a pointer to it in <em>*fs_p</em>.  <a href="group__fs__handling.html#gaf31aff19f6ddd70e665235ff1857fc35"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga64cb2a37367de523f56b89e5ec603a73">svn_fs_upgrade</a> (const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Upgrade the Subversion filesystem located in the directory <em>path</em> to the latest version supported by this library.  <a href="group__fs__handling.html#ga64cb2a37367de523f56b89e5ec603a73"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gae771342c2800751277423c552cfeee48">svn_fs_type</a> (const char **fs_type, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return, in <em>*fs_type</em>, a string identifying the back-end type of the Subversion filesystem located in <em>path</em>.  <a href="group__fs__handling.html#gae771342c2800751277423c552cfeee48"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaa1a79172a1faa38b234d365240079c3a">svn_fs_path</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the path to <em>fs's</em> repository, allocated in <em>pool</em>.  <a href="group__fs__handling.html#gaa1a79172a1faa38b234d365240079c3a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga6d1642cd31bc5e860d521c8c80058058">svn_fs_delete_fs</a> (const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Delete the filesystem at <em>path</em>.  <a href="group__fs__handling.html#ga6d1642cd31bc5e860d521c8c80058058"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga2909d84e561fbfd8b0f321dbded129b6">svn_fs_hotcopy</a> (const char *src_path, const char *dest_path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> clean, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy a possibly live Subversion filesystem from <em>src_path</em> to <em>dest_path</em>.  <a href="group__fs__handling.html#ga2909d84e561fbfd8b0f321dbded129b6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaf6f1f42958e3f56326185b91fc1ae679">svn_fs_recover</a> (const char *path, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform any necessary non-catastrophic recovery on the Subversion filesystem located at <em>path</em>.  <a href="group__fs__handling.html#gaf6f1f42958e3f56326185b91fc1ae679"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__bdb.html#gac162b15e2e488c2f9b54b7c68111d21d">svn_fs_set_berkeley_errcall</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, void(*handler)(const char *errpfx, char *msg))</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Register an error handling function for Berkeley DB error messages.  <a href="group__svn__fs__bdb.html#gac162b15e2e488c2f9b54b7c68111d21d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__bdb.html#ga2cd4d9b732adea7d85fe7c89fe6b6c08">svn_fs_berkeley_logfiles</a> (apr_array_header_t **logfiles, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> only_unused, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*logfiles</em> to an array of <code>const char *</code> log file names of Berkeley DB-based Subversion filesystem.  <a href="group__svn__fs__bdb.html#ga2cd4d9b732adea7d85fe7c89fe6b6c08"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__bdb__deprecated.html#ga91410ca05330dcec53e8cc5ead76a2ab">svn_fs_new</a> (apr_hash_t *fs_config, apr_pool_t *pool)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__bdb__deprecated.html#ga5662639a436fd0c6136d59dfa17f3b07">svn_fs_create_berkeley</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char *path)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__bdb__deprecated.html#gaf07738ca9bd8d87d12fddd35cf5b855d">svn_fs_open_berkeley</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char *path)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__bdb__deprecated.html#gae1f913ff4684b5099b4e580398138587">svn_fs_berkeley_path</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, apr_pool_t *pool)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__bdb__deprecated.html#ga26918fdfd64ab135db07072f669e0efb">svn_fs_delete_berkeley</a> (const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__bdb__deprecated.html#ga6ccd355919e18f239af7d5678a2a2278">svn_fs_hotcopy_berkeley</a> (const char *src_path, const char *dest_path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> clean_logs, apr_pool_t *pool)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__bdb__deprecated.html#ga382100d2c235b30b5d510fdbe7ebb909">svn_fs_berkeley_recover</a> (const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__access__ctx.html#gad68ea73b8fc4275cb5aa90bfac0c2ea9">svn_fs_create_access</a> (<a class="el" href="group__svn__fs__access__ctx.html#ga7fe2e31558e4e2e764fb33c0065704eb">svn_fs_access_t</a> **access_ctx, const char *username, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*access_ctx</em> to a new <a class="el" href="group__svn__fs__access__ctx.html#ga7fe2e31558e4e2e764fb33c0065704eb" title="An opaque object representing temporary user data.">svn_fs_access_t</a> object representing <em>username</em>, allocated in <em>pool</em>.  <a href="group__svn__fs__access__ctx.html#gad68ea73b8fc4275cb5aa90bfac0c2ea9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__access__ctx.html#ga732f8df403c8043084f9dfa4ca6675c0">svn_fs_set_access</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, <a class="el" href="group__svn__fs__access__ctx.html#ga7fe2e31558e4e2e764fb33c0065704eb">svn_fs_access_t</a> *access_ctx)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Associate <em>access_ctx</em> with an open <em>fs</em>.  <a href="group__svn__fs__access__ctx.html#ga732f8df403c8043084f9dfa4ca6675c0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga93e27085473a77206da0e57e9867abe4"></a><!-- doxytag: member="svn_fs.h::svn_fs_get_access" ref="ga93e27085473a77206da0e57e9867abe4" args="(svn_fs_access_t **access_ctx, svn_fs_t *fs)" -->
<a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__access__ctx.html#ga93e27085473a77206da0e57e9867abe4">svn_fs_get_access</a> (<a class="el" href="group__svn__fs__access__ctx.html#ga7fe2e31558e4e2e764fb33c0065704eb">svn_fs_access_t</a> **access_ctx, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*access_ctx</em> to the current <em>fs</em> access context, or NULL if there is no current fs access context. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__access__ctx.html#ga6b22c06a0f3810547c65f9e205f09891">svn_fs_access_get_username</a> (const char **username, <a class="el" href="group__svn__fs__access__ctx.html#ga7fe2e31558e4e2e764fb33c0065704eb">svn_fs_access_t</a> *access_ctx)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Accessors for the access context:  <a href="group__svn__fs__access__ctx.html#ga6b22c06a0f3810547c65f9e205f09891"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__access__ctx.html#ga9ebb13d0c50a3a440177a2494eb8a000">svn_fs_access_add_lock_token2</a> (<a class="el" href="group__svn__fs__access__ctx.html#ga7fe2e31558e4e2e764fb33c0065704eb">svn_fs_access_t</a> *access_ctx, const char *path, const char *token)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Push a lock-token <em>token</em> associated with path <em>path</em> into the context <em>access_ctx</em>.  <a href="group__svn__fs__access__ctx.html#ga9ebb13d0c50a3a440177a2494eb8a000"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__access__ctx.html#ga44f7faba2c0d9791f0695d2e6ba36fb5">svn_fs_access_add_lock_token</a> (<a class="el" href="group__svn__fs__access__ctx.html#ga7fe2e31558e4e2e764fb33c0065704eb">svn_fs_access_t</a> *access_ctx, const char *token)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__svn__fs__access__ctx.html#ga9ebb13d0c50a3a440177a2494eb8a000" title="Push a lock-token token associated with path path into the context access_ctx.">svn_fs_access_add_lock_token2()</a>, but with <em>path</em> set to value 1.  <a href="group__svn__fs__access__ctx.html#ga44f7faba2c0d9791f0695d2e6ba36fb5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gac695bbee91343eb5e83b5ad7bc2c30c8"></a><!-- doxytag: member="svn_fs.h::svn_fs_compare_ids" ref="gac695bbee91343eb5e83b5ad7bc2c30c8" args="(const svn_fs_id_t *a, const svn_fs_id_t *b)" -->
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__nodes.html#gac695bbee91343eb5e83b5ad7bc2c30c8">svn_fs_compare_ids</a> (const <a class="el" href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106">svn_fs_id_t</a> *a, const <a class="el" href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106">svn_fs_id_t</a> *b)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return -1, 0, or 1 if node revisions <em>a</em> and <em>b</em> are respectively unrelated, equivalent, or otherwise related (part of the same node). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gadba31f228a5bafedf6d8af83ea4771e1"></a><!-- doxytag: member="svn_fs.h::svn_fs_check_related" ref="gadba31f228a5bafedf6d8af83ea4771e1" args="(const svn_fs_id_t *id1, const svn_fs_id_t *id2)" -->
<a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__nodes.html#gadba31f228a5bafedf6d8af83ea4771e1">svn_fs_check_related</a> (const <a class="el" href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106">svn_fs_id_t</a> *id1, const <a class="el" href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106">svn_fs_id_t</a> *id2)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return TRUE if node revisions <em>id1</em> and <em>id2</em> are related (part of the same node), else return FALSE. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106">svn_fs_id_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__nodes.html#ga56988c80b1c47770dffa22268adccaf4">svn_fs_parse_id</a> (const char *data, apr_size_t len, apr_pool_t *pool)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__string__t.html">svn_string_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__nodes.html#ga5b9eb73eb7a3c983a43b2e54abbb6314">svn_fs_unparse_id</a> (const <a class="el" href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106">svn_fs_id_t</a> *id, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a Subversion string containing the unparsed form of the node revision id <em>id</em>.  <a href="group__svn__fs__nodes.html#ga5b9eb73eb7a3c983a43b2e54abbb6314"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#ga2fa27aba3d45db58c8889beda852fed9">svn_fs_begin_txn2</a> (<a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> **txn_p, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> rev, apr_uint32_t flags, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Begin a new transaction on the filesystem <em>fs</em>, based on existing revision <em>rev</em>.  <a href="group__svn__fs__txns.html#ga2fa27aba3d45db58c8889beda852fed9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#ga5f3d23248081c14a10f72034bae82848">svn_fs_begin_txn</a> (<a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> **txn_p, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> rev, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__svn__fs__txns.html#ga2fa27aba3d45db58c8889beda852fed9" title="Begin a new transaction on the filesystem fs, based on existing revision rev.">svn_fs_begin_txn2()</a>, but with <em>flags</em> set to 0.  <a href="group__svn__fs__txns.html#ga5f3d23248081c14a10f72034bae82848"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#gae86163e9e3623168cee620446a40e755">svn_fs_commit_txn</a> (const char **conflict_p, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *new_rev, <a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> *txn, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Commit <em>txn</em>.  <a href="group__svn__fs__txns.html#gae86163e9e3623168cee620446a40e755"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#ga3854fdae3fed37d82514183b061f7c16">svn_fs_abort_txn</a> (<a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> *txn, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Abort the transaction <em>txn</em>.  <a href="group__svn__fs__txns.html#ga3854fdae3fed37d82514183b061f7c16"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#ga1b7d6f51cfbe7083fb11937c0abeaa28">svn_fs_purge_txn</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char *txn_id, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Cleanup the dead transaction in <em>fs</em> whose ID is <em>txn_id</em>.  <a href="group__svn__fs__txns.html#ga1b7d6f51cfbe7083fb11937c0abeaa28"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#ga023643006df41c54ac79376f3a6101ee">svn_fs_txn_name</a> (const char **name_p, <a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> *txn, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*name_p</em> to the name of the transaction <em>txn</em>, as a NULL-terminated string.  <a href="group__svn__fs__txns.html#ga023643006df41c54ac79376f3a6101ee"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#gaf10904f009ec2136304acf11017f67f2">svn_fs_txn_base_revision</a> (<a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> *txn)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return <em>txn's</em> base revision.  <a href="group__svn__fs__txns.html#gaf10904f009ec2136304acf11017f67f2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#ga18241d3755602b52f2ccd0c6c68118f1">svn_fs_open_txn</a> (<a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> **txn, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char *name, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Open the transaction named <em>name</em> in the filesystem <em>fs</em>.  <a href="group__svn__fs__txns.html#ga18241d3755602b52f2ccd0c6c68118f1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#gaa53bc028497b6468ae4cdb2347e8d8b0">svn_fs_list_transactions</a> (apr_array_header_t **names_p, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*names_p</em> to an array of <code>const char *</code> ids which are the names of all the currently active transactions in the filesystem <em>fs</em>.  <a href="group__svn__fs__txns.html#gaa53bc028497b6468ae4cdb2347e8d8b0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#gabced341c635f385b663af51fee1e289d">svn_fs_txn_prop</a> (<a class="el" href="structsvn__string__t.html">svn_string_t</a> **value_p, <a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> *txn, const char *propname, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*value_p</em> to the value of the property named <em>propname</em> on transaction <em>txn</em>.  <a href="group__svn__fs__txns.html#gabced341c635f385b663af51fee1e289d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#ga035aeb24035a350c6d5ec8a81a636994">svn_fs_txn_proplist</a> (apr_hash_t **table_p, <a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> *txn, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*table_p</em> to the entire property list of transaction <em>txn</em>, as an APR hash table allocated in <em>pool</em>.  <a href="group__svn__fs__txns.html#ga035aeb24035a350c6d5ec8a81a636994"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#ga2e9673e36aec896dae01a6c31787bcd6">svn_fs_change_txn_prop</a> (<a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> *txn, const char *name, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *value, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Change a transactions <em>txn's</em> property's value, or add/delete a property.  <a href="group__svn__fs__txns.html#ga2e9673e36aec896dae01a6c31787bcd6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__txns.html#ga94c4ed3c69ab18927f1ff2bac8965ad3">svn_fs_change_txn_props</a> (<a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> *txn, const apr_array_header_t *props, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Change, add, and/or delete transaction property values in transaction <em>txn</em>.  <a href="group__svn__fs__txns.html#ga94c4ed3c69ab18927f1ff2bac8965ad3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__roots.html#gadee7737a4690e802c3ffda2318e07b8d">svn_fs_revision_root</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> **root_p, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> rev, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*root_p</em> to the root directory of revision <em>rev</em> in filesystem <em>fs</em>.  <a href="group__svn__fs__roots.html#gadee7737a4690e802c3ffda2318e07b8d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__roots.html#gaa7420b1ecb9c73f62cbb0d5f22963cdf">svn_fs_txn_root</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> **root_p, <a class="el" href="group__svn__fs__txns.html#gae0ac340327051a48262d7442b5a3a873">svn_fs_txn_t</a> *txn, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*root_p</em> to the root directory of <em>txn</em>.  <a href="group__svn__fs__roots.html#gaa7420b1ecb9c73f62cbb0d5f22963cdf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga06ab96148b78d0883601545114f8b391"></a><!-- doxytag: member="svn_fs.h::svn_fs_close_root" ref="ga06ab96148b78d0883601545114f8b391" args="(svn_fs_root_t *root)" -->
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__roots.html#ga06ab96148b78d0883601545114f8b391">svn_fs_close_root</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Free the root directory <em>root</em>; this only needs to be used if you want to free the memory associated with <em>root</em> earlier than the time you destroy the pool passed to the function that created it (<a class="el" href="group__svn__fs__roots.html#gadee7737a4690e802c3ffda2318e07b8d" title="Set *root_p to the root directory of revision rev in filesystem fs.">svn_fs_revision_root()</a> or <a class="el" href="group__svn__fs__roots.html#gaa7420b1ecb9c73f62cbb0d5f22963cdf" title="Set *root_p to the root directory of txn.">svn_fs_txn_root()</a>). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__roots.html#ga18b5e4092f5ee518fd4ad1d877b326d7">svn_fs_root_fs</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the filesystem to which <em>root</em> belongs.  <a href="group__svn__fs__roots.html#ga18b5e4092f5ee518fd4ad1d877b326d7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__roots.html#ga9c8402805c28e8fb5292281a766e6621">svn_fs_is_txn_root</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return <code>TRUE</code> iff <em>root</em> is a transaction root.  <a href="group__svn__fs__roots.html#ga9c8402805c28e8fb5292281a766e6621"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__roots.html#ga19748deb69ab1f1c401956c861fb7805">svn_fs_is_revision_root</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return <code>TRUE</code> iff <em>root</em> is a revision root.  <a href="group__svn__fs__roots.html#ga19748deb69ab1f1c401956c861fb7805"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga3e3b115b2aac374e1336d5ef872762d6"></a><!-- doxytag: member="svn_fs.h::svn_fs_txn_root_name" ref="ga3e3b115b2aac374e1336d5ef872762d6" args="(svn_fs_root_t *root, apr_pool_t *pool)" -->
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__roots.html#ga3e3b115b2aac374e1336d5ef872762d6">svn_fs_txn_root_name</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>root</em> is the root of a transaction, return the name of the transaction, allocated in <em>pool</em>; otherwise, return NULL. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__roots.html#ga2cbdbde20a6bb0ef6b3ad02e5e1561c6">svn_fs_txn_root_base_revision</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>root</em> is the root of a transaction, return the number of the revision on which is was based when created.  <a href="group__svn__fs__roots.html#ga2cbdbde20a6bb0ef6b3ad02e5e1561c6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__roots.html#ga4843220a9b552950f98862a8539bfc83">svn_fs_revision_root_revision</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>root</em> is the root of a revision, return the revision number.  <a href="group__svn__fs__roots.html#ga4843220a9b552950f98862a8539bfc83"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__fs__path__change2__t.html">svn_fs_path_change2_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__directories.html#ga1875b951703c3e0e418a0e4d9a8a4c8d">svn_fs_path_change2_create</a> (const <a class="el" href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106">svn_fs_id_t</a> *node_rev_id, <a class="el" href="group__svn__fs__directories.html#ga4b9c73aaf4c6e441814391fe453809ed">svn_fs_path_change_kind_t</a> change_kind, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate an <a class="el" href="structsvn__fs__path__change2__t.html" title="Change descriptor.">svn_fs_path_change2_t</a> structure in <em>pool</em>, initialize and return it.  <a href="group__svn__fs__directories.html#ga1875b951703c3e0e418a0e4d9a8a4c8d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__directories.html#ga4f4dac990ffee5f8b29a658f1c88f7d9">svn_fs_paths_changed2</a> (apr_hash_t **changed_paths2_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine what has changed under a <em>root</em>.  <a href="group__svn__fs__directories.html#ga4f4dac990ffee5f8b29a658f1c88f7d9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__directories.html#ga41ca833e67c5cbabfc0fa9ad9a69c60c">svn_fs_paths_changed</a> (apr_hash_t **changed_paths_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__svn__fs__directories.html#ga4f4dac990ffee5f8b29a658f1c88f7d9" title="Determine what has changed under a root.">svn_fs_paths_changed2()</a>, only with <a class="el" href="structsvn__fs__path__change__t.html" title="Similar to svn_fs_path_change2_t, but without kind and copyfrom information.">svn_fs_path_change_t</a> * values in the hash (and thus no kind or copyfrom data).  <a href="group__svn__fs__directories.html#ga41ca833e67c5cbabfc0fa9ad9a69c60c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga8795c6c2a696353b550c2f733787a015">svn_fs_check_path</a> (<a class="el" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a">svn_node_kind_t</a> *kind_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*kind_p</em> to the type of node present at <em>path</em> under <em>root</em>.  <a href="group__fs__handling.html#ga8795c6c2a696353b550c2f733787a015"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga2412ddc868b0ef6cdbbe3b682827885e">svn_fs_node_history</a> (<a class="el" href="group__fs__handling.html#gaa31b679ed9ca7b53241ebda04c035140">svn_fs_history_t</a> **history_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*history_p</em> to an opaque node history object which represents <em>path</em> under <em>root</em>.  <a href="group__fs__handling.html#ga2412ddc868b0ef6cdbbe3b682827885e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga58dd5d7dc74bef946a4dc1129c342038">svn_fs_history_prev</a> (<a class="el" href="group__fs__handling.html#gaa31b679ed9ca7b53241ebda04c035140">svn_fs_history_t</a> **prev_history_p, <a class="el" href="group__fs__handling.html#gaa31b679ed9ca7b53241ebda04c035140">svn_fs_history_t</a> *history, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> cross_copies, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*prev_history_p</em> to an opaque node history object which represents the previous (or "next oldest") interesting history location for the filesystem node represented by <em>history</em>, or <code>NULL</code> if no such previous history exists.  <a href="group__fs__handling.html#ga58dd5d7dc74bef946a4dc1129c342038"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga266d0597466eb198dc4b593fcd44490e">svn_fs_history_location</a> (const char **path, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *revision, <a class="el" href="group__fs__handling.html#gaa31b679ed9ca7b53241ebda04c035140">svn_fs_history_t</a> *history, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*path</em> and <em>*revision</em> to the path and revision, respectively, of the <em>history</em> object.  <a href="group__fs__handling.html#ga266d0597466eb198dc4b593fcd44490e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga1a5ecfab7f53876e9ad6def4265df7e6">svn_fs_is_dir</a> (<a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *is_dir, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*is_dir</em> to <code>TRUE</code> iff <em>path</em> in <em>root</em> is a directory.  <a href="group__fs__handling.html#ga1a5ecfab7f53876e9ad6def4265df7e6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga84b9e2f502354e16162edd12e8f5cc5b">svn_fs_is_file</a> (<a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *is_file, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*is_file</em> to <code>TRUE</code> iff <em>path</em> in <em>root</em> is a file.  <a href="group__fs__handling.html#ga84b9e2f502354e16162edd12e8f5cc5b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaf59a66cf510e6da06dadfe2b3bb372e1">svn_fs_node_id</a> (const <a class="el" href="group__svn__fs__nodes.html#gaeca8f1c373c50ca7bb08e3417242b106">svn_fs_id_t</a> **id_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the id of a node.  <a href="group__fs__handling.html#gaf59a66cf510e6da06dadfe2b3bb372e1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gad3be25cd08e898319e14cce69580992e">svn_fs_node_created_rev</a> (<a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *revision, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*revision</em> to the revision in which <em>path</em> under <em>root</em> was created.  <a href="group__fs__handling.html#gad3be25cd08e898319e14cce69580992e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaf26ebca946019f3761f48ad8dadd6eaa">svn_fs_node_origin_rev</a> (<a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *revision, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*revision</em> to the revision in which the line of history represented by <em>path</em> under <em>root</em> originated.  <a href="group__fs__handling.html#gaf26ebca946019f3761f48ad8dadd6eaa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaf25b3de3d8930d857cf6c94777ce9bca">svn_fs_node_created_path</a> (const char **created_path, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*created_path</em> to the path at which <em>path</em> under <em>root</em> was created.  <a href="group__fs__handling.html#gaf25b3de3d8930d857cf6c94777ce9bca"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga830b554597da876e1b6256f2836cf349">svn_fs_node_prop</a> (<a class="el" href="structsvn__string__t.html">svn_string_t</a> **value_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, const char *propname, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*value_p</em> to the value of the property named <em>propname</em> of <em>path</em> in <em>root</em>.  <a href="group__fs__handling.html#ga830b554597da876e1b6256f2836cf349"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga079534da68d59ac24307ae171189dd61">svn_fs_node_proplist</a> (apr_hash_t **table_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*table_p</em> to the entire property list of <em>path</em> in <em>root</em>, as an APR hash table allocated in <em>pool</em>.  <a href="group__fs__handling.html#ga079534da68d59ac24307ae171189dd61"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga75ce7073e254911b82f9acc4825d4247">svn_fs_change_node_prop</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, const char *name, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *value, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Change a node's property's value, or add/delete a property.  <a href="group__fs__handling.html#ga75ce7073e254911b82f9acc4825d4247"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaac7c1a6f4732d24a8ee387abb33e33dc">svn_fs_props_changed</a> (<a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *changed_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root1, const char *path1, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root2, const char *path2, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine if the properties of two path/root combinations are different.  <a href="group__fs__handling.html#gaac7c1a6f4732d24a8ee387abb33e33dc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaed6116279287a80ec4f7de380a732f45">svn_fs_copied_from</a> (<a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *rev_p, const char **path_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Discover a node's copy ancestry, if any.  <a href="group__fs__handling.html#gaed6116279287a80ec4f7de380a732f45"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga9d7839028ca775d36c6fdc851973f9ac">svn_fs_closest_copy</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> **root_p, const char **path_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*root_p</em> and <em>*path_p</em> to the revision root and path of the destination of the most recent copy event that caused <em>path</em> to exist where it does in <em>root</em>, or to NULL if no such copy exists.  <a href="group__fs__handling.html#ga9d7839028ca775d36c6fdc851973f9ac"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga2976ec837ee7caa7771e61ed266933b5">svn_fs_get_mergeinfo</a> (svn_mergeinfo_catalog_t *catalog, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const apr_array_header_t *paths, <a class="el" href="svn__mergeinfo_8h.html#acd81e9d0f5bcc4eec4df7b8a140f435c">svn_mergeinfo_inheritance_t</a> inherit, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> include_descendants, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve mergeinfo for multiple nodes.  <a href="group__fs__handling.html#ga2976ec837ee7caa7771e61ed266933b5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gafc5df16564312635dc97077a29e73d8e">svn_fs_merge</a> (const char **conflict_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *source_root, const char *source_path, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *target_root, const char *target_path, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *ancestor_root, const char *ancestor_path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Merge changes between two nodes into a third node.  <a href="group__fs__handling.html#gafc5df16564312635dc97077a29e73d8e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gad254aea2a12fbd7c8c62c8aaa3c4624c">svn_fs_dir_entries</a> (apr_hash_t **entries_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*entries_p</em> to a newly allocated APR hash table containing the entries of the directory at <em>path</em> in <em>root</em>.  <a href="group__fs__handling.html#gad254aea2a12fbd7c8c62c8aaa3c4624c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga8484e37e57a52bb38e5067c38bf41e16">svn_fs_make_dir</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new directory named <em>path</em> in <em>root</em>.  <a href="group__fs__handling.html#ga8484e37e57a52bb38e5067c38bf41e16"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga528e3cf9010e463b511584f4143b6a72">svn_fs_delete</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Delete the node named <em>path</em> in <em>root</em>.  <a href="group__fs__handling.html#ga528e3cf9010e463b511584f4143b6a72"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga9da8e22bd1058f877a275099699bb86b">svn_fs_copy</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *from_root, const char *from_path, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *to_root, const char *to_path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a copy of <em>from_path</em> in <em>from_root</em> named <em>to_path</em> in <em>to_root</em>.  <a href="group__fs__handling.html#ga9da8e22bd1058f877a275099699bb86b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaddd7ec5b6e3306c609e46d4f5a2b8a5c">svn_fs_revision_link</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *from_root, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *to_root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Like <a class="el" href="group__fs__handling.html#ga9da8e22bd1058f877a275099699bb86b" title="Create a copy of from_path in from_root named to_path in to_root.">svn_fs_copy()</a>, but doesn't record copy history, and preserves the PATH.  <a href="group__fs__handling.html#gaddd7ec5b6e3306c609e46d4f5a2b8a5c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gabd675ec4bc28c7f4e72a121feeb60059">svn_fs_file_length</a> (<a class="el" href="svn__types_8h.html#a726e581898461c1d3e7dbdb16d99dad0">svn_filesize_t</a> *length_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*length_p</em> to the length of the file <em>path</em> in <em>root</em>, in bytes.  <a href="group__fs__handling.html#gabd675ec4bc28c7f4e72a121feeb60059"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga3a35bf47dcd1d43fdf7572166eb0eeb4">svn_fs_file_checksum</a> (<a class="el" href="structsvn__checksum__t.html">svn_checksum_t</a> **checksum, <a class="el" href="svn__checksum_8h.html#a7a6c373d03d7e6ec6b832a039f5e0aa1">svn_checksum_kind_t</a> kind, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> force, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*checksum</em> to the checksum of type <em>kind</em> for the file <em>path</em>.  <a href="group__fs__handling.html#ga3a35bf47dcd1d43fdf7572166eb0eeb4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga9dfe5ed9f63bb8b222d2adb2b96f0220">svn_fs_file_md5_checksum</a> (unsigned char digest[], <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__fs__handling.html#ga3a35bf47dcd1d43fdf7572166eb0eeb4" title="Set *checksum to the checksum of type kind for the file path.">svn_fs_file_checksum()</a>, only always put the MD5 checksum of file <em>path</em> into <em>digest</em>, which should point to <code>APR_MD5_DIGESTSIZE</code> bytes of storage.  <a href="group__fs__handling.html#ga9dfe5ed9f63bb8b222d2adb2b96f0220"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gafe8eadb1c6950e3bfdca49bbb497d6fb">svn_fs_file_contents</a> (<a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **contents, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*contents</em> to a readable generic stream that will yield the contents of the file <em>path</em> in <em>root</em>.  <a href="group__fs__handling.html#gafe8eadb1c6950e3bfdca49bbb497d6fb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gac760753f1ae74fc19991d5dab7cb643c">svn_fs_make_file</a> (<a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new file named <em>path</em> in <em>root</em>.  <a href="group__fs__handling.html#gac760753f1ae74fc19991d5dab7cb643c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga8ae7391b579009b76e238fe9ef5b8053">svn_fs_apply_textdelta</a> (<a class="el" href="group__svn__delta__txt__delta.html#ga1c0d461a3f244928d7f0339c1cbe3219">svn_txdelta_window_handler_t</a> *contents_p, void **contents_baton_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, const char *base_checksum, const char *result_checksum, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply a text delta to the file <em>path</em> in <em>root</em>.  <a href="group__fs__handling.html#ga8ae7391b579009b76e238fe9ef5b8053"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga61f5a039a4ad8818de163578b9c054f7">svn_fs_apply_text</a> (<a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **contents_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root, const char *path, const char *result_checksum, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Write data directly to the file <em>path</em> in <em>root</em>.  <a href="group__fs__handling.html#ga61f5a039a4ad8818de163578b9c054f7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gaede66ee7850d389bcdeb5ddef1540fdc">svn_fs_contents_changed</a> (<a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *changed_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root1, const char *path1, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *root2, const char *path2, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the contents of two root/path combos have changed.  <a href="group__fs__handling.html#gaede66ee7850d389bcdeb5ddef1540fdc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga4af11f84095941c21fad6e22f62dd31d">svn_fs_youngest_rev</a> (<a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *youngest_p, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*youngest_p</em> to the number of the youngest revision in filesystem <em>fs</em>.  <a href="group__fs__handling.html#ga4af11f84095941c21fad6e22f62dd31d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga3f29dd4915629fc66ea1af713b659ce5">svn_fs_deltify_revision</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> revision, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Provide filesystem <em>fs</em> the opportunity to compress storage relating to associated with <em>revision</em> in filesystem <em>fs</em>.  <a href="group__fs__handling.html#ga3f29dd4915629fc66ea1af713b659ce5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga0cd6959ee54cd16768477d608fd33c34">svn_fs_revision_prop</a> (<a class="el" href="structsvn__string__t.html">svn_string_t</a> **value_p, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> rev, const char *propname, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*value_p</em> to the value of the property named <em>propname</em> on revision <em>rev</em> in the filesystem <em>fs</em>.  <a href="group__fs__handling.html#ga0cd6959ee54cd16768477d608fd33c34"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga423da8c30eacc9787ec7bc3dd1b9e351">svn_fs_revision_proplist</a> (apr_hash_t **table_p, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> rev, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*table_p</em> to the entire property list of revision <em>rev</em> in filesystem <em>fs</em>, as an APR hash table allocated in <em>pool</em>.  <a href="group__fs__handling.html#ga423da8c30eacc9787ec7bc3dd1b9e351"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga42e1c39fc4980da8c2f2f575fa7515ac">svn_fs_change_rev_prop2</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> rev, const char *name, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *const *old_value_p, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *value, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Change a revision's property's value, or add/delete a property.  <a href="group__fs__handling.html#ga42e1c39fc4980da8c2f2f575fa7515ac"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gab368d97a4f5093e8c71f8082f4664937">svn_fs_change_rev_prop</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> rev, const char *name, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *value, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__fs__handling.html#ga42e1c39fc4980da8c2f2f575fa7515ac" title="Change a revision&#39;s property&#39;s value, or add/delete a property.">svn_fs_change_rev_prop2()</a>, but with <em>old_value_p</em> passed as <code>NULL</code>.  <a href="group__fs__handling.html#gab368d97a4f5093e8c71f8082f4664937"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gad2d4b1fa18c0bbda6719d4414b52f4c2">svn_fs_get_file_delta_stream</a> (<a class="el" href="group__svn__delta__txt__delta.html#gaf599af000e3c3b976c17fd4e101ff7cf">svn_txdelta_stream_t</a> **stream_p, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *source_root, const char *source_path, <a class="el" href="group__svn__fs__roots.html#gaa0616aebbe57398ec86bcb8a432248cd">svn_fs_root_t</a> *target_root, const char *target_path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*stream_p</em> to a pointer to a delta stream that will turn the contents of the file <em>source</em> into the contents of the file <em>target</em>.  <a href="group__fs__handling.html#gad2d4b1fa18c0bbda6719d4414b52f4c2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga2ce6bd7610fc7201f4ea6b4e20e49e67">svn_fs_get_uuid</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char **uuid, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Populate <em>*uuid</em> with the UUID associated with <em>fs</em>.  <a href="group__fs__handling.html#ga2ce6bd7610fc7201f4ea6b4e20e49e67"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#gabec2453f61fb9356db9526d4c56f3a62">svn_fs_set_uuid</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char *uuid, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">If not <code>NULL</code>, associate <em>*uuid</em> with <em>fs</em>.  <a href="group__fs__handling.html#gabec2453f61fb9356db9526d4c56f3a62"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__locks.html#gae552c755f0b7d2f390f3ccf844e8ad37">svn_fs_lock</a> (<a class="el" href="structsvn__lock__t.html">svn_lock_t</a> **lock, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char *path, const char *token, const char *comment, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> is_dav_comment, apr_time_t expiration_date, <a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> current_rev, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> steal_lock, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">A lock represents one user's exclusive right to modify a path in a filesystem.  <a href="group__svn__fs__locks.html#gae552c755f0b7d2f390f3ccf844e8ad37"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__locks.html#ga2caf8e8ad52cf830d17626f7805bc42e">svn_fs_generate_lock_token</a> (const char **token, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate a unique lock-token using <em>fs</em>.  <a href="group__svn__fs__locks.html#ga2caf8e8ad52cf830d17626f7805bc42e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__locks.html#ga07bff914fc145098d02d354608abfbc8">svn_fs_unlock</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char *path, const char *token, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> break_lock, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove the lock on <em>path</em> represented by <em>token</em> in <em>fs</em>.  <a href="group__svn__fs__locks.html#ga07bff914fc145098d02d354608abfbc8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__locks.html#ga1f4e9e1f28d46d6a23a1e12e7877ebc9">svn_fs_get_lock</a> (<a class="el" href="structsvn__lock__t.html">svn_lock_t</a> **lock, <a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char *path, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>path</em> is locked in <em>fs</em>, set <em>*lock</em> to an <a class="el" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> which represents the lock, allocated in <em>pool</em>.  <a href="group__svn__fs__locks.html#ga1f4e9e1f28d46d6a23a1e12e7877ebc9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__locks.html#ga3ee19c1699b8244ef2e56e1d78241e63">svn_fs_get_locks2</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char *path, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="group__svn__fs__locks.html#ga668d3961d6663956afaa1747353ce543">svn_fs_get_locks_callback_t</a> get_locks_func, void *get_locks_baton, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Report locks on or below <em>path</em> in <em>fs</em> using the <em>get_locks_func</em> / <em>get_locks_baton</em>.  <a href="group__svn__fs__locks.html#ga3ee19c1699b8244ef2e56e1d78241e63"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__fs__locks.html#ga5c0fdad9e95f6d0c1f4deb711d860e01">svn_fs_get_locks</a> (<a class="el" href="group__fs__handling.html#ga2419fff1bb2c1e523b00e276ed3862e3">svn_fs_t</a> *fs, const char *path, <a class="el" href="group__svn__fs__locks.html#ga668d3961d6663956afaa1747353ce543">svn_fs_get_locks_callback_t</a> get_locks_func, void *get_locks_baton, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__fs__locks.html#ga3ee19c1699b8244ef2e56e1d78241e63" title="Report locks on or below path in fs using the get_locks_func / get_locks_baton.">svn_fs_get_locks2()</a>, but with <em>depth</em> always passed as svn_depth_infinity, and with the following known problem (which is not present in <a class="el" href="group__svn__fs__locks.html#ga3ee19c1699b8244ef2e56e1d78241e63" title="Report locks on or below path in fs using the get_locks_func / get_locks_baton.">svn_fs_get_locks2()</a>):  <a href="group__svn__fs__locks.html#ga5c0fdad9e95f6d0c1f4deb711d860e01"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga26cf98c986a0f71fe9d86be0f73266b6">svn_fs_print_modules</a> (<a class="el" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> *output, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Append a textual list of all available FS modules to the stringbuf <em>output</em>.  <a href="group__fs__handling.html#ga26cf98c986a0f71fe9d86be0f73266b6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__fs__handling.html#ga307aa2f60e82d9f78d7f7990991533c3">svn_fs_pack</a> (const char *db_path, <a class="el" href="group__fs__handling.html#ga418eae984b0da828404197edf9fcc46e">svn_fs_pack_notify_t</a> notify_func, void *notify_baton, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Possibly update the filesystem located in the directory <em>path</em> to use disk space more efficiently.  <a href="group__fs__handling.html#ga307aa2f60e82d9f78d7f7990991533c3"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Interface to the Subversion filesystem. </p>

<p>Definition in file <a class="el" href="svn__fs_8h_source.html">svn_fs.h</a>.</p>
</div><hr/><h2>Function Documentation</h2>
<a class="anchor" id="a4a163d8904518931349cb5df82a7e0b9"></a><!-- doxytag: member="svn_fs.h::svn_fs_version" ref="a4a163d8904518931349cb5df82a7e0b9" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structsvn__version__t.html">svn_version_t</a>* svn_fs_version </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get libsvn_fs version information. </p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.1. </dd></dl>

</div>
</div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Fri Dec 23 2011 09:20:39 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.5.1
</small></address>

</body>
</html>
