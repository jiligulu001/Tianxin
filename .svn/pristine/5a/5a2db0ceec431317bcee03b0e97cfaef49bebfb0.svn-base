<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: svn_auth.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_c37f7789c49aa9e5999234152b1ef6ed.html">subversion</a></li><li class="navelem"><a class="el" href="dir_334478eea8dba5ae935f94af9469978f.html">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">svn_auth.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Subversion's authentication system.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;apr.h&gt;</code><br/>
<code>#include &lt;apr_pools.h&gt;</code><br/>
<code>#include &lt;apr_hash.h&gt;</code><br/>
<code>#include &lt;apr_tables.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="svn__types_8h_source.html">svn_types.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__config_8h_source.html">svn_config.h</a>&quot;</code><br/>
</div>
<p><a href="svn__auth_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__auth__provider__t.html">svn_auth_provider_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The main authentication "provider" vtable.  <a href="structsvn__auth__provider__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A provider object, ready to be put into an array and given to <a class="el" href="group__auth__fns.html#ga1b7fd1fcbdecb6511383d79d5e38fbeb" title="Initialize an authentication system. ">svn_auth_open()</a>.  <a href="structsvn__auth__provider__object__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__auth__cred__simple__t.html">svn_auth_cred_simple_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>SVN_AUTH_CRED_SIMPLE</code> credentials.  <a href="structsvn__auth__cred__simple__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__auth__cred__username__t.html">svn_auth_cred_username_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>SVN_AUTH_CRED_USERNAME</code> credentials.  <a href="structsvn__auth__cred__username__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html">svn_auth_cred_ssl_client_cert_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>SVN_AUTH_CRED_SSL_CLIENT_CERT</code> credentials.  <a href="structsvn__auth__cred__ssl__client__cert__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html">svn_auth_cred_ssl_client_cert_pw_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>SVN_AUTH_CRED_SSL_CLIENT_CERT_PW</code> credentials.  <a href="structsvn__auth__cred__ssl__client__cert__pw__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__auth__ssl__server__cert__info__t.html">svn_auth_ssl_server_cert_info_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">SSL server certificate information used by <code>SVN_AUTH_CRED_SSL_SERVER_TRUST</code> providers.  <a href="structsvn__auth__ssl__server__cert__info__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html">svn_auth_cred_ssl_server_trust_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>SVN_AUTH_CRED_SSL_SERVER_TRUST</code> credentials.  <a href="structsvn__auth__cred__ssl__server__trust__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga32d8f21dd9e0e36dca43bd5961d95ec1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga32d8f21dd9e0e36dca43bd5961d95ec1">SVN_AUTH_CRED_SIMPLE</a>&#160;&#160;&#160;&quot;svn.simple&quot;</td></tr>
<tr class="memdesc:ga32d8f21dd9e0e36dca43bd5961d95ec1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specific types of credentials.  <a href="group__auth__fns.html#ga32d8f21dd9e0e36dca43bd5961d95ec1">More...</a><br/></td></tr>
<tr class="separator:ga32d8f21dd9e0e36dca43bd5961d95ec1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga12378bbc34a66b2acc68e9cad5e8354e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga12378bbc34a66b2acc68e9cad5e8354e">SVN_AUTH_CRED_USERNAME</a>&#160;&#160;&#160;&quot;svn.username&quot;</td></tr>
<tr class="memdesc:ga12378bbc34a66b2acc68e9cad5e8354e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Username credential kind.  <a href="group__auth__fns.html#ga12378bbc34a66b2acc68e9cad5e8354e">More...</a><br/></td></tr>
<tr class="separator:ga12378bbc34a66b2acc68e9cad5e8354e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf9f622d1575beede8fe83ae220865cc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gabf9f622d1575beede8fe83ae220865cc">SVN_AUTH_CRED_SSL_CLIENT_CERT</a>&#160;&#160;&#160;&quot;svn.ssl.client-cert&quot;</td></tr>
<tr class="memdesc:gabf9f622d1575beede8fe83ae220865cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">SSL client certificate credential type.  <a href="group__auth__fns.html#gabf9f622d1575beede8fe83ae220865cc">More...</a><br/></td></tr>
<tr class="separator:gabf9f622d1575beede8fe83ae220865cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6b0c78d76560ac103bb431026d2c80ba"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga6b0c78d76560ac103bb431026d2c80ba">SVN_AUTH_CRED_SSL_CLIENT_CERT_PW</a>&#160;&#160;&#160;&quot;svn.ssl.client-passphrase&quot;</td></tr>
<tr class="memdesc:ga6b0c78d76560ac103bb431026d2c80ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">SSL client certificate passphrase credential type.  <a href="group__auth__fns.html#ga6b0c78d76560ac103bb431026d2c80ba">More...</a><br/></td></tr>
<tr class="separator:ga6b0c78d76560ac103bb431026d2c80ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga86bda1cf1af50c7ac5d65cda286686e2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga86bda1cf1af50c7ac5d65cda286686e2">SVN_AUTH_CRED_SSL_SERVER_TRUST</a>&#160;&#160;&#160;&quot;svn.ssl.server&quot;</td></tr>
<tr class="memdesc:ga86bda1cf1af50c7ac5d65cda286686e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">SSL server verification credential type.  <a href="group__auth__fns.html#ga86bda1cf1af50c7ac5d65cda286686e2">More...</a><br/></td></tr>
<tr class="separator:ga86bda1cf1af50c7ac5d65cda286686e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d89f869ad547640121d4dd48beb1d1b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga6d89f869ad547640121d4dd48beb1d1b">SVN_AUTH_PARAM_PREFIX</a>&#160;&#160;&#160;&quot;svn:auth:&quot;</td></tr>
<tr class="memdesc:ga6d89f869ad547640121d4dd48beb1d1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Universal run-time parameters, made available to all providers.  <a href="group__auth__fns.html#ga6d89f869ad547640121d4dd48beb1d1b">More...</a><br/></td></tr>
<tr class="separator:ga6d89f869ad547640121d4dd48beb1d1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac66c329d52a1a0ad4c65a0c8fd0f8324"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gac66c329d52a1a0ad4c65a0c8fd0f8324">SVN_AUTH_PARAM_NON_INTERACTIVE</a>&#160;&#160;&#160;<a class="el" href="group__auth__fns.html#ga6d89f869ad547640121d4dd48beb1d1b">SVN_AUTH_PARAM_PREFIX</a> &quot;non-interactive&quot;</td></tr>
<tr class="memdesc:gac66c329d52a1a0ad4c65a0c8fd0f8324"><td class="mdescLeft">&#160;</td><td class="mdescRight">The application doesn't want any providers to prompt users.  <a href="group__auth__fns.html#gac66c329d52a1a0ad4c65a0c8fd0f8324">More...</a><br/></td></tr>
<tr class="separator:gac66c329d52a1a0ad4c65a0c8fd0f8324"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac88743299a96916291545a7ab08f62b1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gac88743299a96916291545a7ab08f62b1">SVN_AUTH_PARAM_DONT_STORE_PASSWORDS</a></td></tr>
<tr class="memdesc:gac88743299a96916291545a7ab08f62b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">The application doesn't want any providers to save passwords to disk.  <a href="group__auth__fns.html#gac88743299a96916291545a7ab08f62b1">More...</a><br/></td></tr>
<tr class="separator:gac88743299a96916291545a7ab08f62b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga56ad04012a7712fa86bd9911f134fc44"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga56ad04012a7712fa86bd9911f134fc44">SVN_AUTH_PARAM_STORE_PLAINTEXT_PASSWORDS</a></td></tr>
<tr class="memdesc:ga56ad04012a7712fa86bd9911f134fc44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether providers may save passwords to disk in plaintext.  <a href="group__auth__fns.html#ga56ad04012a7712fa86bd9911f134fc44">More...</a><br/></td></tr>
<tr class="separator:ga56ad04012a7712fa86bd9911f134fc44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga647032b5df3c8102289d194131d13dbc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga647032b5df3c8102289d194131d13dbc">SVN_AUTH_PARAM_DONT_STORE_SSL_CLIENT_CERT_PP</a>&#160;&#160;&#160;<a class="el" href="group__auth__fns.html#ga6d89f869ad547640121d4dd48beb1d1b">SVN_AUTH_PARAM_PREFIX</a> &quot;dont-store-ssl-client-cert-pp&quot;</td></tr>
<tr class="memdesc:ga647032b5df3c8102289d194131d13dbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">The application doesn't want any providers to save passphrase to disk.  <a href="group__auth__fns.html#ga647032b5df3c8102289d194131d13dbc">More...</a><br/></td></tr>
<tr class="separator:ga647032b5df3c8102289d194131d13dbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac5edfafa6dfe1e034e33ae6b5e074b8f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gac5edfafa6dfe1e034e33ae6b5e074b8f">SVN_AUTH_PARAM_STORE_SSL_CLIENT_CERT_PP_PLAINTEXT</a>&#160;&#160;&#160;<a class="el" href="group__auth__fns.html#ga6d89f869ad547640121d4dd48beb1d1b">SVN_AUTH_PARAM_PREFIX</a> &quot;store-ssl-client-cert-pp-plaintext&quot;</td></tr>
<tr class="memdesc:gac5edfafa6dfe1e034e33ae6b5e074b8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether providers may save passphrase to disk in plaintext.  <a href="group__auth__fns.html#gac5edfafa6dfe1e034e33ae6b5e074b8f">More...</a><br/></td></tr>
<tr class="separator:gac5edfafa6dfe1e034e33ae6b5e074b8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga96ffebffb3f20cc37f15f96ee08fa789"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga96ffebffb3f20cc37f15f96ee08fa789">SVN_AUTH_PARAM_NO_AUTH_CACHE</a>&#160;&#160;&#160;<a class="el" href="group__auth__fns.html#ga6d89f869ad547640121d4dd48beb1d1b">SVN_AUTH_PARAM_PREFIX</a> &quot;no-auth-cache&quot;</td></tr>
<tr class="memdesc:ga96ffebffb3f20cc37f15f96ee08fa789"><td class="mdescLeft">&#160;</td><td class="mdescRight">The application doesn't want any providers to save credentials to disk.  <a href="group__auth__fns.html#ga96ffebffb3f20cc37f15f96ee08fa789">More...</a><br/></td></tr>
<tr class="separator:ga96ffebffb3f20cc37f15f96ee08fa789"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaaaecf652e2ec7f5c947e22e69eb938c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gaaaaecf652e2ec7f5c947e22e69eb938c">SVN_AUTH_PARAM_SSL_SERVER_FAILURES</a></td></tr>
<tr class="memdesc:gaaaaecf652e2ec7f5c947e22e69eb938c"><td class="mdescLeft">&#160;</td><td class="mdescRight">The following property is for SSL server cert providers.  <a href="group__auth__fns.html#gaaaaecf652e2ec7f5c947e22e69eb938c">More...</a><br/></td></tr>
<tr class="separator:gaaaaecf652e2ec7f5c947e22e69eb938c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga95fc50b793dbb019a9026f783ddcf05b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga95fc50b793dbb019a9026f783ddcf05b">SVN_AUTH_PARAM_SSL_SERVER_CERT_INFO</a></td></tr>
<tr class="memdesc:ga95fc50b793dbb019a9026f783ddcf05b"><td class="mdescLeft">&#160;</td><td class="mdescRight">The following property is for SSL server cert providers.  <a href="group__auth__fns.html#ga95fc50b793dbb019a9026f783ddcf05b">More...</a><br/></td></tr>
<tr class="separator:ga95fc50b793dbb019a9026f783ddcf05b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5c7aa71afbdc25720cade178c570a7ae"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga5c7aa71afbdc25720cade178c570a7ae">SVN_AUTH_PARAM_CONFIG_CATEGORY_CONFIG</a></td></tr>
<tr class="memdesc:ga5c7aa71afbdc25720cade178c570a7ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">This provides a pointer to a <code>svn_config_t</code> containting the config category.  <a href="group__auth__fns.html#ga5c7aa71afbdc25720cade178c570a7ae">More...</a><br/></td></tr>
<tr class="separator:ga5c7aa71afbdc25720cade178c570a7ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfdeafda34ab933e5b423d307213e5b5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gacfdeafda34ab933e5b423d307213e5b5">SVN_AUTH_PARAM_CONFIG_CATEGORY_SERVERS</a></td></tr>
<tr class="memdesc:gacfdeafda34ab933e5b423d307213e5b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">This provides a pointer to a <code>svn_config_t</code> containting the servers category.  <a href="group__auth__fns.html#gacfdeafda34ab933e5b423d307213e5b5">More...</a><br/></td></tr>
<tr class="separator:gacfdeafda34ab933e5b423d307213e5b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c41c986707991899ab975ec63538491"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga1c41c986707991899ab975ec63538491">SVN_AUTH_PARAM_CONFIG</a>&#160;&#160;&#160;<a class="el" href="group__auth__fns.html#gacfdeafda34ab933e5b423d307213e5b5">SVN_AUTH_PARAM_CONFIG_CATEGORY_SERVERS</a></td></tr>
<tr class="separator:ga1c41c986707991899ab975ec63538491"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c4d18b6b88ea56cb450be5e0c8745a1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga1c4d18b6b88ea56cb450be5e0c8745a1">SVN_AUTH_PARAM_SERVER_GROUP</a>&#160;&#160;&#160;<a class="el" href="group__auth__fns.html#ga6d89f869ad547640121d4dd48beb1d1b">SVN_AUTH_PARAM_PREFIX</a> &quot;server-group&quot;</td></tr>
<tr class="memdesc:ga1c4d18b6b88ea56cb450be5e0c8745a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">The current server group.  <a href="group__auth__fns.html#ga1c4d18b6b88ea56cb450be5e0c8745a1">More...</a><br/></td></tr>
<tr class="separator:ga1c4d18b6b88ea56cb450be5e0c8745a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58e759823cfe5c9d5fb7d6fc1e20446e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga58e759823cfe5c9d5fb7d6fc1e20446e">SVN_AUTH_PARAM_CONFIG_DIR</a>&#160;&#160;&#160;<a class="el" href="group__auth__fns.html#ga6d89f869ad547640121d4dd48beb1d1b">SVN_AUTH_PARAM_PREFIX</a> &quot;config-dir&quot;</td></tr>
<tr class="memdesc:ga58e759823cfe5c9d5fb7d6fc1e20446e"><td class="mdescLeft">&#160;</td><td class="mdescRight">A configuration directory that overrides the default ~/.subversion.  <a href="group__auth__fns.html#ga58e759823cfe5c9d5fb7d6fc1e20446e">More...</a><br/></td></tr>
<tr class="separator:ga58e759823cfe5c9d5fb7d6fc1e20446e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5e28004be0a3c85dce7bf682af76ce2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#ae5e28004be0a3c85dce7bf682af76ce2">SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_FUNC</a>&#160;&#160;&#160;&quot;gnome-keyring-unlock-prompt-func&quot;</td></tr>
<tr class="memdesc:ae5e28004be0a3c85dce7bf682af76ce2"><td class="mdescLeft">&#160;</td><td class="mdescRight">libsvn_auth_gnome_keyring-specific run-time parameters.  <a href="#ae5e28004be0a3c85dce7bf682af76ce2">More...</a><br/></td></tr>
<tr class="separator:ae5e28004be0a3c85dce7bf682af76ce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a924cf1863a73cc0ac4b38beea411e046"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a924cf1863a73cc0ac4b38beea411e046">SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_BATON</a>&#160;&#160;&#160;&quot;gnome-keyring-unlock-prompt-baton&quot;</td></tr>
<tr class="memdesc:a924cf1863a73cc0ac4b38beea411e046"><td class="mdescLeft">&#160;</td><td class="mdescRight">The baton which is passed to <code>*SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_FUNC</code>.  <a href="#a924cf1863a73cc0ac4b38beea411e046">More...</a><br/></td></tr>
<tr class="separator:a924cf1863a73cc0ac4b38beea411e046"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">SSL server certificate failure bits</div></td></tr>
<tr><td colspan="2"><div class="groupText"><dl class="section note"><dt>Note</dt><dd>These values are stored in the on disk auth cache by the SSL server certificate auth provider, so the meaning of these bits must not be changed. </dd></dl>
</div></td></tr>
<tr class="memitem:ga241ceaea2fee42793d5ec05e80f460dd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga241ceaea2fee42793d5ec05e80f460dd">SVN_AUTH_SSL_NOTYETVALID</a>&#160;&#160;&#160;0x00000001</td></tr>
<tr class="memdesc:ga241ceaea2fee42793d5ec05e80f460dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Certificate is not yet valid.  <a href="group__auth__fns.html#ga241ceaea2fee42793d5ec05e80f460dd">More...</a><br/></td></tr>
<tr class="separator:ga241ceaea2fee42793d5ec05e80f460dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae0127e8e012387291902cb0cf44c150"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gaae0127e8e012387291902cb0cf44c150">SVN_AUTH_SSL_EXPIRED</a>&#160;&#160;&#160;0x00000002</td></tr>
<tr class="memdesc:gaae0127e8e012387291902cb0cf44c150"><td class="mdescLeft">&#160;</td><td class="mdescRight">Certificate has expired.  <a href="group__auth__fns.html#gaae0127e8e012387291902cb0cf44c150">More...</a><br/></td></tr>
<tr class="separator:gaae0127e8e012387291902cb0cf44c150"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c57755aef85ef30017e78b26d9c1b27"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga9c57755aef85ef30017e78b26d9c1b27">SVN_AUTH_SSL_CNMISMATCH</a>&#160;&#160;&#160;0x00000004</td></tr>
<tr class="memdesc:ga9c57755aef85ef30017e78b26d9c1b27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Certificate's CN (hostname) does not match the remote hostname.  <a href="group__auth__fns.html#ga9c57755aef85ef30017e78b26d9c1b27">More...</a><br/></td></tr>
<tr class="separator:ga9c57755aef85ef30017e78b26d9c1b27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9672897802eba02cd5d2418f57120742"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga9672897802eba02cd5d2418f57120742">SVN_AUTH_SSL_UNKNOWNCA</a>&#160;&#160;&#160;0x00000008</td></tr>
<tr class="memdesc:ga9672897802eba02cd5d2418f57120742"><td class="mdescLeft">&#160;</td><td class="mdescRight">Certificate authority is unknown (i.e.  <a href="group__auth__fns.html#ga9672897802eba02cd5d2418f57120742">More...</a><br/></td></tr>
<tr class="separator:ga9672897802eba02cd5d2418f57120742"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae23f698dc7c9dd280f46c3fb3267dc2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gaae23f698dc7c9dd280f46c3fb3267dc2">SVN_AUTH_SSL_OTHER</a>&#160;&#160;&#160;0x40000000</td></tr>
<tr class="memdesc:gaae23f698dc7c9dd280f46c3fb3267dc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Other failure.  <a href="group__auth__fns.html#gaae23f698dc7c9dd280f46c3fb3267dc2">More...</a><br/></td></tr>
<tr class="separator:gaae23f698dc7c9dd280f46c3fb3267dc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Default credentials defines</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Property values are const char *. </p>
</div></td></tr>
<tr class="memitem:ga1479a16508589f534d1216471da6bde6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga1479a16508589f534d1216471da6bde6">SVN_AUTH_PARAM_DEFAULT_USERNAME</a>&#160;&#160;&#160;<a class="el" href="group__auth__fns.html#ga6d89f869ad547640121d4dd48beb1d1b">SVN_AUTH_PARAM_PREFIX</a> &quot;username&quot;</td></tr>
<tr class="memdesc:ga1479a16508589f534d1216471da6bde6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default username provided by the application itself (e.g.  <a href="group__auth__fns.html#ga1479a16508589f534d1216471da6bde6">More...</a><br/></td></tr>
<tr class="separator:ga1479a16508589f534d1216471da6bde6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafbff53d2e2a6ce8044a1885ada2b3175"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gafbff53d2e2a6ce8044a1885ada2b3175">SVN_AUTH_PARAM_DEFAULT_PASSWORD</a>&#160;&#160;&#160;<a class="el" href="group__auth__fns.html#ga6d89f869ad547640121d4dd48beb1d1b">SVN_AUTH_PARAM_PREFIX</a> &quot;password&quot;</td></tr>
<tr class="memdesc:gafbff53d2e2a6ce8044a1885ada2b3175"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default password provided by the application itself (e.g.  <a href="group__auth__fns.html#gafbff53d2e2a6ce8044a1885ada2b3175">More...</a><br/></td></tr>
<tr class="separator:gafbff53d2e2a6ce8044a1885ada2b3175"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gaa77a422f326606f52366fb2fb0a43f8d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaa77a422f326606f52366fb2fb0a43f8d"></a>
typedef struct <a class="el" href="group__auth__fns.html#gaa77a422f326606f52366fb2fb0a43f8d">svn_auth_baton_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gaa77a422f326606f52366fb2fb0a43f8d">svn_auth_baton_t</a></td></tr>
<tr class="memdesc:gaa77a422f326606f52366fb2fb0a43f8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of a Subversion authentication object. <br/></td></tr>
<tr class="separator:gaa77a422f326606f52366fb2fb0a43f8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ac4eb8d42d56257c6ba607f976b2979"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga1ac4eb8d42d56257c6ba607f976b2979"></a>
typedef struct <a class="el" href="group__auth__fns.html#ga1ac4eb8d42d56257c6ba607f976b2979">svn_auth_iterstate_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga1ac4eb8d42d56257c6ba607f976b2979">svn_auth_iterstate_t</a></td></tr>
<tr class="memdesc:ga1ac4eb8d42d56257c6ba607f976b2979"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of a Subversion authentication-iteration object. <br/></td></tr>
<tr class="separator:ga1ac4eb8d42d56257c6ba607f976b2979"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7fcdd91f3155fde2f5177e921277a5e"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structsvn__auth__provider__t.html">svn_auth_provider_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gad7fcdd91f3155fde2f5177e921277a5e">svn_auth_provider_t</a></td></tr>
<tr class="memdesc:gad7fcdd91f3155fde2f5177e921277a5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The main authentication "provider" vtable.  <a href="group__auth__fns.html#gad7fcdd91f3155fde2f5177e921277a5e">More...</a><br/></td></tr>
<tr class="separator:gad7fcdd91f3155fde2f5177e921277a5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac5e01b8d1f8385a6060d34865f249a25"><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gac5e01b8d1f8385a6060d34865f249a25">svn_auth_provider_object_t</a></td></tr>
<tr class="memdesc:gac5e01b8d1f8385a6060d34865f249a25"><td class="mdescLeft">&#160;</td><td class="mdescRight">A provider object, ready to be put into an array and given to <a class="el" href="group__auth__fns.html#ga1b7fd1fcbdecb6511383d79d5e38fbeb" title="Initialize an authentication system. ">svn_auth_open()</a>.  <a href="group__auth__fns.html#gac5e01b8d1f8385a6060d34865f249a25">More...</a><br/></td></tr>
<tr class="separator:gac5e01b8d1f8385a6060d34865f249a25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec0778fbc81391e4ba212ca81769f90c"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gaec0778fbc81391e4ba212ca81769f90c">svn_auth_simple_provider_func_t</a> )(<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaec0778fbc81391e4ba212ca81769f90c"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of function returning authentication provider.  <a href="group__auth__fns.html#gaec0778fbc81391e4ba212ca81769f90c">More...</a><br/></td></tr>
<tr class="separator:gaec0778fbc81391e4ba212ca81769f90c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa5d3d9b036cff5c464f2c4cf8fa2f388"><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__auth__cred__simple__t.html">svn_auth_cred_simple_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gaa5d3d9b036cff5c464f2c4cf8fa2f388">svn_auth_cred_simple_t</a></td></tr>
<tr class="memdesc:gaa5d3d9b036cff5c464f2c4cf8fa2f388"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>SVN_AUTH_CRED_SIMPLE</code> credentials.  <a href="group__auth__fns.html#gaa5d3d9b036cff5c464f2c4cf8fa2f388">More...</a><br/></td></tr>
<tr class="separator:gaa5d3d9b036cff5c464f2c4cf8fa2f388"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad42e3f2785585bfe4284e3d2ca9b6f52"><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__auth__cred__username__t.html">svn_auth_cred_username_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gad42e3f2785585bfe4284e3d2ca9b6f52">svn_auth_cred_username_t</a></td></tr>
<tr class="memdesc:gad42e3f2785585bfe4284e3d2ca9b6f52"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>SVN_AUTH_CRED_USERNAME</code> credentials.  <a href="group__auth__fns.html#gad42e3f2785585bfe4284e3d2ca9b6f52">More...</a><br/></td></tr>
<tr class="separator:gad42e3f2785585bfe4284e3d2ca9b6f52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a73b9884722f08ba3d80808c42f5d50"><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html">svn_auth_cred_ssl_client_cert_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga0a73b9884722f08ba3d80808c42f5d50">svn_auth_cred_ssl_client_cert_t</a></td></tr>
<tr class="memdesc:ga0a73b9884722f08ba3d80808c42f5d50"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>SVN_AUTH_CRED_SSL_CLIENT_CERT</code> credentials.  <a href="group__auth__fns.html#ga0a73b9884722f08ba3d80808c42f5d50">More...</a><br/></td></tr>
<tr class="separator:ga0a73b9884722f08ba3d80808c42f5d50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c81232e16a5301ca3b88dfe5928c0fe"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga7c81232e16a5301ca3b88dfe5928c0fe">svn_auth_ssl_client_cert_pw_provider_func_t</a> )(<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga7c81232e16a5301ca3b88dfe5928c0fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">A function returning an SSL client certificate passphrase provider.  <a href="group__auth__fns.html#ga7c81232e16a5301ca3b88dfe5928c0fe">More...</a><br/></td></tr>
<tr class="separator:ga7c81232e16a5301ca3b88dfe5928c0fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga097d8c427a75f8ed99bc823468a836e8"><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html">svn_auth_cred_ssl_client_cert_pw_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga097d8c427a75f8ed99bc823468a836e8">svn_auth_cred_ssl_client_cert_pw_t</a></td></tr>
<tr class="memdesc:ga097d8c427a75f8ed99bc823468a836e8"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>SVN_AUTH_CRED_SSL_CLIENT_CERT_PW</code> credentials.  <a href="group__auth__fns.html#ga097d8c427a75f8ed99bc823468a836e8">More...</a><br/></td></tr>
<tr class="separator:ga097d8c427a75f8ed99bc823468a836e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga88eafb1ec9ce99e1ef010df4dd4cb273"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga88eafb1ec9ce99e1ef010df4dd4cb273"></a>
typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__auth__ssl__server__cert__info__t.html">svn_auth_ssl_server_cert_info_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga88eafb1ec9ce99e1ef010df4dd4cb273">svn_auth_ssl_server_cert_info_t</a></td></tr>
<tr class="memdesc:ga88eafb1ec9ce99e1ef010df4dd4cb273"><td class="mdescLeft">&#160;</td><td class="mdescRight">SSL server certificate information used by <code>SVN_AUTH_CRED_SSL_SERVER_TRUST</code> providers. <br/></td></tr>
<tr class="separator:ga88eafb1ec9ce99e1ef010df4dd4cb273"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11d35b061ebd25ebd2e042286593e71e"><td class="memItemLeft" align="right" valign="top">typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html">svn_auth_cred_ssl_server_trust_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga11d35b061ebd25ebd2e042286593e71e">svn_auth_cred_ssl_server_trust_t</a></td></tr>
<tr class="memdesc:ga11d35b061ebd25ebd2e042286593e71e"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>SVN_AUTH_CRED_SSL_SERVER_TRUST</code> credentials.  <a href="group__auth__fns.html#ga11d35b061ebd25ebd2e042286593e71e">More...</a><br/></td></tr>
<tr class="separator:ga11d35b061ebd25ebd2e042286593e71e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab3e889e27559677e7e1a13a9142a381d"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gab3e889e27559677e7e1a13a9142a381d">svn_auth_simple_prompt_func_t</a> )(<a class="el" href="structsvn__auth__cred__simple__t.html">svn_auth_cred_simple_t</a> **cred, void *baton, const char *realm, const char *username, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> may_save, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gab3e889e27559677e7e1a13a9142a381d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Credential-constructing prompt functions.  <a href="group__auth__fns.html#gab3e889e27559677e7e1a13a9142a381d">More...</a><br/></td></tr>
<tr class="separator:gab3e889e27559677e7e1a13a9142a381d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf05167cb101739421c2e9542e27d5a88"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gaf05167cb101739421c2e9542e27d5a88">svn_auth_username_prompt_func_t</a> )(<a class="el" href="structsvn__auth__cred__username__t.html">svn_auth_cred_username_t</a> **cred, void *baton, const char *realm, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> may_save, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaf05167cb101739421c2e9542e27d5a88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*cred</em> by prompting the user, allocating <em>*cred</em> in <em>pool</em>.  <a href="group__auth__fns.html#gaf05167cb101739421c2e9542e27d5a88">More...</a><br/></td></tr>
<tr class="separator:gaf05167cb101739421c2e9542e27d5a88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac5805f633a96271f97b919297e9908a3"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gac5805f633a96271f97b919297e9908a3">svn_auth_ssl_server_trust_prompt_func_t</a> )(<a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html">svn_auth_cred_ssl_server_trust_t</a> **cred, void *baton, const char *realm, apr_uint32_t failures, const <a class="el" href="structsvn__auth__ssl__server__cert__info__t.html">svn_auth_ssl_server_cert_info_t</a> *cert_info, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> may_save, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gac5805f633a96271f97b919297e9908a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*cred</em> by prompting the user, allocating <em>*cred</em> in <em>pool</em>.  <a href="group__auth__fns.html#gac5805f633a96271f97b919297e9908a3">More...</a><br/></td></tr>
<tr class="separator:gac5805f633a96271f97b919297e9908a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5afb52c44e95354a2ec52f6fe030c5d2"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga5afb52c44e95354a2ec52f6fe030c5d2">svn_auth_ssl_client_cert_prompt_func_t</a> )(<a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html">svn_auth_cred_ssl_client_cert_t</a> **cred, void *baton, const char *realm, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> may_save, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga5afb52c44e95354a2ec52f6fe030c5d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*cred</em> by prompting the user, allocating <em>*cred</em> in <em>pool</em>.  <a href="group__auth__fns.html#ga5afb52c44e95354a2ec52f6fe030c5d2">More...</a><br/></td></tr>
<tr class="separator:ga5afb52c44e95354a2ec52f6fe030c5d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafeb529b5bafaed2e3f423e4186d60f06"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gafeb529b5bafaed2e3f423e4186d60f06">svn_auth_ssl_client_cert_pw_prompt_func_t</a> )(<a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html">svn_auth_cred_ssl_client_cert_pw_t</a> **cred, void *baton, const char *realm, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> may_save, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gafeb529b5bafaed2e3f423e4186d60f06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*cred</em> by prompting the user, allocating <em>*cred</em> in <em>pool</em>.  <a href="group__auth__fns.html#gafeb529b5bafaed2e3f423e4186d60f06">More...</a><br/></td></tr>
<tr class="separator:gafeb529b5bafaed2e3f423e4186d60f06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad411a1955468c3efac5f823cb437681f"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gad411a1955468c3efac5f823cb437681f">svn_auth_plaintext_prompt_func_t</a> )(<a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *may_save_plaintext, const char *realmstring, void *baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gad411a1955468c3efac5f823cb437681f"><td class="mdescLeft">&#160;</td><td class="mdescRight">A type of callback function for asking whether storing a password to disk in plaintext is allowed.  <a href="group__auth__fns.html#gad411a1955468c3efac5f823cb437681f">More...</a><br/></td></tr>
<tr class="separator:gad411a1955468c3efac5f823cb437681f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga81da0ae3bea6ac790f9c7f113db270cc"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga81da0ae3bea6ac790f9c7f113db270cc">svn_auth_plaintext_passphrase_prompt_func_t</a> )(<a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *may_save_plaintext, const char *realmstring, void *baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga81da0ae3bea6ac790f9c7f113db270cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">A type of callback function for asking whether storing a passphrase to disk in plaintext is allowed.  <a href="group__auth__fns.html#ga81da0ae3bea6ac790f9c7f113db270cc">More...</a><br/></td></tr>
<tr class="separator:ga81da0ae3bea6ac790f9c7f113db270cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49f569118db893785c861170c9a0ca38"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a49f569118db893785c861170c9a0ca38">svn_auth_gnome_keyring_unlock_prompt_func_t</a> )(char **keyring_password, const char *keyring_name, void *baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a49f569118db893785c861170c9a0ca38"><td class="mdescLeft">&#160;</td><td class="mdescRight">A type of callback function for obtaining the GNOME Keyring password.  <a href="#a49f569118db893785c861170c9a0ca38">More...</a><br/></td></tr>
<tr class="separator:a49f569118db893785c861170c9a0ca38"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gae9bbd41b063adf3212e6bc2d10079089"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__auth__ssl__server__cert__info__t.html">svn_auth_ssl_server_cert_info_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gae9bbd41b063adf3212e6bc2d10079089">svn_auth_ssl_server_cert_info_dup</a> (const <a class="el" href="structsvn__auth__ssl__server__cert__info__t.html">svn_auth_ssl_server_cert_info_t</a> *info, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gae9bbd41b063adf3212e6bc2d10079089"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a deep copy of <em>info</em>, allocated in <em>pool</em>.  <a href="group__auth__fns.html#gae9bbd41b063adf3212e6bc2d10079089">More...</a><br/></td></tr>
<tr class="separator:gae9bbd41b063adf3212e6bc2d10079089"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1b7fd1fcbdecb6511383d79d5e38fbeb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga1b7fd1fcbdecb6511383d79d5e38fbeb">svn_auth_open</a> (<a class="el" href="group__auth__fns.html#gaa77a422f326606f52366fb2fb0a43f8d">svn_auth_baton_t</a> **auth_baton, const apr_array_header_t *providers, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga1b7fd1fcbdecb6511383d79d5e38fbeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize an authentication system.  <a href="group__auth__fns.html#ga1b7fd1fcbdecb6511383d79d5e38fbeb">More...</a><br/></td></tr>
<tr class="separator:ga1b7fd1fcbdecb6511383d79d5e38fbeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44ffb6371ee22a42e8755b56394ca688"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga44ffb6371ee22a42e8755b56394ca688">svn_auth_set_parameter</a> (<a class="el" href="group__auth__fns.html#gaa77a422f326606f52366fb2fb0a43f8d">svn_auth_baton_t</a> *auth_baton, const char *name, const void *value)</td></tr>
<tr class="memdesc:ga44ffb6371ee22a42e8755b56394ca688"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set an authentication run-time parameter.  <a href="group__auth__fns.html#ga44ffb6371ee22a42e8755b56394ca688">More...</a><br/></td></tr>
<tr class="separator:ga44ffb6371ee22a42e8755b56394ca688"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45fd5c7dd123c9c1d7d3733fb4b3f3fa"><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#ga45fd5c7dd123c9c1d7d3733fb4b3f3fa">svn_auth_get_parameter</a> (<a class="el" href="group__auth__fns.html#gaa77a422f326606f52366fb2fb0a43f8d">svn_auth_baton_t</a> *auth_baton, const char *name)</td></tr>
<tr class="memdesc:ga45fd5c7dd123c9c1d7d3733fb4b3f3fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an authentication run-time parameter.  <a href="group__auth__fns.html#ga45fd5c7dd123c9c1d7d3733fb4b3f3fa">More...</a><br/></td></tr>
<tr class="separator:ga45fd5c7dd123c9c1d7d3733fb4b3f3fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae830b04d8a93c8b60f802d6809425665"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665">svn_auth_first_credentials</a> (void **credentials, <a class="el" href="group__auth__fns.html#ga1ac4eb8d42d56257c6ba607f976b2979">svn_auth_iterstate_t</a> **state, const char *cred_kind, const char *realmstring, <a class="el" href="group__auth__fns.html#gaa77a422f326606f52366fb2fb0a43f8d">svn_auth_baton_t</a> *auth_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gae830b04d8a93c8b60f802d6809425665"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an initial set of credentials.  <a href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665">More...</a><br/></td></tr>
<tr class="separator:gae830b04d8a93c8b60f802d6809425665"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab18c2431ea55881ef52b647815600cd3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gab18c2431ea55881ef52b647815600cd3">svn_auth_next_credentials</a> (void **credentials, <a class="el" href="group__auth__fns.html#ga1ac4eb8d42d56257c6ba607f976b2979">svn_auth_iterstate_t</a> *state, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gab18c2431ea55881ef52b647815600cd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get another set of credentials, assuming previous ones failed to authenticate.  <a href="group__auth__fns.html#gab18c2431ea55881ef52b647815600cd3">More...</a><br/></td></tr>
<tr class="separator:gab18c2431ea55881ef52b647815600cd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4a43aa4ab0d4a9baf603bf7f96ec919"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gae4a43aa4ab0d4a9baf603bf7f96ec919">svn_auth_save_credentials</a> (<a class="el" href="group__auth__fns.html#ga1ac4eb8d42d56257c6ba607f976b2979">svn_auth_iterstate_t</a> *state, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gae4a43aa4ab0d4a9baf603bf7f96ec919"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save a set of credentials.  <a href="group__auth__fns.html#gae4a43aa4ab0d4a9baf603bf7f96ec919">More...</a><br/></td></tr>
<tr class="separator:gae4a43aa4ab0d4a9baf603bf7f96ec919"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1581f354af47a824044480e11129a22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns.html#gaa1581f354af47a824044480e11129a22">svn_auth_forget_credentials</a> (<a class="el" href="group__auth__fns.html#gaa77a422f326606f52366fb2fb0a43f8d">svn_auth_baton_t</a> *auth_baton, const char *cred_kind, const char *realmstring, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaa1581f354af47a824044480e11129a22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forget a set (or all) memory-cached credentials.  <a href="group__auth__fns.html#gaa1581f354af47a824044480e11129a22">More...</a><br/></td></tr>
<tr class="separator:gaa1581f354af47a824044480e11129a22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d1cf74b8f9e2f55a92f1be7a942adb3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a0d1cf74b8f9e2f55a92f1be7a942adb3">svn_auth_get_simple_prompt_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#gab3e889e27559677e7e1a13a9142a381d">svn_auth_simple_prompt_func_t</a> prompt_func, void *prompt_baton, int retry_limit, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a0d1cf74b8f9e2f55a92f1be7a942adb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a> that gets information by prompting the user with <em>prompt_func</em> and <em>prompt_baton</em>.  <a href="#a0d1cf74b8f9e2f55a92f1be7a942adb3">More...</a><br/></td></tr>
<tr class="separator:a0d1cf74b8f9e2f55a92f1be7a942adb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99da7f5d7e4b64aadaed2b94d958aebb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a99da7f5d7e4b64aadaed2b94d958aebb">svn_auth_get_username_prompt_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#gaf05167cb101739421c2e9542e27d5a88">svn_auth_username_prompt_func_t</a> prompt_func, void *prompt_baton, int retry_limit, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a99da7f5d7e4b64aadaed2b94d958aebb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__username__t.html" title="SVN_AUTH_CRED_USERNAME credentials. ">svn_auth_cred_username_t</a></code> that gets information by prompting the user with <em>prompt_func</em> and <em>prompt_baton</em>.  <a href="#a99da7f5d7e4b64aadaed2b94d958aebb">More...</a><br/></td></tr>
<tr class="separator:a99da7f5d7e4b64aadaed2b94d958aebb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbe6e4f9a56ed5108f06f95d40b8042e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#adbe6e4f9a56ed5108f06f95d40b8042e">svn_auth_get_simple_provider2</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#gad411a1955468c3efac5f823cb437681f">svn_auth_plaintext_prompt_func_t</a> plaintext_prompt_func, void *prompt_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:adbe6e4f9a56ed5108f06f95d40b8042e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#adbe6e4f9a56ed5108f06f95d40b8042e">More...</a><br/></td></tr>
<tr class="separator:adbe6e4f9a56ed5108f06f95d40b8042e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7046599e07079f36f7a2845eeb537ca5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a7046599e07079f36f7a2845eeb537ca5">svn_auth_get_simple_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a7046599e07079f36f7a2845eeb537ca5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like svn_auth_get_simple_provider2, but without the ability to call the svn_auth_plaintext_prompt_func_t callback, and the provider always assumes that it is allowed to store the password in plaintext.  <a href="#a7046599e07079f36f7a2845eeb537ca5">More...</a><br/></td></tr>
<tr class="separator:a7046599e07079f36f7a2845eeb537ca5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0efdc798365a84b0416f12e861b04831"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a0efdc798365a84b0416f12e861b04831">svn_auth_get_platform_specific_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, const char *provider_name, const char *provider_type, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a0efdc798365a84b0416f12e861b04831"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open(). ">svn_auth_provider_object_t</a></code>, or return <code>NULL</code> if the provider is not available for the requested platform or the requested provider is unknown.  <a href="#a0efdc798365a84b0416f12e861b04831">More...</a><br/></td></tr>
<tr class="separator:a0efdc798365a84b0416f12e861b04831"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc9973cdd97aa3dec04569827a328c8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#acc9973cdd97aa3dec04569827a328c8e">svn_auth_get_platform_specific_client_providers</a> (apr_array_header_t **providers, <a class="el" href="svn__config_8h.html#aab78e7d9b95c9bcfe0bdf1d9f3212596">svn_config_t</a> *config, apr_pool_t *pool)</td></tr>
<tr class="memdesc:acc9973cdd97aa3dec04569827a328c8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*providers</em> to an array of <code><a class="el" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open(). ">svn_auth_provider_object_t</a> *</code> objects.  <a href="#acc9973cdd97aa3dec04569827a328c8e">More...</a><br/></td></tr>
<tr class="separator:acc9973cdd97aa3dec04569827a328c8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a150ee5110b383bcdb2ce9b341dc26798"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a150ee5110b383bcdb2ce9b341dc26798">svn_auth_get_windows_simple_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a150ee5110b383bcdb2ce9b341dc26798"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#a150ee5110b383bcdb2ce9b341dc26798">More...</a><br/></td></tr>
<tr class="separator:a150ee5110b383bcdb2ce9b341dc26798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a727c53b91e8d6b2d1d140b38e19f4d60"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a727c53b91e8d6b2d1d140b38e19f4d60">svn_auth_get_windows_ssl_client_cert_pw_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a727c53b91e8d6b2d1d140b38e19f4d60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#a727c53b91e8d6b2d1d140b38e19f4d60">More...</a><br/></td></tr>
<tr class="separator:a727c53b91e8d6b2d1d140b38e19f4d60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba0697d924aebb6d00a7a0fa40965161"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#aba0697d924aebb6d00a7a0fa40965161">svn_auth_get_windows_ssl_server_trust_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:aba0697d924aebb6d00a7a0fa40965161"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. ">svn_auth_cred_ssl_server_trust_t</a></code>, allocated in <em>pool</em>.  <a href="#aba0697d924aebb6d00a7a0fa40965161">More...</a><br/></td></tr>
<tr class="separator:aba0697d924aebb6d00a7a0fa40965161"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a412a3c955d7aadd3bd41f54fccf2adcd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a412a3c955d7aadd3bd41f54fccf2adcd">svn_auth_get_keychain_simple_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a412a3c955d7aadd3bd41f54fccf2adcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#a412a3c955d7aadd3bd41f54fccf2adcd">More...</a><br/></td></tr>
<tr class="separator:a412a3c955d7aadd3bd41f54fccf2adcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af243bf165ca0b72faf205e8ebba46f00"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#af243bf165ca0b72faf205e8ebba46f00">svn_auth_get_keychain_ssl_client_cert_pw_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:af243bf165ca0b72faf205e8ebba46f00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#af243bf165ca0b72faf205e8ebba46f00">More...</a><br/></td></tr>
<tr class="separator:af243bf165ca0b72faf205e8ebba46f00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9807e72666c1838813f9de3d8cb7373"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structsvn__version__t.html">svn_version_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#ae9807e72666c1838813f9de3d8cb7373">svn_auth_gnome_keyring_version</a> (void)</td></tr>
<tr class="memdesc:ae9807e72666c1838813f9de3d8cb7373"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get libsvn_auth_gnome_keyring version information.  <a href="#ae9807e72666c1838813f9de3d8cb7373">More...</a><br/></td></tr>
<tr class="separator:ae9807e72666c1838813f9de3d8cb7373"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8992f1f553f731482eee99b42eedaa6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#ab8992f1f553f731482eee99b42eedaa6">svn_auth_get_gnome_keyring_simple_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ab8992f1f553f731482eee99b42eedaa6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#ab8992f1f553f731482eee99b42eedaa6">More...</a><br/></td></tr>
<tr class="separator:ab8992f1f553f731482eee99b42eedaa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d2364717fc83a0decd3fa136ae46779"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a1d2364717fc83a0decd3fa136ae46779">svn_auth_get_gnome_keyring_ssl_client_cert_pw_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a1d2364717fc83a0decd3fa136ae46779"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#a1d2364717fc83a0decd3fa136ae46779">More...</a><br/></td></tr>
<tr class="separator:a1d2364717fc83a0decd3fa136ae46779"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a204f231da37e0d8de0d2939b41483153"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structsvn__version__t.html">svn_version_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a204f231da37e0d8de0d2939b41483153">svn_auth_kwallet_version</a> (void)</td></tr>
<tr class="memdesc:a204f231da37e0d8de0d2939b41483153"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get libsvn_auth_kwallet version information.  <a href="#a204f231da37e0d8de0d2939b41483153">More...</a><br/></td></tr>
<tr class="separator:a204f231da37e0d8de0d2939b41483153"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0ada33b2e6776dc056ab70a15299c02"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#ad0ada33b2e6776dc056ab70a15299c02">svn_auth_get_kwallet_simple_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ad0ada33b2e6776dc056ab70a15299c02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#ad0ada33b2e6776dc056ab70a15299c02">More...</a><br/></td></tr>
<tr class="separator:ad0ada33b2e6776dc056ab70a15299c02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cfb9708bb9ee684f494d2fdf027a877"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a4cfb9708bb9ee684f494d2fdf027a877">svn_auth_get_kwallet_ssl_client_cert_pw_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a4cfb9708bb9ee684f494d2fdf027a877"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#a4cfb9708bb9ee684f494d2fdf027a877">More...</a><br/></td></tr>
<tr class="separator:a4cfb9708bb9ee684f494d2fdf027a877"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a310113db987e2783f9c37b2c6228cb26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a310113db987e2783f9c37b2c6228cb26">svn_auth_get_gpg_agent_simple_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a310113db987e2783f9c37b2c6228cb26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#a310113db987e2783f9c37b2c6228cb26">More...</a><br/></td></tr>
<tr class="separator:a310113db987e2783f9c37b2c6228cb26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac107e10d2325dbe7d4805a64aa6bd6c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#ac107e10d2325dbe7d4805a64aa6bd6c4">svn_auth_get_username_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ac107e10d2325dbe7d4805a64aa6bd6c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__username__t.html" title="SVN_AUTH_CRED_USERNAME credentials. ">svn_auth_cred_username_t</a></code> that gets/sets information from a user's ~/.subversion configuration directory.  <a href="#ac107e10d2325dbe7d4805a64aa6bd6c4">More...</a><br/></td></tr>
<tr class="separator:ac107e10d2325dbe7d4805a64aa6bd6c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa8fe3918d02a179811ab9a03ddaec99"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#aaa8fe3918d02a179811ab9a03ddaec99">svn_auth_get_ssl_server_trust_file_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:aaa8fe3918d02a179811ab9a03ddaec99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. ">svn_auth_cred_ssl_server_trust_t</a></code>, allocated in <em>pool</em>.  <a href="#aaa8fe3918d02a179811ab9a03ddaec99">More...</a><br/></td></tr>
<tr class="separator:aaa8fe3918d02a179811ab9a03ddaec99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2fa9ec4071016474d7a927cb4dbacf7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#aa2fa9ec4071016474d7a927cb4dbacf7">svn_auth_get_ssl_client_cert_file_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:aa2fa9ec4071016474d7a927cb4dbacf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT credentials. ">svn_auth_cred_ssl_client_cert_t</a></code>, allocated in <em>pool</em>.  <a href="#aa2fa9ec4071016474d7a927cb4dbacf7">More...</a><br/></td></tr>
<tr class="separator:aa2fa9ec4071016474d7a927cb4dbacf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6daa69fd91b8a658c3af25f27ab40a20"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a6daa69fd91b8a658c3af25f27ab40a20">svn_auth_get_ssl_client_cert_pw_file_provider2</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#ga81da0ae3bea6ac790f9c7f113db270cc">svn_auth_plaintext_passphrase_prompt_func_t</a> plaintext_passphrase_prompt_func, void *prompt_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a6daa69fd91b8a658c3af25f27ab40a20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#a6daa69fd91b8a658c3af25f27ab40a20">More...</a><br/></td></tr>
<tr class="separator:a6daa69fd91b8a658c3af25f27ab40a20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a031474a8fae4e3d2b191cee3e8e8a165"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a031474a8fae4e3d2b191cee3e8e8a165">svn_auth_get_ssl_client_cert_pw_file_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a031474a8fae4e3d2b191cee3e8e8a165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like svn_auth_get_ssl_client_cert_pw_file_provider2, but without the ability to call the svn_auth_plaintext_passphrase_prompt_func_t callback, and the provider always assumes that it is not allowed to store the passphrase in plaintext.  <a href="#a031474a8fae4e3d2b191cee3e8e8a165">More...</a><br/></td></tr>
<tr class="separator:a031474a8fae4e3d2b191cee3e8e8a165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a204388c3be43bff3c51e4490d7f40f43"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a204388c3be43bff3c51e4490d7f40f43">svn_auth_get_ssl_server_trust_prompt_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#gac5805f633a96271f97b919297e9908a3">svn_auth_ssl_server_trust_prompt_func_t</a> prompt_func, void *prompt_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a204388c3be43bff3c51e4490d7f40f43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. ">svn_auth_cred_ssl_server_trust_t</a></code>, allocated in <em>pool</em>.  <a href="#a204388c3be43bff3c51e4490d7f40f43">More...</a><br/></td></tr>
<tr class="separator:a204388c3be43bff3c51e4490d7f40f43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a091023baac1bdc7846dbb9c3a1b0fdfc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#a091023baac1bdc7846dbb9c3a1b0fdfc">svn_auth_get_ssl_client_cert_prompt_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#ga5afb52c44e95354a2ec52f6fe030c5d2">svn_auth_ssl_client_cert_prompt_func_t</a> prompt_func, void *prompt_baton, int retry_limit, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a091023baac1bdc7846dbb9c3a1b0fdfc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT credentials. ">svn_auth_cred_ssl_client_cert_t</a></code>, allocated in <em>pool</em>.  <a href="#a091023baac1bdc7846dbb9c3a1b0fdfc">More...</a><br/></td></tr>
<tr class="separator:a091023baac1bdc7846dbb9c3a1b0fdfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe35741fb55873c3c4227d237e19bc14"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__auth_8h.html#afe35741fb55873c3c4227d237e19bc14">svn_auth_get_ssl_client_cert_pw_prompt_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#gafeb529b5bafaed2e3f423e4186d60f06">svn_auth_ssl_client_cert_pw_prompt_func_t</a> prompt_func, void *prompt_baton, int retry_limit, apr_pool_t *pool)</td></tr>
<tr class="memdesc:afe35741fb55873c3c4227d237e19bc14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code>, allocated in <em>pool</em>.  <a href="#afe35741fb55873c3c4227d237e19bc14">More...</a><br/></td></tr>
<tr class="separator:afe35741fb55873c3c4227d237e19bc14"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Subversion's authentication system. </p>

<p>Definition in file <a class="el" href="svn__auth_8h_source.html">svn_auth.h</a>.</p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a924cf1863a73cc0ac4b38beea411e046"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_BATON&#160;&#160;&#160;&quot;gnome-keyring-unlock-prompt-baton&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The baton which is passed to <code>*SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_FUNC</code>. </p>

<p>Definition at line <a class="el" href="svn__auth_8h_source.html#l01020">1020</a> of file <a class="el" href="svn__auth_8h_source.html">svn_auth.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae5e28004be0a3c85dce7bf682af76ce2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_FUNC&#160;&#160;&#160;&quot;gnome-keyring-unlock-prompt-func&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>libsvn_auth_gnome_keyring-specific run-time parameters. </p>
<p>The pointer to function which prompts user for GNOME Keyring password. The type of this pointer should be svn_auth_gnome_keyring_unlock_prompt_func_t. </p>

<p>Definition at line <a class="el" href="svn__auth_8h_source.html#l01016">1016</a> of file <a class="el" href="svn__auth_8h_source.html">svn_auth.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="a49f569118db893785c861170c9a0ca38"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_auth_gnome_keyring_unlock_prompt_func_t)(char **keyring_password, const char *keyring_name, void *baton, apr_pool_t *pool)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A type of callback function for obtaining the GNOME Keyring password. </p>
<p>In this callback, the client should ask the user for default keyring <em>keyring_name</em> password.</p>
<p>The answer is returned in <em>*keyring_password</em>. <em>baton</em> is an implementation-specific closure. All allocations should be done in <em>pool</em>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6 </dd></dl>

<p>Definition at line <a class="el" href="svn__auth_8h_source.html#l01004">1004</a> of file <a class="el" href="svn__auth_8h_source.html">svn_auth.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ab8992f1f553f731482eee99b42eedaa6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_gnome_keyring_simple_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>This is like <a class="el" href="group__auth__fns__depr.html#ga6d34f6704d7d95da3b6bad548d3bcf58" title="Create and return *provider, an authentication provider of type svn_auth_cred_simple_t that gets/sets...">svn_client_get_simple_provider()</a>, except that the password is stored in GNOME Keyring.</p>
<p>If the GNOME Keyring is locked the provider calls <code>*SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_FUNC</code> in order to unlock the keyring.</p>
<p><code>SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_BATON</code> is passed to <code>*SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_FUNC</code>.</p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6 </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function actually works only on systems with libsvn_auth_gnome_keyring and GNOME Keyring installed. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000008">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.8 API. Use svn_auth_get_platform_specific_provider with provider_name of "gnome_keyring" and provider_type of "simple". </dd></dl>

</div>
</div>
<a class="anchor" id="a1d2364717fc83a0decd3fa136ae46779"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_gnome_keyring_ssl_client_cert_pw_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>This is like <a class="el" href="group__auth__fns__depr.html#gac3c621371933d52e2b1791aea07b31d3" title="Create and return *provider, an authentication provider of type svn_auth_cred_ssl_client_cert_pw_t, allocated in pool. ">svn_client_get_ssl_client_cert_pw_file_provider()</a>, except that the password is stored in GNOME Keyring.</p>
<p>If the GNOME Keyring is locked the provider calls <code>*SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_FUNC</code> in order to unlock the keyring.</p>
<p><code>SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_BATON</code> is passed to <code>*SVN_AUTH_PARAM_GNOME_KEYRING_UNLOCK_PROMPT_FUNC</code>.</p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6 </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function actually works only on systems with libsvn_auth_gnome_keyring and GNOME Keyring installed. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000009">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.8 API. Use svn_auth_get_platform_specific_provider with provider_name of "gnome_keyring" and provider_type of "ssl_client_cert_pw". </dd></dl>

</div>
</div>
<a class="anchor" id="a310113db987e2783f9c37b2c6228cb26"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_gpg_agent_simple_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>This is like <a class="el" href="group__auth__fns__depr.html#ga6d34f6704d7d95da3b6bad548d3bcf58" title="Create and return *provider, an authentication provider of type svn_auth_cred_simple_t that gets/sets...">svn_client_get_simple_provider()</a>, except that the password is obtained from gpg_agent, which will keep it in a memory cache.</p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.8 </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function actually works only on systems with GNU Privacy Guard installed. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000012">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.8 API. Use svn_auth_get_platform_specific_provider with provider_name of "gpg_agent" and provider_type of "simple". </dd></dl>

</div>
</div>
<a class="anchor" id="a412a3c955d7aadd3bd41f54fccf2adcd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_keychain_simple_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>This is like <a class="el" href="svn__auth_8h.html#a7046599e07079f36f7a2845eeb537ca5" title="Like svn_auth_get_simple_provider2, but without the ability to call the svn_auth_plaintext_prompt_fun...">svn_auth_get_simple_provider()</a>, except that the password is stored in the Mac OS KeyChain.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4 </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is only available on Mac OS 10.2 and higher. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000006">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.8 API. Use svn_auth_get_platform_specific_provider with provider_name of "keychain" and provider_type of "simple". </dd></dl>

</div>
</div>
<a class="anchor" id="af243bf165ca0b72faf205e8ebba46f00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_keychain_ssl_client_cert_pw_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>This is like <a class="el" href="svn__auth_8h.html#a031474a8fae4e3d2b191cee3e8e8a165" title="Like svn_auth_get_ssl_client_cert_pw_file_provider2, but without the ability to call the svn_auth_pla...">svn_auth_get_ssl_client_cert_pw_file_provider()</a>, except that the password is stored in the Mac OS KeyChain.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6 </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is only available on Mac OS 10.2 and higher. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000007">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.8 API. Use svn_auth_get_platform_specific_provider with provider_name of "keychain" and provider_type of "ssl_client_cert_pw". </dd></dl>

</div>
</div>
<a class="anchor" id="ad0ada33b2e6776dc056ab70a15299c02"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_kwallet_simple_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>This is like <a class="el" href="group__auth__fns__depr.html#ga6d34f6704d7d95da3b6bad548d3bcf58" title="Create and return *provider, an authentication provider of type svn_auth_cred_simple_t that gets/sets...">svn_client_get_simple_provider()</a>, except that the password is stored in KWallet.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6 </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function actually works only on systems with libsvn_auth_kwallet and KWallet installed. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000010">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.8 API. Use svn_auth_get_platform_specific_provider with provider_name of "kwallet" and provider_type of "simple". </dd></dl>

</div>
</div>
<a class="anchor" id="a4cfb9708bb9ee684f494d2fdf027a877"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_kwallet_ssl_client_cert_pw_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>This is like <a class="el" href="group__auth__fns__depr.html#gac3c621371933d52e2b1791aea07b31d3" title="Create and return *provider, an authentication provider of type svn_auth_cred_ssl_client_cert_pw_t, allocated in pool. ">svn_client_get_ssl_client_cert_pw_file_provider()</a>, except that the password is stored in KWallet.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6 </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function actually works only on systems with libsvn_auth_kwallet and KWallet installed. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000011">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.8 API. Use svn_auth_get_platform_specific_provider with provider_name of "kwallet" and provider_type of "ssl_client_cert_pw". </dd></dl>

</div>
</div>
<a class="anchor" id="acc9973cdd97aa3dec04569827a328c8e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_auth_get_platform_specific_client_providers </td>
          <td>(</td>
          <td class="paramtype">apr_array_header_t **&#160;</td>
          <td class="paramname"><em>providers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__config_8h.html#aab78e7d9b95c9bcfe0bdf1d9f3212596">svn_config_t</a> *&#160;</td>
          <td class="paramname"><em>config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*providers</em> to an array of <code><a class="el" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open(). ">svn_auth_provider_object_t</a> *</code> objects. </p>
<p>Only client authentication providers available for the current platform are returned. Order of the platform-specific authentication providers is determined by the 'password-stores' configuration option which is retrieved from <em>config</em>. <em>config</em> can be NULL.</p>
<p>Create and allocate <em>*providers</em> in <em>pool</em>.</p>
<p>Default order of the platform-specific authentication providers:</p>
<ol type="1">
<li>gnome-keyring</li>
<li>kwallet</li>
<li>keychain</li>
<li>gpg-agent</li>
<li>windows-cryptoapi</li>
</ol>
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>

</div>
</div>
<a class="anchor" id="a0efdc798365a84b0416f12e861b04831"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_auth_get_platform_specific_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>provider_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>provider_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open(). ">svn_auth_provider_object_t</a></code>, or return <code>NULL</code> if the provider is not available for the requested platform or the requested provider is unknown. </p>
<p>Valid <em>provider_name</em> values are: "gnome_keyring", "keychain", "kwallet", "gpg_agent", and "windows".</p>
<p>Valid <em>provider_type</em> values are: "simple", "ssl_client_cert_pw" and "ssl_server_trust".</p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>What actually happens is we invoke the appropriate provider function to supply the <em>provider</em>, like so:</p>
<p>svn_auth_get_&lt;name&gt;_&lt;type&gt;_provider(<em>provider</em>, <em>pool</em>);</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>

</div>
</div>
<a class="anchor" id="a0d1cf74b8f9e2f55a92f1be7a942adb3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_simple_prompt_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#gab3e889e27559677e7e1a13a9142a381d">svn_auth_simple_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>retry_limit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a> that gets information by prompting the user with <em>prompt_func</em> and <em>prompt_baton</em>. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>If both <code>SVN_AUTH_PARAM_DEFAULT_USERNAME</code> and <code>SVN_AUTH_PARAM_DEFAULT_PASSWORD</code> are defined as runtime parameters in the <code>auth_baton</code>, then <em>*provider</em> will return the default arguments when <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> is called. If <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> fails, then <em>*provider</em> will re-prompt <em>retry_limit</em> times (via <a class="el" href="group__auth__fns.html#gab18c2431ea55881ef52b647815600cd3" title="Get another set of credentials, assuming previous ones failed to authenticate. ">svn_auth_next_credentials()</a>). For infinite retries, set <em>retry_limit</em> to value less than 0.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="a7046599e07079f36f7a2845eeb537ca5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_simple_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Like svn_auth_get_simple_provider2, but without the ability to call the svn_auth_plaintext_prompt_func_t callback, and the provider always assumes that it is allowed to store the password in plaintext. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000002">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.5 API. </dd></dl>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="adbe6e4f9a56ed5108f06f95d40b8042e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_simple_provider2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#gad411a1955468c3efac5f823cb437681f">svn_auth_plaintext_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>plaintext_prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>If the provider is going to save the password unencrypted, it calls <em>plaintext_prompt_func</em>, passing <em>prompt_baton</em>, before saving the password.</p>
<p>If <em>plaintext_prompt_func</em> is NULL it is not called and the answer is assumed to be TRUE. This matches the deprecated behaviour of storing unencrypted passwords by default, and is only done this way for backward compatibility reasons. Client developers are highly encouraged to provide this callback to ensure their users are made aware of the fact that their password is going to be stored unencrypted. In the future, providers may default to not storing the password unencrypted if this callback is NULL.</p>
<p>Clients can however set the callback to NULL and set SVN_AUTH_PARAM_STORE_PLAINTEXT_PASSWORDS to SVN_CONFIG_FALSE or SVN_CONFIG_TRUE to enforce a certain behaviour.</p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>If a default username or password is available, <em>*provider</em> will honor them as well, and return them when <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> is called. (see <code>SVN_AUTH_PARAM_DEFAULT_USERNAME</code> and <code>SVN_AUTH_PARAM_DEFAULT_PASSWORD</code>).</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>

</div>
</div>
<a class="anchor" id="aa2fa9ec4071016474d7a927cb4dbacf7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_ssl_client_cert_file_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT credentials. ">svn_auth_cred_ssl_client_cert_t</a></code>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials from the configuration mechanism. The returned credential is used to load the appropriate client certificate for authentication when requested by a server.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="a091023baac1bdc7846dbb9c3a1b0fdfc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_ssl_client_cert_prompt_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#ga5afb52c44e95354a2ec52f6fe030c5d2">svn_auth_ssl_client_cert_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>retry_limit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT credentials. ">svn_auth_cred_ssl_client_cert_t</a></code>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials by using the <em>prompt_func</em> and <em>prompt_baton</em>. The returned credential is used to load the appropriate client certificate for authentication when requested by a server. The prompt will be retried <em>retry_limit</em> times. For infinite retries, set <em>retry_limit</em> to value less than 0.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="a031474a8fae4e3d2b191cee3e8e8a165"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_ssl_client_cert_pw_file_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Like svn_auth_get_ssl_client_cert_pw_file_provider2, but without the ability to call the svn_auth_plaintext_passphrase_prompt_func_t callback, and the provider always assumes that it is not allowed to store the passphrase in plaintext. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000013">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.5 API. </dd></dl>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="a6daa69fd91b8a658c3af25f27ab40a20"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_ssl_client_cert_pw_file_provider2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#ga81da0ae3bea6ac790f9c7f113db270cc">svn_auth_plaintext_passphrase_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>plaintext_passphrase_prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>If the provider is going to save the passphrase unencrypted, it calls <em>plaintext_passphrase_prompt_func</em>, passing <em>prompt_baton</em>, before saving the passphrase.</p>
<p>If <em>plaintext_passphrase_prompt_func</em> is NULL it is not called and the passphrase is not stored in plaintext. Client developers are highly encouraged to provide this callback to ensure their users are made aware of the fact that their passphrase is going to be stored unencrypted.</p>
<p>Clients can however set the callback to NULL and set SVN_AUTH_PARAM_STORE_SSL_CLIENT_CERT_PP_PLAINTEXT to SVN_CONFIG_FALSE or SVN_CONFIG_TRUE to enforce a certain behaviour.</p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>

</div>
</div>
<a class="anchor" id="afe35741fb55873c3c4227d237e19bc14"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_ssl_client_cert_pw_prompt_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#gafeb529b5bafaed2e3f423e4186d60f06">svn_auth_ssl_client_cert_pw_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>retry_limit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials by using the <em>prompt_func</em> and <em>prompt_baton</em>. The returned credential is used when a loaded client certificate is protected by a passphrase. The prompt will be retried <em>retry_limit</em> times. For infinite retries, set <em>retry_limit</em> to value less than 0.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="aaa8fe3918d02a179811ab9a03ddaec99"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_ssl_server_trust_file_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. ">svn_auth_cred_ssl_server_trust_t</a></code>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials from the configuration mechanism. The returned credential is used to override SSL security on an error.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="a204388c3be43bff3c51e4490d7f40f43"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_ssl_server_trust_prompt_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#gac5805f633a96271f97b919297e9908a3">svn_auth_ssl_server_trust_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. ">svn_auth_cred_ssl_server_trust_t</a></code>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials by using the <em>prompt_func</em> and <em>prompt_baton</em>. The returned credential is used to override SSL security on an error.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="a99da7f5d7e4b64aadaed2b94d958aebb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_username_prompt_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#gaf05167cb101739421c2e9542e27d5a88">svn_auth_username_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>retry_limit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__username__t.html" title="SVN_AUTH_CRED_USERNAME credentials. ">svn_auth_cred_username_t</a></code> that gets information by prompting the user with <em>prompt_func</em> and <em>prompt_baton</em>. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>If <code>SVN_AUTH_PARAM_DEFAULT_USERNAME</code> is defined as a runtime parameter in the <code>auth_baton</code>, then <em>*provider</em> will return the default argument when <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> is called. If <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> fails, then <em>*provider</em> will re-prompt <em>retry_limit</em> times (via <a class="el" href="group__auth__fns.html#gab18c2431ea55881ef52b647815600cd3" title="Get another set of credentials, assuming previous ones failed to authenticate. ">svn_auth_next_credentials()</a>). For infinite retries, set <em>retry_limit</em> to value less than 0.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="ac107e10d2325dbe7d4805a64aa6bd6c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_username_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__username__t.html" title="SVN_AUTH_CRED_USERNAME credentials. ">svn_auth_cred_username_t</a></code> that gets/sets information from a user's ~/.subversion configuration directory. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>If a default username is available, <em>*provider</em> will honor it, and return it when <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> is called. (See <code>SVN_AUTH_PARAM_DEFAULT_USERNAME</code>.)</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="a150ee5110b383bcdb2ce9b341dc26798"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_windows_simple_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>This is like <a class="el" href="svn__auth_8h.html#a7046599e07079f36f7a2845eeb537ca5" title="Like svn_auth_get_simple_provider2, but without the ability to call the svn_auth_plaintext_prompt_fun...">svn_auth_get_simple_provider()</a>, except that, when running on Window 2000 or newer (or any other Windows version that includes the CryptoAPI), the provider encrypts the password before storing it to disk. On earlier versions of Windows, the provider does nothing.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is only available on Windows.</dd>
<dd>
An administrative password reset may invalidate the account's secret key. This function will detect that situation and behave as if the password were not cached at all. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000003">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.8 API. Use svn_auth_get_platform_specific_provider with provider_name of "windows" and provider_type of "simple". </dd></dl>

</div>
</div>
<a class="anchor" id="a727c53b91e8d6b2d1d140b38e19f4d60"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_windows_ssl_client_cert_pw_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a></code> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>This is like <a class="el" href="svn__auth_8h.html#a031474a8fae4e3d2b191cee3e8e8a165" title="Like svn_auth_get_ssl_client_cert_pw_file_provider2, but without the ability to call the svn_auth_pla...">svn_auth_get_ssl_client_cert_pw_file_provider()</a>, except that when running on Window 2000 or newer, the provider encrypts the password before storing it to disk. On earlier versions of Windows, the provider does nothing.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6 </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is only available on Windows.</dd>
<dd>
An administrative password reset may invalidate the account's secret key. This function will detect that situation and behave as if the password were not cached at all. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000004">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.8 API. Use svn_auth_get_platform_specific_provider with provider_name of "windows" and provider_type of "ssl_client_cert_pw". </dd></dl>

</div>
</div>
<a class="anchor" id="aba0697d924aebb6d00a7a0fa40965161"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_auth_get_windows_ssl_server_trust_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*provider</em> to an authentication provider of type <code><a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. ">svn_auth_cred_ssl_server_trust_t</a></code>, allocated in <em>pool</em>. </p>
<p>This provider automatically validates ssl server certificates with the CryptoApi, like Internet Explorer and the Windows network API do. This allows the rollout of root certificates via Windows Domain policies, instead of Subversion specific configuration.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.5. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is only available on Windows. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000005">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.8 API. Use svn_auth_get_platform_specific_provider with provider_name of "windows" and provider_type of "ssl_server_trust". </dd></dl>

</div>
</div>
<a class="anchor" id="ae9807e72666c1838813f9de3d8cb7373"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structsvn__version__t.html">svn_version_t</a>* svn_auth_gnome_keyring_version </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get libsvn_auth_gnome_keyring version information. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6 </dd></dl>

</div>
</div>
<a class="anchor" id="a204f231da37e0d8de0d2939b41483153"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structsvn__version__t.html">svn_version_t</a>* svn_auth_kwallet_version </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get libsvn_auth_kwallet version information. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6 </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:17:25 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
