<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: svn_hash.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_c37f7789c49aa9e5999234152b1ef6ed.html">subversion</a></li><li class="navelem"><a class="el" href="dir_334478eea8dba5ae935f94af9469978f.html">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">svn_hash.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Dumping and reading hash tables to/from files.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;apr.h&gt;</code><br/>
<code>#include &lt;apr_pools.h&gt;</code><br/>
<code>#include &lt;apr_hash.h&gt;</code><br/>
<code>#include &lt;apr_tables.h&gt;</code><br/>
<code>#include &lt;apr_file_io.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="svn__types_8h_source.html">svn_types.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__io_8h_source.html">svn_io.h</a>&quot;</code><br/>
</div>
<p><a href="svn__hash_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a97953e02952e28c7c337265319a35a7f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__hash_8h.html#a97953e02952e28c7c337265319a35a7f">SVN_KEYLINE_MAXLEN</a>&#160;&#160;&#160;100</td></tr>
<tr class="memdesc:a97953e02952e28c7c337265319a35a7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">The longest the "K &lt;number&gt;" line can be in one of our hashdump files.  <a href="#a97953e02952e28c7c337265319a35a7f">More...</a><br/></td></tr>
<tr class="separator:a97953e02952e28c7c337265319a35a7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae5a5a8d8d7d7f4d1554f5e16087ca2ec"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__read__write.html#gae5a5a8d8d7d7f4d1554f5e16087ca2ec">SVN_HASH_TERMINATOR</a>&#160;&#160;&#160;&quot;END&quot;</td></tr>
<tr class="memdesc:gae5a5a8d8d7d7f4d1554f5e16087ca2ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">The conventional terminator for hash dumps.  <a href="group__svn__hash__read__write.html#gae5a5a8d8d7d7f4d1554f5e16087ca2ec">More...</a><br/></td></tr>
<tr class="separator:gae5a5a8d8d7d7f4d1554f5e16087ca2ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga590a4fab724a73afa2f4270d65cf6362"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__misc.html#ga590a4fab724a73afa2f4270d65cf6362">svn_hash_gets</a>(ht, key)&#160;&#160;&#160;apr_hash_get(ht, key, APR_HASH_KEY_STRING)</td></tr>
<tr class="memdesc:ga590a4fab724a73afa2f4270d65cf6362"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shortcut for apr_hash_get() with a const char * key.  <a href="group__svn__hash__misc.html#ga590a4fab724a73afa2f4270d65cf6362">More...</a><br/></td></tr>
<tr class="separator:ga590a4fab724a73afa2f4270d65cf6362"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd4e895dd7571b44d63a63bb894e1f6a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__misc.html#gadd4e895dd7571b44d63a63bb894e1f6a">svn_hash_sets</a>(ht, key, val)&#160;&#160;&#160;apr_hash_set(ht, key, APR_HASH_KEY_STRING, val)</td></tr>
<tr class="memdesc:gadd4e895dd7571b44d63a63bb894e1f6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shortcut for apr_hash_set() with a const char * key.  <a href="group__svn__hash__misc.html#gadd4e895dd7571b44d63a63bb894e1f6a">More...</a><br/></td></tr>
<tr class="separator:gadd4e895dd7571b44d63a63bb894e1f6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gab1cd98861d5cff815e1234cfc8570bb4"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__diff.html#gab1cd98861d5cff815e1234cfc8570bb4">svn_hash_diff_func_t</a> )(const void *key, apr_ssize_t klen, enum <a class="el" href="group__svn__hash__diff.html#ga0f4f9cf5f916e1bb87362c26ac1c2f9b">svn_hash_diff_key_status</a> status, void *baton)</td></tr>
<tr class="memdesc:gab1cd98861d5cff815e1234cfc8570bb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function type for expressing a key's status between two hash tables.  <a href="group__svn__hash__diff.html#gab1cd98861d5cff815e1234cfc8570bb4">More...</a><br/></td></tr>
<tr class="separator:gab1cd98861d5cff815e1234cfc8570bb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga0f4f9cf5f916e1bb87362c26ac1c2f9b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__diff.html#ga0f4f9cf5f916e1bb87362c26ac1c2f9b">svn_hash_diff_key_status</a> { <br/>
&#160;&#160;<b>svn_hash_diff_key_both</b>, 
<br/>
&#160;&#160;<b>svn_hash_diff_key_a</b>, 
<br/>
&#160;&#160;<b>svn_hash_diff_key_b</b>
<br/>
 }</td></tr>
<tr class="memdesc:ga0f4f9cf5f916e1bb87362c26ac1c2f9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hash key status indicator for svn_hash_diff_func_t.  <a href="group__svn__hash__diff.html#ga0f4f9cf5f916e1bb87362c26ac1c2f9b">More...</a><br/></td></tr>
<tr class="separator:ga0f4f9cf5f916e1bb87362c26ac1c2f9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gae9a87d039f8af716e37f8fcf0b9db61d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__read__write.html#gae9a87d039f8af716e37f8fcf0b9db61d">svn_hash_read2</a> (apr_hash_t *hash, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream, const char *terminator, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gae9a87d039f8af716e37f8fcf0b9db61d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a hash table from <em>stream</em>, storing the resultants names and values in <em>hash</em>.  <a href="group__svn__hash__read__write.html#gae9a87d039f8af716e37f8fcf0b9db61d">More...</a><br/></td></tr>
<tr class="separator:gae9a87d039f8af716e37f8fcf0b9db61d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb5bad4c023553ff2be614aeeb54d5db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__read__write.html#gacb5bad4c023553ff2be614aeeb54d5db">svn_hash_write2</a> (apr_hash_t *hash, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream, const char *terminator, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gacb5bad4c023553ff2be614aeeb54d5db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dump <em>hash</em> to <em>stream</em>.  <a href="group__svn__hash__read__write.html#gacb5bad4c023553ff2be614aeeb54d5db">More...</a><br/></td></tr>
<tr class="separator:gacb5bad4c023553ff2be614aeeb54d5db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9da036ef903191baaed07e1e5322f9b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__read__write.html#gac9da036ef903191baaed07e1e5322f9b">svn_hash_read_incremental</a> (apr_hash_t *hash, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream, const char *terminator, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gac9da036ef903191baaed07e1e5322f9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__hash__read__write.html#gae9a87d039f8af716e37f8fcf0b9db61d" title="Read a hash table from stream, storing the resultants names and values in hash. ">svn_hash_read2()</a>, but allows <em>stream</em> to contain deletion lines which remove entries from <em>hash</em> as well as adding to it.  <a href="group__svn__hash__read__write.html#gac9da036ef903191baaed07e1e5322f9b">More...</a><br/></td></tr>
<tr class="separator:gac9da036ef903191baaed07e1e5322f9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0781a98240667fc4554195decba66392"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__read__write.html#ga0781a98240667fc4554195decba66392">svn_hash_write_incremental</a> (apr_hash_t *hash, apr_hash_t *oldhash, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream, const char *terminator, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga0781a98240667fc4554195decba66392"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__hash__read__write.html#gacb5bad4c023553ff2be614aeeb54d5db" title="Dump hash to stream. ">svn_hash_write2()</a>, but only writes out entries for keys which differ between <em>hash</em> and <em>oldhash</em>, and also writes out deletion lines for keys which are present in <em>oldhash</em> but not in <em>hash</em>.  <a href="group__svn__hash__read__write.html#ga0781a98240667fc4554195decba66392">More...</a><br/></td></tr>
<tr class="separator:ga0781a98240667fc4554195decba66392"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab36785b881d3e6ceb0641c92333ed8ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__read__write.html#gab36785b881d3e6ceb0641c92333ed8ba">svn_hash_read</a> (apr_hash_t *hash, apr_file_t *srcfile, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gab36785b881d3e6ceb0641c92333ed8ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function behaves like <a class="el" href="group__svn__hash__read__write.html#gae9a87d039f8af716e37f8fcf0b9db61d" title="Read a hash table from stream, storing the resultants names and values in hash. ">svn_hash_read2()</a>, but it only works on an apr_file_t input, empty files are accepted, and the hash is expected to be terminated with a line containing "END" or "PROPS-END".  <a href="group__svn__hash__read__write.html#gab36785b881d3e6ceb0641c92333ed8ba">More...</a><br/></td></tr>
<tr class="separator:gab36785b881d3e6ceb0641c92333ed8ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b5ba45aadf9b26c9ee948484b817d23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__read__write.html#ga4b5ba45aadf9b26c9ee948484b817d23">svn_hash_write</a> (apr_hash_t *hash, apr_file_t *destfile, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga4b5ba45aadf9b26c9ee948484b817d23"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function behaves like <a class="el" href="group__svn__hash__read__write.html#gacb5bad4c023553ff2be614aeeb54d5db" title="Dump hash to stream. ">svn_hash_write2()</a>, but it only works on an apr_file_t output, and the terminator is always "END".  <a href="group__svn__hash__read__write.html#ga4b5ba45aadf9b26c9ee948484b817d23">More...</a><br/></td></tr>
<tr class="separator:ga4b5ba45aadf9b26c9ee948484b817d23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7feef3ed6d363c52e4be350c24d33cba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__diff.html#ga7feef3ed6d363c52e4be350c24d33cba">svn_hash_diff</a> (apr_hash_t *hash_a, apr_hash_t *hash_b, <a class="el" href="group__svn__hash__diff.html#gab1cd98861d5cff815e1234cfc8570bb4">svn_hash_diff_func_t</a> diff_func, void *diff_func_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga7feef3ed6d363c52e4be350c24d33cba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the diff of two hashtables.  <a href="group__svn__hash__diff.html#ga7feef3ed6d363c52e4be350c24d33cba">More...</a><br/></td></tr>
<tr class="separator:ga7feef3ed6d363c52e4be350c24d33cba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c486bc8272aba8044f4cbe44d2ffba6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__misc.html#ga0c486bc8272aba8044f4cbe44d2ffba6">svn_hash_keys</a> (apr_array_header_t **array, apr_hash_t *hash, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga0c486bc8272aba8044f4cbe44d2ffba6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the keys to <em>hash</em> in <em>*array</em>.  <a href="group__svn__hash__misc.html#ga0c486bc8272aba8044f4cbe44d2ffba6">More...</a><br/></td></tr>
<tr class="separator:ga0c486bc8272aba8044f4cbe44d2ffba6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7bbf18294f4ae87aa2532009a23fc56e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__hash__misc.html#ga7bbf18294f4ae87aa2532009a23fc56e">svn_hash_from_cstring_keys</a> (apr_hash_t **hash, const apr_array_header_t *keys, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga7bbf18294f4ae87aa2532009a23fc56e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*hash</em> to a new hash whose keys come from the items in <em>keys</em> (an array of <code>const char *</code> items), and whose values are match their corresponding key.  <a href="group__svn__hash__misc.html#ga7bbf18294f4ae87aa2532009a23fc56e">More...</a><br/></td></tr>
<tr class="separator:ga7bbf18294f4ae87aa2532009a23fc56e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Dumping and reading hash tables to/from files. </p>

<p>Definition in file <a class="el" href="svn__hash_8h_source.html">svn_hash.h</a>.</p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a97953e02952e28c7c337265319a35a7f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_KEYLINE_MAXLEN&#160;&#160;&#160;100</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The longest the "K &lt;number&gt;" line can be in one of our hashdump files. </p>

<p>Definition at line <a class="el" href="svn__hash_8h_source.html#l00046">46</a> of file <a class="el" href="svn__hash_8h_source.html">svn_hash.h</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:17:26 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
