<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_32) on Wed Aug 19 10:17:46 UTC 2015 -->
<TITLE>
SVNUtil
</TITLE>

<META NAME="date" CONTENT="2015-08-19">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SVNUtil";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/apache/subversion/javahl/SVNRepos.html" title="class in org.apache.subversion.javahl"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/apache/subversion/javahl/SVNUtil.ConflictDisplayStyle.html" title="enum in org.apache.subversion.javahl"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/apache/subversion/javahl/SVNUtil.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SVNUtil.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.apache.subversion.javahl</FONT>
<BR>
Class SVNUtil</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.apache.subversion.javahl.SVNUtil</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>SVNUtil</B><DT>extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
</PRE>

<P>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->

<A NAME="nested_class_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Nested Class Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.ConflictDisplayStyle.html" title="enum in org.apache.subversion.javahl">SVNUtil.ConflictDisplayStyle</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Style for displaying conflicts in merge output.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.html" title="class in org.apache.subversion.javahl">SVNUtil.Credential</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generic credential description.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.CredentialTypeMismatch.html" title="class in org.apache.subversion.javahl">SVNUtil.CredentialTypeMismatch</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exception used by calling the wrong accessor on Credential for
 the given credential type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.DiffOptions.html" title="class in org.apache.subversion.javahl">SVNUtil.DiffOptions</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Options to control the behaviour of the file diff routines.</TD>
</TR>
</TABLE>
&nbsp;<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#EOL_CR">EOL_CR</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use the carraige-return code point ('<code>\x0d</code>')
 for the newline separator.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#EOL_CRLF">EOL_CRLF</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use carriage-return/linefeed sequence ('<code>\x0d\x0a</code>')
 for the newline separator.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#EOL_LF">EOL_LF</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use the linefeed code point ('<code>\x0a</code>')
 for the newline separator.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#SVNUtil()">SVNUtil</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,byte[]&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#buildKeywords(byte[], long, java.lang.String, java.lang.String, java.util.Date, java.lang.String)">buildKeywords</A></B>(byte[]&nbsp;keywordsValue,
              long&nbsp;revision,
              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;url,
              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;reposRootUrl,
              <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Date.html?is-external=true" title="class or interface in java.util">Date</A>&nbsp;date,
              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;author)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Build a dictionary of expanded keyword values, given the
 contents of a file's <code>svn:keywords</code> property, its
 revision, URL, the date it was committed on, the author of the
 commit and teh URL of the repository root.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#canonicalizeNodeProperty(java.lang.String, byte[], java.lang.String, org.apache.subversion.javahl.types.NodeKind, java.lang.String)">canonicalizeNodeProperty</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name,
                         byte[]&nbsp;value,
                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;path,
                         <A HREF="../../../../org/apache/subversion/javahl/types/NodeKind.html" title="enum in org.apache.subversion.javahl.types">NodeKind</A>&nbsp;kind,
                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;mimeType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Validate the value of an <code>svn:</code> property on file or
 directory and return a canonical representation of its value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#canonicalizeNodeProperty(java.lang.String, byte[], java.lang.String, org.apache.subversion.javahl.types.NodeKind, java.lang.String, java.io.InputStream)">canonicalizeNodeProperty</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name,
                         byte[]&nbsp;value,
                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;path,
                         <A HREF="../../../../org/apache/subversion/javahl/types/NodeKind.html" title="enum in org.apache.subversion.javahl.types">NodeKind</A>&nbsp;kind,
                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;mimeType,
                         <A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A>&nbsp;fileContents)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Validate the value of an <code>svn:</code> property on file or
 directory and return a canonical representation of its value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#disableNativeCredentialsStore()">disableNativeCredentialsStore</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disable storing authentication credentials in Subversion's
 standard credentials store in the configuration directory and
 system-specific secure locations.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#enableNativeCredentialsStore()">enableNativeCredentialsStore</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable storing authentication credentials in Subversion's
 standard credentials store in the configuration directory and
 system-specific secure locations.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#fileDiff(java.lang.String, java.lang.String, org.apache.subversion.javahl.SVNUtil.DiffOptions, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.io.OutputStream)">fileDiff</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;originalFile,
         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;modifiedFile,
         <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.DiffOptions.html" title="class in org.apache.subversion.javahl">SVNUtil.DiffOptions</A>&nbsp;diffOptions,
         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;originalHeader,
         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;modifiedHeader,
         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;headerEncoding,
         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;relativeToDir,
         <A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A>&nbsp;resultStream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Given two versions of a file, base (<code>originalFile</code>)
 and current (<code>modifiedFile</code>), show differences between
 them in unified diff format.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#fileMerge(java.lang.String, java.lang.String, java.lang.String, org.apache.subversion.javahl.SVNUtil.DiffOptions, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.subversion.javahl.SVNUtil.ConflictDisplayStyle, java.io.OutputStream)">fileMerge</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;originalFile,
          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;modifiedFile,
          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;latestFile,
          <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.DiffOptions.html" title="class in org.apache.subversion.javahl">SVNUtil.DiffOptions</A>&nbsp;diffOptions,
          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;conflictOriginal,
          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;conflictModified,
          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;conflictLatest,
          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;conflictSeparator,
          <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.ConflictDisplayStyle.html" title="enum in org.apache.subversion.javahl">SVNUtil.ConflictDisplayStyle</A>&nbsp;conflictStyle,
          <A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A>&nbsp;resultStream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Given three versions of a file, base (<code>originalFile</code>),
 incoming (<code>modifiedFile</code>) and current
 (<code>latestFile</code>, produce a merged result, possibly
 displaying conflict markers.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.html" title="class in org.apache.subversion.javahl">SVNUtil.Credential</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#getCredential(java.lang.String, org.apache.subversion.javahl.SVNUtil.Credential.Kind, java.lang.String)">getCredential</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;configDir,
              <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.Kind.html" title="enum in org.apache.subversion.javahl">SVNUtil.Credential.Kind</A>&nbsp;kind,
              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;realm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find a stored credential.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#isNativeCredentialsStoreEnabled()">isNativeCredentialsStoreEnabled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find out if the standard credentials store is enabled.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types">ExternalItem</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#parseExternals(byte[], java.lang.String, boolean)">parseExternals</A></B>(byte[]&nbsp;description,
               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;parentDirectory,
               boolean&nbsp;canonicalizeUrl)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parse <code>description</code>, assuming it is an externals
 specification in the format required for the
 <code>svn:externals</code> property, and return a list of
 parsed external items.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.html" title="class in org.apache.subversion.javahl">SVNUtil.Credential</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#removeCredential(java.lang.String, org.apache.subversion.javahl.SVNUtil.Credential.Kind, java.lang.String)">removeCredential</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;configDir,
                 <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.Kind.html" title="enum in org.apache.subversion.javahl">SVNUtil.Credential.Kind</A>&nbsp;kind,
                 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;realm)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remove a stored credential.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#resolveExternalsUrl(org.apache.subversion.javahl.types.ExternalItem, java.lang.String, java.lang.String)">resolveExternalsUrl</A></B>(<A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types">ExternalItem</A>&nbsp;external,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;reposRootUrl,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;parentDirUrl)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If the URL in <code>external</code> is relative, resolve it to
 an absolute URL, using <code>reposRootUrl</code> and
 <code>parentDirUrl</code> to provide contest.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.html" title="class in org.apache.subversion.javahl">SVNUtil.Credential</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#searchCredentials(java.lang.String, org.apache.subversion.javahl.SVNUtil.Credential.Kind, java.lang.String, java.lang.String, java.lang.String, java.lang.String)">searchCredentials</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;configDir,
                  <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.Kind.html" title="enum in org.apache.subversion.javahl">SVNUtil.Credential.Kind</A>&nbsp;kind,
                  <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;realmPattern,
                  <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;usernamePattern,
                  <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;hostnamePattern,
                  <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;textPattern)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find stored credentials that match the given search criteria.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#translateStream(java.io.InputStream, byte[], boolean, boolean, byte[], long, java.lang.String, java.lang.String, java.util.Date, java.lang.String)">translateStream</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A>&nbsp;source,
                byte[]&nbsp;eolMarker,
                boolean&nbsp;repairEol,
                boolean&nbsp;expandKeywords,
                byte[]&nbsp;keywordsValue,
                long&nbsp;revision,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;url,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;reposRootUrl,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Date.html?is-external=true" title="class or interface in java.util">Date</A>&nbsp;date,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;author)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Expand keywords and return a stream which performs end-of-line
 translation and keyword expansion when read from.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#translateStream(java.io.InputStream, byte[], boolean, java.util.Map, boolean)">translateStream</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A>&nbsp;source,
                byte[]&nbsp;eolMarker,
                boolean&nbsp;repairEol,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,byte[]&gt;&nbsp;keywords,
                boolean&nbsp;expandKeywords)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a stream which performs end-of-line translation and
 keyword expansion when read from.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#translateStream(java.io.OutputStream, byte[], boolean, boolean, byte[], long, java.lang.String, java.lang.String, java.util.Date, java.lang.String)">translateStream</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A>&nbsp;destination,
                byte[]&nbsp;eolMarker,
                boolean&nbsp;repairEol,
                boolean&nbsp;expandKeywords,
                byte[]&nbsp;keywordsValue,
                long&nbsp;revision,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;url,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;reposRootUrl,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Date.html?is-external=true" title="class or interface in java.util">Date</A>&nbsp;date,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;author)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Expand keywords and return a stream which performs end-of-line
 translation and keyword expansion when written to.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#translateStream(java.io.OutputStream, byte[], boolean, java.util.Map, boolean)">translateStream</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A>&nbsp;destination,
                byte[]&nbsp;eolMarker,
                boolean&nbsp;repairEol,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,byte[]&gt;&nbsp;keywords,
                boolean&nbsp;expandKeywords)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a stream which performs end-of-line translation and
 keyword expansion when written to.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#unparseExternals(java.util.List, java.lang.String)">unparseExternals</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types">ExternalItem</A>&gt;&nbsp;items,
                 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;parentDirectory)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unparse and list of external items into a format suitable for
 the value of the <code>svn:externals</code> property and
 validate the result.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#unparseExternalsForAncientUnsupportedClients(java.util.List, java.lang.String)">unparseExternalsForAncientUnsupportedClients</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types">ExternalItem</A>&gt;&nbsp;items,
                                             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;parentDirectory)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unparse and list of external items into a format suitable for
 the value of the <code>svn:externals</code> property compatible
 with Subversion clients older than release 1.5, and validate
 the result.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="EOL_LF"><!-- --></A><H3>
EOL_LF</H3>
<PRE>
public static final byte[] <B>EOL_LF</B></PRE>
<DL>
<DD>Use the linefeed code point ('<code>\x0a</code>')
 for the newline separator.
<P>
<DL>
<DT><B>See Also:</B><DD><CODE>translateStream</CODE>, 
<CODE>untranslateStream</CODE></DL>
</DL>
<HR>

<A NAME="EOL_CR"><!-- --></A><H3>
EOL_CR</H3>
<PRE>
public static final byte[] <B>EOL_CR</B></PRE>
<DL>
<DD>Use the carraige-return code point ('<code>\x0d</code>')
 for the newline separator.
<P>
<DL>
<DT><B>See Also:</B><DD><CODE>translateStream</CODE>, 
<CODE>untranslateStream</CODE></DL>
</DL>
<HR>

<A NAME="EOL_CRLF"><!-- --></A><H3>
EOL_CRLF</H3>
<PRE>
public static final byte[] <B>EOL_CRLF</B></PRE>
<DL>
<DD>Use carriage-return/linefeed sequence ('<code>\x0d\x0a</code>')
 for the newline separator.
<P>
<DL>
<DT><B>See Also:</B><DD><CODE>translateStream</CODE>, 
<CODE>untranslateStream</CODE></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="SVNUtil()"><!-- --></A><H3>
SVNUtil</H3>
<PRE>
public <B>SVNUtil</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="enableNativeCredentialsStore()"><!-- --></A><H3>
enableNativeCredentialsStore</H3>
<PRE>
public static void <B>enableNativeCredentialsStore</B>()
                                         throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Enable storing authentication credentials in Subversion's
 standard credentials store in the configuration directory and
 system-specific secure locations.
 <p>
 The standard credentials store is enabled by default.
 <p>
 This setting will be inherited by all ISVNClient and ISVNRemote
 objects. Changing the setting will not affect existing such
 objects.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="disableNativeCredentialsStore()"><!-- --></A><H3>
disableNativeCredentialsStore</H3>
<PRE>
public static void <B>disableNativeCredentialsStore</B>()
                                          throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Disable storing authentication credentials in Subversion's
 standard credentials store in the configuration directory and
 system-specific secure locations. In this mode, the
 authentication (see <A HREF="../../../../org/apache/subversion/javahl/ISVNClient.html#setPrompt(org.apache.subversion.javahl.callback.AuthnCallback)"><CODE>ISVNClient.setPrompt(org.apache.subversion.javahl.callback.AuthnCallback)</CODE></A> and <A HREF="../../../../org/apache/subversion/javahl/remote/RemoteFactory.html#setPrompt(org.apache.subversion.javahl.callback.AuthnCallback)"><CODE>RemoteFactory.setPrompt(org.apache.subversion.javahl.callback.AuthnCallback)</CODE></A>) will be called every time the
 underlying library needs access to the credentials.
 <p>
 This mode is intented to support client implementations that
 use their own credentials store.
 <p>
 The standard credentials store is enabled by default.
 <p>
 This setting will be inherited by all ISVNClient and ISVNRemote
 objects. Changing the setting will not affect existing such
 objects.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="isNativeCredentialsStoreEnabled()"><!-- --></A><H3>
isNativeCredentialsStoreEnabled</H3>
<PRE>
public static boolean <B>isNativeCredentialsStoreEnabled</B>()
                                               throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Find out if the standard credentials store is enabled.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getCredential(java.lang.String, org.apache.subversion.javahl.SVNUtil.Credential.Kind, java.lang.String)"><!-- --></A><H3>
getCredential</H3>
<PRE>
public static <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.html" title="class in org.apache.subversion.javahl">SVNUtil.Credential</A> <B>getCredential</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;configDir,
                                               <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.Kind.html" title="enum in org.apache.subversion.javahl">SVNUtil.Credential.Kind</A>&nbsp;kind,
                                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;realm)
                                        throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A>,
                                               <A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></PRE>
<DL>
<DD>Find a stored credential.
 Unlike <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#searchCredentials(java.lang.String, org.apache.subversion.javahl.SVNUtil.Credential.Kind, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><CODE>searchCredentials(java.lang.String, org.apache.subversion.javahl.SVNUtil.Credential.Kind, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</CODE></A>, the the realm name is not
 a glob pattern.
 <p>
 <b>Note:</b> If the native credentials store is disabled, this
              method will always return <code>null</code>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>configDir</CODE> - The path to the configuration directory; if
        <code>null</code>, the default (system-specific) user
        configuration path will be used.<DD><CODE>kind</CODE> - The kind of the credential; may not be <code>null</code>.<DD><CODE>realm</CODE> - The realm name; may not be <code>null</code>.
<DT><B>Returns:</B><DD>the matching credential, or <code>null</code> if not found.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="removeCredential(java.lang.String, org.apache.subversion.javahl.SVNUtil.Credential.Kind, java.lang.String)"><!-- --></A><H3>
removeCredential</H3>
<PRE>
public static <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.html" title="class in org.apache.subversion.javahl">SVNUtil.Credential</A> <B>removeCredential</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;configDir,
                                                  <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.Kind.html" title="enum in org.apache.subversion.javahl">SVNUtil.Credential.Kind</A>&nbsp;kind,
                                                  <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;realm)
                                           throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A>,
                                                  <A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></PRE>
<DL>
<DD>Remove a stored credential.
 Unlike <CODE>#deleteCredentials</CODE>, the the realm name is not
 a glob pattern.
 <p>
 <b>Note:</b> If the native credentials store is disabled, this
              method will always return <code>null</code>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>configDir</CODE> - The path to the configuration directory; if
        <code>null</code>, the default (system-specific) user
        configuration path will be used.<DD><CODE>kind</CODE> - The kind of the credential; may not be <code>null</code>.<DD><CODE>realm</CODE> - The realm name; may not be <code>null</code>.
<DT><B>Returns:</B><DD>the deleted credential, or <code>null</code> if not found.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="searchCredentials(java.lang.String, org.apache.subversion.javahl.SVNUtil.Credential.Kind, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
searchCredentials</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.html" title="class in org.apache.subversion.javahl">SVNUtil.Credential</A>&gt; <B>searchCredentials</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;configDir,
                                                         <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.Credential.Kind.html" title="enum in org.apache.subversion.javahl">SVNUtil.Credential.Kind</A>&nbsp;kind,
                                                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;realmPattern,
                                                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;usernamePattern,
                                                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;hostnamePattern,
                                                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;textPattern)
                                                  throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A>,
                                                         <A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></PRE>
<DL>
<DD>Find stored credentials that match the given search criteria.
 <p>
 <b>Note:</b> If the native credentials store is disabled, this
              method will always return <code>null</code>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>configDir</CODE> - The path to the configuration directory; if
        <code>null</code>, the default (system-specific) user
        configuration path will be used.<DD><CODE>kind</CODE> - The kind of the credential; if <code>null</code>,
             all matching credential types will be returned.<DD><CODE>realmPattern</CODE> - A glob pattern for the realm string;
             if <code>null</code>, all realms will be considered;
             otherwise, only those credentials whose realm matches
             the pattern will be returned.<DD><CODE>usernamePattern</CODE> - A glob pattern for the username;
             if <code>null</code>, all credentials will be considered;
             otherwise, only those credentials that have a username,
             and where the username matches the pattern, will be
             returned.<DD><CODE>hostnamePattern</CODE> - A glob pattern for the hostnames of a
             server certificate; if <code>null</code>, all
             credntials will be considered; otherwise, only
             those credentials that have a server certificate
             with a hostname that matches the pattern will be
             returned.<DD><CODE>textPattern</CODE> - A glob pattern that must match any textual
             information in a credential, for example, a realm,
             username, certificate details, etc; passwords, passphrases
             and other info considered secret will not be matched;
<DT><B>Returns:</B><DD>the list of matching credentials.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="fileDiff(java.lang.String, java.lang.String, org.apache.subversion.javahl.SVNUtil.DiffOptions, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.io.OutputStream)"><!-- --></A><H3>
fileDiff</H3>
<PRE>
public static boolean <B>fileDiff</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;originalFile,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;modifiedFile,
                               <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.DiffOptions.html" title="class in org.apache.subversion.javahl">SVNUtil.DiffOptions</A>&nbsp;diffOptions,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;originalHeader,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;modifiedHeader,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;headerEncoding,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;relativeToDir,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A>&nbsp;resultStream)
                        throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Given two versions of a file, base (<code>originalFile</code>)
 and current (<code>modifiedFile</code>), show differences between
 them in unified diff format.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>originalFile</CODE> - The base file version (unmodified)<DD><CODE>modifiedFile</CODE> - The incoming file version (locally modified)<DD><CODE>diffOptions</CODE> - Options controlling how files are compared.
        May be <code>null</code>.<DD><CODE>originalHeader</CODE> - The header to display for the base file
        in the unidiff index block. If it is <code>null</code>,
        the <code>originalFile</code> path and its modification
        time will be used instead.<DD><CODE>modifiedHeader</CODE> - The header to display for the current
        file in the unidiff index block. If it is <code>null</code>,
        the <code>currentFile</code> path and its modification
        time will be used instead.<DD><CODE>headerEncoding</CODE> - The character encoding of the unidiff headers.<DD><CODE>relativeToDir</CODE> - If this parameter is not <null>, it must
        be the path of a (possibly non-immediate) parent of both
        <code>originalFile</code> and <code>modifiedFile</code>.
        This path will be stripped from the beginning of those
        file names if they are used in the unidiff index header.<DD><CODE>resultStream</CODE> - The stream that receives the merged output.
<DT><B>Returns:</B><DD><code>true</code> if there were differences between the files.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="fileMerge(java.lang.String, java.lang.String, java.lang.String, org.apache.subversion.javahl.SVNUtil.DiffOptions, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.subversion.javahl.SVNUtil.ConflictDisplayStyle, java.io.OutputStream)"><!-- --></A><H3>
fileMerge</H3>
<PRE>
public static boolean <B>fileMerge</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;originalFile,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;modifiedFile,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;latestFile,
                                <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.DiffOptions.html" title="class in org.apache.subversion.javahl">SVNUtil.DiffOptions</A>&nbsp;diffOptions,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;conflictOriginal,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;conflictModified,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;conflictLatest,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;conflictSeparator,
                                <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.ConflictDisplayStyle.html" title="enum in org.apache.subversion.javahl">SVNUtil.ConflictDisplayStyle</A>&nbsp;conflictStyle,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A>&nbsp;resultStream)
                         throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Given three versions of a file, base (<code>originalFile</code>),
 incoming (<code>modifiedFile</code>) and current
 (<code>latestFile</code>, produce a merged result, possibly
 displaying conflict markers.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>originalFile</CODE> - The base file version (common ancestor)<DD><CODE>modifiedFile</CODE> - The incoming file version (modified elsewhere)<DD><CODE>latestFile</CODE> - The current file version (locally modified)<DD><CODE>diffOptions</CODE> - Options controlling how files are compared.
        May be <code>null</code>.<DD><CODE>conflictOriginal</CODE> - Optional custom conflict marker for
        the <code>originalFile</code> contents.<DD><CODE>conflictModified</CODE> - Optional custom conflict marker for
        the <code>modifiedFile</code> contents.<DD><CODE>conflictLatest</CODE> - Optional custom conflict marker for
        the <code>latestFile</code> contents.<DD><CODE>conflictSeparator</CODE> - Optional custom conflict separator.<DD><CODE>conflictStyle</CODE> - Determines how conflicts are displayed.<DD><CODE>resultStream</CODE> - The stream that receives the merged output.
<DT><B>Returns:</B><DD><code>true</code> if there were any conflicts.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="canonicalizeNodeProperty(java.lang.String, byte[], java.lang.String, org.apache.subversion.javahl.types.NodeKind, java.lang.String)"><!-- --></A><H3>
canonicalizeNodeProperty</H3>
<PRE>
public static byte[] <B>canonicalizeNodeProperty</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name,
                                              byte[]&nbsp;value,
                                              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;path,
                                              <A HREF="../../../../org/apache/subversion/javahl/types/NodeKind.html" title="enum in org.apache.subversion.javahl.types">NodeKind</A>&nbsp;kind,
                                              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;mimeType)
                                       throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Validate the value of an <code>svn:</code> property on file or
 directory and return a canonical representation of its value.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - The name of the property (must be a valid svn: property)<DD><CODE>value</CODE> - The property's value<DD><CODE>path</CODE> - The path or URL of the file or directory that
        owns the property; only used for error messages<DD><CODE>kind</CODE> - The node kind of the file or dir that owns the property<DD><CODE>mimeType</CODE> - If <code>kind</code> is <CODE>NodeKind.file</CODE>, this is
        tye file's mime-type, used for extra validation for the
        <code>svn:eol-style</code> property. If it is <code>null</code>,
        the extra validation will be skipped.
<DT><B>Returns:</B><DD>a canonicalized representation of the property value
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE><DT><B>See Also:</B><DD><CODE>http://subversion.apache.org/docs/api/latest/group__svn__wc__properties.html#ga83296313ec59cc825176224ac8282ec2</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="canonicalizeNodeProperty(java.lang.String, byte[], java.lang.String, org.apache.subversion.javahl.types.NodeKind, java.lang.String, java.io.InputStream)"><!-- --></A><H3>
canonicalizeNodeProperty</H3>
<PRE>
public static byte[] <B>canonicalizeNodeProperty</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name,
                                              byte[]&nbsp;value,
                                              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;path,
                                              <A HREF="../../../../org/apache/subversion/javahl/types/NodeKind.html" title="enum in org.apache.subversion.javahl.types">NodeKind</A>&nbsp;kind,
                                              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;mimeType,
                                              <A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A>&nbsp;fileContents)
                                       throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Validate the value of an <code>svn:</code> property on file or
 directory and return a canonical representation of its value.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - The name of the property (must be a valid svn: property)<DD><CODE>value</CODE> - The property's value<DD><CODE>path</CODE> - The path or URL of the file or directory that
        owns the property; only used for error messages<DD><CODE>kind</CODE> - The node kind of the file or dir that owns the property<DD><CODE>mimeType</CODE> - If <code>kind</code> is <CODE>NodeKind.file</CODE>, this is
        tye file's mime-type, used for extra validation for the
        <code>svn:eol-style</code> property. If it is <code>null</code>,
        the extra validation will be skipped.<DD><CODE>fileContents</CODE> - A stream with the file's contents. Only used
        to check for line-ending consistency when validating the
        <code>svn:eol-style</code> property, and only when
        <code>kind</code> is <CODE>NodeKind.file</CODE> and
        <code>mimeType</code> is not <code>null</code>.
<DT><B>Returns:</B><DD>a canonicalized representation of the property value
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE><DT><B>See Also:</B><DD><CODE>http://subversion.apache.org/docs/api/latest/group__svn__wc__properties.html#ga83296313ec59cc825176224ac8282ec2</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="parseExternals(byte[], java.lang.String, boolean)"><!-- --></A><H3>
parseExternals</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types">ExternalItem</A>&gt; <B>parseExternals</B>(byte[]&nbsp;description,
                                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;parentDirectory,
                                                boolean&nbsp;canonicalizeUrl)
                                         throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Parse <code>description</code>, assuming it is an externals
 specification in the format required for the
 <code>svn:externals</code> property, and return a list of
 parsed external items.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>description</CODE> - The externals description.<DD><CODE>parentDirectory</CODE> - Used to construct error messages.<DD><CODE>canonicalizeUrl</CODE> - Whe <code>true</code>, canonicalize the
     <code>url</code> member of the returned objects. If the
     <code>url</code> member refers to an absolute URL, it will
     be canonicalized as URL consistent with the way URLs are
     canonicalized throughout the Subversion API. If, however,
     the <code>url</code> member makes use of the recognized
     (SVN-specific) relative URL syntax for
     <code>svn:externals</code>, "canonicalization" is an
     ill-defined concept which may even result in munging the
     relative URL syntax beyond recognition. You've been warned.
<DT><B>Returns:</B><DD>a list of <A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types"><CODE>ExternalItem</CODE></A>s
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="unparseExternals(java.util.List, java.lang.String)"><!-- --></A><H3>
unparseExternals</H3>
<PRE>
public static byte[] <B>unparseExternals</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types">ExternalItem</A>&gt;&nbsp;items,
                                      <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;parentDirectory)
                               throws <A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></PRE>
<DL>
<DD>Unparse and list of external items into a format suitable for
 the value of the <code>svn:externals</code> property and
 validate the result.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>items</CODE> - The list of <A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types"><CODE>ExternalItem</CODE></A>s<DD><CODE>parentDirectory</CODE> - Used to construct error messages.<DD><CODE>compatibleWithSvn1_5</CODE> - When <code>true</code>, the format
     of the returned property value will be compatible with
     clients older than Subversion 1.5.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="unparseExternalsForAncientUnsupportedClients(java.util.List, java.lang.String)"><!-- --></A><H3>
unparseExternalsForAncientUnsupportedClients</H3>
<PRE>
public static byte[] <B>unparseExternalsForAncientUnsupportedClients</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types">ExternalItem</A>&gt;&nbsp;items,
                                                                  <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;parentDirectory)
                                                           throws <A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></PRE>
<DL>
<DD>Unparse and list of external items into a format suitable for
 the value of the <code>svn:externals</code> property compatible
 with Subversion clients older than release 1.5, and validate
 the result.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>items</CODE> - The list of <A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types"><CODE>ExternalItem</CODE></A>s<DD><CODE>parentDirectory</CODE> - Used to construct error messages.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="resolveExternalsUrl(org.apache.subversion.javahl.types.ExternalItem, java.lang.String, java.lang.String)"><!-- --></A><H3>
resolveExternalsUrl</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>resolveExternalsUrl</B>(<A HREF="../../../../org/apache/subversion/javahl/types/ExternalItem.html" title="class in org.apache.subversion.javahl.types">ExternalItem</A>&nbsp;external,
                                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;reposRootUrl,
                                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;parentDirUrl)
                                  throws <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>If the URL in <code>external</code> is relative, resolve it to
 an absolute URL, using <code>reposRootUrl</code> and
 <code>parentDirUrl</code> to provide contest.
<p>
 Regardless if the URL is absolute or not, if there are no
 errors, the returned URL will be canonicalized.
<p>
 The following relative URL formats are supported:
 <dl>
  <dt><code>../</code></dt>
  <dd>relative to the parent directory of the external</dd>
  <dt><code>^/</code></dt>
  <dd>relative to the repository root</dd>
  <dt><code>//</code></dt>
  <dd>relative to the scheme</dd>
  <dt><code>/</code></dt>
  <dd>relative to the server's hostname</dd>
 </dl>
<p>
 The <code>../<code> and ^/ relative URLs may use <code>..</code>
 to remove path elements up to the server root.
<p>
 The external URL should not be canonicalized before calling
 this function, as otherwise the scheme relative URL
 '<code>//host/some/path</code>' would have been canonicalized
 to '<code>/host/some/path</code>' and we would not be able to
 match on the leading '<code>//</code>'.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="buildKeywords(byte[], long, java.lang.String, java.lang.String, java.util.Date, java.lang.String)"><!-- --></A><H3>
buildKeywords</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,byte[]&gt; <B>buildKeywords</B>(byte[]&nbsp;keywordsValue,
                                               long&nbsp;revision,
                                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;url,
                                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;reposRootUrl,
                                               <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Date.html?is-external=true" title="class or interface in java.util">Date</A>&nbsp;date,
                                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;author)
                                        throws <A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A>,
                                               <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Build a dictionary of expanded keyword values, given the
 contents of a file's <code>svn:keywords</code> property, its
 revision, URL, the date it was committed on, the author of the
 commit and teh URL of the repository root.
<p>
 Custom keywords defined in <code>svn:keywords</code> properties
 are expanded using the provided parameters and in accordance
 with the following format substitutions in the
 <code>keywordsValue</code>:
 <dl>
   <dt><code>%a</dt></code>
 <dd>The author.</dd>
   <dt><code>%b</dt></code>
 <dd>The basename of the URL.</dd>
   <dt><code>%d</dt></code>
 <dd>Short format of the date.</dd>
   <dt><code>%D</dt></code>
 <dd>Long format of the date.</dd>
   <dt><code>%P</dt></code>
 <dd>The file's path, relative to the repository root URL.</dd>
   <dt><code>%r</dt></code>
 <dd>The revision.</dd>
   <dt><code>%R</dt></code>
 <dd>The URL to the root of the repository.</dd>
   <dt><code>%u</dt></code>
 <dd>The URL of the file.</dd>
   <dt><code>%_</dt></code>
 <dd>A space (keyword definitions cannot contain a literal space).</dd>
   <dt><code>%%</dt></code>
 <dd>A literal '%'.</dd>
   <dt><code>%H</dt></code>
 <dd>Equivalent to <code>%P%_%r%_%d%_%a</code>.</dd>
   <dt><code>%I</dt></code>
 <dd>Equivalent to <code>%b%_%r%_%d%_%a</code>.</dd>
 </dl>
<p>
 Custom keywords are defined by appending '=' to the keyword
 name, followed by a string containing any combination of the
 format substitutions.
<p>
 Any of the <code>revision</code>, <code>url</code>,
 <code>reposRootUrl</code>, <code>date</code> and
 <code>author</code> parameters may be <code>null</code>, or
 <A HREF="../../../../org/apache/subversion/javahl/types/Revision.html#SVN_INVALID_REVNUM"><CODE>Revision.SVN_INVALID_REVNUM</CODE></A> for <code>revision</code>,
 to indicate that the information is not present. Each piece of
 information that is not present expands to the empty string
 wherever it appears in an expanded keyword value.  (This can
 result in multiple adjacent spaces in the expansion of a
 multi-valued keyword such as "<code>Id</code>".)
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></CODE>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="translateStream(java.io.InputStream, byte[], boolean, java.util.Map, boolean)"><!-- --></A><H3>
translateStream</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A> <B>translateStream</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A>&nbsp;source,
                                          byte[]&nbsp;eolMarker,
                                          boolean&nbsp;repairEol,
                                          <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,byte[]&gt;&nbsp;keywords,
                                          boolean&nbsp;expandKeywords)
                                   throws <A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A>,
                                          <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Return a stream which performs end-of-line translation and
 keyword expansion when read from.
<p>
 <b>Important:</b> Make sure you close the returned stream to
 ensure all data are flushed and cleaned up (this will also
 close the provided stream and dispose the related netive
 object).
<p>
 If <code>eolMarker</code> is not <code>null</code>, replace
 whatever any end-of-line sequences in the input with
 <code>eolMarker</code>.  If the input has an inconsistent line
 ending style, then:
 <ul>
   <li>if <code>repairEol</code> is <code>false</code>, then a
       subsequent read or other operation on the stream will
       generate an error when the inconsistency is detected;</li>
   <li>if <code>repaorEol</code> is <code>true</code>, convert any
       line ending to <code>eolMarker</code>.<br/>
       Recognized line endings are: "<code>\n</code>",
       "<code>\r</code>", and "<code>\r\n</code>".</li>
 </ul>
<p>
 Expand or contract keywords using the contents of
 <code>keywords</code> as the new values.  If
 <code>expandKeywords</code> is <code>true</code>, expand
 contracted keywords and re-expand expanded keywords; otherwise,
 contract expanded keywords and ignore contracted ones.
 Keywords not found in the dictionary are ignored (not
 contracted or expanded).  If the <code>keywords</code> itself
 is <code>null</code>, keyword substitution will be altogether
 ignored.
<p>
 Detect only keywords that are no longer than
 <code>SVN_KEYWORD_MAX_LEN</code> bytes (currently: 255),
 including the delimiters and the keyword itself.
<p>
 Recommendation: if <code>expandKeywords</code> is
 <code>false</code>, then you don't care about the keyword
 values, so just put <code>null</code> values into the
 <code>keywords</code> dictionary.
<p>
 If the inner stream implements marking and seeking via
 <A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true#mark(int)" title="class or interface in java.io"><CODE>InputStream.mark(int)</CODE></A> and <A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true#reset()" title="class or interface in java.io"><CODE>InputStream.reset()</CODE></A>, the
 translated stream will too.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>source</CODE> - the source (untranslated) stream.<DD><CODE>eolMarker</CODE> - the byte sequence to use as the end-of-line marker;
     must be one of <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#EOL_LF"><CODE>EOL_LF</CODE></A>, <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#EOL_CR"><CODE>EOL_CR</CODE></A>
     or <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#EOL_CRLF"><CODE>EOL_CRLF</CODE></A>.<DD><CODE>repairEol</CODE> - flag to repair end-of-lines; see above<DD><CODE>keywords</CODE> - the keyword dictionary; see <CODE>buildKeywords</CODE><DD><CODE>expandKeywords</CODE> - flag to expand keywords
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></CODE>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="translateStream(java.io.InputStream, byte[], boolean, boolean, byte[], long, java.lang.String, java.lang.String, java.util.Date, java.lang.String)"><!-- --></A><H3>
translateStream</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A> <B>translateStream</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A>&nbsp;source,
                                          byte[]&nbsp;eolMarker,
                                          boolean&nbsp;repairEol,
                                          boolean&nbsp;expandKeywords,
                                          byte[]&nbsp;keywordsValue,
                                          long&nbsp;revision,
                                          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;url,
                                          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;reposRootUrl,
                                          <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Date.html?is-external=true" title="class or interface in java.util">Date</A>&nbsp;date,
                                          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;author)
                                   throws <A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A>,
                                          <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Expand keywords and return a stream which performs end-of-line
 translation and keyword expansion when read from.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></CODE>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE><DT><B>See Also:</B><DD><CODE>buildKeywords</CODE>, 
<A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#translateStream(java.io.InputStream, byte[], boolean, java.util.Map, boolean)"><CODE>translateStream(InputStream,byte[],boolean,Map,boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="translateStream(java.io.OutputStream, byte[], boolean, java.util.Map, boolean)"><!-- --></A><H3>
translateStream</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A> <B>translateStream</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A>&nbsp;destination,
                                           byte[]&nbsp;eolMarker,
                                           boolean&nbsp;repairEol,
                                           <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,byte[]&gt;&nbsp;keywords,
                                           boolean&nbsp;expandKeywords)
                                    throws <A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A>,
                                           <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Return a stream which performs end-of-line translation and
 keyword expansion when written to. Behaves like
 <A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#translateStream(java.io.InputStream, byte[], boolean, java.util.Map, boolean)"><CODE>translateStream(InputStream,byte[],boolean,Map,boolean)</CODE></A>,
 except that it translates an <code>OutputStream</code> and never
 supports marking and seeking.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></CODE>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="translateStream(java.io.OutputStream, byte[], boolean, boolean, byte[], long, java.lang.String, java.lang.String, java.util.Date, java.lang.String)"><!-- --></A><H3>
translateStream</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A> <B>translateStream</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/io/OutputStream.html?is-external=true" title="class or interface in java.io">OutputStream</A>&nbsp;destination,
                                           byte[]&nbsp;eolMarker,
                                           boolean&nbsp;repairEol,
                                           boolean&nbsp;expandKeywords,
                                           byte[]&nbsp;keywordsValue,
                                           long&nbsp;revision,
                                           <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;url,
                                           <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;reposRootUrl,
                                           <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Date.html?is-external=true" title="class or interface in java.util">Date</A>&nbsp;date,
                                           <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;author)
                                    throws <A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A>,
                                           <A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></PRE>
<DL>
<DD>Expand keywords and return a stream which performs end-of-line
 translation and keyword expansion when written to.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/SubversionException.html" title="class in org.apache.subversion.javahl">SubversionException</A></CODE>
<DD><CODE><A HREF="../../../../org/apache/subversion/javahl/ClientException.html" title="class in org.apache.subversion.javahl">ClientException</A></CODE><DT><B>See Also:</B><DD><CODE>buildKeywords</CODE>, 
<A HREF="../../../../org/apache/subversion/javahl/SVNUtil.html#translateStream(java.io.OutputStream, byte[], boolean, java.util.Map, boolean)"><CODE>translateStream(OutputStream,byte[],boolean,Map,boolean)</CODE></A></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/apache/subversion/javahl/SVNRepos.html" title="class in org.apache.subversion.javahl"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/apache/subversion/javahl/SVNUtil.ConflictDisplayStyle.html" title="enum in org.apache.subversion.javahl"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/apache/subversion/javahl/SVNUtil.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SVNUtil.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
