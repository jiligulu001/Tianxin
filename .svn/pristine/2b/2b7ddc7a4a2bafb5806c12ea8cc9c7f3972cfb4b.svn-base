<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: Report interesting information about paths in the                 working copy.</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Report interesting information about paths in the working copy.<div class="ingroups"><a class="el" href="group__clnt__wc.html">Client working copy management</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__client__status__t.html">svn_client_status_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for holding the "status" of a working copy item.  <a href="structsvn__client__status__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga11d8e5ca91624826f99cffe481dad37e"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structsvn__client__status__t.html">svn_client_status_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Status.html#ga11d8e5ca91624826f99cffe481dad37e">svn_client_status_t</a></td></tr>
<tr class="memdesc:ga11d8e5ca91624826f99cffe481dad37e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for holding the "status" of a working copy item.  <a href="#ga11d8e5ca91624826f99cffe481dad37e">More...</a><br/></td></tr>
<tr class="separator:ga11d8e5ca91624826f99cffe481dad37e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb890deb709a8e091b71996b50ba92cc"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Status.html#gacb890deb709a8e091b71996b50ba92cc">svn_client_status_func_t</a> )(void *baton, const char *path, const <a class="el" href="structsvn__client__status__t.html">svn_client_status_t</a> *status, apr_pool_t *scratch_pool)</td></tr>
<tr class="memdesc:gacb890deb709a8e091b71996b50ba92cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">A callback for reporting a <em>status</em> about <em>path</em> (which may be an absolute or relative path).  <a href="#gacb890deb709a8e091b71996b50ba92cc">More...</a><br/></td></tr>
<tr class="separator:gacb890deb709a8e091b71996b50ba92cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gac00ec82307f0eb5760b3c063c36c7c6f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__client__status__t.html">svn_client_status_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Status.html#gac00ec82307f0eb5760b3c063c36c7c6f">svn_client_status_dup</a> (const <a class="el" href="structsvn__client__status__t.html">svn_client_status_t</a> *status, apr_pool_t *result_pool)</td></tr>
<tr class="memdesc:gac00ec82307f0eb5760b3c063c36c7c6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a duplicate of <em>status</em>, allocated in <em>result_pool</em>.  <a href="#gac00ec82307f0eb5760b3c063c36c7c6f">More...</a><br/></td></tr>
<tr class="separator:gac00ec82307f0eb5760b3c063c36c7c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga802dc1ecd975a8e38fda3e969250d222"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Status.html#ga802dc1ecd975a8e38fda3e969250d222">svn_client_status6</a> (<a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *result_rev, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, const char *path, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> check_out_of_date, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> check_working_copy, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_externals, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> depth_as_sticky, const apr_array_header_t *changelists, <a class="el" href="group__Status.html#gacb890deb709a8e091b71996b50ba92cc">svn_client_status_func_t</a> status_func, void *status_baton, apr_pool_t *scratch_pool)</td></tr>
<tr class="memdesc:ga802dc1ecd975a8e38fda3e969250d222"><td class="mdescLeft">&#160;</td><td class="mdescRight">Given <em>path</em> to a working copy directory (or single file), call <em>status_func/status_baton</em> with a set of <a class="el" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39;, const char &#39;url&#39;, svn_revnum_t &#39;ood_last_cmt_rev&#39;, apr_time_t &#39;ood_last_cmt_date&#39;, svn_node_kind_t &#39;ood_kind&#39;, const char &#39;ood_last_cmt_author&#39;, svn_wc_conflict_description_t &#39;tree_conflict&#39;, svn_boolean_t &#39;file_external&#39;, svn_wc_status_kind &#39;pristine_text_status&#39;, and svn_wc_status_kind &#39;pristine_prop_status&#39; fields. ">svn_wc_status_t</a> * structures which describe the status of <em>path</em>, and its children (recursing according to <em>depth</em>).  <a href="#ga802dc1ecd975a8e38fda3e969250d222">More...</a><br/></td></tr>
<tr class="separator:ga802dc1ecd975a8e38fda3e969250d222"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc7fb432c6019f76d98fb0dcbac66340"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Status.html#gabc7fb432c6019f76d98fb0dcbac66340">svn_client_status5</a> (<a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *result_rev, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, const char *path, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> update, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_externals, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> depth_as_sticky, const apr_array_header_t *changelists, <a class="el" href="group__Status.html#gacb890deb709a8e091b71996b50ba92cc">svn_client_status_func_t</a> status_func, void *status_baton, apr_pool_t *scratch_pool)</td></tr>
<tr class="memdesc:gabc7fb432c6019f76d98fb0dcbac66340"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__Status.html#ga802dc1ecd975a8e38fda3e969250d222" title="Given path to a working copy directory (or single file), call status_func/status_baton with a set of ...">svn_client_status6()</a>, but with <em>check_out_of_date</em> set to <em>update</em> and <em>check_working_copy</em> set to <code>TRUE</code>.  <a href="#gabc7fb432c6019f76d98fb0dcbac66340">More...</a><br/></td></tr>
<tr class="separator:gabc7fb432c6019f76d98fb0dcbac66340"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8548513bfe87803a1c62fde47f5264f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Status.html#ga8548513bfe87803a1c62fde47f5264f5">svn_client_status4</a> (<a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *result_rev, const char *path, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision, <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a">svn_wc_status_func3_t</a> status_func, void *status_baton, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> update, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_externals, const apr_array_header_t *changelists, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga8548513bfe87803a1c62fde47f5264f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__Status.html#gabc7fb432c6019f76d98fb0dcbac66340" title="Same as svn_client_status6(), but with check_out_of_date set to update and check_working_copy set to ...">svn_client_status5()</a>, but using <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a" title="Same as svn_wc_status_func4_t, but with a non-const status and a relative path. ">svn_wc_status_func3_t</a> instead of <a class="el" href="group__Status.html#gacb890deb709a8e091b71996b50ba92cc" title="A callback for reporting a status about path (which may be an absolute or relative path)...">svn_client_status_func_t</a> and depth_as_sticky set to TRUE.  <a href="#ga8548513bfe87803a1c62fde47f5264f5">More...</a><br/></td></tr>
<tr class="separator:ga8548513bfe87803a1c62fde47f5264f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9abf15736b3c21c7c4f8c376d43e956"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Status.html#gac9abf15736b3c21c7c4f8c376d43e956">svn_client_status3</a> (<a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *result_rev, const char *path, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision, <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">svn_wc_status_func2_t</a> status_func, void *status_baton, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> update, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_externals, const apr_array_header_t *changelists, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gac9abf15736b3c21c7c4f8c376d43e956"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="group__Status.html#ga8548513bfe87803a1c62fde47f5264f5" title="Same as svn_client_status5(), but using svn_wc_status_func3_t instead of svn_client_status_func_t and...">svn_client_status4()</a>, but using an <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a> instead of an <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a" title="Same as svn_wc_status_func4_t, but with a non-const status and a relative path. ">svn_wc_status_func3_t</a>.  <a href="#gac9abf15736b3c21c7c4f8c376d43e956">More...</a><br/></td></tr>
<tr class="separator:gac9abf15736b3c21c7c4f8c376d43e956"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga248f69ba6e4356b593f285d8d14995fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Status.html#ga248f69ba6e4356b593f285d8d14995fe">svn_client_status2</a> (<a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *result_rev, const char *path, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision, <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">svn_wc_status_func2_t</a> status_func, void *status_baton, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> recurse, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> update, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_externals, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga248f69ba6e4356b593f285d8d14995fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like <a class="el" href="group__Status.html#gac9abf15736b3c21c7c4f8c376d43e956" title="Same as svn_client_status4(), but using an svn_wc_status_func2_t instead of an svn_wc_status_func3_t...">svn_client_status3()</a>, except with <em>changelists</em> passed as <code>NULL</code>, and with <em>recurse</em> instead of <em>depth</em>.  <a href="#ga248f69ba6e4356b593f285d8d14995fe">More...</a><br/></td></tr>
<tr class="separator:ga248f69ba6e4356b593f285d8d14995fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga52e822422ef964810712209c0d567b4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Status.html#ga52e822422ef964810712209c0d567b4f">svn_client_status</a> (<a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *result_rev, const char *path, <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision, <a class="el" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a">svn_wc_status_func_t</a> status_func, void *status_baton, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> recurse, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> get_all, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> update, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> no_ignore, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga52e822422ef964810712209c0d567b4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__Status.html#ga248f69ba6e4356b593f285d8d14995fe" title="Like svn_client_status3(), except with changelists passed as NULL, and with recurse instead of depth...">svn_client_status2()</a>, but with <em>ignore_externals</em> always set to FALSE, taking the <a class="el" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a" title="Same as svn_wc_status_func2_t, but for older svn_wc_status_t structures. ">svn_wc_status_func_t</a> type instead of the <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a> type for <em>status_func</em>, and requiring <em>*revision</em> to be non-const even though it is treated as constant.  <a href="#ga52e822422ef964810712209c0d567b4f">More...</a><br/></td></tr>
<tr class="separator:ga52e822422ef964810712209c0d567b4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="gacb890deb709a8e091b71996b50ba92cc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_client_status_func_t)(void *baton, const char *path, const <a class="el" href="structsvn__client__status__t.html">svn_client_status_t</a> *status, apr_pool_t *scratch_pool)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback for reporting a <em>status</em> about <em>path</em> (which may be an absolute or relative path). </p>
<p><em>baton</em> is a closure object; it should be provided by the implementation, and passed by the caller.</p>
<p><em>scratch_pool</em> will be cleared between invocations to the callback.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.7. </dd></dl>

<p>Definition at line <a class="el" href="svn__client_8h_source.html#l02493">2493</a> of file <a class="el" href="svn__client_8h_source.html">svn_client.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga11d8e5ca91624826f99cffe481dad37e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structsvn__client__status__t.html">svn_client_status_t</a>  <a class="el" href="structsvn__client__status__t.html">svn_client_status_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Structure for holding the "status" of a working copy item. </p>
<dl class="section note"><dt>Note</dt><dd>Fields may be added to the end of this structure in future versions. Therefore, to preserve binary compatibility, users should not directly allocate structures of this type.</dd></dl>
<dl class="section since"><dt>Since</dt><dd>New in 1.7. </dd></dl>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga52e822422ef964810712209c0d567b4f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_status </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>result_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a">svn_wc_status_func_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>recurse</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>update</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__Status.html#ga248f69ba6e4356b593f285d8d14995fe" title="Like svn_client_status3(), except with changelists passed as NULL, and with recurse instead of depth...">svn_client_status2()</a>, but with <em>ignore_externals</em> always set to FALSE, taking the <a class="el" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a" title="Same as svn_wc_status_func2_t, but for older svn_wc_status_t structures. ">svn_wc_status_func_t</a> type instead of the <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a> type for <em>status_func</em>, and requiring <em>*revision</em> to be non-const even though it is treated as constant. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000074">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.1 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga248f69ba6e4356b593f285d8d14995fe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_status2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>result_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">svn_wc_status_func2_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>recurse</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>update</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_externals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Like <a class="el" href="group__Status.html#gac9abf15736b3c21c7c4f8c376d43e956" title="Same as svn_client_status4(), but using an svn_wc_status_func2_t instead of an svn_wc_status_func3_t...">svn_client_status3()</a>, except with <em>changelists</em> passed as <code>NULL</code>, and with <em>recurse</em> instead of <em>depth</em>. </p>
<p>If <em>recurse</em> is TRUE, behave as if for <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D). ">svn_depth_infinity</a>; else if <em>recurse</em> is FALSE, behave as if for <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca68873e015456e384e4f63f3bbd515c8a" title="D + immediate children (D and its entries). ">svn_depth_immediates</a>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.2. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000073">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.4 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gac9abf15736b3c21c7c4f8c376d43e956"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_status3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>result_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">svn_wc_status_func2_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>update</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_externals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>changelists</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Same as <a class="el" href="group__Status.html#ga8548513bfe87803a1c62fde47f5264f5" title="Same as svn_client_status5(), but using svn_wc_status_func3_t instead of svn_client_status_func_t and...">svn_client_status4()</a>, but using an <a class="el" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a> instead of an <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a" title="Same as svn_wc_status_func4_t, but with a non-const status and a relative path. ">svn_wc_status_func3_t</a>. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.5. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000072">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.5 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga8548513bfe87803a1c62fde47f5264f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_status4 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>result_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a">svn_wc_status_func3_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>update</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_externals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>changelists</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Same as <a class="el" href="group__Status.html#gabc7fb432c6019f76d98fb0dcbac66340" title="Same as svn_client_status6(), but with check_out_of_date set to update and check_working_copy set to ...">svn_client_status5()</a>, but using <a class="el" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a" title="Same as svn_wc_status_func4_t, but with a non-const status and a relative path. ">svn_wc_status_func3_t</a> instead of <a class="el" href="group__Status.html#gacb890deb709a8e091b71996b50ba92cc" title="A callback for reporting a status about path (which may be an absolute or relative path)...">svn_client_status_func_t</a> and depth_as_sticky set to TRUE. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000071">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gabc7fb432c6019f76d98fb0dcbac66340"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_status5 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>result_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>update</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_externals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>depth_as_sticky</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>changelists</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__Status.html#gacb890deb709a8e091b71996b50ba92cc">svn_client_status_func_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>scratch_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Same as <a class="el" href="group__Status.html#ga802dc1ecd975a8e38fda3e969250d222" title="Given path to a working copy directory (or single file), call status_func/status_baton with a set of ...">svn_client_status6()</a>, but with <em>check_out_of_date</em> set to <em>update</em> and <em>check_working_copy</em> set to <code>TRUE</code>. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.7. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000070">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.8 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga802dc1ecd975a8e38fda3e969250d222"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_status6 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89">svn_revnum_t</a> *&#160;</td>
          <td class="paramname"><em>result_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>get_all</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>check_out_of_date</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>check_working_copy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>no_ignore</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_externals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>depth_as_sticky</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>changelists</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__Status.html#gacb890deb709a8e091b71996b50ba92cc">svn_client_status_func_t</a>&#160;</td>
          <td class="paramname"><em>status_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>status_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>scratch_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Given <em>path</em> to a working copy directory (or single file), call <em>status_func/status_baton</em> with a set of <a class="el" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39;, const char &#39;url&#39;, svn_revnum_t &#39;ood_last_cmt_rev&#39;, apr_time_t &#39;ood_last_cmt_date&#39;, svn_node_kind_t &#39;ood_kind&#39;, const char &#39;ood_last_cmt_author&#39;, svn_wc_conflict_description_t &#39;tree_conflict&#39;, svn_boolean_t &#39;file_external&#39;, svn_wc_status_kind &#39;pristine_text_status&#39;, and svn_wc_status_kind &#39;pristine_prop_status&#39; fields. ">svn_wc_status_t</a> * structures which describe the status of <em>path</em>, and its children (recursing according to <em>depth</em>). </p>
<ul>
<li>If <em>get_all</em> is set, retrieve all entries; otherwise, retrieve only "interesting" entries (local mods and/or out of date).</li>
<li>If <em>check_out_of_date</em> is set, contact the repository and augment the status structures with information about out-of-dateness (with respect to <em>revision</em>). Also, if <em>result_rev</em> is not <code>NULL</code>, set <em>*result_rev</em> to the actual revision against which the working copy was compared (<em>*result_rev</em> is not meaningful unless <em>check_out_of_date</em> is set).</li>
<li>If <em>check_working_copy</em> is not set, do not scan the working copy for local modifications. This parameter will be ignored unless <em>check_out_of_date</em> is set. When set, the status report will not contain any information about local changes in the working copy; this includes local deletions and replacements.</li>
</ul>
<p>If <em>no_ignore</em> is <code>FALSE</code>, don't report any file or directory (or recurse into any directory) that is found by recursion (as opposed to being the explicit target <em>path</em>) and whose name matches the svn:ignore property on its parent directory or the global-ignores list in <em>ctx-&gt;config</em>. If <em>no_ignore</em> is <code>TRUE</code>, report each such file or directory with the status code <a class="el" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96daafdcb2e885d5d000adc048235b9e38cd" title="is unversioned but configured to be ignored ">svn_wc_status_ignored</a>.</p>
<p>If <em>ignore_externals</em> is not set, then recurse into externals definitions (if any exist) after handling the main target. This calls the client notification function (in <em>ctx</em>) with the <a class="el" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbab27ee18588b1cf527ed9fabeb35b7d9f" title="Running status on an external module. ">svn_wc_notify_status_external</a> action before handling each externals definition, and with <a class="el" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba8dbd8712289a9cd180135b2677077a82" title="The last notification in a status (including status on externals). ">svn_wc_notify_status_completed</a> after each.</p>
<p>If <em>depth_as_sticky</em> is set and <em>depth</em> is not <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2cacf4538edb8e8823b0b9cdeaaac245ebf" title="Depth undetermined or ignored. ">svn_depth_unknown</a>, then the status is calculated as if depth_is_sticky was passed to an equivalent update command.</p>
<p><em>changelists</em> is an array of <code>const char *</code> changelist names, used as a restrictive filter on items whose statuses are reported; that is, don't report status about any item unless it's a member of one of those changelists. If <em>changelists</em> is empty (or altogether <code>NULL</code>), no changelist filtering occurs.</p>
<p>If <em>path</em> is an absolute path then the <code>path</code> parameter passed in each call to <em>status_func</em> will be an absolute path.</p>
<p>All temporary allocations are performed in <em>scratch_pool</em>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.9. </dd></dl>

</div>
</div>
<a class="anchor" id="gac00ec82307f0eb5760b3c063c36c7c6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__client__status__t.html">svn_client_status_t</a>* svn_client_status_dup </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__client__status__t.html">svn_client_status_t</a> *&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>result_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return a duplicate of <em>status</em>, allocated in <em>result_pool</em>. </p>
<p>No part of the new structure will be shared with <em>status</em>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.7. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:17:27 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
