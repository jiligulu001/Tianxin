<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: ra_svn low-level functions</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ra_svn low-level functions</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga32bb1636947fc268dfbc9654e239f0cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga32bb1636947fc268dfbc9654e239f0cd">svn_ra_svn_write_number</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, apr_uint64_t number)</td></tr>
<tr class="memdesc:ga32bb1636947fc268dfbc9654e239f0cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a number over the net.  <a href="#ga32bb1636947fc268dfbc9654e239f0cd">More...</a><br/></td></tr>
<tr class="separator:ga32bb1636947fc268dfbc9654e239f0cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18bce76edb7547d1d4354a43871f92df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga18bce76edb7547d1d4354a43871f92df">svn_ra_svn_write_string</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *str)</td></tr>
<tr class="memdesc:ga18bce76edb7547d1d4354a43871f92df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a string over the net.  <a href="#ga18bce76edb7547d1d4354a43871f92df">More...</a><br/></td></tr>
<tr class="separator:ga18bce76edb7547d1d4354a43871f92df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0ae0696e25c8a4f334721a054e64a4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gaa0ae0696e25c8a4f334721a054e64a4f">svn_ra_svn_write_cstring</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *s)</td></tr>
<tr class="memdesc:gaa0ae0696e25c8a4f334721a054e64a4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a cstring over the net.  <a href="#gaa0ae0696e25c8a4f334721a054e64a4f">More...</a><br/></td></tr>
<tr class="separator:gaa0ae0696e25c8a4f334721a054e64a4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0578f33134be63d940746d85c92d215b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga0578f33134be63d940746d85c92d215b">svn_ra_svn_write_word</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *word)</td></tr>
<tr class="memdesc:ga0578f33134be63d940746d85c92d215b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a word over the net.  <a href="#ga0578f33134be63d940746d85c92d215b">More...</a><br/></td></tr>
<tr class="separator:ga0578f33134be63d940746d85c92d215b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad9eaa7f84b44a546984c4e1820570a8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gad9eaa7f84b44a546984c4e1820570a8d">svn_ra_svn_write_proplist</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, apr_hash_t *props)</td></tr>
<tr class="memdesc:gad9eaa7f84b44a546984c4e1820570a8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a list of properties over the net.  <a href="#gad9eaa7f84b44a546984c4e1820570a8d">More...</a><br/></td></tr>
<tr class="separator:gad9eaa7f84b44a546984c4e1820570a8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga13a9cfd41e5935ef2346a3cce936c7fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga13a9cfd41e5935ef2346a3cce936c7fd">svn_ra_svn_start_list</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga13a9cfd41e5935ef2346a3cce936c7fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Begin a list.  <a href="#ga13a9cfd41e5935ef2346a3cce936c7fd">More...</a><br/></td></tr>
<tr class="separator:ga13a9cfd41e5935ef2346a3cce936c7fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae0f190270cfe87b19d38a533ea0dea3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gaae0f190270cfe87b19d38a533ea0dea3">svn_ra_svn_end_list</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaae0f190270cfe87b19d38a533ea0dea3"><td class="mdescLeft">&#160;</td><td class="mdescRight">End a list.  <a href="#gaae0f190270cfe87b19d38a533ea0dea3">More...</a><br/></td></tr>
<tr class="separator:gaae0f190270cfe87b19d38a533ea0dea3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabeafa59754d0da13ca45c0fb9d2b7105"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gabeafa59754d0da13ca45c0fb9d2b7105">svn_ra_svn_flush</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gabeafa59754d0da13ca45c0fb9d2b7105"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flush the write buffer.  <a href="#gabeafa59754d0da13ca45c0fb9d2b7105">More...</a><br/></td></tr>
<tr class="separator:gabeafa59754d0da13ca45c0fb9d2b7105"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga485ffa27bbea0744a5c3a53f46e04c54"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54">svn_ra_svn_write_tuple</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *fmt,...)</td></tr>
<tr class="memdesc:ga485ffa27bbea0744a5c3a53f46e04c54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a tuple, using a printf-like interface.  <a href="#ga485ffa27bbea0744a5c3a53f46e04c54">More...</a><br/></td></tr>
<tr class="separator:ga485ffa27bbea0744a5c3a53f46e04c54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga054e65557e26d30a0f4b655839f73d8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga054e65557e26d30a0f4b655839f73d8e">svn_ra_svn_read_item</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, <a class="el" href="structsvn__ra__svn__item__t.html">svn_ra_svn_item_t</a> **item)</td></tr>
<tr class="memdesc:ga054e65557e26d30a0f4b655839f73d8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read an item from the network into <em>*item</em>.  <a href="#ga054e65557e26d30a0f4b655839f73d8e">More...</a><br/></td></tr>
<tr class="separator:ga054e65557e26d30a0f4b655839f73d8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga772a21bdd3b2d0ab7216745bf5772116"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga772a21bdd3b2d0ab7216745bf5772116">svn_ra_svn_skip_leading_garbage</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga772a21bdd3b2d0ab7216745bf5772116"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scan data on <em>conn</em> until we find something which looks like the beginning of an svn server greeting (an open paren followed by a whitespace character).  <a href="#ga772a21bdd3b2d0ab7216745bf5772116">More...</a><br/></td></tr>
<tr class="separator:ga772a21bdd3b2d0ab7216745bf5772116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16da8f197baf87d068c761961a6439b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga16da8f197baf87d068c761961a6439b5">svn_ra_svn_parse_tuple</a> (const apr_array_header_t *list, apr_pool_t *pool, const char *fmt,...)</td></tr>
<tr class="memdesc:ga16da8f197baf87d068c761961a6439b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse an array of <code>svn_sort__item_t</code> structures as a tuple, using a printf-like interface.  <a href="#ga16da8f197baf87d068c761961a6439b5">More...</a><br/></td></tr>
<tr class="separator:ga16da8f197baf87d068c761961a6439b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7909e29a780d40093a202feadb8359a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gab7909e29a780d40093a202feadb8359a">svn_ra_svn_read_tuple</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *fmt,...)</td></tr>
<tr class="memdesc:gab7909e29a780d40093a202feadb8359a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a tuple from the network and parse it as a tuple, using the format string notation from <a class="el" href="group__ra__svn__deprecated.html#ga16da8f197baf87d068c761961a6439b5" title="Parse an array of svn_sort__item_t structures as a tuple, using a printf-like interface. ">svn_ra_svn_parse_tuple()</a>.  <a href="#gab7909e29a780d40093a202feadb8359a">More...</a><br/></td></tr>
<tr class="separator:gab7909e29a780d40093a202feadb8359a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a04dce0d6a78caaf891f7ccf7f589f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga6a04dce0d6a78caaf891f7ccf7f589f9">svn_ra_svn_parse_proplist</a> (const apr_array_header_t *list, apr_pool_t *pool, apr_hash_t **props)</td></tr>
<tr class="memdesc:ga6a04dce0d6a78caaf891f7ccf7f589f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse an array of <code><a class="el" href="structsvn__ra__svn__item__t.html" title="Memory representation of an on-the-wire data item. ">svn_ra_svn_item_t</a></code> structures as a list of properties, storing the properties in a hash table.  <a href="#ga6a04dce0d6a78caaf891f7ccf7f589f9">More...</a><br/></td></tr>
<tr class="separator:ga6a04dce0d6a78caaf891f7ccf7f589f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga355479e94c812c250e233f5287718133"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga355479e94c812c250e233f5287718133">svn_ra_svn_read_cmd_response</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *fmt,...)</td></tr>
<tr class="memdesc:ga355479e94c812c250e233f5287718133"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a command response from the network and parse it as a tuple, using the format string notation from <a class="el" href="group__ra__svn__deprecated.html#ga16da8f197baf87d068c761961a6439b5" title="Parse an array of svn_sort__item_t structures as a tuple, using a printf-like interface. ">svn_ra_svn_parse_tuple()</a>.  <a href="#ga355479e94c812c250e233f5287718133">More...</a><br/></td></tr>
<tr class="separator:ga355479e94c812c250e233f5287718133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5507592eb86fbb8807359425190c0025"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga5507592eb86fbb8807359425190c0025">svn_ra_svn_handle_commands2</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const <a class="el" href="structsvn__ra__svn__cmd__entry__t.html">svn_ra_svn_cmd_entry_t</a> *commands, void *baton, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> error_on_disconnect)</td></tr>
<tr class="memdesc:ga5507592eb86fbb8807359425190c0025"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accept commands over the network and handle them according to <em>commands</em>.  <a href="#ga5507592eb86fbb8807359425190c0025">More...</a><br/></td></tr>
<tr class="separator:ga5507592eb86fbb8807359425190c0025"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa39e750851c82affcf6e8ff900502882"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gaa39e750851c82affcf6e8ff900502882">svn_ra_svn_handle_commands</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const <a class="el" href="structsvn__ra__svn__cmd__entry__t.html">svn_ra_svn_cmd_entry_t</a> *commands, void *baton)</td></tr>
<tr class="memdesc:gaa39e750851c82affcf6e8ff900502882"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to svn_ra_svn_handle_commands2 but <em>error_on_disconnect</em> is always <code>FALSE</code>.  <a href="#gaa39e750851c82affcf6e8ff900502882">More...</a><br/></td></tr>
<tr class="separator:gaa39e750851c82affcf6e8ff900502882"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf15ea6eb7cc42d3153098800e3fdb94b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gaf15ea6eb7cc42d3153098800e3fdb94b">svn_ra_svn_write_cmd</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *cmdname, const char *fmt,...)</td></tr>
<tr class="memdesc:gaf15ea6eb7cc42d3153098800e3fdb94b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a command over the network, using the same format string notation as <a class="el" href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54" title="Write a tuple, using a printf-like interface. ">svn_ra_svn_write_tuple()</a>.  <a href="#gaf15ea6eb7cc42d3153098800e3fdb94b">More...</a><br/></td></tr>
<tr class="separator:gaf15ea6eb7cc42d3153098800e3fdb94b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3ebeae8904556183a5cef212951f706"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gae3ebeae8904556183a5cef212951f706">svn_ra_svn_write_cmd_response</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *fmt,...)</td></tr>
<tr class="memdesc:gae3ebeae8904556183a5cef212951f706"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a successful command response over the network, using the same format string notation as <a class="el" href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54" title="Write a tuple, using a printf-like interface. ">svn_ra_svn_write_tuple()</a>.  <a href="#gae3ebeae8904556183a5cef212951f706">More...</a><br/></td></tr>
<tr class="separator:gae3ebeae8904556183a5cef212951f706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga550b747e1d40ac8441908029147228ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga550b747e1d40ac8441908029147228ca">svn_ra_svn_write_cmd_failure</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, <a class="el" href="structsvn__error__t.html">svn_error_t</a> *err)</td></tr>
<tr class="memdesc:ga550b747e1d40ac8441908029147228ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write an unsuccessful command response over the network.  <a href="#ga550b747e1d40ac8441908029147228ca">More...</a><br/></td></tr>
<tr class="separator:ga550b747e1d40ac8441908029147228ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gaae0f190270cfe87b19d38a533ea0dea3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_end_list </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>End a list. </p>
<p>Writes will be buffered until the next read or flush.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000359">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="gabeafa59754d0da13ca45c0fb9d2b7105"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_flush </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Flush the write buffer. </p>
<p>Normally this shouldn't be necessary, since the write buffer is flushed when a read is attempted.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000360">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa39e750851c82affcf6e8ff900502882"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_handle_commands </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__ra__svn__cmd__entry__t.html">svn_ra_svn_cmd_entry_t</a> *&#160;</td>
          <td class="paramname"><em>commands</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>baton</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to svn_ra_svn_handle_commands2 but <em>error_on_disconnect</em> is always <code>FALSE</code>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000369">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.5 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5507592eb86fbb8807359425190c0025"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_handle_commands2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__ra__svn__cmd__entry__t.html">svn_ra_svn_cmd_entry_t</a> *&#160;</td>
          <td class="paramname"><em>commands</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>error_on_disconnect</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Accept commands over the network and handle them according to <em>commands</em>. </p>
<p>Command handlers will be passed <em>conn</em>, a subpool of <em>pool</em> (cleared after each command is handled), the parameters of the command, and <em>baton</em>. Commands will be accepted until a terminating command is received (a command with "terminate" set in the command table). If a command handler returns an error wrapped in SVN_RA_SVN_CMD_ERR (see the <code>SVN_CMD_ERR</code> macro), the error will be reported to the other side of the connection and the command loop will continue; any other kind of error (typically a network or protocol error) is passed through to the caller.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000368">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6a04dce0d6a78caaf891f7ccf7f589f9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_parse_proplist </td>
          <td>(</td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_hash_t **&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parse an array of <code><a class="el" href="structsvn__ra__svn__item__t.html" title="Memory representation of an on-the-wire data item. ">svn_ra_svn_item_t</a></code> structures as a list of properties, storing the properties in a hash table. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.5.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000366">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga16da8f197baf87d068c761961a6439b5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_parse_tuple </td>
          <td>(</td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parse an array of <code>svn_sort__item_t</code> structures as a tuple, using a printf-like interface. </p>
<p>The format string <em>fmt</em> may contain:</p>
<pre class="fragment">   Spec  Argument type          Item type
   ----  --------------------   ---------
   n     apr_uint64_t *         Number
   r     svn_revnum_t *         Number
   s     svn_string_t **        String
   c     const char **          String
   w     const char **          Word
   b     svn_boolean_t *        Word ("true" or "false")
   B     apr_uint64_t *         Word ("true" or "false")
   l     apr_array_header_t **  List
   (                            Begin tuple
   )                            End tuple
   ?                            Tuple is allowed to end here
</pre><p>Note that a tuple is only allowed to end precisely at a '?', or at the end of the specification. So if <em>fmt</em> is "c?cc" and <em>list</em> contains two elements, an error will result.</p>
<p>'B' is similar to 'b', but may be used in the optional tuple specification. It returns TRUE, FALSE, or SVN_RA_SVN_UNSPECIFIED_NUMBER.</p>
<p>If an optional part of a tuple contains no data, 'r' values will be set to <code>SVN_INVALID_REVNUM</code>, 'n' and 'B' values will be set to SVN_RA_SVN_UNSPECIFIED_NUMBER, and 's', 'c', 'w', and 'l' values will be set to <code>NULL</code>. 'b' may not appear inside an optional tuple specification; use 'B' instead.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000364">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga355479e94c812c250e233f5287718133"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_read_cmd_response </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a command response from the network and parse it as a tuple, using the format string notation from <a class="el" href="group__ra__svn__deprecated.html#ga16da8f197baf87d068c761961a6439b5" title="Parse an array of svn_sort__item_t structures as a tuple, using a printf-like interface. ">svn_ra_svn_parse_tuple()</a>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000367">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga054e65557e26d30a0f4b655839f73d8e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_read_item </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__ra__svn__item__t.html">svn_ra_svn_item_t</a> **&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read an item from the network into <em>*item</em>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000362">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="gab7909e29a780d40093a202feadb8359a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_read_tuple </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a tuple from the network and parse it as a tuple, using the format string notation from <a class="el" href="group__ra__svn__deprecated.html#ga16da8f197baf87d068c761961a6439b5" title="Parse an array of svn_sort__item_t structures as a tuple, using a printf-like interface. ">svn_ra_svn_parse_tuple()</a>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000365">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga772a21bdd3b2d0ab7216745bf5772116"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_skip_leading_garbage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Scan data on <em>conn</em> until we find something which looks like the beginning of an svn server greeting (an open paren followed by a whitespace character). </p>
<p>This function is appropriate for beginning a client connection opened in tunnel mode, since people's dotfiles sometimes write output to stdout. It may only be called at the beginning of a client connection.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000363">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga13a9cfd41e5935ef2346a3cce936c7fd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_start_list </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Begin a list. </p>
<p>Writes will be buffered until the next read or flush.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000358">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf15ea6eb7cc42d3153098800e3fdb94b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_write_cmd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>cmdname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write a command over the network, using the same format string notation as <a class="el" href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54" title="Write a tuple, using a printf-like interface. ">svn_ra_svn_write_tuple()</a>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000370">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga550b747e1d40ac8441908029147228ca"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_write_cmd_failure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td>
          <td class="paramname"><em>err</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write an unsuccessful command response over the network. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000372">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="gae3ebeae8904556183a5cef212951f706"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_write_cmd_response </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write a successful command response over the network, using the same format string notation as <a class="el" href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54" title="Write a tuple, using a printf-like interface. ">svn_ra_svn_write_tuple()</a>. </p>
<p>Do not use partial tuples with this function; if you need to use partial tuples, just write out the "success" and argument tuple by hand.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000371">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa0ae0696e25c8a4f334721a054e64a4f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_write_cstring </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write a cstring over the net. </p>
<p>Writes will be buffered until the next read or flush.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000355">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga32bb1636947fc268dfbc9654e239f0cd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_write_number </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_uint64_t&#160;</td>
          <td class="paramname"><em>number</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write a number over the net. </p>
<p>Writes will be buffered until the next read or flush.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000353">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="gad9eaa7f84b44a546984c4e1820570a8d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_write_proplist </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_hash_t *&#160;</td>
          <td class="paramname"><em>props</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write a list of properties over the net. </p>
<p><em>props</em> is allowed to be NULL, in which case an empty list will be written out.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.5.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000357">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga18bce76edb7547d1d4354a43871f92df"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_write_string </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write a string over the net. </p>
<p>Writes will be buffered until the next read or flush.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000354">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga485ffa27bbea0744a5c3a53f46e04c54"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_write_tuple </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write a tuple, using a printf-like interface. </p>
<p>The format string <em>fmt</em> may contain:</p>
<pre class="fragment">   Spec  Argument type         Item type
   ----  --------------------  ---------
   n     apr_uint64_t          Number
   r     svn_revnum_t          Number
   s     const svn_string_t *  String
   c     const char *          String
   w     const char *          Word
   b     svn_boolean_t         Word ("true" or "false")
   (                           Begin tuple
   )                           End tuple
   ?                           Remaining elements optional
   ! (at beginning or end)     Suppress opening or closing of tuple
</pre><p>Inside the optional part of a tuple, 'r' values may be <code>SVN_INVALID_REVNUM</code>, 'n' values may be SVN_RA_SVN_UNSPECIFIED_NUMBER, and 's', 'c', and 'w' values may be <code>NULL</code>; in these cases no data will be written. 'b' and '(' may not appear in the optional part of a tuple. Either all or none of the optional values should be valid.</p>
<p>(If we ever have a need for an optional boolean value, we should invent a 'B' specifier which stores a boolean into an int, using -1 for unspecified. Right now there is no need for such a thing.)</p>
<p>Use the '!' format specifier to write partial tuples when you have to transmit an array or other unusual data. For example, to write a tuple containing a revision, an array of words, and a boolean: </p>
<div class="fragment"><div class="line"><a class="code" href="group__svn__error__error__creation__destroy.html#ga2d4bba65866869939178e21df8e6fffb">SVN_ERR</a>(<a class="code" href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54">svn_ra_svn_write_tuple</a>(conn, pool, <span class="stringliteral">&quot;r(!&quot;</span>, rev));</div>
<div class="line"><span class="keywordflow">for</span> (i = 0; i &lt; n; i++)</div>
<div class="line">  <a class="code" href="group__svn__error__error__creation__destroy.html#ga2d4bba65866869939178e21df8e6fffb">SVN_ERR</a>(<a class="code" href="group__ra__svn__deprecated.html#ga0578f33134be63d940746d85c92d215b">svn_ra_svn_write_word</a>(conn, pool, words[i]));</div>
<div class="line"><a class="code" href="group__svn__error__error__creation__destroy.html#ga2d4bba65866869939178e21df8e6fffb">SVN_ERR</a>(<a class="code" href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54">svn_ra_svn_write_tuple</a>(conn, pool, <span class="stringliteral">&quot;!)b&quot;</span>, flag)); </div>
</div><!-- fragment --><dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000361">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0578f33134be63d940746d85c92d215b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_write_word </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>word</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write a word over the net. </p>
<p>Writes will be buffered until the next read or flush.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000356">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. RA_SVN low-level functions are no longer considered public. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:17:28 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
