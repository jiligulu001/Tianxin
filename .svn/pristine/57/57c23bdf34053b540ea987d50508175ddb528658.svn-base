<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: svn_ra_svn.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_c37f7789c49aa9e5999234152b1ef6ed.html">subversion</a></li><li class="navelem"><a class="el" href="dir_334478eea8dba5ae935f94af9469978f.html">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">svn_ra_svn.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>libsvn_ra_svn functions used by the server  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;apr.h&gt;</code><br/>
<code>#include &lt;apr_pools.h&gt;</code><br/>
<code>#include &lt;apr_hash.h&gt;</code><br/>
<code>#include &lt;apr_tables.h&gt;</code><br/>
<code>#include &lt;apr_file_io.h&gt;</code><br/>
<code>#include &lt;apr_network_io.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="svn__types_8h_source.html">svn_types.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__string_8h_source.html">svn_string.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__config_8h_source.html">svn_config.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__delta_8h_source.html">svn_delta.h</a>&quot;</code><br/>
</div>
<p><a href="svn__ra__svn_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__ra__svn__cmd__entry__t.html">svn_ra_svn_cmd_entry_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Command table, used by <a class="el" href="group__ra__svn__deprecated.html#gaa39e750851c82affcf6e8ff900502882" title="Similar to svn_ra_svn_handle_commands2 but error_on_disconnect is always FALSE. ">svn_ra_svn_handle_commands()</a>.  <a href="structsvn__ra__svn__cmd__entry__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__ra__svn__item__t.html">svn_ra_svn_item_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Memory representation of an on-the-wire data item.  <a href="structsvn__ra__svn__item__t.html#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ae0e3d4fc3c74c8f6062899b8995bbee5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#ae0e3d4fc3c74c8f6062899b8995bbee5">SVN_RA_SVN_PORT</a>&#160;&#160;&#160;3690</td></tr>
<tr class="memdesc:ae0e3d4fc3c74c8f6062899b8995bbee5"><td class="mdescLeft">&#160;</td><td class="mdescRight">The well-known svn port number.  <a href="#ae0e3d4fc3c74c8f6062899b8995bbee5">More...</a><br/></td></tr>
<tr class="separator:ae0e3d4fc3c74c8f6062899b8995bbee5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0ee29fdfb2b14d0219ce6ef177e8c6f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#ac0ee29fdfb2b14d0219ce6ef177e8c6f">SVN_RA_SVN_CAP_EDIT_PIPELINE</a>&#160;&#160;&#160;&quot;edit-pipeline&quot;</td></tr>
<tr class="memdesc:ac0ee29fdfb2b14d0219ce6ef177e8c6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Currently-defined capabilities.  <a href="#ac0ee29fdfb2b14d0219ce6ef177e8c6f">More...</a><br/></td></tr>
<tr class="separator:ac0ee29fdfb2b14d0219ce6ef177e8c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8aebbcc6455127ae6251cd8883601d46"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8aebbcc6455127ae6251cd8883601d46"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_SVNDIFF1</b>&#160;&#160;&#160;&quot;svndiff1&quot;</td></tr>
<tr class="separator:a8aebbcc6455127ae6251cd8883601d46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5494d3c193712a1f79abea5176de1abb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5494d3c193712a1f79abea5176de1abb"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_ABSENT_ENTRIES</b>&#160;&#160;&#160;&quot;absent-entries&quot;</td></tr>
<tr class="separator:a5494d3c193712a1f79abea5176de1abb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c10b9ccb674637d8c60b0e45f7c17a2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4c10b9ccb674637d8c60b0e45f7c17a2"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_COMMIT_REVPROPS</b>&#160;&#160;&#160;&quot;commit-revprops&quot;</td></tr>
<tr class="separator:a4c10b9ccb674637d8c60b0e45f7c17a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32e805353b9f8065f73fc8aaac457e16"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a32e805353b9f8065f73fc8aaac457e16"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_MERGEINFO</b>&#160;&#160;&#160;&quot;mergeinfo&quot;</td></tr>
<tr class="separator:a32e805353b9f8065f73fc8aaac457e16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de493ee4f73cb89f76ee46709bd00db"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1de493ee4f73cb89f76ee46709bd00db"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_DEPTH</b>&#160;&#160;&#160;&quot;depth&quot;</td></tr>
<tr class="separator:a1de493ee4f73cb89f76ee46709bd00db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb53342c7d60a844499570b7602348b3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afb53342c7d60a844499570b7602348b3"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_LOG_REVPROPS</b>&#160;&#160;&#160;&quot;log-revprops&quot;</td></tr>
<tr class="separator:afb53342c7d60a844499570b7602348b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c73914cb5d3d4b7f7425d8ae68eb59d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6c73914cb5d3d4b7f7425d8ae68eb59d"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_PARTIAL_REPLAY</b>&#160;&#160;&#160;&quot;partial-replay&quot;</td></tr>
<tr class="separator:a6c73914cb5d3d4b7f7425d8ae68eb59d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5017395274938556e40d859b9ecd53b3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5017395274938556e40d859b9ecd53b3"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_ATOMIC_REVPROPS</b>&#160;&#160;&#160;&quot;atomic-revprops&quot;</td></tr>
<tr class="separator:a5017395274938556e40d859b9ecd53b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e1692657a79f2ccadbec461823d6918"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0e1692657a79f2ccadbec461823d6918"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_INHERITED_PROPS</b>&#160;&#160;&#160;&quot;inherited-props&quot;</td></tr>
<tr class="separator:a0e1692657a79f2ccadbec461823d6918"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb4b6320a213bc135cfd4afcc4413ea4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abb4b6320a213bc135cfd4afcc4413ea4"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_EPHEMERAL_TXNPROPS</b>&#160;&#160;&#160;&quot;ephemeral-txnprops&quot;</td></tr>
<tr class="separator:abb4b6320a213bc135cfd4afcc4413ea4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9898dfdbce8dcaf532e18c27cff770a9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9898dfdbce8dcaf532e18c27cff770a9"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_RA_SVN_CAP_GET_FILE_REVS_REVERSE</b>&#160;&#160;&#160;&quot;file-revs-reverse&quot;</td></tr>
<tr class="separator:a9898dfdbce8dcaf532e18c27cff770a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga57c54e71e9b8001cde20cd9c14ba2b58"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__dirent__fields.html#ga57c54e71e9b8001cde20cd9c14ba2b58">SVN_RA_SVN_DIRENT_KIND</a>&#160;&#160;&#160;&quot;kind&quot;</td></tr>
<tr class="memdesc:ga57c54e71e9b8001cde20cd9c14ba2b58"><td class="mdescLeft">&#160;</td><td class="mdescRight">The ra_svn way of saying <code>SVN_DIRENT_KIND</code>.  <a href="group__ra__svn__dirent__fields.html#ga57c54e71e9b8001cde20cd9c14ba2b58">More...</a><br/></td></tr>
<tr class="separator:ga57c54e71e9b8001cde20cd9c14ba2b58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga695a9c6b56e71e771be0b06438a3b215"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__dirent__fields.html#ga695a9c6b56e71e771be0b06438a3b215">SVN_RA_SVN_DIRENT_SIZE</a>&#160;&#160;&#160;&quot;size&quot;</td></tr>
<tr class="memdesc:ga695a9c6b56e71e771be0b06438a3b215"><td class="mdescLeft">&#160;</td><td class="mdescRight">The ra_svn way of saying <code>SVN_DIRENT_SIZE</code>.  <a href="group__ra__svn__dirent__fields.html#ga695a9c6b56e71e771be0b06438a3b215">More...</a><br/></td></tr>
<tr class="separator:ga695a9c6b56e71e771be0b06438a3b215"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b1a602f0a4f9481e8b54e1cce00c8a1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__dirent__fields.html#ga2b1a602f0a4f9481e8b54e1cce00c8a1">SVN_RA_SVN_DIRENT_HAS_PROPS</a>&#160;&#160;&#160;&quot;has-props&quot;</td></tr>
<tr class="memdesc:ga2b1a602f0a4f9481e8b54e1cce00c8a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">The ra_svn way of saying <code>SVN_DIRENT_HAS_PROPS</code>.  <a href="group__ra__svn__dirent__fields.html#ga2b1a602f0a4f9481e8b54e1cce00c8a1">More...</a><br/></td></tr>
<tr class="separator:ga2b1a602f0a4f9481e8b54e1cce00c8a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02aa065fb808809f7bbc3e88f541e532"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__dirent__fields.html#ga02aa065fb808809f7bbc3e88f541e532">SVN_RA_SVN_DIRENT_CREATED_REV</a>&#160;&#160;&#160;&quot;created-rev&quot;</td></tr>
<tr class="memdesc:ga02aa065fb808809f7bbc3e88f541e532"><td class="mdescLeft">&#160;</td><td class="mdescRight">The ra_svn way of saying <code>SVN_DIRENT_CREATED_REV</code>.  <a href="group__ra__svn__dirent__fields.html#ga02aa065fb808809f7bbc3e88f541e532">More...</a><br/></td></tr>
<tr class="separator:ga02aa065fb808809f7bbc3e88f541e532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae760b1f5c458daeab598c09b03529080"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__dirent__fields.html#gae760b1f5c458daeab598c09b03529080">SVN_RA_SVN_DIRENT_TIME</a>&#160;&#160;&#160;&quot;time&quot;</td></tr>
<tr class="memdesc:gae760b1f5c458daeab598c09b03529080"><td class="mdescLeft">&#160;</td><td class="mdescRight">The ra_svn way of saying <code>SVN_DIRENT_TIME</code>.  <a href="group__ra__svn__dirent__fields.html#gae760b1f5c458daeab598c09b03529080">More...</a><br/></td></tr>
<tr class="separator:gae760b1f5c458daeab598c09b03529080"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf48ef4862b8b1dbc59d1429597f5ad40"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__dirent__fields.html#gaf48ef4862b8b1dbc59d1429597f5ad40">SVN_RA_SVN_DIRENT_LAST_AUTHOR</a>&#160;&#160;&#160;&quot;last-author&quot;</td></tr>
<tr class="memdesc:gaf48ef4862b8b1dbc59d1429597f5ad40"><td class="mdescLeft">&#160;</td><td class="mdescRight">The ra_svn way of saying <code>SVN_DIRENT_LAST_AUTHOR</code>.  <a href="group__ra__svn__dirent__fields.html#gaf48ef4862b8b1dbc59d1429597f5ad40">More...</a><br/></td></tr>
<tr class="separator:gaf48ef4862b8b1dbc59d1429597f5ad40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f6bf85e63be94c161cc3e2e2afc0985"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5f6bf85e63be94c161cc3e2e2afc0985"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a5f6bf85e63be94c161cc3e2e2afc0985">SVN_RA_SVN_UNSPECIFIED_NUMBER</a>&#160;&#160;&#160;~((apr_uint64_t) 0)</td></tr>
<tr class="memdesc:a5f6bf85e63be94c161cc3e2e2afc0985"><td class="mdescLeft">&#160;</td><td class="mdescRight">A value used to indicate an optional number element in a tuple that was not received. <br/></td></tr>
<tr class="separator:a5f6bf85e63be94c161cc3e2e2afc0985"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25675893e6ad82d673063174381e4f82"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a25675893e6ad82d673063174381e4f82">SVN_CMD_ERR</a>(expr)</td></tr>
<tr class="memdesc:a25675893e6ad82d673063174381e4f82"><td class="mdescLeft">&#160;</td><td class="mdescRight">A specialized form of <code>SVN_ERR</code> to deal with errors which occur in an <a class="el" href="svn__ra__svn_8h.html#a263215e0332d07752e42df88e0d68a2f" title="Command handler, used by svn_ra_svn_handle_commands(). ">svn_ra_svn_command_handler()</a>.  <a href="#a25675893e6ad82d673063174381e4f82">More...</a><br/></td></tr>
<tr class="separator:a25675893e6ad82d673063174381e4f82"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a1791de5c838347a0faf7939f0cb2e043"><td class="memItemLeft" align="right" valign="top">typedef struct svn_ra_svn_conn_st&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a></td></tr>
<tr class="memdesc:a1791de5c838347a0faf7939f0cb2e043"><td class="mdescLeft">&#160;</td><td class="mdescRight">an ra_svn connection.  <a href="#a1791de5c838347a0faf7939f0cb2e043">More...</a><br/></td></tr>
<tr class="separator:a1791de5c838347a0faf7939f0cb2e043"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a263215e0332d07752e42df88e0d68a2f"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a263215e0332d07752e42df88e0d68a2f">svn_ra_svn_command_handler</a> )(<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, apr_array_header_t *params, void *baton)</td></tr>
<tr class="memdesc:a263215e0332d07752e42df88e0d68a2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Command handler, used by <a class="el" href="group__ra__svn__deprecated.html#gaa39e750851c82affcf6e8ff900502882" title="Similar to svn_ra_svn_handle_commands2 but error_on_disconnect is always FALSE. ">svn_ra_svn_handle_commands()</a>.  <a href="#a263215e0332d07752e42df88e0d68a2f">More...</a><br/></td></tr>
<tr class="separator:a263215e0332d07752e42df88e0d68a2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac04bd6bb4f7ab48464e48dfc3c79bc25"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac04bd6bb4f7ab48464e48dfc3c79bc25"></a>
typedef struct <br class="typebreak"/>
<a class="el" href="structsvn__ra__svn__cmd__entry__t.html">svn_ra_svn_cmd_entry_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#ac04bd6bb4f7ab48464e48dfc3c79bc25">svn_ra_svn_cmd_entry_t</a></td></tr>
<tr class="memdesc:ac04bd6bb4f7ab48464e48dfc3c79bc25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Command table, used by <a class="el" href="group__ra__svn__deprecated.html#gaa39e750851c82affcf6e8ff900502882" title="Similar to svn_ra_svn_handle_commands2 but error_on_disconnect is always FALSE. ">svn_ra_svn_handle_commands()</a>. <br/></td></tr>
<tr class="separator:ac04bd6bb4f7ab48464e48dfc3c79bc25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dc3e158e9067eea2693e4196347ca85"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structsvn__ra__svn__item__t.html">svn_ra_svn_item_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a1dc3e158e9067eea2693e4196347ca85">svn_ra_svn_item_t</a></td></tr>
<tr class="memdesc:a1dc3e158e9067eea2693e4196347ca85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Memory representation of an on-the-wire data item.  <a href="#a1dc3e158e9067eea2693e4196347ca85">More...</a><br/></td></tr>
<tr class="separator:a1dc3e158e9067eea2693e4196347ca85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada210c1813d69f0f50327a42f7ccbc44"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ada210c1813d69f0f50327a42f7ccbc44"></a>
typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><b>svn_ra_svn_edit_callback</b> )(void *baton)</td></tr>
<tr class="separator:ada210c1813d69f0f50327a42f7ccbc44"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ab5ded3bc2f01e5c0b700f5056dd31622"><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#ab5ded3bc2f01e5c0b700f5056dd31622">svn_ra_svn_create_conn4</a> (apr_socket_t *sock, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *in_stream, <a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *out_stream, int compression_level, apr_size_t zero_copy_limit, apr_size_t error_check_interval, apr_pool_t *result_pool)</td></tr>
<tr class="memdesc:ab5ded3bc2f01e5c0b700f5056dd31622"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize a connection structure for the given socket or input/output streams.  <a href="#ab5ded3bc2f01e5c0b700f5056dd31622">More...</a><br/></td></tr>
<tr class="separator:ab5ded3bc2f01e5c0b700f5056dd31622"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae9f6d4b3a2c40c2ba09027f31dfbf6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#aae9f6d4b3a2c40c2ba09027f31dfbf6e">svn_ra_svn_create_conn3</a> (apr_socket_t *sock, apr_file_t *in_file, apr_file_t *out_file, int compression_level, apr_size_t zero_copy_limit, apr_size_t error_check_interval, apr_pool_t *pool)</td></tr>
<tr class="memdesc:aae9f6d4b3a2c40c2ba09027f31dfbf6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="svn__ra__svn_8h.html#ab5ded3bc2f01e5c0b700f5056dd31622" title="Initialize a connection structure for the given socket or input/output streams. ">svn_ra_svn_create_conn4()</a> but only supports apr_file_t handles instead of the more generic streams.  <a href="#aae9f6d4b3a2c40c2ba09027f31dfbf6e">More...</a><br/></td></tr>
<tr class="separator:aae9f6d4b3a2c40c2ba09027f31dfbf6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac133dd2eefd8be1a45d48d44747bcb6d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#ac133dd2eefd8be1a45d48d44747bcb6d">svn_ra_svn_create_conn2</a> (apr_socket_t *sock, apr_file_t *in_file, apr_file_t *out_file, int compression_level, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ac133dd2eefd8be1a45d48d44747bcb6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="svn__ra__svn_8h.html#aae9f6d4b3a2c40c2ba09027f31dfbf6e" title="Similar to svn_ra_svn_create_conn4() but only supports apr_file_t handles instead of the more generic...">svn_ra_svn_create_conn3()</a> but disables the zero copy code path and sets the error checking interval to 0.  <a href="#ac133dd2eefd8be1a45d48d44747bcb6d">More...</a><br/></td></tr>
<tr class="separator:ac133dd2eefd8be1a45d48d44747bcb6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775d6e7ac47cf36fee531c51c5428d95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a775d6e7ac47cf36fee531c51c5428d95">svn_ra_svn_create_conn</a> (apr_socket_t *sock, apr_file_t *in_file, apr_file_t *out_file, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a775d6e7ac47cf36fee531c51c5428d95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="svn__ra__svn_8h.html#ac133dd2eefd8be1a45d48d44747bcb6d" title="Similar to svn_ra_svn_create_conn3() but disables the zero copy code path and sets the error checking...">svn_ra_svn_create_conn2()</a> but uses the default compression level (<a class="el" href="svn__delta_8h.html#a5b7cb7c7d6f12be314f8524e71cd6ae2" title="This is the default compression level we pass to zlib. ">SVN_DELTA_COMPRESSION_LEVEL_DEFAULT</a>) for network transmissions.  <a href="#a775d6e7ac47cf36fee531c51c5428d95">More...</a><br/></td></tr>
<tr class="separator:a775d6e7ac47cf36fee531c51c5428d95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ba7ce79edad8a063c3e3dc85ace564e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a8ba7ce79edad8a063c3e3dc85ace564e">svn_ra_svn_set_capabilities</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, const apr_array_header_t *list)</td></tr>
<tr class="memdesc:a8ba7ce79edad8a063c3e3dc85ace564e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the capabilities in <em>list</em> to <em>conn's</em> capabilities.  <a href="#a8ba7ce79edad8a063c3e3dc85ace564e">More...</a><br/></td></tr>
<tr class="separator:a8ba7ce79edad8a063c3e3dc85ace564e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4572cb8fb827a2d43881ccab7791743a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a4572cb8fb827a2d43881ccab7791743a">svn_ra_svn_has_capability</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, const char *capability)</td></tr>
<tr class="memdesc:a4572cb8fb827a2d43881ccab7791743a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return <code>TRUE</code> if <em>conn</em> has the capability <em>capability</em>, or <code>FALSE</code> if it does not.  <a href="#a4572cb8fb827a2d43881ccab7791743a">More...</a><br/></td></tr>
<tr class="separator:a4572cb8fb827a2d43881ccab7791743a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4f5de938f3650e00057b3c191547790"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#aa4f5de938f3650e00057b3c191547790">svn_ra_svn_compression_level</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn)</td></tr>
<tr class="memdesc:aa4f5de938f3650e00057b3c191547790"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the data compression level to use for network transmissions.  <a href="#aa4f5de938f3650e00057b3c191547790">More...</a><br/></td></tr>
<tr class="separator:aa4f5de938f3650e00057b3c191547790"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7f73af5a6cca67d33b286316e3ccad9"><td class="memItemLeft" align="right" valign="top">apr_size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#af7f73af5a6cca67d33b286316e3ccad9">svn_ra_svn_zero_copy_limit</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn)</td></tr>
<tr class="memdesc:af7f73af5a6cca67d33b286316e3ccad9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the zero-copy data block limit to use for network transmissions.  <a href="#af7f73af5a6cca67d33b286316e3ccad9">More...</a><br/></td></tr>
<tr class="separator:af7f73af5a6cca67d33b286316e3ccad9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11bdc8ac443b093ec70e79c95e89eae1"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a11bdc8ac443b093ec70e79c95e89eae1">svn_ra_svn_conn_remote_host</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn)</td></tr>
<tr class="memdesc:a11bdc8ac443b093ec70e79c95e89eae1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the remote address of the connection as a string, if known, or NULL if inapplicable.  <a href="#a11bdc8ac443b093ec70e79c95e89eae1">More...</a><br/></td></tr>
<tr class="separator:a11bdc8ac443b093ec70e79c95e89eae1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a338425f7a8fa9e0baa35cf7122206f5b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a338425f7a8fa9e0baa35cf7122206f5b">svn_ra_svn_get_editor</a> (const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **editor, void **edit_baton, <a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, svn_ra_svn_edit_callback callback, void *callback_baton)</td></tr>
<tr class="memdesc:a338425f7a8fa9e0baa35cf7122206f5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*editor</em> and <em>*edit_baton</em> to an editor which will pass editing operations over the network, using <em>conn</em> and <em>pool</em>.  <a href="#a338425f7a8fa9e0baa35cf7122206f5b">More...</a><br/></td></tr>
<tr class="separator:a338425f7a8fa9e0baa35cf7122206f5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ff4a5a551a5a885de81d8b2898b0ab1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a0ff4a5a551a5a885de81d8b2898b0ab1">svn_ra_svn_drive_editor2</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> *editor, void *edit_baton, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *aborted, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> for_replay)</td></tr>
<tr class="memdesc:a0ff4a5a551a5a885de81d8b2898b0ab1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receive edit commands over the network and use them to drive <em>editor</em> with <em>edit_baton</em>.  <a href="#a0ff4a5a551a5a885de81d8b2898b0ab1">More...</a><br/></td></tr>
<tr class="separator:a0ff4a5a551a5a885de81d8b2898b0ab1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57820414393d510ae1c0f3756906f3d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a57820414393d510ae1c0f3756906f3d5">svn_ra_svn_drive_editor</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> *editor, void *edit_baton, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *aborted)</td></tr>
<tr class="memdesc:a57820414393d510ae1c0f3756906f3d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like svn_ra_svn_drive_editor2, but with <em>for_replay</em> always FALSE.  <a href="#a57820414393d510ae1c0f3756906f3d5">More...</a><br/></td></tr>
<tr class="separator:a57820414393d510ae1c0f3756906f3d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cb7068e6e8eca7b20e140ee2e4b5be5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a5cb7068e6e8eca7b20e140ee2e4b5be5">svn_ra_svn_cram_server</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, <a class="el" href="svn__config_8h.html#aab78e7d9b95c9bcfe0bdf1d9f3212596">svn_config_t</a> *pwdb, const char **user, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *success)</td></tr>
<tr class="memdesc:a5cb7068e6e8eca7b20e140ee2e4b5be5"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is only intended for use by svnserve.  <a href="#a5cb7068e6e8eca7b20e140ee2e4b5be5">More...</a><br/></td></tr>
<tr class="separator:a5cb7068e6e8eca7b20e140ee2e4b5be5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b655de213bc2ce7656027cbc1f48cff"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structsvn__version__t.html">svn_version_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__ra__svn_8h.html#a7b655de213bc2ce7656027cbc1f48cff">svn_ra_svn_version</a> (void)</td></tr>
<tr class="memdesc:a7b655de213bc2ce7656027cbc1f48cff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get libsvn_ra_svn version information.  <a href="#a7b655de213bc2ce7656027cbc1f48cff">More...</a><br/></td></tr>
<tr class="separator:a7b655de213bc2ce7656027cbc1f48cff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga32bb1636947fc268dfbc9654e239f0cd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga32bb1636947fc268dfbc9654e239f0cd">svn_ra_svn_write_number</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, apr_uint64_t number)</td></tr>
<tr class="memdesc:ga32bb1636947fc268dfbc9654e239f0cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a number over the net.  <a href="group__ra__svn__deprecated.html#ga32bb1636947fc268dfbc9654e239f0cd">More...</a><br/></td></tr>
<tr class="separator:ga32bb1636947fc268dfbc9654e239f0cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18bce76edb7547d1d4354a43871f92df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga18bce76edb7547d1d4354a43871f92df">svn_ra_svn_write_string</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *str)</td></tr>
<tr class="memdesc:ga18bce76edb7547d1d4354a43871f92df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a string over the net.  <a href="group__ra__svn__deprecated.html#ga18bce76edb7547d1d4354a43871f92df">More...</a><br/></td></tr>
<tr class="separator:ga18bce76edb7547d1d4354a43871f92df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0ae0696e25c8a4f334721a054e64a4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gaa0ae0696e25c8a4f334721a054e64a4f">svn_ra_svn_write_cstring</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *s)</td></tr>
<tr class="memdesc:gaa0ae0696e25c8a4f334721a054e64a4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a cstring over the net.  <a href="group__ra__svn__deprecated.html#gaa0ae0696e25c8a4f334721a054e64a4f">More...</a><br/></td></tr>
<tr class="separator:gaa0ae0696e25c8a4f334721a054e64a4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0578f33134be63d940746d85c92d215b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga0578f33134be63d940746d85c92d215b">svn_ra_svn_write_word</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *word)</td></tr>
<tr class="memdesc:ga0578f33134be63d940746d85c92d215b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a word over the net.  <a href="group__ra__svn__deprecated.html#ga0578f33134be63d940746d85c92d215b">More...</a><br/></td></tr>
<tr class="separator:ga0578f33134be63d940746d85c92d215b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad9eaa7f84b44a546984c4e1820570a8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gad9eaa7f84b44a546984c4e1820570a8d">svn_ra_svn_write_proplist</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, apr_hash_t *props)</td></tr>
<tr class="memdesc:gad9eaa7f84b44a546984c4e1820570a8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a list of properties over the net.  <a href="group__ra__svn__deprecated.html#gad9eaa7f84b44a546984c4e1820570a8d">More...</a><br/></td></tr>
<tr class="separator:gad9eaa7f84b44a546984c4e1820570a8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga13a9cfd41e5935ef2346a3cce936c7fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga13a9cfd41e5935ef2346a3cce936c7fd">svn_ra_svn_start_list</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga13a9cfd41e5935ef2346a3cce936c7fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Begin a list.  <a href="group__ra__svn__deprecated.html#ga13a9cfd41e5935ef2346a3cce936c7fd">More...</a><br/></td></tr>
<tr class="separator:ga13a9cfd41e5935ef2346a3cce936c7fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae0f190270cfe87b19d38a533ea0dea3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gaae0f190270cfe87b19d38a533ea0dea3">svn_ra_svn_end_list</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaae0f190270cfe87b19d38a533ea0dea3"><td class="mdescLeft">&#160;</td><td class="mdescRight">End a list.  <a href="group__ra__svn__deprecated.html#gaae0f190270cfe87b19d38a533ea0dea3">More...</a><br/></td></tr>
<tr class="separator:gaae0f190270cfe87b19d38a533ea0dea3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabeafa59754d0da13ca45c0fb9d2b7105"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gabeafa59754d0da13ca45c0fb9d2b7105">svn_ra_svn_flush</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gabeafa59754d0da13ca45c0fb9d2b7105"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flush the write buffer.  <a href="group__ra__svn__deprecated.html#gabeafa59754d0da13ca45c0fb9d2b7105">More...</a><br/></td></tr>
<tr class="separator:gabeafa59754d0da13ca45c0fb9d2b7105"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga485ffa27bbea0744a5c3a53f46e04c54"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54">svn_ra_svn_write_tuple</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *fmt,...)</td></tr>
<tr class="memdesc:ga485ffa27bbea0744a5c3a53f46e04c54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a tuple, using a printf-like interface.  <a href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54">More...</a><br/></td></tr>
<tr class="separator:ga485ffa27bbea0744a5c3a53f46e04c54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga054e65557e26d30a0f4b655839f73d8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga054e65557e26d30a0f4b655839f73d8e">svn_ra_svn_read_item</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, <a class="el" href="structsvn__ra__svn__item__t.html">svn_ra_svn_item_t</a> **item)</td></tr>
<tr class="memdesc:ga054e65557e26d30a0f4b655839f73d8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read an item from the network into <em>*item</em>.  <a href="group__ra__svn__deprecated.html#ga054e65557e26d30a0f4b655839f73d8e">More...</a><br/></td></tr>
<tr class="separator:ga054e65557e26d30a0f4b655839f73d8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga772a21bdd3b2d0ab7216745bf5772116"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga772a21bdd3b2d0ab7216745bf5772116">svn_ra_svn_skip_leading_garbage</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga772a21bdd3b2d0ab7216745bf5772116"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scan data on <em>conn</em> until we find something which looks like the beginning of an svn server greeting (an open paren followed by a whitespace character).  <a href="group__ra__svn__deprecated.html#ga772a21bdd3b2d0ab7216745bf5772116">More...</a><br/></td></tr>
<tr class="separator:ga772a21bdd3b2d0ab7216745bf5772116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16da8f197baf87d068c761961a6439b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga16da8f197baf87d068c761961a6439b5">svn_ra_svn_parse_tuple</a> (const apr_array_header_t *list, apr_pool_t *pool, const char *fmt,...)</td></tr>
<tr class="memdesc:ga16da8f197baf87d068c761961a6439b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse an array of <code>svn_sort__item_t</code> structures as a tuple, using a printf-like interface.  <a href="group__ra__svn__deprecated.html#ga16da8f197baf87d068c761961a6439b5">More...</a><br/></td></tr>
<tr class="separator:ga16da8f197baf87d068c761961a6439b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7909e29a780d40093a202feadb8359a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gab7909e29a780d40093a202feadb8359a">svn_ra_svn_read_tuple</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *fmt,...)</td></tr>
<tr class="memdesc:gab7909e29a780d40093a202feadb8359a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a tuple from the network and parse it as a tuple, using the format string notation from <a class="el" href="group__ra__svn__deprecated.html#ga16da8f197baf87d068c761961a6439b5" title="Parse an array of svn_sort__item_t structures as a tuple, using a printf-like interface. ">svn_ra_svn_parse_tuple()</a>.  <a href="group__ra__svn__deprecated.html#gab7909e29a780d40093a202feadb8359a">More...</a><br/></td></tr>
<tr class="separator:gab7909e29a780d40093a202feadb8359a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a04dce0d6a78caaf891f7ccf7f589f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga6a04dce0d6a78caaf891f7ccf7f589f9">svn_ra_svn_parse_proplist</a> (const apr_array_header_t *list, apr_pool_t *pool, apr_hash_t **props)</td></tr>
<tr class="memdesc:ga6a04dce0d6a78caaf891f7ccf7f589f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse an array of <code><a class="el" href="structsvn__ra__svn__item__t.html" title="Memory representation of an on-the-wire data item. ">svn_ra_svn_item_t</a></code> structures as a list of properties, storing the properties in a hash table.  <a href="group__ra__svn__deprecated.html#ga6a04dce0d6a78caaf891f7ccf7f589f9">More...</a><br/></td></tr>
<tr class="separator:ga6a04dce0d6a78caaf891f7ccf7f589f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga355479e94c812c250e233f5287718133"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga355479e94c812c250e233f5287718133">svn_ra_svn_read_cmd_response</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *fmt,...)</td></tr>
<tr class="memdesc:ga355479e94c812c250e233f5287718133"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a command response from the network and parse it as a tuple, using the format string notation from <a class="el" href="group__ra__svn__deprecated.html#ga16da8f197baf87d068c761961a6439b5" title="Parse an array of svn_sort__item_t structures as a tuple, using a printf-like interface. ">svn_ra_svn_parse_tuple()</a>.  <a href="group__ra__svn__deprecated.html#ga355479e94c812c250e233f5287718133">More...</a><br/></td></tr>
<tr class="separator:ga355479e94c812c250e233f5287718133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5507592eb86fbb8807359425190c0025"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga5507592eb86fbb8807359425190c0025">svn_ra_svn_handle_commands2</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const <a class="el" href="structsvn__ra__svn__cmd__entry__t.html">svn_ra_svn_cmd_entry_t</a> *commands, void *baton, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> error_on_disconnect)</td></tr>
<tr class="memdesc:ga5507592eb86fbb8807359425190c0025"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accept commands over the network and handle them according to <em>commands</em>.  <a href="group__ra__svn__deprecated.html#ga5507592eb86fbb8807359425190c0025">More...</a><br/></td></tr>
<tr class="separator:ga5507592eb86fbb8807359425190c0025"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa39e750851c82affcf6e8ff900502882"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gaa39e750851c82affcf6e8ff900502882">svn_ra_svn_handle_commands</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const <a class="el" href="structsvn__ra__svn__cmd__entry__t.html">svn_ra_svn_cmd_entry_t</a> *commands, void *baton)</td></tr>
<tr class="memdesc:gaa39e750851c82affcf6e8ff900502882"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to svn_ra_svn_handle_commands2 but <em>error_on_disconnect</em> is always <code>FALSE</code>.  <a href="group__ra__svn__deprecated.html#gaa39e750851c82affcf6e8ff900502882">More...</a><br/></td></tr>
<tr class="separator:gaa39e750851c82affcf6e8ff900502882"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf15ea6eb7cc42d3153098800e3fdb94b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gaf15ea6eb7cc42d3153098800e3fdb94b">svn_ra_svn_write_cmd</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *cmdname, const char *fmt,...)</td></tr>
<tr class="memdesc:gaf15ea6eb7cc42d3153098800e3fdb94b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a command over the network, using the same format string notation as <a class="el" href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54" title="Write a tuple, using a printf-like interface. ">svn_ra_svn_write_tuple()</a>.  <a href="group__ra__svn__deprecated.html#gaf15ea6eb7cc42d3153098800e3fdb94b">More...</a><br/></td></tr>
<tr class="separator:gaf15ea6eb7cc42d3153098800e3fdb94b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3ebeae8904556183a5cef212951f706"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#gae3ebeae8904556183a5cef212951f706">svn_ra_svn_write_cmd_response</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, const char *fmt,...)</td></tr>
<tr class="memdesc:gae3ebeae8904556183a5cef212951f706"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write a successful command response over the network, using the same format string notation as <a class="el" href="group__ra__svn__deprecated.html#ga485ffa27bbea0744a5c3a53f46e04c54" title="Write a tuple, using a printf-like interface. ">svn_ra_svn_write_tuple()</a>.  <a href="group__ra__svn__deprecated.html#gae3ebeae8904556183a5cef212951f706">More...</a><br/></td></tr>
<tr class="separator:gae3ebeae8904556183a5cef212951f706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga550b747e1d40ac8441908029147228ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ra__svn__deprecated.html#ga550b747e1d40ac8441908029147228ca">svn_ra_svn_write_cmd_failure</a> (<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, <a class="el" href="structsvn__error__t.html">svn_error_t</a> *err)</td></tr>
<tr class="memdesc:ga550b747e1d40ac8441908029147228ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write an unsuccessful command response over the network.  <a href="group__ra__svn__deprecated.html#ga550b747e1d40ac8441908029147228ca">More...</a><br/></td></tr>
<tr class="separator:ga550b747e1d40ac8441908029147228ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>libsvn_ra_svn functions used by the server </p>

<p>Definition in file <a class="el" href="svn__ra__svn_8h_source.html">svn_ra_svn.h</a>.</p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a25675893e6ad82d673063174381e4f82"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_CMD_ERR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">expr</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span> {                                                        <a class="code" href="svn__types_8h.html#aee5cf08f356d7506dcd929a7f2e51aa0">\</a></div>
<div class="line"><a class="code" href="svn__types_8h.html#aee5cf08f356d7506dcd929a7f2e51aa0">    svn_error_t</a> *svn_err__temp = (expr);                      \</div>
<div class="line">    if (svn_err__temp)                                        \</div>
<div class="line">      return <a class="code" href="group__svn__error__error__creation__destroy.html#ga63cac13b078a6d0af98e74d61f7e355b">svn_error_create</a>(<a class="code" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660a6ec8f5eabb3b6a6bf972c43d1a1a19f0">SVN_ERR_RA_SVN_CMD_ERR</a>,         \</div>
<div class="line">                              svn_err__temp, NULL);           \</div>
<div class="line">  } <span class="keywordflow">while</span> (0)</div>
<div class="ttc" id="svn__error__codes_8h_html_ac8784565366c15a28d456c4997963660a6ec8f5eabb3b6a6bf972c43d1a1a19f0"><div class="ttname"><a href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660a6ec8f5eabb3b6a6bf972c43d1a1a19f0">SVN_ERR_RA_SVN_CMD_ERR</a></div><div class="ttdoc">&amp;quot;Special code for wrapping server errors to report to client&amp;quot; </div><div class="ttdef"><b>Definition:</b> <a href="svn__error__codes_8h_source.html#l01504">svn_error_codes.h:1504</a></div></div>
<div class="ttc" id="svn__types_8h_html_aee5cf08f356d7506dcd929a7f2e51aa0"><div class="ttname"><a href="svn__types_8h.html#aee5cf08f356d7506dcd929a7f2e51aa0">svn_error_t</a></div><div class="ttdeci">struct svn_error_t svn_error_t</div><div class="ttdoc">Subversion error object. </div></div>
<div class="ttc" id="group__svn__error__error__creation__destroy_html_ga63cac13b078a6d0af98e74d61f7e355b"><div class="ttname"><a href="group__svn__error__error__creation__destroy.html#ga63cac13b078a6d0af98e74d61f7e355b">svn_error_create</a></div><div class="ttdeci">svn_error_t * svn_error_create(apr_status_t apr_err, svn_error_t *child, const char *message)</div><div class="ttdoc">Create a nested exception structure. </div></div>
</div><!-- fragment -->
<p>A specialized form of <code>SVN_ERR</code> to deal with errors which occur in an <a class="el" href="svn__ra__svn_8h.html#a263215e0332d07752e42df88e0d68a2f" title="Command handler, used by svn_ra_svn_handle_commands(). ">svn_ra_svn_command_handler()</a>. </p>
<p>An error returned with this macro will be passed back to the other side of the connection. Use this macro when performing the requested operation; use the regular <code>SVN_ERR</code> when performing I/O with the client. </p>

<p>Definition at line <a class="el" href="svn__ra__svn_8h_source.html#l00112">112</a> of file <a class="el" href="svn__ra__svn_8h_source.html">svn_ra_svn.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac0ee29fdfb2b14d0219ce6ef177e8c6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_RA_SVN_CAP_EDIT_PIPELINE&#160;&#160;&#160;&quot;edit-pipeline&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Currently-defined capabilities. </p>

<p>Definition at line <a class="el" href="svn__ra__svn_8h_source.html#l00050">50</a> of file <a class="el" href="svn__ra__svn_8h_source.html">svn_ra_svn.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae0e3d4fc3c74c8f6062899b8995bbee5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SVN_RA_SVN_PORT&#160;&#160;&#160;3690</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The well-known svn port number. </p>

<p>Definition at line <a class="el" href="svn__ra__svn_8h_source.html#l00047">47</a> of file <a class="el" href="svn__ra__svn_8h_source.html">svn_ra_svn.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="a263215e0332d07752e42df88e0d68a2f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_ra_svn_command_handler)(<a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *conn, apr_pool_t *pool, apr_array_header_t *params, void *baton)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Command handler, used by <a class="el" href="group__ra__svn__deprecated.html#gaa39e750851c82affcf6e8ff900502882" title="Similar to svn_ra_svn_handle_commands2 but error_on_disconnect is always FALSE. ">svn_ra_svn_handle_commands()</a>. </p>

<p>Definition at line <a class="el" href="svn__ra__svn_8h_source.html#l00124">124</a> of file <a class="el" href="svn__ra__svn_8h_source.html">svn_ra_svn.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1791de5c838347a0faf7939f0cb2e043"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct svn_ra_svn_conn_st <a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>an ra_svn connection. </p>

<p>Definition at line <a class="el" href="svn__ra__svn_8h_source.html#l00121">121</a> of file <a class="el" href="svn__ra__svn_8h_source.html">svn_ra_svn.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1dc3e158e9067eea2693e4196347ca85"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structsvn__ra__svn__item__t.html">svn_ra_svn_item_t</a>  <a class="el" href="structsvn__ra__svn__item__t.html">svn_ra_svn_item_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Memory representation of an on-the-wire data item. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="aa4f5de938f3650e00057b3c191547790"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int svn_ra_svn_compression_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the data compression level to use for network transmissions. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.7. </dd></dl>

</div>
</div>
<a class="anchor" id="a11bdc8ac443b093ec70e79c95e89eae1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* svn_ra_svn_conn_remote_host </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the remote address of the connection as a string, if known, or NULL if inapplicable. </p>

</div>
</div>
<a class="anchor" id="a5cb7068e6e8eca7b20e140ee2e4b5be5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_cram_server </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__config_8h.html#aab78e7d9b95c9bcfe0bdf1d9f3212596">svn_config_t</a> *&#160;</td>
          <td class="paramname"><em>pwdb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>user</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *&#160;</td>
          <td class="paramname"><em>success</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function is only intended for use by svnserve. </p>
<p>Perform CRAM-MD5 password authentication. On success, return SVN_NO_ERROR with *user set to the username and *success set to TRUE. On an error which can be reported to the client, report the error and return SVN_NO_ERROR with *success set to FALSE. On communications failure, return an error. </p>

</div>
</div>
<a class="anchor" id="a775d6e7ac47cf36fee531c51c5428d95"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a>* svn_ra_svn_create_conn </td>
          <td>(</td>
          <td class="paramtype">apr_socket_t *&#160;</td>
          <td class="paramname"><em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_file_t *&#160;</td>
          <td class="paramname"><em>in_file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_file_t *&#160;</td>
          <td class="paramname"><em>out_file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="svn__ra__svn_8h.html#ac133dd2eefd8be1a45d48d44747bcb6d" title="Similar to svn_ra_svn_create_conn3() but disables the zero copy code path and sets the error checking...">svn_ra_svn_create_conn2()</a> but uses the default compression level (<a class="el" href="svn__delta_8h.html#a5b7cb7c7d6f12be314f8524e71cd6ae2" title="This is the default compression level we pass to zlib. ">SVN_DELTA_COMPRESSION_LEVEL_DEFAULT</a>) for network transmissions. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000351">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ac133dd2eefd8be1a45d48d44747bcb6d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a>* svn_ra_svn_create_conn2 </td>
          <td>(</td>
          <td class="paramtype">apr_socket_t *&#160;</td>
          <td class="paramname"><em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_file_t *&#160;</td>
          <td class="paramname"><em>in_file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_file_t *&#160;</td>
          <td class="paramname"><em>out_file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>compression_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="svn__ra__svn_8h.html#aae9f6d4b3a2c40c2ba09027f31dfbf6e" title="Similar to svn_ra_svn_create_conn4() but only supports apr_file_t handles instead of the more generic...">svn_ra_svn_create_conn3()</a> but disables the zero copy code path and sets the error checking interval to 0. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.7.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000350">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. </dd></dl>

</div>
</div>
<a class="anchor" id="aae9f6d4b3a2c40c2ba09027f31dfbf6e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a>* svn_ra_svn_create_conn3 </td>
          <td>(</td>
          <td class="paramtype">apr_socket_t *&#160;</td>
          <td class="paramname"><em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_file_t *&#160;</td>
          <td class="paramname"><em>in_file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_file_t *&#160;</td>
          <td class="paramname"><em>out_file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>compression_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_size_t&#160;</td>
          <td class="paramname"><em>zero_copy_limit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_size_t&#160;</td>
          <td class="paramname"><em>error_check_interval</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="svn__ra__svn_8h.html#ab5ded3bc2f01e5c0b700f5056dd31622" title="Initialize a connection structure for the given socket or input/output streams. ">svn_ra_svn_create_conn4()</a> but only supports apr_file_t handles instead of the more generic streams. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.8 </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000349">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.8 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ab5ded3bc2f01e5c0b700f5056dd31622"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a>* svn_ra_svn_create_conn4 </td>
          <td>(</td>
          <td class="paramtype">apr_socket_t *&#160;</td>
          <td class="paramname"><em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>in_stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *&#160;</td>
          <td class="paramname"><em>out_stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>compression_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_size_t&#160;</td>
          <td class="paramname"><em>zero_copy_limit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_size_t&#160;</td>
          <td class="paramname"><em>error_check_interval</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>result_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize a connection structure for the given socket or input/output streams. </p>
<p>Either <em>sock</em> or <em>in_stream/<em>out_stream</em> must</em> be set, not both. <em>compression_level</em> specifies the desired network data compression level (zlib) from 0 (no compression) to 9 (best but slowest).</p>
<p>If <em>zero_copy_limit</em> is not 0, cached file contents smaller than the given limit may be sent directly to the network socket. Otherwise, it will be copied into a temporary buffer before being forwarded to the network stack. Since the zero-copy code path has to enforce strict time-outs, the receiver must be able to process <em>zero_copy_limit</em> bytes within one second. Even temporary failure to do so may cause the server to cancel the respective operation with a time-out error.</p>
<p>To reduce the overhead of checking for cancellation requests from the data receiver, set <em>error_check_interval</em> to some non-zero value. It defines the number of bytes that must have been sent since the last check before the next check will be made.</p>
<dl class="section note"><dt>Note</dt><dd>If <em>out_stream</em> is an wrapped apr_file_t* the backing file will be used for some operations.</dd></dl>
<p>Allocate the result in <em>pool</em>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.9 </dd></dl>

</div>
</div>
<a class="anchor" id="a57820414393d510ae1c0f3756906f3d5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_drive_editor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> *&#160;</td>
          <td class="paramname"><em>editor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>edit_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *&#160;</td>
          <td class="paramname"><em>aborted</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Like svn_ra_svn_drive_editor2, but with <em>for_replay</em> always FALSE. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000352">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. </dd></dl>

</div>
</div>
<a class="anchor" id="a0ff4a5a551a5a885de81d8b2898b0ab1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_drive_editor2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> *&#160;</td>
          <td class="paramname"><em>editor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>edit_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *&#160;</td>
          <td class="paramname"><em>aborted</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>for_replay</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Receive edit commands over the network and use them to drive <em>editor</em> with <em>edit_baton</em>. </p>
<p>On return, <em>*aborted</em> will be set if the edit was aborted. The drive can be terminated with a finish-replay command only if <em>for_replay</em> is TRUE.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The <code>copyfrom_path</code> parameter passed to the <code>add_file</code> and <code>add_directory</code> methods of the receiving editor will be canonicalized either as a URL or as a relative path (starting with a slash) according to which kind was sent by the driving end of the connection. See <a class="el" href="svn__ra__svn_8h.html#a338425f7a8fa9e0baa35cf7122206f5b" title="Set *editor and *edit_baton to an editor which will pass editing operations over the network...">svn_ra_svn_get_editor()</a> for information on the driving end of the connection. </dd></dl>

</div>
</div>
<a class="anchor" id="a338425f7a8fa9e0baa35cf7122206f5b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_ra_svn_get_editor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structsvn__delta__editor__t.html">svn_delta_editor_t</a> **&#160;</td>
          <td class="paramname"><em>editor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>edit_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">svn_ra_svn_edit_callback&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>callback_baton</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*editor</em> and <em>*edit_baton</em> to an editor which will pass editing operations over the network, using <em>conn</em> and <em>pool</em>. </p>
<p>Upon successful completion of the edit, the editor will invoke <em>callback</em> with <em>callback_baton</em> as an argument.</p>
<dl class="section note"><dt>Note</dt><dd>The <code>copyfrom_path</code> parameter passed to the <code>add_file</code> and <code>add_directory</code> methods of the returned editor may be either a URL or a relative path, and is transferred verbatim to the receiving end of the connection. See <a class="el" href="svn__ra__svn_8h.html#a0ff4a5a551a5a885de81d8b2898b0ab1" title="Receive edit commands over the network and use them to drive editor with edit_baton. ">svn_ra_svn_drive_editor2()</a> for information on the receiving end of the connection. </dd></dl>

</div>
</div>
<a class="anchor" id="a4572cb8fb827a2d43881ccab7791743a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> svn_ra_svn_has_capability </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>capability</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return <code>TRUE</code> if <em>conn</em> has the capability <em>capability</em>, or <code>FALSE</code> if it does not. </p>

</div>
</div>
<a class="anchor" id="a8ba7ce79edad8a063c3e3dc85ace564e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_ra_svn_set_capabilities </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add the capabilities in <em>list</em> to <em>conn's</em> capabilities. </p>
<p><em>list</em> contains <a class="el" href="structsvn__ra__svn__item__t.html" title="Memory representation of an on-the-wire data item. ">svn_ra_svn_item_t</a> entries (which should be of type SVN_RA_SVN_WORD; a malformed data error will result if any are not).</p>
<p>This is idempotent: if a given capability was already set for <em>conn</em>, it remains set. </p>

</div>
</div>
<a class="anchor" id="a7b655de213bc2ce7656027cbc1f48cff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structsvn__version__t.html">svn_version_t</a>* svn_ra_svn_version </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get libsvn_ra_svn version information. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.1. </dd></dl>

</div>
</div>
<a class="anchor" id="af7f73af5a6cca67d33b286316e3ccad9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">apr_size_t svn_ra_svn_zero_copy_limit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__ra__svn_8h.html#a1791de5c838347a0faf7939f0cb2e043">svn_ra_svn_conn_t</a> *&#160;</td>
          <td class="paramname"><em>conn</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the zero-copy data block limit to use for network transmissions. </p>
<dl class="section see"><dt>See Also</dt><dd><a href="http://en.wikipedia.org/wiki/Zero-copy">http://en.wikipedia.org/wiki/Zero-copy</a></dd></dl>
<dl class="section since"><dt>Since</dt><dd>New in 1.8. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:17:26 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
