<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: svn_io.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_c37f7789c49aa9e5999234152b1ef6ed.html">subversion</a></li><li class="navelem"><a class="el" href="dir_334478eea8dba5ae935f94af9469978f.html">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">svn_io.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="svn__io_8h.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @copyright</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ====================================================================</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *    Licensed to the Apache Software Foundation (ASF) under one</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *    or more contributor license agreements.  See the NOTICE file</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *    distributed with this work for additional information</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *    regarding copyright ownership.  The ASF licenses this file</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *    to you under the Apache License, Version 2.0 (the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *    &quot;License&quot;); you may not use this file except in compliance</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *    with the License.  You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *    Unless required by applicable law or agreed to in writing,</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *    software distributed under the License is distributed on an</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *    &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *    KIND, either express or implied.  See the License for the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *    specific language governing permissions and limitations</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *    under the License.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * ====================================================================</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * @endcopyright</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> * @file svn_io.h</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"> * @brief General file I/O for Subversion</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/* ==================================================================== */</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#ifndef SVN_IO_H</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define SVN_IO_H</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;apr.h&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;apr_pools.h&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;apr_time.h&gt;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;apr_hash.h&gt;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;apr_tables.h&gt;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;apr_file_io.h&gt;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;apr_file_info.h&gt;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;apr_thread_proc.h&gt;</span>  <span class="comment">/* for apr_proc_t, apr_exit_why_e */</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="svn__types_8h.html">svn_types.h</a>&quot;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="svn__string_8h.html">svn_string.h</a>&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="svn__checksum_8h.html">svn_checksum.h</a>&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">/** Used as an argument when creating temporary files to indicate</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> * when a file should be removed.</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> * @since New in 1.4.</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> * Not specifying any of these means no removal at all. */</span></div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884">   58</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884">svn_io_file_del_t</a></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">  /** No deletion ever */</span></div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884a70268318a6e388419ae0e85ab7f7599c">   61</a></span>&#160;  <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884a70268318a6e388419ae0e85ab7f7599c">svn_io_file_del_none</a> = 0,<span class="comment"></span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">  /** Remove when the file is closed */</span></div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884a6256344ca6b43868daa12365d75834d2">   63</a></span>&#160;  <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884a6256344ca6b43868daa12365d75834d2">svn_io_file_del_on_close</a>,<span class="comment"></span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">  /** Remove when the associated pool is cleared */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884a0f89c57067b563673ea1ec5605c908bd">   65</a></span>&#160;  <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884a0f89c57067b563673ea1ec5605c908bd">svn_io_file_del_on_pool_cleanup</a></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;} <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884">svn_io_file_del_t</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">/** A set of directory entry data elements as returned by svn_io_get_dirents</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> * Note that the first two fields are exactly identical to svn_io_dirent_t</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"> * to allow returning a svn_io_dirent2_t as a svn_io_dirent_t.</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> * Use svn_io_dirent2_create() to create new svn_dirent2_t instances or</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> * svn_io_dirent2_dup() to duplicate an existing instance.</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="structsvn__io__dirent2__t.html">   78</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__io__dirent2__t.html">svn_io_dirent2_t</a> {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="comment">/* New fields must be added at the end to preserve binary compatibility */</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">  /** The kind of this entry. */</span></div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="structsvn__io__dirent2__t.html#aff8960cd16e36941d7e8c1d040f8b044">   82</a></span>&#160;  <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a">svn_node_kind_t</a> <a class="code" href="structsvn__io__dirent2__t.html#aff8960cd16e36941d7e8c1d040f8b044">kind</a>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">  /** If @c kind is #svn_node_file, whether this entry is a special file;</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">   * else FALSE.</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">   *</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">   * @see svn_io_check_special_path().</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">   */</span></div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="structsvn__io__dirent2__t.html#a42fe5c38e86515c4d56627764c2b0cb7">   89</a></span>&#160;  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> <a class="code" href="structsvn__io__dirent2__t.html#a42fe5c38e86515c4d56627764c2b0cb7">special</a>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">  /** The filesize of this entry or undefined for a directory */</span></div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="structsvn__io__dirent2__t.html#ac9b659764697b01e9fb56cb5e1c6af8a">   92</a></span>&#160;  <a class="code" href="svn__types_8h.html#a726e581898461c1d3e7dbdb16d99dad0">svn_filesize_t</a> <a class="code" href="structsvn__io__dirent2__t.html#ac9b659764697b01e9fb56cb5e1c6af8a">filesize</a>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">  /** The time the file was last modified */</span></div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="structsvn__io__dirent2__t.html#a310bfc9a9c1cbe353c67bbc399840743">   95</a></span>&#160;  apr_time_t <a class="code" href="structsvn__io__dirent2__t.html#a310bfc9a9c1cbe353c67bbc399840743">mtime</a>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="comment">/* Don&#39;t forget to update svn_io_dirent2_dup() when adding new fields */</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;} <a class="code" href="svn__io_8h.html#a0900f4459a5ef43cb1634d3b89d829a4">svn_io_dirent2_t</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">/** Creates a new #svn_io_dirent2_t structure</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<a class="code" href="structsvn__io__dirent2__t.html">svn_io_dirent2_t</a> *</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<a class="code" href="svn__io_8h.html#a48ca8a48714c0353e1246e992def863b">svn_io_dirent2_create</a>(apr_pool_t *result_pool);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">/** Duplicates a @c svn_io_dirent2_t structure into @a result_pool.</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<a class="code" href="structsvn__io__dirent2__t.html">svn_io_dirent2_t</a> *</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<a class="code" href="svn__io_8h.html#a4373588a310c126338eee38f6fa8f67c">svn_io_dirent2_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__io__dirent2__t.html">svn_io_dirent2_t</a> *item,</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                   apr_pool_t *result_pool);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">/** Represents the kind and special status of a directory entry.</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"> * Note that the first two fields are exactly identical to svn_io_dirent2_t</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"> * to allow returning a svn_io_dirent2_t as a svn_io_dirent_t.</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"> * @since New in 1.3.</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="structsvn__io__dirent__t.html">  123</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__io__dirent__t.html">svn_io_dirent_t</a> {<span class="comment"></span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">  /** The kind of this entry. */</span></div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structsvn__io__dirent__t.html#a59909d8753fdf326d081cde8372443cb">  125</a></span>&#160;  <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a">svn_node_kind_t</a> <a class="code" href="structsvn__io__dirent__t.html#a59909d8753fdf326d081cde8372443cb">kind</a>;<span class="comment"></span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">  /** If @c kind is #svn_node_file, whether this entry is a special file;</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">   * else FALSE.</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">   *</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">   * @see svn_io_check_special_path().</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">   */</span></div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="structsvn__io__dirent__t.html#ad3b184b3fa42b284e35dab3d3fe97828">  131</a></span>&#160;  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> <a class="code" href="structsvn__io__dirent__t.html#ad3b184b3fa42b284e35dab3d3fe97828">special</a>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;} <a class="code" href="svn__io_8h.html#af9f5d05db9c9a8f513615e4ec2caf5b2">svn_io_dirent_t</a>;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">/** Determine the @a kind of @a path.  @a path should be UTF-8 encoded.</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"> * If @a path is a file, set @a *kind to #svn_node_file.</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"> * If @a path is a directory, set @a *kind to #svn_node_dir.</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"> * If @a path does not exist, set @a *kind to #svn_node_none.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"> * If @a path exists but is none of the above, set @a *kind to</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"> * #svn_node_unknown.</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment"> * If @a path is not a valid pathname, set @a *kind to #svn_node_none.  If</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment"> * unable to determine @a path&#39;s kind for any other reason, return an error,</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment"> * with @a *kind&#39;s value undefined.</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"> * Use @a pool for temporary allocations.</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"> * @see svn_node_kind_t</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<a class="code" href="svn__io_8h.html#a31ee1827a2b62a2f4a122ef18e378b05">svn_io_check_path</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                  <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a">svn_node_kind_t</a> *kind,</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                  apr_pool_t *pool);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"> * Like svn_io_check_path(), but also set *is_special to @c TRUE if</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"> * the path is not a normal file.</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment"> * @since New in 1.1.</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<a class="code" href="svn__io_8h.html#a0f8fdad8dc4fe854ef5b9971f8ab043e">svn_io_check_special_path</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                          <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a">svn_node_kind_t</a> *kind,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *is_special,</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                          apr_pool_t *pool);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">/** Like svn_io_check_path(), but resolve symlinks.  This returns the</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">    same varieties of @a kind as svn_io_check_path(). */</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<a class="code" href="svn__io_8h.html#a47336875b45ac006d69aef58db4fb5bb">svn_io_check_resolved_path</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                           <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a">svn_node_kind_t</a> *kind,</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                           apr_pool_t *pool);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">/** Open a new file (for reading and writing) with a unique name based on</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment"> * utf-8 encoded @a filename, in the directory @a dirpath.  The file handle is</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"> * returned in @a *file, and the name, which ends with @a suffix, is returned</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment"> * in @a *unique_name, also utf8-encoded.  Either @a file or @a unique_name</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment"> * may be @c NULL.  If @a file is @c NULL, the file will be created but not</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment"> * open.</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"> * The file will be deleted according to @a delete_when.  If that is</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"> * #svn_io_file_del_on_pool_cleanup, it refers to @a result_pool.</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> * The @c APR_BUFFERED flag will always be used when opening the file.</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"> * The first attempt will just append @a suffix.  If the result is not</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"> * a unique name, then subsequent attempts will append a dot,</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"> * followed by an iteration number (&quot;2&quot;, then &quot;3&quot;, and so on),</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"> * followed by the suffix.  For example, successive calls to</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment"> *    svn_io_open_uniquely_named(&amp;f, &amp;u, &quot;tests/t1/A/D/G&quot;, &quot;pi&quot;, &quot;.tmp&quot;, ...)</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"> * will open</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment"> *    tests/t1/A/D/G/pi.tmp</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"> *    tests/t1/A/D/G/pi.2.tmp</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment"> *    tests/t1/A/D/G/pi.3.tmp</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment"> *    tests/t1/A/D/G/pi.4.tmp</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"> *    tests/t1/A/D/G/pi.5.tmp</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"> *    ...</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment"> * Assuming @a suffix is non-empty, @a *unique_name will never be exactly</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment"> * the same as @a filename, even if @a filename does not exist.</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment"> * If @a dirpath is NULL, then the directory returned by svn_io_temp_dir()</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"> * will be used.</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"> * If @a filename is NULL, then &quot;tempfile&quot; will be used.</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"> * If @a suffix is NULL, then &quot;.tmp&quot; will be used.</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment"> * Allocates @a *file and @a *unique_name in @a result_pool. All</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment"> * intermediate allocations will be performed in @a scratch_pool.</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment"> * If no unique name can be found, #SVN_ERR_IO_UNIQUE_NAMES_EXHAUSTED is</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment"> * the error returned.</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment"> * Claim of Historical Inevitability: this function was written</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment"> * because</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment"> *    - tmpnam() is not thread-safe.</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment"> *    - tempname() tries standard system tmp areas first.</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment"> * @since New in 1.6</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<a class="code" href="svn__io_8h.html#a280a68283cb7852fe1f4c5835f0b8fdf">svn_io_open_uniquely_named</a>(apr_file_t **file,</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span> **unique_name,</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span> *dirpath,</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span> *filename,</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span> *suffix,</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                           <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884">svn_io_file_del_t</a> delete_when,</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                           apr_pool_t *result_pool,</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                           apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">/** Create a writable file, with an arbitrary and unique name, in the</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment"> * directory @a dirpath.  Set @a *temp_path to its full path, and set</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment"> * @a *file to the file handle, both allocated from @a result_pool.  Either</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment"> * @a file or @a temp_path may be @c NULL.  If @a file is @c NULL, the file</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment"> * will be created but not open.</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment"> * If @a dirpath is @c NULL, use the path returned from svn_io_temp_dir().</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"> * (Note that when using the system-provided temp directory, it may not</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment"> * be possible to atomically rename the resulting file due to cross-device</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment"> * issues.)</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment"> * The file will be deleted according to @a delete_when.  If that is</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment"> * #svn_io_file_del_on_pool_cleanup, it refers to @a result_pool.  If it</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment"> * is #svn_io_file_del_on_close and @a file is @c NULL, the file will be</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment"> * deleted before this function returns.</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment"> * When passing @c svn_io_file_del_none please don&#39;t forget to eventually</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment"> * remove the temporary file to avoid filling up the system temp directory.</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment"> * It is often appropriate to bind the lifetime of the temporary file to</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment"> * the lifetime of a pool by using @c svn_io_file_del_on_pool_cleanup.</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment"> * Temporary allocations will be performed in @a scratch_pool.</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment"> * @since New in 1.6</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment"> * @see svn_stream_open_unique()</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<a class="code" href="svn__io_8h.html#ad1a7a7299bfe130c25becdd56ff0e870">svn_io_open_unique_file3</a>(apr_file_t **file,</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span> **temp_path,</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span> *dirpath,</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                         <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884">svn_io_file_del_t</a> delete_when,</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                         apr_pool_t *result_pool,</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                         apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">/** Like svn_io_open_uniquely_named(), but takes a joined dirpath and</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment"> * filename, and a single pool.</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment"> * @since New in 1.4</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<a class="code" href="svn__io_8h.html#a58df63b2898a8a2a7df988b2d633eb1a">svn_io_open_unique_file2</a>(apr_file_t **f,</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span> **unique_name_p,</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span> *suffix,</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                         <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884">svn_io_file_del_t</a> delete_when,</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                         apr_pool_t *pool);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">/** Like svn_io_open_unique_file2, but can&#39;t delete on pool cleanup.</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment"> * @note In 1.4 the API was extended to require either @a f or</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment"> *       @a unique_name_p (the other can be NULL).  Before that, both were</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment"> *       required.</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<a class="code" href="svn__io_8h.html#a2384857ad348105316edf6d1036d599f">svn_io_open_unique_file</a>(apr_file_t **f,</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span> **unique_name_p,</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span> *suffix,</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> delete_on_close,</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                        apr_pool_t *pool);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment"> * Like svn_io_open_unique_file(), except that instead of creating a</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment"> * file, a symlink is generated that references the path @a dest.</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment"> * @since New in 1.1.</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<a class="code" href="svn__io_8h.html#ad11db24f003c6f280e39d3c9675280dc">svn_io_create_unique_link</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **unique_name_p,</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span> *dest,</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span> *suffix,</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                          apr_pool_t *pool);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment"> * Set @a *dest to the path that the symlink at @a path references.</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment"> * Allocate the string from @a pool.</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment"> * @since New in 1.1.</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<a class="code" href="svn__io_8h.html#a94e184ae6677e8b0b4cae0ec145b7b67">svn_io_read_link</a>(<a class="code" href="structsvn__string__t.html">svn_string_t</a> **dest,</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                 <span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">/** Set @a *dir to a directory path (allocated in @a pool) deemed</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment"> * usable for the creation of temporary files and subdirectories.</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<a class="code" href="svn__io_8h.html#afbb4b86585411439008e934ede6f8b39">svn_io_temp_dir</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **dir,</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                apr_pool_t *pool);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">/** Copy @a src to @a dst atomically, in a &quot;byte-for-byte&quot; manner.</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment"> * Overwrite @a dst if it exists, else create it.  Both @a src and @a dst</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment"> * are utf8-encoded filenames.  If @a copy_perms is TRUE, set @a dst&#39;s</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment"> * permissions to match those of @a src.</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<a class="code" href="svn__io_8h.html#ab4a3b25a089372c59aca6783a3a31595">svn_io_copy_file</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *src,</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                 <span class="keyword">const</span> <span class="keywordtype">char</span> *dst,</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> copy_perms,</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">/** Copy permission flags from @a src onto the file at @a dst. Both</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment"> * filenames are utf8-encoded filenames.</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment"> * @since New in 1.6.</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<a class="code" href="svn__io_8h.html#a1c80cac675b5711e2c2c3e4aa6b4fbb1">svn_io_copy_perms</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *src,</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst,</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                  apr_pool_t *pool);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment"> * Copy symbolic link @a src to @a dst atomically.  Overwrite @a dst</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment"> * if it exists, else create it.  Both @a src and @a dst are</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment"> * utf8-encoded filenames.  After copying, the @a dst link will point</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment"> * to the same thing @a src does.</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment"> * @since New in 1.1.</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<a class="code" href="svn__io_8h.html#a539dc0c726940a466a3bc2358d6b85d8">svn_io_copy_link</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *src,</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                 <span class="keyword">const</span> <span class="keywordtype">char</span> *dst,</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">/** Recursively copy directory @a src into @a dst_parent, as a new entry named</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment"> * @a dst_basename.  If @a dst_basename already exists in @a dst_parent,</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment"> * return error.  @a copy_perms will be passed through to svn_io_copy_file()</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment"> * when any files are copied.  @a src, @a dst_parent, and @a dst_basename are</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment"> * all utf8-encoded.</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment"> * If @a cancel_func is non-NULL, invoke it with @a cancel_baton at</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment"> * various points during the operation.  If it returns any error</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment"> * (typically #SVN_ERR_CANCELLED), return that error immediately.</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<a class="code" href="svn__io_8h.html#afcaeff1ea5e9ae65c8188678a1e042bf">svn_io_copy_dir_recursively</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *src,</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_parent,</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_basename,</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                            <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> copy_perms,</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                            <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func,</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                            <span class="keywordtype">void</span> *cancel_baton,</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                            apr_pool_t *pool);</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">/** Create directory @a path on the file system, creating intermediate</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment"> * directories as required, like &lt;tt&gt;mkdir -p&lt;/tt&gt;.  Report no error if @a</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment"> * path already exists.  @a path is utf8-encoded.</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment"> * This is essentially a wrapper for apr_dir_make_recursive(), passing</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment"> * @c APR_OS_DEFAULT as the permissions.</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<a class="code" href="svn__io_8h.html#a0ef4d0c5c6a86ab48f515b4a31efad70">svn_io_make_dir_recursively</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                            apr_pool_t *pool);</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">/** Set @a *is_empty_p to @c TRUE if directory @a path is empty, else to</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment"> * @c FALSE if it is not empty.  @a path must be a directory, and is</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment"> * utf8-encoded.  Use @a pool for temporary allocation.</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<a class="code" href="svn__io_8h.html#acea0b7ecaacd02da03a5cfaebe27067a">svn_io_dir_empty</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *is_empty_p,</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                 <span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">/** Append @a src to @a dst.  @a dst will be appended to if it exists, else it</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment"> * will be created.  Both @a src and @a dst are utf8-encoded.</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<a class="code" href="svn__io_8h.html#a967781b8e5991f3c72f125a333661d1b">svn_io_append_file</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *src,</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                   <span class="keyword">const</span> <span class="keywordtype">char</span> *dst,</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                   apr_pool_t *pool);</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">/** Make a file as read-only as the operating system allows.</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment"> * @a path is the utf8-encoded path to the file. If @a ignore_enoent is</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment"> * @c TRUE, don&#39;t fail if the target file doesn&#39;t exist.</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment"> * If @a path is a symlink, do nothing.</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment"> * @note If @a path is a directory, act on it as though it were a</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment"> * file, as described above, but note that you probably don&#39;t want to</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment"> * call this function on directories.  We have left it effective on</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment"> * directories for compatibility reasons, but as its name implies, it</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment"> * should be used only for files.</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<a class="code" href="svn__io_8h.html#a185f4ee690965e622aa1748339847ae5">svn_io_set_file_read_only</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_enoent,</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                          apr_pool_t *pool);</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">/** Make a file as writable as the operating system allows.</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment"> * @a path is the utf8-encoded path to the file.  If @a ignore_enoent is</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment"> * @c TRUE, don&#39;t fail if the target file doesn&#39;t exist.</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment"> * @warning On Unix this function will do the equivalent of chmod a+w path.</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment"> * If this is not what you want you should not use this function, but rather</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment"> * use apr_file_perms_set().</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment"> * If @a path is a symlink, do nothing.</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment"> * @note If @a path is a directory, act on it as though it were a</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment"> * file, as described above, but note that you probably don&#39;t want to</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment"> * call this function on directories.  We have left it effective on</span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment"> * directories for compatibility reasons, but as its name implies, it</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment"> * should be used only for files.</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<a class="code" href="svn__io_8h.html#ac407a16bc12b63d2e57a3e2375490ad5">svn_io_set_file_read_write</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_enoent,</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                           apr_pool_t *pool);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">/** Similar to svn_io_set_file_read_* functions.</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment"> * Change the read-write permissions of a file.</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment"> * @since New in 1.1.</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment"> * When making @a path read-write on operating systems with unix style</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="comment"> * permissions, set the permissions on @a path to the permissions that</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment"> * are set when a new file is created (effectively honoring the user&#39;s</span></div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment"> * umask).</span></div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment"> * When making the file read-only on operating systems with unix style</span></div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment"> * permissions, remove all write permissions.</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment"> * On other operating systems, toggle the file&#39;s &quot;writability&quot; as much as</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment"> * the operating system allows.</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment"> * @a path is the utf8-encoded path to the file.  If @a enable_write</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment"> * is @c TRUE, then make the file read-write.  If @c FALSE, make it</span></div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment"> * read-only.  If @a ignore_enoent is @c TRUE, don&#39;t fail if the target</span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment"> * file doesn&#39;t exist.</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<a class="code" href="svn__io_8h.html#a02cd461341834d955e258a70def4f56f">svn_io_set_file_read_write_carefully</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> enable_write,</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_enoent,</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                                     apr_pool_t *pool);</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="comment">/** Set @a path&#39;s &quot;executability&quot; (but do nothing if it is a symlink).</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment"> * @a path is the utf8-encoded path to the file.  If @a executable</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment"> * is @c TRUE, then make the file executable.  If @c FALSE, make it</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment"> * non-executable.  If @a ignore_enoent is @c TRUE, don&#39;t fail if the target</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment"> * file doesn&#39;t exist.</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment"> * When making the file executable on operating systems with unix style</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment"> * permissions, never add an execute permission where there is not</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment"> * already a read permission: that is, only make the file executable</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment"> * for the user, group or world if the corresponding read permission</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="comment"> * is already set for user, group or world.</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="comment"> * When making the file non-executable on operating systems with unix style</span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment"> * permissions, remove all execute permissions.</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment"> * On other operating systems, toggle the file&#39;s &quot;executability&quot; as much as</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment"> * the operating system allows.</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment"> * @note If @a path is a directory, act on it as though it were a</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment"> * file, as described above, but note that you probably don&#39;t want to</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment"> * call this function on directories.  We have left it effective on</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment"> * directories for compatibility reasons, but as its name implies, it</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="comment"> * should be used only for files.</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<a class="code" href="svn__io_8h.html#a358a735a173b43509cf4060b73930cf5">svn_io_set_file_executable</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> executable,</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_enoent,</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                           apr_pool_t *pool);</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">/** Determine whether a file is executable by the current user.</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment"> * Set @a *executable to @c TRUE if the file @a path is executable by the</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment"> * current user, otherwise set it to @c FALSE.</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment"> * On Windows and on platforms without userids, always returns @c FALSE.</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<a class="code" href="svn__io_8h.html#a2cb981f75792c99480f93b83ae9265d2">svn_io_is_file_executable</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *executable,</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                          apr_pool_t *pool);</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment">/** Read a line from @a file into @a buf, but not exceeding @a *limit bytes.</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="comment"> * Does not include newline, instead &#39;\\0&#39; is put there.</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="comment"> * Length (as in strlen) is returned in @a *limit.</span></div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment"> * @a buf should be pre-allocated.</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment"> * @a file should be already opened.</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment"> * When the file is out of lines, @c APR_EOF will be returned.</span></div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<a class="code" href="svn__io_8h.html#ab3f73a4554d78dbbc3d9e0f29943380e">svn_io_read_length_line</a>(apr_file_t *file,</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                        <span class="keywordtype">char</span> *buf,</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                        apr_size_t *limit,</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                        apr_pool_t *pool);</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="comment">/** Set @a *apr_time to the time of last modification of the contents of the</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="comment"> * file @a path.  @a path is utf8-encoded.</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment"> * @note This is the APR mtime which corresponds to the traditional mtime</span></div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="comment"> * on Unix, and the last write time on Windows.</span></div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<a class="code" href="svn__io_8h.html#ae9ed0a769c24087316ebcc868fb559a0">svn_io_file_affected_time</a>(apr_time_t *apr_time,</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                          apr_pool_t *pool);</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">/** Set the timestamp of file @a path to @a apr_time.  @a path is</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment"> *  utf8-encoded.</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="comment"> * @note This is the APR mtime which corresponds to the traditional mtime</span></div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="comment"> * on Unix, and the last write time on Windows.</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<a class="code" href="svn__io_8h.html#a474cc5427ee6e900ff8c96559e368fe6">svn_io_set_file_affected_time</a>(apr_time_t apr_time,</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                              apr_pool_t *pool);</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment">/** Sleep to ensure that any files modified after we exit have a different</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment"> * timestamp than the one we recorded. If @a path is not NULL, check if we</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment"> * can determine how long we should wait for a new timestamp on the filesystem</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment"> * containing @a path, an existing file or directory. If @a path is NULL or we</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment"> * can&#39;t determine the timestamp resolution, sleep until the next second.</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="comment"> * Use @a pool for any necessary allocations. @a pool can be null if @a path</span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="comment"> * is NULL.</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment"> * Errors while retrieving the timestamp resolution will result in sleeping</span></div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="comment"> * to the next second, to keep the working copy stable in error conditions.</span></div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="comment"> * @since New in 1.6.</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<a class="code" href="svn__io_8h.html#a07a20fcb725f0941e6c53410ad5c12e4">svn_io_sleep_for_timestamps</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path, apr_pool_t *pool);</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="comment">/** Set @a *different_p to TRUE if @a file1 and @a file2 have different</span></div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="comment"> * sizes, else set to FALSE.  Both @a file1 and @a file2 are utf8-encoded.</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="comment"> * Setting @a *different_p to zero does not mean the files definitely</span></div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="comment"> * have the same size, it merely means that the sizes are not</span></div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="comment"> * definitely different.  That is, if the size of one or both files</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment"> * cannot be determined, then the sizes are not known to be different,</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment"> * so @a *different_p is set to FALSE.</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<a class="code" href="svn__io_8h.html#a759d9be046832ba2e1f8d5408a7023d1">svn_io_filesizes_different_p</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *different_p,</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span> *file1,</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span> *file2,</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                             apr_pool_t *pool);</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">/** Set @a *different_p12 to non-zero if @a file1 and @a file2 have different</span></div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="comment"> * sizes, else set to zero.  Do the similar for @a *different_p23 with</span></div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="comment"> * @a file2 and @a file3, and @a *different_p13 for @a file1 and @a file3.</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="comment"> * The filenames @a file1, @a file2 and @a file3 are utf8-encoded.</span></div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="comment"> * Setting @a *different_p12 to zero does not mean the files definitely</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="comment"> * have the same size, it merely means that the sizes are not</span></div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="comment"> * definitely different.  That is, if the size of one or both files</span></div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="comment"> * cannot be determined (due to stat() returning an error), then the sizes</span></div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment"> * are not known to be different, so @a *different_p12 is set to 0.</span></div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<a class="code" href="svn__io_8h.html#a19c1e3dc7082830df5474b01284f7b01">svn_io_filesizes_three_different_p</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *different_p12,</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *different_p23,</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *different_p13,</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">char</span> *file1,</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">char</span> *file2,</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">char</span> *file3,</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                                   apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="comment">/** Return in @a *checksum the checksum of type @a kind of @a file</span></div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="comment"> * Use @a pool for temporary allocations and to allocate @a *checksum.</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="comment"> * @since New in 1.6.</span></div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;<a class="code" href="svn__io_8h.html#aa9bee2a2151cc7c57e9a01003dc6d2b6">svn_io_file_checksum2</a>(<a class="code" href="structsvn__checksum__t.html">svn_checksum_t</a> **checksum,</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                      <span class="keyword">const</span> <span class="keywordtype">char</span> *file,</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                      <a class="code" href="svn__checksum_8h.html#a7a6c373d03d7e6ec6b832a039f5e0aa1">svn_checksum_kind_t</a> kind,</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                      apr_pool_t *pool);</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="comment">/** Put the md5 checksum of @a file into @a digest.</span></div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="comment"> * @a digest points to @c APR_MD5_DIGESTSIZE bytes of storage.</span></div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="comment"> * Use @a pool only for temporary allocations.</span></div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span></div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<a class="code" href="svn__io_8h.html#ad7384374afef049adcc8485de4083186">svn_io_file_checksum</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> digest[],</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                     <span class="keyword">const</span> <span class="keywordtype">char</span> *file,</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                     apr_pool_t *pool);</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="comment">/** Set @a *same to TRUE if @a file1 and @a file2 have the same</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="comment"> * contents, else set it to FALSE.  Use @a pool for temporary allocations.</span></div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<a class="code" href="svn__io_8h.html#ac3ddb92f73a78796c75a0790bc9cf727">svn_io_files_contents_same_p</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *same,</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span> *file1,</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span> *file2,</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                             apr_pool_t *pool);</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="comment">/** Set @a *same12 to TRUE if @a file1 and @a file2 have the same</span></div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="comment"> * contents, else set it to FALSE.  Do the similar for @a *same23</span></div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="comment"> * with @a file2 and @a file3, and @a *same13 for @a file1 and @a</span></div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="comment"> * file3. The filenames @a file1, @a file2 and @a file3 are</span></div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="comment"> * utf8-encoded. Use @a scratch_pool for temporary allocations.</span></div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<a class="code" href="svn__io_8h.html#a6f4ed09498f32ac633b3f880b92c9c42">svn_io_files_contents_three_same_p</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *same12,</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *same23,</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *same13,</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">char</span> *file1,</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">char</span> *file2,</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">char</span> *file3,</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                                   apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="comment">/** Create a file at utf8-encoded path @a file with the contents given</span></div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="comment"> * by the null-terminated string @a contents.</span></div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="comment"> * @a file must not already exist. If an error occurs while writing or</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="comment"> * closing the file, attempt to delete the file before returning the error.</span></div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;<span class="comment"> * Write the data in &#39;binary&#39; mode (#APR_FOPEN_BINARY). If @a contents</span></div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="comment"> * is @c NULL, create an empty file.</span></div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="comment"> * Use @a pool for memory allocations.</span></div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<a class="code" href="svn__io_8h.html#a36cd10dc8fb91f40c0df79edf8fc3a18">svn_io_file_create</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *file,</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                   <span class="keyword">const</span> <span class="keywordtype">char</span> *contents,</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                   apr_pool_t *pool);</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="comment">/** Create a file at utf8-encoded path @a file with the contents given</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="comment"> * by @a contents of @a length bytes.</span></div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="comment"> * @a file must not already exist. If an error occurs while writing or</span></div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="comment"> * closing the file, attempt to delete the file before returning the error.</span></div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="comment"> * Write the data in &#39;binary&#39; mode (#APR_FOPEN_BINARY). If @a length is</span></div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="comment"> * zero, create an empty file; in this case @a contents may be @c NULL.</span></div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="comment"> * Use @a scratch_pool for temporary allocations.</span></div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<a class="code" href="svn__io_8h.html#a8c4c5176e73bd452ad321097e85b20bb">svn_io_file_create_bytes</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *file,</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">void</span> *contents,</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                         apr_size_t length,</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;                         apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="comment">/** Create an empty file at utf8-encoded path @a file.</span></div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="comment"> * @a file must not already exist. If an error occurs while</span></div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="comment"> * closing the file, attempt to delete the file before returning the error.</span></div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="comment"> * Use @a scratch_pool for temporary allocations.</span></div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<a class="code" href="svn__io_8h.html#aedc30b43ce1e24730655803307a0fc1a">svn_io_file_create_empty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *file,</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                         apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;<span class="comment"> * Lock file at @a lock_file. If @a exclusive is TRUE,</span></div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;<span class="comment"> * obtain exclusive lock, otherwise obtain shared lock.</span></div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;<span class="comment"> * Lock will be automatically released when @a pool is cleared or destroyed.</span></div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;<span class="comment"> * Use @a pool for memory allocations.</span></div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.0 API.</span></div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;<a class="code" href="svn__io_8h.html#a98ada015dbb0b5d467375edba000dd4b">svn_io_file_lock</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *lock_file,</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> exclusive,</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="comment"> * Lock file at @a lock_file. If @a exclusive is TRUE,</span></div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="comment"> * obtain exclusive lock, otherwise obtain shared lock.</span></div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="comment"> * If @a nonblocking is TRUE, do not wait for the lock if it</span></div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="comment"> * is not available: throw an error instead.</span></div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="comment"> * Lock will be automatically released when @a pool is cleared or destroyed.</span></div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="comment"> * Use @a pool for memory allocations.</span></div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;<span class="comment"> * @since New in 1.1.</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<a class="code" href="svn__io_8h.html#a256b06e01a023d03c47e8a29f8a0344a">svn_io_file_lock2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *lock_file,</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> exclusive,</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> nonblocking,</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                  apr_pool_t *pool);</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="comment"> * Lock the file @a lockfile_handle. If @a exclusive is TRUE,</span></div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;<span class="comment"> * obtain exclusive lock, otherwise obtain shared lock.</span></div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="comment"> * If @a nonblocking is TRUE, do not wait for the lock if it</span></div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;<span class="comment"> * is not available: throw an error instead.</span></div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="comment"> * Lock will be automatically released when @a pool is cleared or destroyed.</span></div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;<span class="comment"> * You may also explicitly call svn_io_unlock_open_file().</span></div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;<span class="comment"> * Use @a pool for memory allocations. @a pool must be the pool that</span></div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;<span class="comment"> * @a lockfile_handle has been created in or one of its sub-pools.</span></div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;<a class="code" href="svn__io_8h.html#a0c5bfbe2bd1857ac6ff4e262fabcc25d">svn_io_lock_open_file</a>(apr_file_t *lockfile_handle,</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> exclusive,</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> nonblocking,</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;                      apr_pool_t *pool);</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;<span class="comment"> * Unlock the file @a lockfile_handle.</span></div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="comment"> * Use @a pool for memory allocations. @a pool must be the pool that</span></div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="comment"> * was passed to svn_io_lock_open_file().</span></div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;<a class="code" href="svn__io_8h.html#a40c25981a091fdcf9c34aa79e1c93ccc">svn_io_unlock_open_file</a>(apr_file_t *lockfile_handle,</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                        apr_pool_t *pool);</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;<span class="comment"> * Flush any unwritten data from @a file to disk.  Use @a pool for</span></div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="comment"> * memory allocations.</span></div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;<span class="comment"> * @note This function uses advanced file control operations to flush buffers</span></div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;<span class="comment"> * to disk that aren&#39;t always accessible and can be very expensive on systems</span></div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;<span class="comment"> * that implement flushing on all IO layers, like Windows. Please avoid using</span></div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;<span class="comment"> * this function in cases where the file should just work on any network</span></div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;<span class="comment"> * filesystem. In many cases a normal svn_io_file_flush() will work just fine.</span></div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;<span class="comment"> * @since New in 1.1.</span></div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<a class="code" href="svn__io_8h.html#a1738477996c854ac51fbd77cccaddfb5">svn_io_file_flush_to_disk</a>(apr_file_t *file,</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;                          apr_pool_t *pool);</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="comment">/** Copy the file whose basename (or relative path) is @a file within</span></div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="comment"> * directory @a src_path to the same basename (or relative path) within</span></div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="comment"> * directory @a dest_path.  Overwrite the destination file if it already</span></div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;<span class="comment"> * exists.  The destination directory (including any directory</span></div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;<span class="comment"> * components in @a name) must already exist.  Set the destination</span></div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="comment"> * file&#39;s permissions to match those of the source.  Use @a pool for</span></div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;<span class="comment"> * memory allocations.</span></div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<a class="code" href="svn__io_8h.html#ae6c6d960b1f742e2c00f8d7dd6ea1c5d">svn_io_dir_file_copy</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *src_path,</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;                     <span class="keyword">const</span> <span class="keywordtype">char</span> *dest_path,</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                     <span class="keyword">const</span> <span class="keywordtype">char</span> *file,</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;                     apr_pool_t *pool);</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;<span class="comment">/** Generic byte-streams</span></div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="comment"> * @defgroup svn_io_byte_streams Generic byte streams</span></div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;<span class="comment"> * @{</span></div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;<span class="comment">/** An abstract stream of bytes--either incoming or outgoing or both.</span></div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="comment"> * The creator of a stream sets functions to handle read and write.</span></div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;<span class="comment"> * Both of these handlers accept a baton whose value is determined at</span></div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="comment"> * stream creation time; this baton can point to a structure</span></div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;<span class="comment"> * containing data associated with the stream.  If a caller attempts</span></div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;<span class="comment"> * to invoke a handler which has not been set, it will generate a</span></div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;<span class="comment"> * runtime assertion failure.  The creator can also set a handler for</span></div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;<span class="comment"> * close requests so that it can flush buffered data or whatever;</span></div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;<span class="comment"> * if a close handler is not specified, a close request on the stream</span></div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;<span class="comment"> * will simply be ignored.  Note that svn_stream_close() does not</span></div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;<span class="comment"> * deallocate the memory used to allocate the stream structure; free</span></div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;<span class="comment"> * the pool you created the stream in to free that memory.</span></div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;<span class="comment"> * The read and write handlers accept length arguments via pointer.</span></div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;<span class="comment"> * On entry to the handler, the pointed-to value should be the amount</span></div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;<span class="comment"> * of data which can be read or the amount of data to write.  When the</span></div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;<span class="comment"> * handler returns, the value is reset to the amount of data actually</span></div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="comment"> * read or written.  The write and full read handler are obliged to</span></div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;<span class="comment"> * complete a read or write to the maximum extent possible; thus, a</span></div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;<span class="comment"> * short read with no associated error implies the end of the input</span></div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;<span class="comment"> * stream, and a short write should never occur without an associated</span></div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;<span class="comment"> * error. In Subversion 1.9 the stream api was extended to also support</span></div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;<span class="comment"> * limited reads via the new svn_stream_read2() api.</span></div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="comment"> * In Subversion 1.7 mark, seek and reset support was added as an optional</span></div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;<span class="comment"> * feature of streams. If a stream implements resetting it allows reading</span></div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="comment"> * the data again after a successful call to svn_stream_reset().</span></div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00863"></a><span class="lineno"><a class="line" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">  863</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a>;</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;<span class="comment">/** Read handler function for a generic stream.  @see svn_stream_t. */</span></div>
<div class="line"><a name="l00868"></a><span class="lineno"><a class="line" href="group__svn__io__byte__streams.html#ga9a8939b5258b070a48aa1e0cd154909a">  868</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html">svn_error_t</a> *(*svn_read_fn_t)(<span class="keywordtype">void</span> *baton,</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                                      <span class="keywordtype">char</span> *buffer,</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                                      apr_size_t *len);</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="comment">/** Skip data handler function for a generic stream.  @see svn_stream_t</span></div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="comment"> * and svn_stream_skip().</span></div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00876"></a><span class="lineno"><a class="line" href="group__svn__io__byte__streams.html#ga2c0bc2f0ebff96271f427013fece2a39">  876</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html">svn_error_t</a> *(*svn_stream_skip_fn_t)(<span class="keywordtype">void</span> *baton,</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;                                             apr_size_t len);</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="comment">/** Write handler function for a generic stream.  @see svn_stream_t. */</span></div>
<div class="line"><a name="l00880"></a><span class="lineno"><a class="line" href="group__svn__io__byte__streams.html#gaa79398b116a9209eb3a79947a6066f54">  880</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html">svn_error_t</a> *(*svn_write_fn_t)(<span class="keywordtype">void</span> *baton,</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;                                       <span class="keyword">const</span> <span class="keywordtype">char</span> *data,</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                                       apr_size_t *len);</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;<span class="comment">/** Close handler function for a generic stream.  @see svn_stream_t. */</span></div>
<div class="line"><a name="l00885"></a><span class="lineno"><a class="line" href="group__svn__io__byte__streams.html#ga576facc62f51e98c14cb440df1e58cd9">  885</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html">svn_error_t</a> *(*svn_close_fn_t)(<span class="keywordtype">void</span> *baton);</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;<span class="comment">/** An opaque type which represents a mark on a stream.  There is no</span></div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="comment"> * concrete definition of this type, it is a named type for stream</span></div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="comment"> * implementation specific baton pointers.</span></div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;<span class="comment"> * @see svn_stream_mark().</span></div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00894"></a><span class="lineno"><a class="line" href="group__svn__io__byte__streams.html#gaca2f3b74a1215c13b5ae2ca3b99437b9">  894</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="group__svn__io__byte__streams.html#gaca2f3b74a1215c13b5ae2ca3b99437b9">svn_stream_mark_t</a> <a class="code" href="group__svn__io__byte__streams.html#gaca2f3b74a1215c13b5ae2ca3b99437b9">svn_stream_mark_t</a>;</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;<span class="comment">/** Mark handler function for a generic stream. @see svn_stream_t and</span></div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="comment"> * svn_stream_mark().</span></div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00901"></a><span class="lineno"><a class="line" href="group__svn__io__byte__streams.html#gaf811477b7cafa3c5c20cb3428976d0be">  901</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html">svn_error_t</a> *(*svn_stream_mark_fn_t)(<span class="keywordtype">void</span> *baton,</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;                                         <a class="code" href="group__svn__io__byte__streams.html#gaca2f3b74a1215c13b5ae2ca3b99437b9">svn_stream_mark_t</a> **mark,</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;                                         apr_pool_t *pool);</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;<span class="comment">/** Seek handler function for a generic stream. @see svn_stream_t and</span></div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="comment"> * svn_stream_seek().</span></div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00910"></a><span class="lineno"><a class="line" href="group__svn__io__byte__streams.html#gaa5291159cc874084805155ccdfd68b4b">  910</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html">svn_error_t</a> *(*svn_stream_seek_fn_t)(<span class="keywordtype">void</span> *baton,</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="group__svn__io__byte__streams.html#gaca2f3b74a1215c13b5ae2ca3b99437b9">svn_stream_mark_t</a> *mark);</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="comment">/** Poll handler for generic streams that support incomplete reads, @see</span></div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="comment"> * svn_stream_t and svn_stream_data_available().</span></div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00918"></a><span class="lineno"><a class="line" href="group__svn__io__byte__streams.html#ga4f69e2ed9c7f1361bfa8bfd0d8d15c0a">  918</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html">svn_error_t</a> *(*svn_stream_data_available_fn_t)(<span class="keywordtype">void</span> *baton,</div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;                                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *data_available);</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;<span class="comment">/** Create a generic stream.  @see svn_stream_t. */</span></div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gadc3e897290c9479c6b903876d18dc87c">svn_stream_create</a>(<span class="keywordtype">void</span> *baton,</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;                  apr_pool_t *pool);</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;<span class="comment">/** Set @a stream&#39;s baton to @a baton */</span></div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga0ff601f7fb4a7c8c92770edd7376b052">svn_stream_set_baton</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;                     <span class="keywordtype">void</span> *baton);</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;<span class="comment">/** Set @a stream&#39;s read functions to @a read_fn and @a read_full_fn. If</span></div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;<span class="comment"> * @a read_full_fn is NULL a default implementation based on multiple calls</span></div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="comment"> * to @a read_fn will be used.</span></div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga1fe68c0cf442e4e2af1d8357a7f01cb2">svn_stream_set_read2</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;                     <a class="code" href="group__svn__io__byte__streams.html#ga9a8939b5258b070a48aa1e0cd154909a">svn_read_fn_t</a> read_fn,</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;                     <a class="code" href="group__svn__io__byte__streams.html#ga9a8939b5258b070a48aa1e0cd154909a">svn_read_fn_t</a> read_full_fn);</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;<span class="comment">/** Set @a stream&#39;s read function to @a read_fn.</span></div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;<span class="comment"> * This function sets only the full read function to read_fn.</span></div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.8 API.</span></div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gae9ebdcf950b897d9c0cb89c331262aed">svn_stream_set_read</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;                    <a class="code" href="group__svn__io__byte__streams.html#ga9a8939b5258b070a48aa1e0cd154909a">svn_read_fn_t</a> read_fn);</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;<span class="comment">/** Set @a stream&#39;s skip function to @a skip_fn</span></div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;<span class="comment"> * @since New in 1.7</span></div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gaf834f41616e68fa7d0214814a56b81d4">svn_stream_set_skip</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;                    <a class="code" href="group__svn__io__byte__streams.html#ga2c0bc2f0ebff96271f427013fece2a39">svn_stream_skip_fn_t</a> skip_fn);</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="comment">/** Set @a stream&#39;s write function to @a write_fn */</span></div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gaea19e182974e64a77d3f949a25f496a1">svn_stream_set_write</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;                     <a class="code" href="group__svn__io__byte__streams.html#gaa79398b116a9209eb3a79947a6066f54">svn_write_fn_t</a> write_fn);</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;<span class="comment">/** Set @a stream&#39;s close function to @a close_fn */</span></div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga090c93a72964b78a00de75fa10fc5078">svn_stream_set_close</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;                     <a class="code" href="group__svn__io__byte__streams.html#ga576facc62f51e98c14cb440df1e58cd9">svn_close_fn_t</a> close_fn);</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;<span class="comment">/** Set @a stream&#39;s mark function to @a mark_fn</span></div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gacdce9efd65576fafecb4df5fd2960d13">svn_stream_set_mark</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                    <a class="code" href="group__svn__io__byte__streams.html#gaf811477b7cafa3c5c20cb3428976d0be">svn_stream_mark_fn_t</a> mark_fn);</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;<span class="comment">/** Set @a stream&#39;s seek function to @a seek_fn</span></div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga96e94eff159f85a3c8c6b7936e5c908d">svn_stream_set_seek</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;                    <a class="code" href="group__svn__io__byte__streams.html#gaa5291159cc874084805155ccdfd68b4b">svn_stream_seek_fn_t</a> seek_fn);</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;<span class="comment">/** Set @a stream&#39;s data available function to @a data_available_fn</span></div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;<span class="keywordtype">void</span></div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga6d7ee6bcaf79551a18fa851742871902">svn_stream_set_data_available</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;                              <a class="code" href="group__svn__io__byte__streams.html#ga4f69e2ed9c7f1361bfa8bfd0d8d15c0a">svn_stream_data_available_fn_t</a> data_available);</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;<span class="comment">/** Create a stream that is empty for reading and infinite for writing. */</span></div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga9f0acad4da18e90c1dc5250643af7049">svn_stream_empty</a>(apr_pool_t *pool);</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;<span class="comment">/** Return a stream allocated in @a pool which forwards all requests</span></div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;<span class="comment"> * to @a stream.  Destruction is explicitly excluded from forwarding.</span></div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;<span class="comment"> * @see http://subversion.apache.org/docs/community-guide/conventions.html#destruction-of-stacked-resources</span></div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;<span class="comment"> * @since New in 1.4.</span></div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga61c69116290c1f5e5fedd91ed7bed5ca">svn_stream_disown</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;                  apr_pool_t *pool);</div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;</div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;<span class="comment">/** Create a stream to read the file at @a path. It will be opened using</span></div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;<span class="comment"> * the APR_BUFFERED and APR_BINARY flag, and APR_OS_DEFAULT for the perms.</span></div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;<span class="comment"> * If you&#39;d like to use different values, then open the file yourself, and</span></div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;<span class="comment"> * use the svn_stream_from_aprfile2() interface.</span></div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;<span class="comment"> * The stream will be returned in @a stream, and allocated from @a result_pool.</span></div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;<span class="comment"> * Temporary allocations will be performed in @a scratch_pool.</span></div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;<span class="comment"> * @since New in 1.6</span></div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga4d03d151fe2d8fb4068dab914823d059">svn_stream_open_readonly</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **stream,</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;                         apr_pool_t *result_pool,</div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;                         apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;<span class="comment">/** Create a stream to write a file at @a path. The file will be *created*</span></div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;<span class="comment"> * using the APR_BUFFERED and APR_BINARY flag, and APR_OS_DEFAULT for the</span></div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;<span class="comment"> * perms. The file will be created &quot;exclusively&quot;, so if it already exists,</span></div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;<span class="comment"> * then an error will be thrown. If you&#39;d like to use different values, or</span></div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;<span class="comment"> * open an existing file, then open the file yourself, and use the</span></div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;<span class="comment"> * svn_stream_from_aprfile2() interface.</span></div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;<span class="comment"> * The stream will be returned in @a stream, and allocated from @a result_pool.</span></div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;<span class="comment"> * Temporary allocations will be performed in @a scratch_pool.</span></div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;<span class="comment"> * @since New in 1.6</span></div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gace8995769bb736796262450ef90f033e">svn_stream_open_writable</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **stream,</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;                         apr_pool_t *result_pool,</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;                         apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;<span class="comment">/** Create a writable stream to a file in the directory @a dirpath.</span></div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;<span class="comment"> * The file will have an arbitrary and unique name, and the full path</span></div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;<span class="comment"> * will be returned in @a temp_path. The stream will be returned in</span></div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;<span class="comment"> * @a stream. Both will be allocated from @a result_pool.</span></div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;<span class="comment"> * If @a dirpath is @c NULL, use the path returned from svn_io_temp_dir().</span></div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="comment"> * (Note that when using the system-provided temp directory, it may not</span></div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;<span class="comment"> * be possible to atomically rename the resulting file due to cross-device</span></div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="comment"> * issues.)</span></div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;<span class="comment"> * The file will be deleted according to @a delete_when.  If that is</span></div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="comment"> * #svn_io_file_del_on_pool_cleanup, it refers to @a result_pool.</span></div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;<span class="comment"> * Temporary allocations will be performed in @a scratch_pool.</span></div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;<span class="comment"> * @since New in 1.6</span></div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;<span class="comment"> * @see svn_io_open_unique_file3()</span></div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga821ab7add7a0216c86b1a7f94456fae9">svn_stream_open_unique</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **stream,</div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">char</span> **temp_path,</div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">char</span> *dirpath,</div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;                       <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884">svn_io_file_del_t</a> delete_when,</div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;                       apr_pool_t *result_pool,</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;                       apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;</div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;<span class="comment">/** Create a stream from an APR file.  For convenience, if @a file is</span></div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="comment"> * @c NULL, an empty stream created by svn_stream_empty() is returned.</span></div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;<span class="comment"> * This function should normally be called with @a disown set to FALSE,</span></div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;<span class="comment"> * in which case closing the stream will also close the underlying file.</span></div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;<span class="comment"> * If @a disown is TRUE, the stream will disown the underlying file,</span></div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;<span class="comment"> * meaning that svn_stream_close() will not close the file.</span></div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;<span class="comment"> * @since New in 1.4.</span></div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gadf2971328919edf3fed5ef8353a90525">svn_stream_from_aprfile2</a>(apr_file_t *file,</div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> disown,</div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;                         apr_pool_t *pool);</div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;<span class="comment">/** Similar to svn_stream_from_aprfile2(), except that the file will</span></div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;<span class="comment"> * always be disowned.</span></div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;<span class="comment"> * @note The stream returned is not considered to &quot;own&quot; the underlying</span></div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;<span class="comment"> *       file, meaning that svn_stream_close() on the stream will not</span></div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;<span class="comment"> *       close the file.</span></div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span></div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gad12a2e4cbc23bcf8ee3f650966b8c43b">svn_stream_from_aprfile</a>(apr_file_t *file,</div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;                        apr_pool_t *pool);</div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;<span class="comment">/** Set @a *in to a generic stream connected to stdin, allocated in</span></div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;<span class="comment"> * @a pool.  The stream and its underlying APR handle will be closed</span></div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;<span class="comment"> * when @a pool is cleared or destroyed.</span></div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga2e8d5c7ca3a74393f3350540149e8e3d">svn_stream_for_stdin</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **in,</div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;                     apr_pool_t *pool);</div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;<span class="comment">/** Set @a *err to a generic stream connected to stderr, allocated in</span></div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;<span class="comment"> * @a pool.  The stream and its underlying APR handle will be closed</span></div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;<span class="comment"> * when @a pool is cleared or destroyed.</span></div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gaa76703167b5bc9cc53a1f66e64c5f77a">svn_stream_for_stderr</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **err,</div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;                      apr_pool_t *pool);</div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;<span class="comment">/** Set @a *out to a generic stream connected to stdout, allocated in</span></div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;<span class="comment"> * @a pool.  The stream and its underlying APR handle will be closed</span></div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;<span class="comment"> * when @a pool is cleared or destroyed.</span></div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga64eca282d3b75b431a6f8ae5a6637fbb">svn_stream_for_stdout</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **out,</div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;                      apr_pool_t *pool);</div>
<div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;<span class="comment">/** Set @a *str to a string buffer allocated in @a result_pool that contains</span></div>
<div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;<span class="comment"> * all data from the current position in @a stream to its end.  @a len_hint</span></div>
<div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;<span class="comment"> * specifies the initial capacity of the string buffer and may be 0.  The</span></div>
<div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;<span class="comment"> * buffer gets automatically resized to fit the actual amount of data being</span></div>
<div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;<span class="comment"> * read from @a stream.</span></div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga524596d97d805d6f66c1d0247a5ab88b">svn_stringbuf_from_stream</a>(<a class="code" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> **str,</div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;                          <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;                          apr_size_t len_hint,</div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;                          apr_pool_t *result_pool);</div>
<div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;<span class="comment">/** Return a generic stream connected to stringbuf @a str.  Allocate the</span></div>
<div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;<span class="comment"> * stream in @a pool.</span></div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gabe260b52fa278bc63ba75ea695e54303">svn_stream_from_stringbuf</a>(<a class="code" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> *str,</div>
<div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;                          apr_pool_t *pool);</div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;<span class="comment">/** Return a generic read-only stream connected to string @a str.</span></div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;<span class="comment"> *  Allocate the stream in @a pool.</span></div>
<div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga8e85f7340b0f3471fb79c1bc501e4fea">svn_stream_from_string</a>(<span class="keyword">const</span> <a class="code" href="structsvn__string__t.html">svn_string_t</a> *str,</div>
<div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;                       apr_pool_t *pool);</div>
<div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;<span class="comment">/** Return a generic stream which implements buffered reads and writes.</span></div>
<div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;<span class="comment"> *  The stream will preferentially store data in-memory, but may use</span></div>
<div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;<span class="comment"> *  disk storage as backup if the amount of data is large.</span></div>
<div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;<span class="comment"> *  Allocate the stream in @a result_pool</span></div>
<div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga8d37c4569b583fd76dde630be6ed68f7">svn_stream_buffered</a>(apr_pool_t *result_pool);</div>
<div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;<span class="comment">/** Return a stream that decompresses all data read and compresses all</span></div>
<div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;<span class="comment"> * data written. The stream @a stream is used to read and write all</span></div>
<div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;<span class="comment"> * compressed data. All compression data structures are allocated on</span></div>
<div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;<span class="comment"> * @a pool. If compression support is not compiled in then</span></div>
<div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;<span class="comment"> * svn_stream_compressed() returns @a stream unmodified. Make sure you</span></div>
<div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;<span class="comment"> * call svn_stream_close() on the stream returned by this function,</span></div>
<div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;<span class="comment"> * so that all data are flushed and cleaned up.</span></div>
<div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;<span class="comment"> * @note From 1.4, compression support is always compiled in.</span></div>
<div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga10756ab562fd20d32fb880c859607b4c">svn_stream_compressed</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;                      apr_pool_t *pool);</div>
<div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;<span class="comment">/** Return a stream that calculates checksums for all data read</span></div>
<div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;<span class="comment"> * and written.  The stream @a stream is used to read and write all data.</span></div>
<div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;<span class="comment"> * The stream and the resulting digests are allocated in @a pool.</span></div>
<div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;<span class="comment"> * When the stream is closed, @a *read_checksum and @a *write_checksum</span></div>
<div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;<span class="comment"> * are set to point to the resulting checksums, of type @a read_checksum_kind</span></div>
<div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;<span class="comment"> * and @a write_checksum_kind, respectively.</span></div>
<div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;<span class="comment"> * Both @a read_checksum and @a write_checksum can be @c NULL, in which case</span></div>
<div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;<span class="comment"> * the respective checksum isn&#39;t calculated.</span></div>
<div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;<span class="comment"> * If @a read_all is TRUE, make sure that all data available on @a</span></div>
<div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;<span class="comment"> * stream is read (and checksummed) when the stream is closed.</span></div>
<div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;<span class="comment"> * Read and write operations can be mixed without interfering.</span></div>
<div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;<span class="comment"> * The @a stream passed into this function is closed when the created</span></div>
<div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;<span class="comment"> * stream is closed.</span></div>
<div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;<span class="comment"> * @since New in 1.6.</span></div>
<div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga823456ae87bbacf8b7022e8ea4c0d356">svn_stream_checksummed2</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;                        <a class="code" href="structsvn__checksum__t.html">svn_checksum_t</a> **read_checksum,</div>
<div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;                        <a class="code" href="structsvn__checksum__t.html">svn_checksum_t</a> **write_checksum,</div>
<div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;                        <a class="code" href="svn__checksum_8h.html#a7a6c373d03d7e6ec6b832a039f5e0aa1">svn_checksum_kind_t</a> checksum_kind,</div>
<div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> read_all,</div>
<div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;                        apr_pool_t *pool);</div>
<div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;<span class="comment"> * Similar to svn_stream_checksummed2(), but always returning the MD5</span></div>
<div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;<span class="comment"> * checksum in @a read_digest and @a write_digest.</span></div>
<div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;<span class="comment"> * @since New in 1.4.</span></div>
<div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span></div>
<div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gadda74c8a8bf6d4dc64488979aa197afc">svn_stream_checksummed</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> **read_digest,</div>
<div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> **write_digest,</div>
<div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> read_all,</div>
<div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;                       apr_pool_t *pool);</div>
<div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;<span class="comment">/** Read from a generic stream until @a buffer is filled upto @a *len or</span></div>
<div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;<span class="comment"> * until EOF is reached. @see svn_stream_t</span></div>
<div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga13df23d9bc8f0c308223d7925f5da132">svn_stream_read_full</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;                     <span class="keywordtype">char</span> *buffer,</div>
<div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;                     apr_size_t *len);</div>
<div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;</div>
<div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;<span class="comment">/** Returns @c TRUE if the generic @c stream supports svn_stream_read2().</span></div>
<div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a></div>
<div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga1d693ef9f905968c96895e82cfcfaf66">svn_stream_supports_partial_read</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream);</div>
<div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;<span class="comment">/** Read all currently available upto @a *len into @a buffer. Use</span></div>
<div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;<span class="comment"> * svn_stream_read_full() if you want to wait for the buffer to be filled</span></div>
<div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;<span class="comment"> * or EOF. If the stream doesn&#39;t support limited reads this function will</span></div>
<div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;<span class="comment"> * return an #SVN_ERR_STREAM_NOT_SUPPORTED error.</span></div>
<div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;<span class="comment"> * A 0 byte read signals the end of the stream.</span></div>
<div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga8b6506623bf959fc8528d9c4fbd427d4">svn_stream_read2</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;                 <span class="keywordtype">char</span> *buffer,</div>
<div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;                 apr_size_t *len);</div>
<div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;</div>
<div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;<span class="comment">/** Read from a generic stream until the buffer is completely filled or EOF.</span></div>
<div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;<span class="comment"> * @see svn_stream_t.</span></div>
<div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;<span class="comment"> * @note This function is a wrapper of svn_stream_read_full() now, which name</span></div>
<div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;<span class="comment"> * better documents the behavior of this function.</span></div>
<div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.8 API</span></div>
<div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga241e8929f8f7631a629142bd749b25fc">svn_stream_read</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;                <span class="keywordtype">char</span> *buffer,</div>
<div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;                apr_size_t *len);</div>
<div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;<span class="comment"> * Skip @a len bytes from a generic @a stream. If the stream is exhausted</span></div>
<div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;<span class="comment"> * before @a len bytes have been read, return an error.</span></div>
<div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;<span class="comment"> * @note  No assumption can be made on the semantics of this function</span></div>
<div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;<span class="comment"> * other than that the stream read pointer will be advanced by *len</span></div>
<div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;<span class="comment"> * bytes. Depending on the capabilities of the underlying stream</span></div>
<div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;<span class="comment"> * implementation, this may for instance be translated into a sequence</span></div>
<div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;<span class="comment"> * of reads or a simple seek operation. If the stream implementation has</span></div>
<div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;<span class="comment"> * not provided a skip function, this will read from the stream and</span></div>
<div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;<span class="comment"> * discard the data.</span></div>
<div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga139e177f2f8600c47f01319f12dc5d4a">svn_stream_skip</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;                apr_size_t len);</div>
<div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;<span class="comment">/** Write to a generic stream. @see svn_stream_t. */</span></div>
<div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga0094764a89afdedecac79df9ad1ebccb">svn_stream_write</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;                 <span class="keyword">const</span> <span class="keywordtype">char</span> *data,</div>
<div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;                 apr_size_t *len);</div>
<div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;<span class="comment">/** Close a generic stream. @see svn_stream_t. */</span></div>
<div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga7d9cdab4d5d8707d59a1b1d3dab95bb4">svn_stream_close</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream);</div>
<div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;<span class="comment">/** Reset a generic stream back to its origin. (E.g. On a file this would be</span></div>
<div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;<span class="comment"> * implemented as a seek to position 0).  This function returns a</span></div>
<div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;<span class="comment"> * #SVN_ERR_STREAM_SEEK_NOT_SUPPORTED error when the stream doesn&#39;t</span></div>
<div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;<span class="comment"> * implement resetting.</span></div>
<div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gac7574ccd5c0f60779bdaef7f5b44febd">svn_stream_reset</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream);</div>
<div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;<span class="comment">/** Returns @c TRUE if the generic @a stream supports svn_stream_mark().</span></div>
<div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;<span class="comment"> * @see svn_stream_mark()</span></div>
<div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a></div>
<div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gab5dc6f7105e2332ebda600b2d2300eb7">svn_stream_supports_mark</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream);</div>
<div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;<span class="comment">/** Set a @a mark at the current position of a generic @a stream,</span></div>
<div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;<span class="comment"> * which can later be sought back to using svn_stream_seek().</span></div>
<div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;<span class="comment"> * The @a mark is allocated in @a pool.</span></div>
<div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;<span class="comment"> * This function returns the #SVN_ERR_STREAM_SEEK_NOT_SUPPORTED error</span></div>
<div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;<span class="comment"> * if the stream doesn&#39;t implement seeking.</span></div>
<div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;<span class="comment"> * @see svn_stream_seek()</span></div>
<div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga47c17fbf09effd084d6b426d18175942">svn_stream_mark</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;                <a class="code" href="group__svn__io__byte__streams.html#gaca2f3b74a1215c13b5ae2ca3b99437b9">svn_stream_mark_t</a> **mark,</div>
<div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;                apr_pool_t *pool);</div>
<div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;<span class="comment">/** Seek to a @a mark in a generic @a stream.</span></div>
<div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;<span class="comment"> * This function returns the #SVN_ERR_STREAM_SEEK_NOT_SUPPORTED error</span></div>
<div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;<span class="comment"> * if the stream doesn&#39;t implement seeking. Passing NULL as @a mark,</span></div>
<div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;<span class="comment"> * seeks to the start of the stream.</span></div>
<div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;<span class="comment"> * @see svn_stream_mark()</span></div>
<div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga1cb32df4e14164a911490bae5e58e99e">svn_stream_seek</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream, <span class="keyword">const</span> <a class="code" href="group__svn__io__byte__streams.html#gaca2f3b74a1215c13b5ae2ca3b99437b9">svn_stream_mark_t</a> *mark);</div>
<div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;<span class="comment">/** When a stream supports polling for available data, obtain a boolean</span></div>
<div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;<span class="comment"> * indicating whether data is waiting to be read. If the stream doesn&#39;t</span></div>
<div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;<span class="comment"> * support polling this function returns a #SVN_ERR_STREAM_NOT_SUPPORTED</span></div>
<div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;<span class="comment"> * error.</span></div>
<div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;<span class="comment"> * If the data_available callback is implemented and the stream is at the end</span></div>
<div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;<span class="comment"> * the stream will set @a *data_available to FALSE.</span></div>
<div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga270140f6cd4d6712ccebbf731cd5c713">svn_stream_data_available</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *data_available);</div>
<div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;<span class="comment">/** Return a writable stream which, when written to, writes to both of the</span></div>
<div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;<span class="comment"> * underlying streams.  Both of these streams will be closed upon closure of</span></div>
<div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;<span class="comment"> * the returned stream; use svn_stream_disown() if this is not the desired</span></div>
<div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;<span class="comment"> * behavior.  One or both of @a out1 and @a out2 may be @c NULL.  If both are</span></div>
<div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;<span class="comment"> * @c NULL, @c NULL is returned.</span></div>
<div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga77fdb810198d9c7832610882fd57546b">svn_stream_tee</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *out1,</div>
<div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;               <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *out2,</div>
<div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;               apr_pool_t *pool);</div>
<div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;<span class="comment">/** Write NULL-terminated string @a str to @a stream.</span></div>
<div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga4233ad62178dd3379e6d1feee18b5fc4">svn_stream_puts</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">char</span> *str);</div>
<div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;<span class="comment">/** Write to @a stream using a printf-style @a fmt specifier, passed through</span></div>
<div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;<span class="comment"> * apr_psprintf() using memory from @a pool.</span></div>
<div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga8665c4828daad13a35fd7e670552d888">svn_stream_printf</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;                  apr_pool_t *pool,</div>
<div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;                  <span class="keyword">const</span> <span class="keywordtype">char</span> *fmt,</div>
<div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;                  ...)</div>
<div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;       __attribute__((format(printf, 3, 4)));</div>
<div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;<span class="comment">/** Write to @a stream using a printf-style @a fmt specifier, passed through</span></div>
<div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;<span class="comment"> * apr_psprintf() using memory from @a pool.  The resulting string</span></div>
<div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;<span class="comment"> * will be translated to @a encoding before it is sent to @a stream.</span></div>
<div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;<span class="comment"> * @note Use @c APR_LOCALE_CHARSET to translate to the encoding of the</span></div>
<div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;<span class="comment"> * current locale.</span></div>
<div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;<span class="comment"> * @since New in 1.3.</span></div>
<div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gacfb10864df6c3a6fd6e5fc08ae8ef7e8">svn_stream_printf_from_utf8</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;                            const <span class="keywordtype">char</span> *encoding,</div>
<div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;                            apr_pool_t *pool,</div>
<div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;                            const <span class="keywordtype">char</span> *fmt,</div>
<div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;                            ...)</div>
<div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;       __attribute__((format(printf, 4, 5)));</div>
<div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;<span class="comment">/** Allocate @a *stringbuf in @a pool, and read into it one line (terminated</span></div>
<div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;<span class="comment"> * by @a eol) from @a stream. The line-terminator is read from the stream,</span></div>
<div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;<span class="comment"> * but is not added to the end of the stringbuf.  Instead, the stringbuf</span></div>
<div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;<span class="comment"> * ends with a usual &#39;\\0&#39;.</span></div>
<div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;<span class="comment"> * If @a stream runs out of bytes before encountering a line-terminator,</span></div>
<div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;<span class="comment"> * then set @a *eof to @c TRUE, otherwise set @a *eof to FALSE.</span></div>
<div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gaccbf1cdff3857cad09096f8f01f37260">svn_stream_readline</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;                    <a class="code" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> **stringbuf,</div>
<div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;                    const <span class="keywordtype">char</span> *eol,</div>
<div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *eof,</div>
<div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;                    apr_pool_t *pool);</div>
<div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;<span class="comment"> * Read the contents of the readable stream @a from and write them to the</span></div>
<div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;<span class="comment"> * writable stream @a to calling @a cancel_func before copying each chunk.</span></div>
<div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;<span class="comment"> * @a cancel_func may be @c NULL.</span></div>
<div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;<span class="comment"> * @note both @a from and @a to will be closed upon successful completion of</span></div>
<div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;<span class="comment"> * the copy (but an error may still be returned, based on trying to close</span></div>
<div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;<span class="comment"> * the two streams). If the closure is not desired, then you can use</span></div>
<div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;<span class="comment"> * svn_stream_disown() to protect either or both of the streams from</span></div>
<div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;<span class="comment"> * being closed.</span></div>
<div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;<span class="comment"> * @since New in 1.6.</span></div>
<div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga674a71b48f810dd21ad2db6fd611930d">svn_stream_copy3</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *from,</div>
<div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;                 <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *to,</div>
<div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;                 <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func,</div>
<div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;                 <span class="keywordtype">void</span> *cancel_baton,</div>
<div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;<span class="comment"> * Same as svn_stream_copy3() but the streams are not closed.</span></div>
<div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;<span class="comment"> * @since New in 1.5.</span></div>
<div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span></div>
<div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga1960de4b4eb0cf1a69a5ba5e11aaa6be">svn_stream_copy2</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *from,</div>
<div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;                 <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *to,</div>
<div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;                 <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func,</div>
<div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;                 <span class="keywordtype">void</span> *cancel_baton,</div>
<div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;<span class="comment"> * Same as svn_stream_copy3(), but without the cancellation function</span></div>
<div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;<span class="comment"> * or stream closing.</span></div>
<div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;<span class="comment"> * @since New in 1.1.</span></div>
<div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span></div>
<div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga444db383401ed714a240ff6ca5ca76b3">svn_stream_copy</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *from,</div>
<div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;                <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *to,</div>
<div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;                apr_pool_t *pool);</div>
<div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;</div>
<div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;<span class="comment">/** Set @a *same to TRUE if @a stream1 and @a stream2 have the same</span></div>
<div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;<span class="comment"> * contents, else set it to FALSE.</span></div>
<div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;<span class="comment"> * Both streams will be closed before this function returns (regardless of</span></div>
<div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;<span class="comment"> * the result, or any possible error).</span></div>
<div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;<span class="comment"> * Use @a scratch_pool for temporary allocations.</span></div>
<div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga4a84c869ab835792b5e441b5eb426fd6">svn_stream_contents_same2</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *same,</div>
<div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;                          <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream1,</div>
<div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;                          <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream2,</div>
<div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;                          apr_pool_t *pool);</div>
<div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;</div>
<div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;<span class="comment"> * Same as svn_stream_contents_same2(), but the streams will not be closed.</span></div>
<div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;<span class="comment"> * @since New in 1.4.</span></div>
<div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span></div>
<div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga14b9375f4e0300888b853650e15a987a">svn_stream_contents_same</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *same,</div>
<div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;                         <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream1,</div>
<div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;                         <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream2,</div>
<div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;                         apr_pool_t *pool);</div>
<div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;</div>
<div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;<span class="comment">/** Read the contents of @a stream into memory, returning the data in</span></div>
<div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;<span class="comment"> * @a result. The stream will be closed when it has been successfully and</span></div>
<div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;<span class="comment"> * completely read.</span></div>
<div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;<span class="comment"> * The returned memory is allocated in @a result_pool, and any temporary</span></div>
<div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;<span class="comment"> * allocations are performed in @a scratch_pool.</span></div>
<div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;<span class="comment"> * @note due to memory pseudo-reallocation behavior (due to pools), this</span></div>
<div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;<span class="comment"> *   can be a memory-intensive operation for large files.</span></div>
<div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;<span class="comment"> * @since New in 1.6</span></div>
<div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga91b87b96c3f9a302d390263bd0d451a2">svn_string_from_stream</a>(<a class="code" href="structsvn__string__t.html">svn_string_t</a> **result,</div>
<div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;                       <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *stream,</div>
<div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;                       apr_pool_t *result_pool,</div>
<div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;                       apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;</div>
<div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;<span class="comment">/** A function type provided for use as a callback from</span></div>
<div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;<span class="comment"> * @c svn_stream_lazyopen_create().</span></div>
<div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;<span class="comment"> * The callback function shall open a new stream and set @a *stream to</span></div>
<div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;<span class="comment"> * the stream object, allocated in @a result_pool.  @a baton is the</span></div>
<div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;<span class="comment"> * callback baton that was passed to svn_stream_lazyopen_create().</span></div>
<div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;<span class="comment"> * @a result_pool is the result pool that was passed to</span></div>
<div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;<span class="comment"> * svn_stream_lazyopen_create().  The callback function may use</span></div>
<div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;<span class="comment"> * @a scratch_pool for temporary allocations; the caller may clear or</span></div>
<div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;<span class="comment"> * destroy @a scratch_pool any time after the function returns.</span></div>
<div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;typedef <a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01539"></a><span class="lineno"><a class="line" href="group__svn__io__byte__streams.html#ga13364f11af5666587fa9fd282812219e"> 1539</a></span>&#160;(*<a class="code" href="group__svn__io__byte__streams.html#ga13364f11af5666587fa9fd282812219e">svn_stream_lazyopen_func_t</a>)(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **stream,</div>
<div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;                              <span class="keywordtype">void</span> *baton,</div>
<div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;                              apr_pool_t *result_pool,</div>
<div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;                              apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;</div>
<div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;<span class="comment">/** Return a generic stream which wraps another primary stream,</span></div>
<div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;<span class="comment"> * delaying the &quot;opening&quot; of that stream until the first time the</span></div>
<div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;<span class="comment"> * returned stream is accessed.</span></div>
<div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;<span class="comment"> * @a open_func and @a open_baton are a callback function/baton pair</span></div>
<div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;<span class="comment"> * which will be invoked upon the first access of the returned</span></div>
<div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;<span class="comment"> * stream (read, write, mark, seek, skip, or possibly close).  The</span></div>
<div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;<span class="comment"> * callback shall open the primary stream.</span></div>
<div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;<span class="comment"> * If the only &quot;access&quot; the returned stream gets is to close it</span></div>
<div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;<span class="comment"> * then @a open_func will only be called if @a open_on_close is TRUE.</span></div>
<div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;<span class="comment"> * Allocate the returned stream in @a result_pool. Also arrange for</span></div>
<div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;<span class="comment"> * @a result_pool to be passed as the @c result_pool parameter to</span></div>
<div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;<span class="comment"> * @a open_func when it is called.</span></div>
<div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> *</div>
<div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;<a class="code" href="group__svn__io__byte__streams.html#gaf5a36107d7ac577e62a88c3281538304">svn_stream_lazyopen_create</a>(<a class="code" href="group__svn__io__byte__streams.html#ga13364f11af5666587fa9fd282812219e">svn_stream_lazyopen_func_t</a> open_func,</div>
<div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;                           <span class="keywordtype">void</span> *open_baton,</div>
<div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> open_on_close,</div>
<div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;                           apr_pool_t *result_pool);</div>
<div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;<span class="comment">/** @} */</span></div>
<div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;<span class="comment">/** Set @a *result to a string containing the contents of @a</span></div>
<div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;<span class="comment"> * filename, which is either &quot;-&quot; (indicating that stdin should be</span></div>
<div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;<span class="comment"> * read) or the utf8-encoded path of a real file.</span></div>
<div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;<span class="comment"> * @warning Callers should be aware of possible unexpected results</span></div>
<div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;<span class="comment"> * when using this function to read from stdin where additional</span></div>
<div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;<span class="comment"> * stdin-reading processes abound.  For example, if a program tries</span></div>
<div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;<span class="comment"> * both to invoke an external editor and to read from stdin, stdin</span></div>
<div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;<span class="comment"> * could be trashed and the editor might act funky or die outright.</span></div>
<div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;<span class="comment"> * @note due to memory pseudo-reallocation behavior (due to pools), this</span></div>
<div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;<span class="comment"> *   can be a memory-intensive operation for large files.</span></div>
<div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;<span class="comment"> * @since New in 1.5.</span></div>
<div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;<a class="code" href="svn__io_8h.html#a9135b41547d59296fc54c8316278a0d6">svn_stringbuf_from_file2</a>(<a class="code" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> **result,</div>
<div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;                         const <span class="keywordtype">char</span> *filename,</div>
<div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;                         apr_pool_t *pool);</div>
<div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;<span class="comment">/** Similar to svn_stringbuf_from_file2(), except that if @a filename</span></div>
<div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;<span class="comment"> * is &quot;-&quot;, return the error #SVN_ERR_UNSUPPORTED_FEATURE and don&#39;t</span></div>
<div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;<span class="comment"> * touch @a *result.</span></div>
<div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;<span class="comment"> * @deprecated Provided for backwards compatibility with the 1.4 API.</span></div>
<div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;<a class="code" href="svn__io_8h.html#a2ffefcabf44f9e9fb2f71d409fcf782e">svn_stringbuf_from_file</a>(<a class="code" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> **result,</div>
<div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;                        const <span class="keywordtype">char</span> *filename,</div>
<div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;                        apr_pool_t *pool);</div>
<div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;<span class="comment">/** Sets @a *result to a string containing the contents of the already opened</span></div>
<div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;<span class="comment"> * @a file.  Reads from the current position in file to the end.  Does not</span></div>
<div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;<span class="comment"> * close the file or reset the cursor position.</span></div>
<div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;<span class="comment"> * @note due to memory pseudo-reallocation behavior (due to pools), this</span></div>
<div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;<span class="comment"> *   can be a memory-intensive operation for large files.</span></div>
<div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;<a class="code" href="svn__io_8h.html#a59b7be5b78cc045ed972b226e06ab509">svn_stringbuf_from_aprfile</a>(<a class="code" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> **result,</div>
<div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;                           apr_file_t *file,</div>
<div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;                           apr_pool_t *pool);</div>
<div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;<span class="comment">/** Remove file @a path, a utf8-encoded path.  This wraps apr_file_remove(),</span></div>
<div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;<span class="comment"> * converting any error to a Subversion error. If @a ignore_enoent is TRUE, and</span></div>
<div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;<span class="comment"> * the file is not present (APR_STATUS_IS_ENOENT returns TRUE), then no</span></div>
<div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;<span class="comment"> * error will be returned.</span></div>
<div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;<span class="comment"> * The file will be removed even if it is not writable.  (On Windows and</span></div>
<div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;<span class="comment"> * OS/2, this function first clears the file&#39;s read-only bit.)</span></div>
<div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;<a class="code" href="svn__io_8h.html#a528121fa3625ec79bea870b5e53d98c6">svn_io_remove_file2</a>(const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_enoent,</div>
<div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;                    apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;<span class="comment">/** Similar to svn_io_remove_file2(), except with @a ignore_enoent set to FALSE.</span></div>
<div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;<span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span></div>
<div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;<a class="code" href="svn__io_8h.html#abce28e789f76b15917b28b157d54dcfb">svn_io_remove_file</a>(const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;                   apr_pool_t *pool);</div>
<div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;<span class="comment">/** Recursively remove directory @a path.  @a path is utf8-encoded.</span></div>
<div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;<span class="comment"> * If @a ignore_enoent is @c TRUE, don&#39;t fail if the target directory</span></div>
<div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;<span class="comment"> * doesn&#39;t exist.  Use @a pool for temporary allocations.</span></div>
<div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;<span class="comment"> * Because recursive delete of a directory tree can be a lengthy operation,</span></div>
<div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;<span class="comment"> * provide @a cancel_func and @a cancel_baton for interruptibility.</span></div>
<div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;<span class="comment"> * @since New in 1.5.</span></div>
<div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;<a class="code" href="svn__io_8h.html#a9a26dab3678b7ee9c8ebdb8e1d60aedc">svn_io_remove_dir2</a>(const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_enoent,</div>
<div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;                   <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func,</div>
<div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;                   <span class="keywordtype">void</span> *cancel_baton,</div>
<div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;                   apr_pool_t *pool);</div>
<div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;<span class="comment">/** Similar to svn_io_remove_dir2(), but with @a ignore_enoent set to</span></div>
<div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;<span class="comment"> * @c FALSE and @a cancel_func and @a cancel_baton set to @c NULL.</span></div>
<div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API</span></div>
<div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;<a class="code" href="svn__io_8h.html#ad7a26505bf041286d02793eb2a17be04">svn_io_remove_dir</a>(const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;                  apr_pool_t *pool);</div>
<div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;<span class="comment">/** Read all of the disk entries in directory @a path, a utf8-encoded</span></div>
<div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;<span class="comment"> * path.  Set @a *dirents to a hash mapping dirent names (&lt;tt&gt;char *&lt;/tt&gt;) to</span></div>
<div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;<span class="comment"> * undefined non-NULL values, allocated in @a pool.</span></div>
<div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;<span class="comment"> * @note The `.&#39; and `..&#39; directories normally returned by</span></div>
<div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;<span class="comment"> * apr_dir_read() are NOT returned in the hash.</span></div>
<div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;<span class="comment"> * @since New in 1.4.</span></div>
<div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span></div>
<div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;<a class="code" href="svn__io_8h.html#a0f79a74771d956231850979d58b9106e">svn_io_get_dir_filenames</a>(apr_hash_t **dirents,</div>
<div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;                         const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;                         apr_pool_t *pool);</div>
<div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;<span class="comment">/** Read all of the disk entries in directory @a path, a utf8-encoded</span></div>
<div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;<span class="comment"> * path.  Set @a *dirents to a hash mapping dirent names (&lt;tt&gt;char *&lt;/tt&gt;) to</span></div>
<div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;<span class="comment"> * #svn_io_dirent2_t structures, allocated in @a pool.</span></div>
<div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;<span class="comment"> * If @a only_check_type is set to @c TRUE, only the kind and special</span></div>
<div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;<span class="comment"> * fields of the svn_io_dirent2_t are filled.</span></div>
<div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;<span class="comment"> * @note The `.&#39; and `..&#39; directories normally returned by</span></div>
<div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;<span class="comment"> * apr_dir_read() are NOT returned in the hash.</span></div>
<div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;<span class="comment"> * @note The kind field in the @a dirents is set according to the mapping</span></div>
<div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;<span class="comment"> *       as documented for svn_io_check_path().</span></div>
<div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;<a class="code" href="svn__io_8h.html#a7cf56b512d7aa14d5330d8b30eec6189">svn_io_get_dirents3</a>(apr_hash_t **dirents,</div>
<div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;                    const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> only_check_type,</div>
<div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;                    apr_pool_t *result_pool,</div>
<div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;                    apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;</div>
<div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;<span class="comment">/** Similar to svn_io_get_dirents3, but returns a mapping to svn_io_dirent_t</span></div>
<div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;<span class="comment"> * structures instead of svn_io_dirent2_t and with only a single pool.</span></div>
<div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;<span class="comment"> * @since New in 1.3.</span></div>
<div class="line"><a name="l01708"></a><span class="lineno"> 1708</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span></div>
<div class="line"><a name="l01709"></a><span class="lineno"> 1709</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01710"></a><span class="lineno"> 1710</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01711"></a><span class="lineno"> 1711</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;<a class="code" href="svn__io_8h.html#a1583e69324a3f820894422f57fa37d57">svn_io_get_dirents2</a>(apr_hash_t **dirents,</div>
<div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;                    const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;                    apr_pool_t *pool);</div>
<div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;<span class="comment">/** Similar to svn_io_get_dirents2(), but @a *dirents is a hash table</span></div>
<div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;<span class="comment"> * with #svn_node_kind_t values.</span></div>
<div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;<span class="comment"> * @deprecated Provided for backwards compatibility with the 1.2 API.</span></div>
<div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01722"></a><span class="lineno"> 1722</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;<a class="code" href="svn__io_8h.html#a4b09482c9762a2391435a6d1702d59af">svn_io_get_dirents</a>(apr_hash_t **dirents,</div>
<div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;                   const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;                   apr_pool_t *pool);</div>
<div class="line"><a name="l01726"></a><span class="lineno"> 1726</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;<span class="comment">/** Create a svn_io_dirent2_t instance for path. Specialized variant of</span></div>
<div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;<span class="comment"> * svn_io_stat() that directly translates node_kind and special.</span></div>
<div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;<span class="comment"> * If @a verify_truename is @c TRUE, an additional check is performed to</span></div>
<div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;<span class="comment"> * verify the truename of the last path component on case insensitive</span></div>
<div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;<span class="comment"> * filesystems. This check is expensive compared to a just a stat,</span></div>
<div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160;<span class="comment"> * but certainly cheaper than a full truename calculation using</span></div>
<div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;<span class="comment"> * apr_filepath_merge() which verifies all path components.</span></div>
<div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;<span class="comment"> * If @a ignore_enoent is set to @c TRUE, set *dirent_p-&gt;kind to</span></div>
<div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160;<span class="comment"> * svn_node_none instead of returning an error.</span></div>
<div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;<a class="code" href="svn__io_8h.html#a4f8003befd372a93c2443dd60fcca593">svn_io_stat_dirent2</a>(const <a class="code" href="structsvn__io__dirent2__t.html">svn_io_dirent2_t</a> **dirent_p,</div>
<div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;                    const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> verify_truename,</div>
<div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_enoent,</div>
<div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;                    apr_pool_t *result_pool,</div>
<div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;                    apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;</div>
<div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;<span class="comment">/** Similar to svn_io_stat_dirent2(), but always passes FALSE for</span></div>
<div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;<span class="comment"> * @a verify_truename.</span></div>
<div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;<span class="comment"> * @deprecated Provided for backwards compatibility with the 1.7 API.</span></div>
<div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;<a class="code" href="svn__io_8h.html#a5f173471fff3a277d315845056e61f94">svn_io_stat_dirent</a>(const <a class="code" href="structsvn__io__dirent2__t.html">svn_io_dirent2_t</a> **dirent_p,</div>
<div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;                   const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_enoent,</div>
<div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;                   apr_pool_t *result_pool,</div>
<div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;                   apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160;</div>
<div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01765"></a><span class="lineno"> 1765</span>&#160;<span class="comment">/** Callback function type for svn_io_dir_walk() */</span></div>
<div class="line"><a name="l01766"></a><span class="lineno"><a class="line" href="svn__io_8h.html#ae3dd33688b3e75430f4720f4d90c1506"> 1766</a></span>&#160;typedef <a class="code" href="structsvn__error__t.html">svn_error_t</a> * (*<a class="code" href="svn__io_8h.html#ae3dd33688b3e75430f4720f4d90c1506">svn_io_walk_func_t</a>)(<span class="keywordtype">void</span> *baton,</div>
<div class="line"><a name="l01767"></a><span class="lineno"> 1767</span>&#160;                                            const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160;                                            const apr_finfo_t *finfo,</div>
<div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;                                            apr_pool_t *pool);</div>
<div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160;<span class="comment">/** Recursively walk the directory rooted at @a dirname, a</span></div>
<div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;<span class="comment"> * utf8-encoded path, invoking @a walk_func (with @a walk_baton) for</span></div>
<div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;<span class="comment"> * each item in the tree.  For a given directory, invoke @a walk_func</span></div>
<div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160;<span class="comment"> * on the directory itself before invoking it on any children thereof.</span></div>
<div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01776"></a><span class="lineno"> 1776</span>&#160;<span class="comment"> * Deliver to @a walk_func the information specified by @a wanted,</span></div>
<div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;<span class="comment"> * which is a combination of @c APR_FINFO_* flags, plus the</span></div>
<div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;<span class="comment"> * information specified by @c APR_FINFO_TYPE and @c APR_FINFO_NAME.</span></div>
<div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;<span class="comment"> * Use @a pool for all allocations.</span></div>
<div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;<span class="comment"> * @note This function does not currently pass all file types to @a</span></div>
<div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;<span class="comment"> * walk_func -- only APR_DIR, APR_REG, and APR_LNK.  We reserve the</span></div>
<div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160;<span class="comment"> * right to pass additional file types through this interface in the</span></div>
<div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;<span class="comment"> * future, though, so implementations of this callback should</span></div>
<div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;<span class="comment"> * explicitly test FINFO-&gt;filetype.  See the APR library&#39;s</span></div>
<div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;<span class="comment"> * apr_filetype_e enum for the various filetypes and their meanings.</span></div>
<div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;<a class="code" href="svn__io_8h.html#ac47edc693b1106c9b4494017b469d206">svn_io_dir_walk2</a>(const <span class="keywordtype">char</span> *dirname,</div>
<div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;                 apr_int32_t wanted,</div>
<div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;                 <a class="code" href="svn__io_8h.html#ae3dd33688b3e75430f4720f4d90c1506">svn_io_walk_func_t</a> walk_func,</div>
<div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;                 <span class="keywordtype">void</span> *walk_baton,</div>
<div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;<span class="comment">/** Similar to svn_io_dir_walk(), but only calls @a walk_func for</span></div>
<div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;<span class="comment"> * files of type APR_DIR (directory) and APR_REG (regular file).</span></div>
<div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;<span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span></div>
<div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;<a class="code" href="svn__io_8h.html#acac394a2c49dcfb02b8cda55c9281625">svn_io_dir_walk</a>(const <span class="keywordtype">char</span> *dirname,</div>
<div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;                apr_int32_t wanted,</div>
<div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;                <a class="code" href="svn__io_8h.html#ae3dd33688b3e75430f4720f4d90c1506">svn_io_walk_func_t</a> walk_func,</div>
<div class="line"><a name="l01808"></a><span class="lineno"> 1808</span>&#160;                <span class="keywordtype">void</span> *walk_baton,</div>
<div class="line"><a name="l01809"></a><span class="lineno"> 1809</span>&#160;                apr_pool_t *pool);</div>
<div class="line"><a name="l01810"></a><span class="lineno"> 1810</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01811"></a><span class="lineno"> 1811</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l01812"></a><span class="lineno"> 1812</span>&#160;<span class="comment"> * Start @a cmd with @a args, using utf8-encoded @a path as working</span></div>
<div class="line"><a name="l01813"></a><span class="lineno"> 1813</span>&#160;<span class="comment"> * directory.  Return the process handle for the invoked program in @a</span></div>
<div class="line"><a name="l01814"></a><span class="lineno"> 1814</span>&#160;<span class="comment"> * *cmd_proc.</span></div>
<div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;<span class="comment"> * If @a infile_pipe is TRUE, connect @a cmd&#39;s stdin to a pipe;</span></div>
<div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;<span class="comment"> * otherwise, connect it to @a infile (which may be NULL).  If</span></div>
<div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;<span class="comment"> * @a outfile_pipe is TRUE, connect @a cmd&#39;s stdout to a pipe; otherwise,</span></div>
<div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160;<span class="comment"> * connect it to @a outfile (which may be NULL).  If @a errfile_pipe</span></div>
<div class="line"><a name="l01820"></a><span class="lineno"> 1820</span>&#160;<span class="comment"> * is TRUE, connect @a cmd&#39;s stderr to a pipe; otherwise, connect it</span></div>
<div class="line"><a name="l01821"></a><span class="lineno"> 1821</span>&#160;<span class="comment"> * to @a errfile (which may be NULL).  (Callers must pass FALSE for</span></div>
<div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;<span class="comment"> * each of these boolean values for which the corresponding file</span></div>
<div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;<span class="comment"> * handle is non-NULL.)</span></div>
<div class="line"><a name="l01824"></a><span class="lineno"> 1824</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01825"></a><span class="lineno"> 1825</span>&#160;<span class="comment"> * @a args is a list of utf8-encoded &lt;tt&gt;const char *&lt;/tt&gt; arguments,</span></div>
<div class="line"><a name="l01826"></a><span class="lineno"> 1826</span>&#160;<span class="comment"> * terminated by @c NULL.  @a args[0] is the name of the program, though it</span></div>
<div class="line"><a name="l01827"></a><span class="lineno"> 1827</span>&#160;<span class="comment"> * need not be the same as @a cmd.</span></div>
<div class="line"><a name="l01828"></a><span class="lineno"> 1828</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01829"></a><span class="lineno"> 1829</span>&#160;<span class="comment"> * If @a inherit is TRUE, the invoked program inherits its environment from</span></div>
<div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;<span class="comment"> * the caller and @a cmd, if not absolute, is searched for in PATH.</span></div>
<div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;<span class="comment"> * If @a inherit is FALSE @a cmd must be an absolute path and the invoked</span></div>
<div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;<span class="comment"> * program inherits the environment defined by @a env or runs with an empty</span></div>
<div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;<span class="comment"> * environment in @a env is NULL.</span></div>
<div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;<span class="comment"> * @note On some platforms, failure to execute @a cmd in the child process</span></div>
<div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;<span class="comment"> * will result in error output being written to @a errfile, if non-NULL, and</span></div>
<div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;<span class="comment"> * a non-zero exit status being returned to the parent process.</span></div>
<div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;<span class="comment"> * @note An APR bug affects Windows: passing a NULL @a env does not</span></div>
<div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;<span class="comment"> * guarantee the invoked program to run with an empty environment when</span></div>
<div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;<span class="comment"> * @a inherit is FALSE, the program may inherit its parent&#39;s environment.</span></div>
<div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;<span class="comment"> * Explicitly pass an empty @a env to get an empty environment.</span></div>
<div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *<a class="code" href="svn__io_8h.html#ab2a9b76609a3063adf33def0f111f61e">svn_io_start_cmd3</a>(apr_proc_t *cmd_proc,</div>
<div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;                               const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;                               const <span class="keywordtype">char</span> *cmd,</div>
<div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;                               const <span class="keywordtype">char</span> *const *args,</div>
<div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;                               const <span class="keywordtype">char</span> *const *env,</div>
<div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> inherit,</div>
<div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> infile_pipe,</div>
<div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160;                               apr_file_t *infile,</div>
<div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> outfile_pipe,</div>
<div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;                               apr_file_t *outfile,</div>
<div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> errfile_pipe,</div>
<div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;                               apr_file_t *errfile,</div>
<div class="line"><a name="l01859"></a><span class="lineno"> 1859</span>&#160;                               apr_pool_t *pool);</div>
<div class="line"><a name="l01860"></a><span class="lineno"> 1860</span>&#160;</div>
<div class="line"><a name="l01861"></a><span class="lineno"> 1861</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01862"></a><span class="lineno"> 1862</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;<span class="comment"> * Similar to svn_io_start_cmd3() but with @a env always set to NULL.</span></div>
<div class="line"><a name="l01864"></a><span class="lineno"> 1864</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01865"></a><span class="lineno"> 1865</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.7 API</span></div>
<div class="line"><a name="l01866"></a><span class="lineno"> 1866</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l01867"></a><span class="lineno"> 1867</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01868"></a><span class="lineno"> 1868</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01869"></a><span class="lineno"> 1869</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *<a class="code" href="svn__io_8h.html#aa9e4a63f9f1c86d6ff712bcb6d51ddf4">svn_io_start_cmd2</a>(apr_proc_t *cmd_proc,</div>
<div class="line"><a name="l01870"></a><span class="lineno"> 1870</span>&#160;                               const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01871"></a><span class="lineno"> 1871</span>&#160;                               const <span class="keywordtype">char</span> *cmd,</div>
<div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;                               const <span class="keywordtype">char</span> *const *args,</div>
<div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> inherit,</div>
<div class="line"><a name="l01874"></a><span class="lineno"> 1874</span>&#160;                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> infile_pipe,</div>
<div class="line"><a name="l01875"></a><span class="lineno"> 1875</span>&#160;                               apr_file_t *infile,</div>
<div class="line"><a name="l01876"></a><span class="lineno"> 1876</span>&#160;                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> outfile_pipe,</div>
<div class="line"><a name="l01877"></a><span class="lineno"> 1877</span>&#160;                               apr_file_t *outfile,</div>
<div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> errfile_pipe,</div>
<div class="line"><a name="l01879"></a><span class="lineno"> 1879</span>&#160;                               apr_file_t *errfile,</div>
<div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160;                               apr_pool_t *pool);</div>
<div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;<span class="comment"> * Similar to svn_io_start_cmd2() but with @a infile_pipe, @a</span></div>
<div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;<span class="comment"> * outfile_pipe, and @a errfile_pipe always FALSE.</span></div>
<div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API</span></div>
<div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;<span class="comment"> * @since New in 1.3.</span></div>
<div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01889"></a><span class="lineno"> 1889</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01891"></a><span class="lineno"> 1891</span>&#160;<a class="code" href="svn__io_8h.html#a4ee2641c854734f78337aee204b79201">svn_io_start_cmd</a>(apr_proc_t *cmd_proc,</div>
<div class="line"><a name="l01892"></a><span class="lineno"> 1892</span>&#160;                 const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160;                 const <span class="keywordtype">char</span> *cmd,</div>
<div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;                 const <span class="keywordtype">char</span> *const *args,</div>
<div class="line"><a name="l01895"></a><span class="lineno"> 1895</span>&#160;                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> inherit,</div>
<div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;                 apr_file_t *infile,</div>
<div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160;                 apr_file_t *outfile,</div>
<div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;                 apr_file_t *errfile,</div>
<div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l01900"></a><span class="lineno"> 1900</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01901"></a><span class="lineno"> 1901</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l01902"></a><span class="lineno"> 1902</span>&#160;<span class="comment"> * Wait for the process @a *cmd_proc to complete and optionally retrieve</span></div>
<div class="line"><a name="l01903"></a><span class="lineno"> 1903</span>&#160;<span class="comment"> * its exit code.  @a cmd is used only in error messages.</span></div>
<div class="line"><a name="l01904"></a><span class="lineno"> 1904</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;<span class="comment"> * If @a exitcode is not NULL, set @a *exitcode to the exit code of the</span></div>
<div class="line"><a name="l01906"></a><span class="lineno"> 1906</span>&#160;<span class="comment"> * process and do not consider any exit code to be an error.  If @a exitcode</span></div>
<div class="line"><a name="l01907"></a><span class="lineno"> 1907</span>&#160;<span class="comment"> * is NULL, then if the exit code of the process is non-zero then return an</span></div>
<div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;<span class="comment"> * #SVN_ERR_EXTERNAL_PROGRAM error.</span></div>
<div class="line"><a name="l01909"></a><span class="lineno"> 1909</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01910"></a><span class="lineno"> 1910</span>&#160;<span class="comment"> * If @a exitwhy is not NULL, set @a *exitwhy to indicate why the process</span></div>
<div class="line"><a name="l01911"></a><span class="lineno"> 1911</span>&#160;<span class="comment"> * terminated and do not consider any reason to be an error.  If @a exitwhy</span></div>
<div class="line"><a name="l01912"></a><span class="lineno"> 1912</span>&#160;<span class="comment"> * is NULL, then if the termination reason is not @c APR_PROC_CHECK_EXIT()</span></div>
<div class="line"><a name="l01913"></a><span class="lineno"> 1913</span>&#160;<span class="comment"> * then return an #SVN_ERR_EXTERNAL_PROGRAM error.</span></div>
<div class="line"><a name="l01914"></a><span class="lineno"> 1914</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160;<span class="comment"> * @since New in 1.3.</span></div>
<div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;<a class="code" href="svn__io_8h.html#acc0478196081ff559613daf3ac8a39c7">svn_io_wait_for_cmd</a>(apr_proc_t *cmd_proc,</div>
<div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;                    const <span class="keywordtype">char</span> *cmd,</div>
<div class="line"><a name="l01920"></a><span class="lineno"> 1920</span>&#160;                    <span class="keywordtype">int</span> *exitcode,</div>
<div class="line"><a name="l01921"></a><span class="lineno"> 1921</span>&#160;                    apr_exit_why_e *exitwhy,</div>
<div class="line"><a name="l01922"></a><span class="lineno"> 1922</span>&#160;                    apr_pool_t *pool);</div>
<div class="line"><a name="l01923"></a><span class="lineno"> 1923</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01924"></a><span class="lineno"> 1924</span>&#160;<span class="comment">/** Run a command to completion, by first calling svn_io_start_cmd() and</span></div>
<div class="line"><a name="l01925"></a><span class="lineno"> 1925</span>&#160;<span class="comment"> * then calling svn_io_wait_for_cmd().  The parameters correspond to</span></div>
<div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;<span class="comment"> * the same-named parameters of those two functions.</span></div>
<div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;<a class="code" href="svn__io_8h.html#ab59c1c8d67cf405ca36a5556858da82d">svn_io_run_cmd</a>(const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l01930"></a><span class="lineno"> 1930</span>&#160;               const <span class="keywordtype">char</span> *cmd,</div>
<div class="line"><a name="l01931"></a><span class="lineno"> 1931</span>&#160;               const <span class="keywordtype">char</span> *const *args,</div>
<div class="line"><a name="l01932"></a><span class="lineno"> 1932</span>&#160;               <span class="keywordtype">int</span> *exitcode,</div>
<div class="line"><a name="l01933"></a><span class="lineno"> 1933</span>&#160;               apr_exit_why_e *exitwhy,</div>
<div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> inherit,</div>
<div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160;               apr_file_t *infile,</div>
<div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;               apr_file_t *outfile,</div>
<div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;               apr_file_t *errfile,</div>
<div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;               apr_pool_t *pool);</div>
<div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01940"></a><span class="lineno"> 1940</span>&#160;<span class="comment">/** Invoke the configured @c diff program, with @a user_args (an array</span></div>
<div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;<span class="comment"> * of utf8-encoded @a num_user_args arguments) if they are specified</span></div>
<div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160;<span class="comment"> * (that is, if @a user_args is non-NULL), or &quot;-u&quot; if they are not.</span></div>
<div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;<span class="comment"> * If @a user_args is NULL, the value of @a num_user_args is ignored.</span></div>
<div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;<span class="comment"> * Diff runs in utf8-encoded @a dir, and its exit status is stored in</span></div>
<div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;<span class="comment"> * @a exitcode, if it is not @c NULL.</span></div>
<div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01948"></a><span class="lineno"> 1948</span>&#160;<span class="comment"> * If @a label1 and/or @a label2 are not NULL they will be passed to the diff</span></div>
<div class="line"><a name="l01949"></a><span class="lineno"> 1949</span>&#160;<span class="comment"> * process as the arguments of &quot;-L&quot; options.  @a label1 and @a label2 are also</span></div>
<div class="line"><a name="l01950"></a><span class="lineno"> 1950</span>&#160;<span class="comment"> * in utf8, and will be converted to native charset along with the other args.</span></div>
<div class="line"><a name="l01951"></a><span class="lineno"> 1951</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160;<span class="comment"> * @a from is the first file passed to diff, and @a to is the second.  The</span></div>
<div class="line"><a name="l01953"></a><span class="lineno"> 1953</span>&#160;<span class="comment"> * stdout of diff will be sent to @a outfile, and the stderr to @a errfile.</span></div>
<div class="line"><a name="l01954"></a><span class="lineno"> 1954</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01955"></a><span class="lineno"> 1955</span>&#160;<span class="comment"> * @a diff_cmd must be non-NULL.</span></div>
<div class="line"><a name="l01956"></a><span class="lineno"> 1956</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01957"></a><span class="lineno"> 1957</span>&#160;<span class="comment"> * Do all allocation in @a pool.</span></div>
<div class="line"><a name="l01958"></a><span class="lineno"> 1958</span>&#160;<span class="comment"> * @since New in 1.6.0.</span></div>
<div class="line"><a name="l01959"></a><span class="lineno"> 1959</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01960"></a><span class="lineno"> 1960</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01961"></a><span class="lineno"> 1961</span>&#160;<a class="code" href="svn__io_8h.html#acabda4f4f591bec06ece8e35829a79f4">svn_io_run_diff2</a>(const <span class="keywordtype">char</span> *dir,</div>
<div class="line"><a name="l01962"></a><span class="lineno"> 1962</span>&#160;                 const <span class="keywordtype">char</span> *const *user_args,</div>
<div class="line"><a name="l01963"></a><span class="lineno"> 1963</span>&#160;                 <span class="keywordtype">int</span> num_user_args,</div>
<div class="line"><a name="l01964"></a><span class="lineno"> 1964</span>&#160;                 const <span class="keywordtype">char</span> *label1,</div>
<div class="line"><a name="l01965"></a><span class="lineno"> 1965</span>&#160;                 const <span class="keywordtype">char</span> *label2,</div>
<div class="line"><a name="l01966"></a><span class="lineno"> 1966</span>&#160;                 const <span class="keywordtype">char</span> *from,</div>
<div class="line"><a name="l01967"></a><span class="lineno"> 1967</span>&#160;                 const <span class="keywordtype">char</span> *to,</div>
<div class="line"><a name="l01968"></a><span class="lineno"> 1968</span>&#160;                 <span class="keywordtype">int</span> *exitcode,</div>
<div class="line"><a name="l01969"></a><span class="lineno"> 1969</span>&#160;                 apr_file_t *outfile,</div>
<div class="line"><a name="l01970"></a><span class="lineno"> 1970</span>&#160;                 apr_file_t *errfile,</div>
<div class="line"><a name="l01971"></a><span class="lineno"> 1971</span>&#160;                 const <span class="keywordtype">char</span> *diff_cmd,</div>
<div class="line"><a name="l01972"></a><span class="lineno"> 1972</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l01973"></a><span class="lineno"> 1973</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01974"></a><span class="lineno"> 1974</span>&#160;<span class="comment">/** Similar to svn_io_run_diff2() but with @a diff_cmd encoded in internal</span></div>
<div class="line"><a name="l01975"></a><span class="lineno"> 1975</span>&#160;<span class="comment"> * encoding used by APR.</span></div>
<div class="line"><a name="l01976"></a><span class="lineno"> 1976</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01977"></a><span class="lineno"> 1977</span>&#160;<span class="comment"> * @deprecated Provided for backwards compatibility with the 1.5 API. */</span></div>
<div class="line"><a name="l01978"></a><span class="lineno"> 1978</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l01979"></a><span class="lineno"> 1979</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l01980"></a><span class="lineno"> 1980</span>&#160;<a class="code" href="svn__io_8h.html#a6c0266e00c285a0b90eef9faf0e31024">svn_io_run_diff</a>(const <span class="keywordtype">char</span> *dir,</div>
<div class="line"><a name="l01981"></a><span class="lineno"> 1981</span>&#160;                const <span class="keywordtype">char</span> *const *user_args,</div>
<div class="line"><a name="l01982"></a><span class="lineno"> 1982</span>&#160;                <span class="keywordtype">int</span> num_user_args,</div>
<div class="line"><a name="l01983"></a><span class="lineno"> 1983</span>&#160;                const <span class="keywordtype">char</span> *label1,</div>
<div class="line"><a name="l01984"></a><span class="lineno"> 1984</span>&#160;                const <span class="keywordtype">char</span> *label2,</div>
<div class="line"><a name="l01985"></a><span class="lineno"> 1985</span>&#160;                const <span class="keywordtype">char</span> *from,</div>
<div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;                const <span class="keywordtype">char</span> *to,</div>
<div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;                <span class="keywordtype">int</span> *exitcode,</div>
<div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;                apr_file_t *outfile,</div>
<div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;                apr_file_t *errfile,</div>
<div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;                const <span class="keywordtype">char</span> *diff_cmd,</div>
<div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;                apr_pool_t *pool);</div>
<div class="line"><a name="l01992"></a><span class="lineno"> 1992</span>&#160;</div>
<div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;</div>
<div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160;<span class="comment">/** Invoke the configured @c diff3 program, in utf8-encoded @a dir</span></div>
<div class="line"><a name="l01996"></a><span class="lineno"> 1996</span>&#160;<span class="comment"> * like this:</span></div>
<div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01998"></a><span class="lineno"> 1998</span>&#160;<span class="comment"> *          diff3 -E -m @a mine @a older @a yours &gt; @a merged</span></div>
<div class="line"><a name="l01999"></a><span class="lineno"> 1999</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02000"></a><span class="lineno"> 2000</span>&#160;<span class="comment"> * (See the diff3 documentation for details.)</span></div>
<div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;<span class="comment"> * If @a user_args is non-NULL, replace &quot;-E&quot; with the &lt;tt&gt;const char*&lt;/tt&gt;</span></div>
<div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;<span class="comment"> * elements that @a user_args contains.</span></div>
<div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;<span class="comment"> * @a mine, @a older and @a yours are utf8-encoded paths (relative to</span></div>
<div class="line"><a name="l02006"></a><span class="lineno"> 2006</span>&#160;<span class="comment"> * @a dir or absolute) to three files that already exist.</span></div>
<div class="line"><a name="l02007"></a><span class="lineno"> 2007</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02008"></a><span class="lineno"> 2008</span>&#160;<span class="comment"> * @a merged is an open file handle, and is left open after the merge</span></div>
<div class="line"><a name="l02009"></a><span class="lineno"> 2009</span>&#160;<span class="comment"> * result is written to it. (@a merged should *not* be the same file</span></div>
<div class="line"><a name="l02010"></a><span class="lineno"> 2010</span>&#160;<span class="comment"> * as @a mine, or nondeterministic things may happen!)</span></div>
<div class="line"><a name="l02011"></a><span class="lineno"> 2011</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02012"></a><span class="lineno"> 2012</span>&#160;<span class="comment"> * @a mine_label, @a older_label, @a yours_label are utf8-encoded label</span></div>
<div class="line"><a name="l02013"></a><span class="lineno"> 2013</span>&#160;<span class="comment"> * parameters for diff3&#39;s -L option.  Any of them may be @c NULL, in</span></div>
<div class="line"><a name="l02014"></a><span class="lineno"> 2014</span>&#160;<span class="comment"> * which case the corresponding @a mine, @a older, or @a yours parameter is</span></div>
<div class="line"><a name="l02015"></a><span class="lineno"> 2015</span>&#160;<span class="comment"> * used instead.</span></div>
<div class="line"><a name="l02016"></a><span class="lineno"> 2016</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02017"></a><span class="lineno"> 2017</span>&#160;<span class="comment"> * Set @a *exitcode to diff3&#39;s exit status.  If @a *exitcode is anything</span></div>
<div class="line"><a name="l02018"></a><span class="lineno"> 2018</span>&#160;<span class="comment"> * other than 0 or 1, then return #SVN_ERR_EXTERNAL_PROGRAM.  (Note the</span></div>
<div class="line"><a name="l02019"></a><span class="lineno"> 2019</span>&#160;<span class="comment"> * following from the diff3 info pages: &quot;An exit status of 0 means</span></div>
<div class="line"><a name="l02020"></a><span class="lineno"> 2020</span>&#160;<span class="comment"> * `diff3&#39; was successful, 1 means some conflicts were found, and 2</span></div>
<div class="line"><a name="l02021"></a><span class="lineno"> 2021</span>&#160;<span class="comment"> * means trouble.&quot;)</span></div>
<div class="line"><a name="l02022"></a><span class="lineno"> 2022</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02023"></a><span class="lineno"> 2023</span>&#160;<span class="comment"> * @a diff3_cmd must be non-NULL.</span></div>
<div class="line"><a name="l02024"></a><span class="lineno"> 2024</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02025"></a><span class="lineno"> 2025</span>&#160;<span class="comment"> * Do all allocation in @a pool.</span></div>
<div class="line"><a name="l02026"></a><span class="lineno"> 2026</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02027"></a><span class="lineno"> 2027</span>&#160;<span class="comment"> * @since New in 1.4.</span></div>
<div class="line"><a name="l02028"></a><span class="lineno"> 2028</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02030"></a><span class="lineno"> 2030</span>&#160;<a class="code" href="svn__io_8h.html#a0ef4f589d31a5578526c3de2d0587cf7">svn_io_run_diff3_3</a>(<span class="keywordtype">int</span> *exitcode,</div>
<div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;                   const <span class="keywordtype">char</span> *dir,</div>
<div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160;                   const <span class="keywordtype">char</span> *mine,</div>
<div class="line"><a name="l02033"></a><span class="lineno"> 2033</span>&#160;                   const <span class="keywordtype">char</span> *older,</div>
<div class="line"><a name="l02034"></a><span class="lineno"> 2034</span>&#160;                   const <span class="keywordtype">char</span> *yours,</div>
<div class="line"><a name="l02035"></a><span class="lineno"> 2035</span>&#160;                   const <span class="keywordtype">char</span> *mine_label,</div>
<div class="line"><a name="l02036"></a><span class="lineno"> 2036</span>&#160;                   const <span class="keywordtype">char</span> *older_label,</div>
<div class="line"><a name="l02037"></a><span class="lineno"> 2037</span>&#160;                   const <span class="keywordtype">char</span> *yours_label,</div>
<div class="line"><a name="l02038"></a><span class="lineno"> 2038</span>&#160;                   apr_file_t *merged,</div>
<div class="line"><a name="l02039"></a><span class="lineno"> 2039</span>&#160;                   const <span class="keywordtype">char</span> *diff3_cmd,</div>
<div class="line"><a name="l02040"></a><span class="lineno"> 2040</span>&#160;                   const apr_array_header_t *user_args,</div>
<div class="line"><a name="l02041"></a><span class="lineno"> 2041</span>&#160;                   apr_pool_t *pool);</div>
<div class="line"><a name="l02042"></a><span class="lineno"> 2042</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02043"></a><span class="lineno"> 2043</span>&#160;<span class="comment">/** Similar to svn_io_run_diff3_3(), but with @a diff3_cmd encoded in</span></div>
<div class="line"><a name="l02044"></a><span class="lineno"> 2044</span>&#160;<span class="comment"> * internal encoding used by APR.</span></div>
<div class="line"><a name="l02045"></a><span class="lineno"> 2045</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02046"></a><span class="lineno"> 2046</span>&#160;<span class="comment"> * @deprecated Provided for backwards compatibility with the 1.5 API.</span></div>
<div class="line"><a name="l02047"></a><span class="lineno"> 2047</span>&#160;<span class="comment"> * @since New in 1.4.</span></div>
<div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02049"></a><span class="lineno"> 2049</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l02050"></a><span class="lineno"> 2050</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02051"></a><span class="lineno"> 2051</span>&#160;<a class="code" href="svn__io_8h.html#a284650316c8ceefd30c4dae9aef49ec4">svn_io_run_diff3_2</a>(<span class="keywordtype">int</span> *exitcode,</div>
<div class="line"><a name="l02052"></a><span class="lineno"> 2052</span>&#160;                   const <span class="keywordtype">char</span> *dir,</div>
<div class="line"><a name="l02053"></a><span class="lineno"> 2053</span>&#160;                   const <span class="keywordtype">char</span> *mine,</div>
<div class="line"><a name="l02054"></a><span class="lineno"> 2054</span>&#160;                   const <span class="keywordtype">char</span> *older,</div>
<div class="line"><a name="l02055"></a><span class="lineno"> 2055</span>&#160;                   const <span class="keywordtype">char</span> *yours,</div>
<div class="line"><a name="l02056"></a><span class="lineno"> 2056</span>&#160;                   const <span class="keywordtype">char</span> *mine_label,</div>
<div class="line"><a name="l02057"></a><span class="lineno"> 2057</span>&#160;                   const <span class="keywordtype">char</span> *older_label,</div>
<div class="line"><a name="l02058"></a><span class="lineno"> 2058</span>&#160;                   const <span class="keywordtype">char</span> *yours_label,</div>
<div class="line"><a name="l02059"></a><span class="lineno"> 2059</span>&#160;                   apr_file_t *merged,</div>
<div class="line"><a name="l02060"></a><span class="lineno"> 2060</span>&#160;                   const <span class="keywordtype">char</span> *diff3_cmd,</div>
<div class="line"><a name="l02061"></a><span class="lineno"> 2061</span>&#160;                   const apr_array_header_t *user_args,</div>
<div class="line"><a name="l02062"></a><span class="lineno"> 2062</span>&#160;                   apr_pool_t *pool);</div>
<div class="line"><a name="l02063"></a><span class="lineno"> 2063</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02064"></a><span class="lineno"> 2064</span>&#160;<span class="comment">/** Similar to svn_io_run_diff3_2(), but with @a user_args set to @c NULL.</span></div>
<div class="line"><a name="l02065"></a><span class="lineno"> 2065</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02066"></a><span class="lineno"> 2066</span>&#160;<span class="comment"> * @deprecated Provided for backwards compatibility with the 1.3 API.</span></div>
<div class="line"><a name="l02067"></a><span class="lineno"> 2067</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02068"></a><span class="lineno"> 2068</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l02069"></a><span class="lineno"> 2069</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02070"></a><span class="lineno"> 2070</span>&#160;<a class="code" href="svn__io_8h.html#ae800def15e3ffc5e1645b296c4e7a1ca">svn_io_run_diff3</a>(const <span class="keywordtype">char</span> *dir,</div>
<div class="line"><a name="l02071"></a><span class="lineno"> 2071</span>&#160;                 const <span class="keywordtype">char</span> *mine,</div>
<div class="line"><a name="l02072"></a><span class="lineno"> 2072</span>&#160;                 const <span class="keywordtype">char</span> *older,</div>
<div class="line"><a name="l02073"></a><span class="lineno"> 2073</span>&#160;                 const <span class="keywordtype">char</span> *yours,</div>
<div class="line"><a name="l02074"></a><span class="lineno"> 2074</span>&#160;                 const <span class="keywordtype">char</span> *mine_label,</div>
<div class="line"><a name="l02075"></a><span class="lineno"> 2075</span>&#160;                 const <span class="keywordtype">char</span> *older_label,</div>
<div class="line"><a name="l02076"></a><span class="lineno"> 2076</span>&#160;                 const <span class="keywordtype">char</span> *yours_label,</div>
<div class="line"><a name="l02077"></a><span class="lineno"> 2077</span>&#160;                 apr_file_t *merged,</div>
<div class="line"><a name="l02078"></a><span class="lineno"> 2078</span>&#160;                 <span class="keywordtype">int</span> *exitcode,</div>
<div class="line"><a name="l02079"></a><span class="lineno"> 2079</span>&#160;                 const <span class="keywordtype">char</span> *diff3_cmd,</div>
<div class="line"><a name="l02080"></a><span class="lineno"> 2080</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l02081"></a><span class="lineno"> 2081</span>&#160;</div>
<div class="line"><a name="l02082"></a><span class="lineno"> 2082</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02083"></a><span class="lineno"> 2083</span>&#160;<span class="comment">/** Parse utf8-encoded @a mimetypes_file as a MIME types file (such as</span></div>
<div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;<span class="comment"> * is provided with Apache HTTP Server), and set @a *type_map to a</span></div>
<div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160;<span class="comment"> * hash mapping &lt;tt&gt;const char *&lt;/tt&gt; filename extensions to</span></div>
<div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;<span class="comment"> * &lt;tt&gt;const char *&lt;/tt&gt; MIME types.</span></div>
<div class="line"><a name="l02087"></a><span class="lineno"> 2087</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02088"></a><span class="lineno"> 2088</span>&#160;<span class="comment"> * @since New in 1.5.</span></div>
<div class="line"><a name="l02089"></a><span class="lineno"> 2089</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02090"></a><span class="lineno"> 2090</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02091"></a><span class="lineno"> 2091</span>&#160;<a class="code" href="svn__io_8h.html#ac4625a082416ccaafdd77e35e14ec4d4">svn_io_parse_mimetypes_file</a>(apr_hash_t **type_map,</div>
<div class="line"><a name="l02092"></a><span class="lineno"> 2092</span>&#160;                            const <span class="keywordtype">char</span> *mimetypes_file,</div>
<div class="line"><a name="l02093"></a><span class="lineno"> 2093</span>&#160;                            apr_pool_t *pool);</div>
<div class="line"><a name="l02094"></a><span class="lineno"> 2094</span>&#160;</div>
<div class="line"><a name="l02095"></a><span class="lineno"> 2095</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02096"></a><span class="lineno"> 2096</span>&#160;<span class="comment">/** Examine utf8-encoded @a file to determine if it can be described by a</span></div>
<div class="line"><a name="l02097"></a><span class="lineno"> 2097</span>&#160;<span class="comment"> * known (as in, known by this function) Multipurpose Internet Mail</span></div>
<div class="line"><a name="l02098"></a><span class="lineno"> 2098</span>&#160;<span class="comment"> * Extension (MIME) type.  If so, set @a *mimetype to a character string</span></div>
<div class="line"><a name="l02099"></a><span class="lineno"> 2099</span>&#160;<span class="comment"> * describing the MIME type, else set it to @c NULL.</span></div>
<div class="line"><a name="l02100"></a><span class="lineno"> 2100</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02101"></a><span class="lineno"> 2101</span>&#160;<span class="comment"> * If not @c NULL, @a mimetype_map is a hash mapping &lt;tt&gt;const char *&lt;/tt&gt;</span></div>
<div class="line"><a name="l02102"></a><span class="lineno"> 2102</span>&#160;<span class="comment"> * filename extensions to &lt;tt&gt;const char *&lt;/tt&gt; MIME types, and is the</span></div>
<div class="line"><a name="l02103"></a><span class="lineno"> 2103</span>&#160;<span class="comment"> * first source consulted regarding @a file&#39;s MIME type.</span></div>
<div class="line"><a name="l02104"></a><span class="lineno"> 2104</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02105"></a><span class="lineno"> 2105</span>&#160;<span class="comment"> * Use @a pool for any necessary allocations.</span></div>
<div class="line"><a name="l02106"></a><span class="lineno"> 2106</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02107"></a><span class="lineno"> 2107</span>&#160;<span class="comment"> * @since New in 1.5.</span></div>
<div class="line"><a name="l02108"></a><span class="lineno"> 2108</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02109"></a><span class="lineno"> 2109</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02110"></a><span class="lineno"> 2110</span>&#160;<a class="code" href="svn__io_8h.html#ac1989d5030f1445f2502258bf4901ab4">svn_io_detect_mimetype2</a>(const <span class="keywordtype">char</span> **mimetype,</div>
<div class="line"><a name="l02111"></a><span class="lineno"> 2111</span>&#160;                        const <span class="keywordtype">char</span> *file,</div>
<div class="line"><a name="l02112"></a><span class="lineno"> 2112</span>&#160;                        apr_hash_t *mimetype_map,</div>
<div class="line"><a name="l02113"></a><span class="lineno"> 2113</span>&#160;                        apr_pool_t *pool);</div>
<div class="line"><a name="l02114"></a><span class="lineno"> 2114</span>&#160;</div>
<div class="line"><a name="l02115"></a><span class="lineno"> 2115</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02116"></a><span class="lineno"> 2116</span>&#160;<span class="comment">/** Like svn_io_detect_mimetype2, but with @a mimetypes_map set to</span></div>
<div class="line"><a name="l02117"></a><span class="lineno"> 2117</span>&#160;<span class="comment"> * @c NULL.</span></div>
<div class="line"><a name="l02118"></a><span class="lineno"> 2118</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02119"></a><span class="lineno"> 2119</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API</span></div>
<div class="line"><a name="l02120"></a><span class="lineno"> 2120</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02121"></a><span class="lineno"> 2121</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l02122"></a><span class="lineno"> 2122</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02123"></a><span class="lineno"> 2123</span>&#160;<a class="code" href="svn__io_8h.html#ae1a5fef60e9dde8f5537e637e21d025a">svn_io_detect_mimetype</a>(const <span class="keywordtype">char</span> **mimetype,</div>
<div class="line"><a name="l02124"></a><span class="lineno"> 2124</span>&#160;                       const <span class="keywordtype">char</span> *file,</div>
<div class="line"><a name="l02125"></a><span class="lineno"> 2125</span>&#160;                       apr_pool_t *pool);</div>
<div class="line"><a name="l02126"></a><span class="lineno"> 2126</span>&#160;</div>
<div class="line"><a name="l02127"></a><span class="lineno"> 2127</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02128"></a><span class="lineno"> 2128</span>&#160;<span class="comment">/** Examine up to @a len bytes of data in @a buf to determine if the</span></div>
<div class="line"><a name="l02129"></a><span class="lineno"> 2129</span>&#160;<span class="comment"> * can be considered binary data, in which case return TRUE.</span></div>
<div class="line"><a name="l02130"></a><span class="lineno"> 2130</span>&#160;<span class="comment"> * If the data can be considered plain-text data, return FALSE.</span></div>
<div class="line"><a name="l02131"></a><span class="lineno"> 2131</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02132"></a><span class="lineno"> 2132</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l02133"></a><span class="lineno"> 2133</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02134"></a><span class="lineno"> 2134</span>&#160;<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a></div>
<div class="line"><a name="l02135"></a><span class="lineno"> 2135</span>&#160;<a class="code" href="svn__io_8h.html#a9dab9b761a5b9cae7c5610bcce781141">svn_io_is_binary_data</a>(const <span class="keywordtype">void</span> *buf, apr_size_t len);</div>
<div class="line"><a name="l02136"></a><span class="lineno"> 2136</span>&#160;</div>
<div class="line"><a name="l02137"></a><span class="lineno"> 2137</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02138"></a><span class="lineno"> 2138</span>&#160;<span class="comment">/** Wrapper for apr_file_open().  @a fname is utf8-encoded.</span></div>
<div class="line"><a name="l02139"></a><span class="lineno"> 2139</span>&#160;<span class="comment">    Always passed flag | APR_BINARY to apr. */</span></div>
<div class="line"><a name="l02140"></a><span class="lineno"> 2140</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02141"></a><span class="lineno"> 2141</span>&#160;<a class="code" href="svn__io_8h.html#aaafb0039d02ec4d4393c433c9430aa48">svn_io_file_open</a>(apr_file_t **new_file,</div>
<div class="line"><a name="l02142"></a><span class="lineno"> 2142</span>&#160;                 const <span class="keywordtype">char</span> *fname,</div>
<div class="line"><a name="l02143"></a><span class="lineno"> 2143</span>&#160;                 apr_int32_t flag,</div>
<div class="line"><a name="l02144"></a><span class="lineno"> 2144</span>&#160;                 apr_fileperms_t perm,</div>
<div class="line"><a name="l02145"></a><span class="lineno"> 2145</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l02146"></a><span class="lineno"> 2146</span>&#160;</div>
<div class="line"><a name="l02147"></a><span class="lineno"> 2147</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02148"></a><span class="lineno"> 2148</span>&#160;<span class="comment">/** Wrapper for apr_file_close(). */</span></div>
<div class="line"><a name="l02149"></a><span class="lineno"> 2149</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02150"></a><span class="lineno"> 2150</span>&#160;<a class="code" href="svn__io_8h.html#ac53b59ed0d20666286dcc001f1aed43c">svn_io_file_close</a>(apr_file_t *file,</div>
<div class="line"><a name="l02151"></a><span class="lineno"> 2151</span>&#160;                  apr_pool_t *pool);</div>
<div class="line"><a name="l02152"></a><span class="lineno"> 2152</span>&#160;</div>
<div class="line"><a name="l02153"></a><span class="lineno"> 2153</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02154"></a><span class="lineno"> 2154</span>&#160;<span class="comment">/** Wrapper for apr_file_getc(). */</span></div>
<div class="line"><a name="l02155"></a><span class="lineno"> 2155</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02156"></a><span class="lineno"> 2156</span>&#160;<a class="code" href="svn__io_8h.html#a13cf1ae46bf9a45d01db6cf59d787ecd">svn_io_file_getc</a>(<span class="keywordtype">char</span> *ch,</div>
<div class="line"><a name="l02157"></a><span class="lineno"> 2157</span>&#160;                 apr_file_t *file,</div>
<div class="line"><a name="l02158"></a><span class="lineno"> 2158</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l02159"></a><span class="lineno"> 2159</span>&#160;</div>
<div class="line"><a name="l02160"></a><span class="lineno"> 2160</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02161"></a><span class="lineno"> 2161</span>&#160;<span class="comment">/** Wrapper for apr_file_putc().</span></div>
<div class="line"><a name="l02162"></a><span class="lineno"> 2162</span>&#160;<span class="comment">  * @since New in 1.7</span></div>
<div class="line"><a name="l02163"></a><span class="lineno"> 2163</span>&#160;<span class="comment">  */</span></div>
<div class="line"><a name="l02164"></a><span class="lineno"> 2164</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02165"></a><span class="lineno"> 2165</span>&#160;<a class="code" href="svn__io_8h.html#a0e7664bd83efaa663977639c03da878d">svn_io_file_putc</a>(<span class="keywordtype">char</span> ch,</div>
<div class="line"><a name="l02166"></a><span class="lineno"> 2166</span>&#160;                 apr_file_t *file,</div>
<div class="line"><a name="l02167"></a><span class="lineno"> 2167</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l02168"></a><span class="lineno"> 2168</span>&#160;</div>
<div class="line"><a name="l02169"></a><span class="lineno"> 2169</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02170"></a><span class="lineno"> 2170</span>&#160;<span class="comment">/** Wrapper for apr_file_info_get(). */</span></div>
<div class="line"><a name="l02171"></a><span class="lineno"> 2171</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02172"></a><span class="lineno"> 2172</span>&#160;<a class="code" href="svn__io_8h.html#aa9b673694dfebc9fa7018f423b6459c3">svn_io_file_info_get</a>(apr_finfo_t *finfo,</div>
<div class="line"><a name="l02173"></a><span class="lineno"> 2173</span>&#160;                     apr_int32_t wanted,</div>
<div class="line"><a name="l02174"></a><span class="lineno"> 2174</span>&#160;                     apr_file_t *file,</div>
<div class="line"><a name="l02175"></a><span class="lineno"> 2175</span>&#160;                     apr_pool_t *pool);</div>
<div class="line"><a name="l02176"></a><span class="lineno"> 2176</span>&#160;</div>
<div class="line"><a name="l02177"></a><span class="lineno"> 2177</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02178"></a><span class="lineno"> 2178</span>&#160;<span class="comment">/** Wrapper for apr_file_read(). */</span></div>
<div class="line"><a name="l02179"></a><span class="lineno"> 2179</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02180"></a><span class="lineno"> 2180</span>&#160;<a class="code" href="svn__io_8h.html#a783e5b2a7198107666cba41642610919">svn_io_file_read</a>(apr_file_t *file,</div>
<div class="line"><a name="l02181"></a><span class="lineno"> 2181</span>&#160;                 <span class="keywordtype">void</span> *buf,</div>
<div class="line"><a name="l02182"></a><span class="lineno"> 2182</span>&#160;                 apr_size_t *nbytes,</div>
<div class="line"><a name="l02183"></a><span class="lineno"> 2183</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l02184"></a><span class="lineno"> 2184</span>&#160;</div>
<div class="line"><a name="l02185"></a><span class="lineno"> 2185</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02186"></a><span class="lineno"> 2186</span>&#160;<span class="comment">/** Wrapper for apr_file_read_full().</span></div>
<div class="line"><a name="l02187"></a><span class="lineno"> 2187</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02188"></a><span class="lineno"> 2188</span>&#160;<span class="comment"> * If @a hit_eof is not NULL, EOF will be indicated there and no</span></div>
<div class="line"><a name="l02189"></a><span class="lineno"> 2189</span>&#160;<span class="comment"> * svn_error_t error object will be created upon EOF.</span></div>
<div class="line"><a name="l02190"></a><span class="lineno"> 2190</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02191"></a><span class="lineno"> 2191</span>&#160;<span class="comment"> * @since New in 1.7</span></div>
<div class="line"><a name="l02192"></a><span class="lineno"> 2192</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02193"></a><span class="lineno"> 2193</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02194"></a><span class="lineno"> 2194</span>&#160;<a class="code" href="svn__io_8h.html#a1230fed18c27d237e6b1747bf1daeb57">svn_io_file_read_full2</a>(apr_file_t *file,</div>
<div class="line"><a name="l02195"></a><span class="lineno"> 2195</span>&#160;                       <span class="keywordtype">void</span> *buf,</div>
<div class="line"><a name="l02196"></a><span class="lineno"> 2196</span>&#160;                       apr_size_t nbytes,</div>
<div class="line"><a name="l02197"></a><span class="lineno"> 2197</span>&#160;                       apr_size_t *bytes_read,</div>
<div class="line"><a name="l02198"></a><span class="lineno"> 2198</span>&#160;                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *hit_eof,</div>
<div class="line"><a name="l02199"></a><span class="lineno"> 2199</span>&#160;                       apr_pool_t *pool);</div>
<div class="line"><a name="l02200"></a><span class="lineno"> 2200</span>&#160;</div>
<div class="line"><a name="l02201"></a><span class="lineno"> 2201</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02202"></a><span class="lineno"> 2202</span>&#160;<span class="comment">/** Similar to svn_io_file_read_full2 with hit_eof being set</span></div>
<div class="line"><a name="l02203"></a><span class="lineno"> 2203</span>&#160;<span class="comment"> * to @c NULL.</span></div>
<div class="line"><a name="l02204"></a><span class="lineno"> 2204</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02205"></a><span class="lineno"> 2205</span>&#160;<span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API</span></div>
<div class="line"><a name="l02206"></a><span class="lineno"> 2206</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02207"></a><span class="lineno"> 2207</span>&#160;<a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div>
<div class="line"><a name="l02208"></a><span class="lineno"> 2208</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02209"></a><span class="lineno"> 2209</span>&#160;<a class="code" href="svn__io_8h.html#a58487bc76681879193a9a067dd37b483">svn_io_file_read_full</a>(apr_file_t *file,</div>
<div class="line"><a name="l02210"></a><span class="lineno"> 2210</span>&#160;                      <span class="keywordtype">void</span> *buf,</div>
<div class="line"><a name="l02211"></a><span class="lineno"> 2211</span>&#160;                      apr_size_t nbytes,</div>
<div class="line"><a name="l02212"></a><span class="lineno"> 2212</span>&#160;                      apr_size_t *bytes_read,</div>
<div class="line"><a name="l02213"></a><span class="lineno"> 2213</span>&#160;                      apr_pool_t *pool);</div>
<div class="line"><a name="l02214"></a><span class="lineno"> 2214</span>&#160;</div>
<div class="line"><a name="l02215"></a><span class="lineno"> 2215</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02216"></a><span class="lineno"> 2216</span>&#160;<span class="comment">/** Wrapper for apr_file_seek(). */</span></div>
<div class="line"><a name="l02217"></a><span class="lineno"> 2217</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02218"></a><span class="lineno"> 2218</span>&#160;<a class="code" href="svn__io_8h.html#ab296b86da8b825399792d38f68e0e914">svn_io_file_seek</a>(apr_file_t *file,</div>
<div class="line"><a name="l02219"></a><span class="lineno"> 2219</span>&#160;                 apr_seek_where_t where,</div>
<div class="line"><a name="l02220"></a><span class="lineno"> 2220</span>&#160;                 apr_off_t *offset,</div>
<div class="line"><a name="l02221"></a><span class="lineno"> 2221</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l02222"></a><span class="lineno"> 2222</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02223"></a><span class="lineno"> 2223</span>&#160;<span class="comment">/** Set the file pointer of the #APR_BUFFERED @a file to @a offset.  In</span></div>
<div class="line"><a name="l02224"></a><span class="lineno"> 2224</span>&#160;<span class="comment"> * contrast to #svn_io_file_seek, this function will attempt to resize the</span></div>
<div class="line"><a name="l02225"></a><span class="lineno"> 2225</span>&#160;<span class="comment"> * internal data buffer to @a block_size bytes and to read data aligned to</span></div>
<div class="line"><a name="l02226"></a><span class="lineno"> 2226</span>&#160;<span class="comment"> * multiples of that value.  The beginning of the block will be returned</span></div>
<div class="line"><a name="l02227"></a><span class="lineno"> 2227</span>&#160;<span class="comment"> * in @a buffer_start, if that is not NULL.</span></div>
<div class="line"><a name="l02228"></a><span class="lineno"> 2228</span>&#160;<span class="comment"> * Uses @a scratch_pool for temporary allocations.</span></div>
<div class="line"><a name="l02229"></a><span class="lineno"> 2229</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02230"></a><span class="lineno"> 2230</span>&#160;<span class="comment"> * @note Due to limitations of the APR API, the alignment may not be</span></div>
<div class="line"><a name="l02231"></a><span class="lineno"> 2231</span>&#160;<span class="comment"> * successful.  If you never use any other seek function on @a file,</span></div>
<div class="line"><a name="l02232"></a><span class="lineno"> 2232</span>&#160;<span class="comment"> * however, you are virtually guaranteed to get at least 4kByte alignment</span></div>
<div class="line"><a name="l02233"></a><span class="lineno"> 2233</span>&#160;<span class="comment"> * for all reads.</span></div>
<div class="line"><a name="l02234"></a><span class="lineno"> 2234</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02235"></a><span class="lineno"> 2235</span>&#160;<span class="comment"> * @note Calling this for non-buffered files is legal but inefficient.</span></div>
<div class="line"><a name="l02236"></a><span class="lineno"> 2236</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02237"></a><span class="lineno"> 2237</span>&#160;<span class="comment"> * @since New in 1.9</span></div>
<div class="line"><a name="l02238"></a><span class="lineno"> 2238</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02239"></a><span class="lineno"> 2239</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02240"></a><span class="lineno"> 2240</span>&#160;<a class="code" href="svn__io_8h.html#a34796a32210e076a41c465564c5aef9e">svn_io_file_aligned_seek</a>(apr_file_t *file,</div>
<div class="line"><a name="l02241"></a><span class="lineno"> 2241</span>&#160;                         apr_off_t block_size,</div>
<div class="line"><a name="l02242"></a><span class="lineno"> 2242</span>&#160;                         apr_off_t *buffer_start,</div>
<div class="line"><a name="l02243"></a><span class="lineno"> 2243</span>&#160;                         apr_off_t offset,</div>
<div class="line"><a name="l02244"></a><span class="lineno"> 2244</span>&#160;                         apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l02245"></a><span class="lineno"> 2245</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02246"></a><span class="lineno"> 2246</span>&#160;<span class="comment">/** Wrapper for apr_file_write(). */</span></div>
<div class="line"><a name="l02247"></a><span class="lineno"> 2247</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02248"></a><span class="lineno"> 2248</span>&#160;<a class="code" href="svn__io_8h.html#a5a78c172c69437a05e32d3dff6f152d0">svn_io_file_write</a>(apr_file_t *file,</div>
<div class="line"><a name="l02249"></a><span class="lineno"> 2249</span>&#160;                  const <span class="keywordtype">void</span> *buf,</div>
<div class="line"><a name="l02250"></a><span class="lineno"> 2250</span>&#160;                  apr_size_t *nbytes,</div>
<div class="line"><a name="l02251"></a><span class="lineno"> 2251</span>&#160;                  apr_pool_t *pool);</div>
<div class="line"><a name="l02252"></a><span class="lineno"> 2252</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02253"></a><span class="lineno"> 2253</span>&#160;<span class="comment">/** Wrapper for apr_file_flush().</span></div>
<div class="line"><a name="l02254"></a><span class="lineno"> 2254</span>&#160;<span class="comment"> * @since New in 1.9</span></div>
<div class="line"><a name="l02255"></a><span class="lineno"> 2255</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02256"></a><span class="lineno"> 2256</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02257"></a><span class="lineno"> 2257</span>&#160;<a class="code" href="svn__io_8h.html#a2025c26deff364a6268a58818ce534a0">svn_io_file_flush</a>(apr_file_t *file,</div>
<div class="line"><a name="l02258"></a><span class="lineno"> 2258</span>&#160;                  apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l02259"></a><span class="lineno"> 2259</span>&#160;</div>
<div class="line"><a name="l02260"></a><span class="lineno"> 2260</span>&#160;</div>
<div class="line"><a name="l02261"></a><span class="lineno"> 2261</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02262"></a><span class="lineno"> 2262</span>&#160;<span class="comment">/** Wrapper for apr_file_write_full(). */</span></div>
<div class="line"><a name="l02263"></a><span class="lineno"> 2263</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02264"></a><span class="lineno"> 2264</span>&#160;<a class="code" href="svn__io_8h.html#a6789d12c70d0a2fefb539830183ee773">svn_io_file_write_full</a>(apr_file_t *file,</div>
<div class="line"><a name="l02265"></a><span class="lineno"> 2265</span>&#160;                       const <span class="keywordtype">void</span> *buf,</div>
<div class="line"><a name="l02266"></a><span class="lineno"> 2266</span>&#160;                       apr_size_t nbytes,</div>
<div class="line"><a name="l02267"></a><span class="lineno"> 2267</span>&#160;                       apr_size_t *bytes_written,</div>
<div class="line"><a name="l02268"></a><span class="lineno"> 2268</span>&#160;                       apr_pool_t *pool);</div>
<div class="line"><a name="l02269"></a><span class="lineno"> 2269</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02270"></a><span class="lineno"> 2270</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l02271"></a><span class="lineno"> 2271</span>&#160;<span class="comment"> * Writes @a nbytes bytes from @a *buf to a temporary file inside the same</span></div>
<div class="line"><a name="l02272"></a><span class="lineno"> 2272</span>&#160;<span class="comment"> * directory as @a *final_path. Then syncs the temporary file to disk and</span></div>
<div class="line"><a name="l02273"></a><span class="lineno"> 2273</span>&#160;<span class="comment"> * closes the file. After this rename the temporary file to @a final_path,</span></div>
<div class="line"><a name="l02274"></a><span class="lineno"> 2274</span>&#160;<span class="comment"> * possibly replacing an existing file.</span></div>
<div class="line"><a name="l02275"></a><span class="lineno"> 2275</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02276"></a><span class="lineno"> 2276</span>&#160;<span class="comment"> * If @a copy_perms_path is not NULL, copy the permissions applied on @a</span></div>
<div class="line"><a name="l02277"></a><span class="lineno"> 2277</span>&#160;<span class="comment"> * @a copy_perms_path on the temporary file before renaming.</span></div>
<div class="line"><a name="l02278"></a><span class="lineno"> 2278</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02279"></a><span class="lineno"> 2279</span>&#160;<span class="comment"> * @note This function uses advanced file control operations to flush buffers</span></div>
<div class="line"><a name="l02280"></a><span class="lineno"> 2280</span>&#160;<span class="comment"> * to disk that aren&#39;t always accessible and can be very expensive. Avoid</span></div>
<div class="line"><a name="l02281"></a><span class="lineno"> 2281</span>&#160;<span class="comment"> * using this function in cases where the file should just work on any</span></div>
<div class="line"><a name="l02282"></a><span class="lineno"> 2282</span>&#160;<span class="comment"> * network filesystem.</span></div>
<div class="line"><a name="l02283"></a><span class="lineno"> 2283</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02284"></a><span class="lineno"> 2284</span>&#160;<span class="comment"> * @since New in 1.9.</span></div>
<div class="line"><a name="l02285"></a><span class="lineno"> 2285</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02286"></a><span class="lineno"> 2286</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02287"></a><span class="lineno"> 2287</span>&#160;<a class="code" href="svn__io_8h.html#a953abf96ee32861fef6645c0317d4fc7">svn_io_write_atomic</a>(const <span class="keywordtype">char</span> *final_path,</div>
<div class="line"><a name="l02288"></a><span class="lineno"> 2288</span>&#160;                    const <span class="keywordtype">void</span> *buf,</div>
<div class="line"><a name="l02289"></a><span class="lineno"> 2289</span>&#160;                    apr_size_t nbytes,</div>
<div class="line"><a name="l02290"></a><span class="lineno"> 2290</span>&#160;                    const <span class="keywordtype">char</span>* copy_perms_path,</div>
<div class="line"><a name="l02291"></a><span class="lineno"> 2291</span>&#160;                    apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l02292"></a><span class="lineno"> 2292</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02293"></a><span class="lineno"> 2293</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l02294"></a><span class="lineno"> 2294</span>&#160;<span class="comment"> * Open a unique file in @a dirpath, and write @a nbytes from @a buf to</span></div>
<div class="line"><a name="l02295"></a><span class="lineno"> 2295</span>&#160;<span class="comment"> * the file before flushing it to disk and closing it.  Return the name</span></div>
<div class="line"><a name="l02296"></a><span class="lineno"> 2296</span>&#160;<span class="comment"> * of the newly created file in @a *tmp_path, allocated in @a pool.</span></div>
<div class="line"><a name="l02297"></a><span class="lineno"> 2297</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02298"></a><span class="lineno"> 2298</span>&#160;<span class="comment"> * If @a dirpath is @c NULL, use the path returned from svn_io_temp_dir().</span></div>
<div class="line"><a name="l02299"></a><span class="lineno"> 2299</span>&#160;<span class="comment"> * (Note that when using the system-provided temp directory, it may not</span></div>
<div class="line"><a name="l02300"></a><span class="lineno"> 2300</span>&#160;<span class="comment"> * be possible to atomically rename the resulting file due to cross-device</span></div>
<div class="line"><a name="l02301"></a><span class="lineno"> 2301</span>&#160;<span class="comment"> * issues.)</span></div>
<div class="line"><a name="l02302"></a><span class="lineno"> 2302</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02303"></a><span class="lineno"> 2303</span>&#160;<span class="comment"> * The file will be deleted according to @a delete_when.</span></div>
<div class="line"><a name="l02304"></a><span class="lineno"> 2304</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02305"></a><span class="lineno"> 2305</span>&#160;<span class="comment"> * @since New in 1.6.</span></div>
<div class="line"><a name="l02306"></a><span class="lineno"> 2306</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02307"></a><span class="lineno"> 2307</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02308"></a><span class="lineno"> 2308</span>&#160;<a class="code" href="svn__io_8h.html#aabcfef527a38cb25dde9f1e1565bf578">svn_io_write_unique</a>(const <span class="keywordtype">char</span> **tmp_path,</div>
<div class="line"><a name="l02309"></a><span class="lineno"> 2309</span>&#160;                    const <span class="keywordtype">char</span> *dirpath,</div>
<div class="line"><a name="l02310"></a><span class="lineno"> 2310</span>&#160;                    const <span class="keywordtype">void</span> *buf,</div>
<div class="line"><a name="l02311"></a><span class="lineno"> 2311</span>&#160;                    apr_size_t nbytes,</div>
<div class="line"><a name="l02312"></a><span class="lineno"> 2312</span>&#160;                    <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884">svn_io_file_del_t</a> delete_when,</div>
<div class="line"><a name="l02313"></a><span class="lineno"> 2313</span>&#160;                    apr_pool_t *pool);</div>
<div class="line"><a name="l02314"></a><span class="lineno"> 2314</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02315"></a><span class="lineno"> 2315</span>&#160;<span class="comment">/** Wrapper for apr_file_trunc().</span></div>
<div class="line"><a name="l02316"></a><span class="lineno"> 2316</span>&#160;<span class="comment">  * @since New in 1.6. */</span></div>
<div class="line"><a name="l02317"></a><span class="lineno"> 2317</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02318"></a><span class="lineno"> 2318</span>&#160;<a class="code" href="svn__io_8h.html#aee7ca5e75c04cd6f947d87199a0313f5">svn_io_file_trunc</a>(apr_file_t *file,</div>
<div class="line"><a name="l02319"></a><span class="lineno"> 2319</span>&#160;                  apr_off_t offset,</div>
<div class="line"><a name="l02320"></a><span class="lineno"> 2320</span>&#160;                  apr_pool_t *pool);</div>
<div class="line"><a name="l02321"></a><span class="lineno"> 2321</span>&#160;</div>
<div class="line"><a name="l02322"></a><span class="lineno"> 2322</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02323"></a><span class="lineno"> 2323</span>&#160;<span class="comment">/** Wrapper for apr_stat().  @a fname is utf8-encoded. */</span></div>
<div class="line"><a name="l02324"></a><span class="lineno"> 2324</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02325"></a><span class="lineno"> 2325</span>&#160;<a class="code" href="svn__io_8h.html#a8b3c8bc2bdde3a1a28eb402432e410e0">svn_io_stat</a>(apr_finfo_t *finfo,</div>
<div class="line"><a name="l02326"></a><span class="lineno"> 2326</span>&#160;            const <span class="keywordtype">char</span> *fname,</div>
<div class="line"><a name="l02327"></a><span class="lineno"> 2327</span>&#160;            apr_int32_t wanted,</div>
<div class="line"><a name="l02328"></a><span class="lineno"> 2328</span>&#160;            apr_pool_t *pool);</div>
<div class="line"><a name="l02329"></a><span class="lineno"> 2329</span>&#160;</div>
<div class="line"><a name="l02330"></a><span class="lineno"> 2330</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02331"></a><span class="lineno"> 2331</span>&#160;<span class="comment">/** Rename and/or move the node (not necessarily a regular file) at</span></div>
<div class="line"><a name="l02332"></a><span class="lineno"> 2332</span>&#160;<span class="comment"> * @a from_path to a new path @a to_path within the same filesystem.</span></div>
<div class="line"><a name="l02333"></a><span class="lineno"> 2333</span>&#160;<span class="comment"> * In some cases, an existing node at @a to_path will be overwritten.</span></div>
<div class="line"><a name="l02334"></a><span class="lineno"> 2334</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02335"></a><span class="lineno"> 2335</span>&#160;<span class="comment"> * A wrapper for apr_file_rename().  @a from_path and @a to_path are</span></div>
<div class="line"><a name="l02336"></a><span class="lineno"> 2336</span>&#160;<span class="comment"> * utf8-encoded.</span></div>
<div class="line"><a name="l02337"></a><span class="lineno"> 2337</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02338"></a><span class="lineno"> 2338</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02339"></a><span class="lineno"> 2339</span>&#160;<a class="code" href="svn__io_8h.html#a958d10520c3e99ddcbbf333eed40d86f">svn_io_file_rename</a>(const <span class="keywordtype">char</span> *from_path,</div>
<div class="line"><a name="l02340"></a><span class="lineno"> 2340</span>&#160;                   const <span class="keywordtype">char</span> *to_path,</div>
<div class="line"><a name="l02341"></a><span class="lineno"> 2341</span>&#160;                   apr_pool_t *pool);</div>
<div class="line"><a name="l02342"></a><span class="lineno"> 2342</span>&#160;</div>
<div class="line"><a name="l02343"></a><span class="lineno"> 2343</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02344"></a><span class="lineno"> 2344</span>&#160;<span class="comment">/** Move the file from @a from_path to @a to_path, even across device</span></div>
<div class="line"><a name="l02345"></a><span class="lineno"> 2345</span>&#160;<span class="comment"> * boundaries. Overwrite @a to_path if it exists.</span></div>
<div class="line"><a name="l02346"></a><span class="lineno"> 2346</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02347"></a><span class="lineno"> 2347</span>&#160;<span class="comment"> * @note This function is different from svn_io_file_rename in that the</span></div>
<div class="line"><a name="l02348"></a><span class="lineno"> 2348</span>&#160;<span class="comment"> * latter fails in the &#39;across device boundaries&#39; case.</span></div>
<div class="line"><a name="l02349"></a><span class="lineno"> 2349</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02350"></a><span class="lineno"> 2350</span>&#160;<span class="comment"> * @since New in 1.3.</span></div>
<div class="line"><a name="l02351"></a><span class="lineno"> 2351</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02352"></a><span class="lineno"> 2352</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02353"></a><span class="lineno"> 2353</span>&#160;<a class="code" href="svn__io_8h.html#a2e4247ed6ed8390f4f7d68a5dea3f0e6">svn_io_file_move</a>(const <span class="keywordtype">char</span> *from_path,</div>
<div class="line"><a name="l02354"></a><span class="lineno"> 2354</span>&#160;                 const <span class="keywordtype">char</span> *to_path,</div>
<div class="line"><a name="l02355"></a><span class="lineno"> 2355</span>&#160;                 apr_pool_t *pool);</div>
<div class="line"><a name="l02356"></a><span class="lineno"> 2356</span>&#160;</div>
<div class="line"><a name="l02357"></a><span class="lineno"> 2357</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02358"></a><span class="lineno"> 2358</span>&#160;<span class="comment">/** Wrapper for apr_dir_make().  @a path is utf8-encoded. */</span></div>
<div class="line"><a name="l02359"></a><span class="lineno"> 2359</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02360"></a><span class="lineno"> 2360</span>&#160;<a class="code" href="svn__io_8h.html#a108e7a96396aab7cacbf1e1c3ed5221f">svn_io_dir_make</a>(const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l02361"></a><span class="lineno"> 2361</span>&#160;                apr_fileperms_t perm,</div>
<div class="line"><a name="l02362"></a><span class="lineno"> 2362</span>&#160;                apr_pool_t *pool);</div>
<div class="line"><a name="l02363"></a><span class="lineno"> 2363</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02364"></a><span class="lineno"> 2364</span>&#160;<span class="comment">/** Same as svn_io_dir_make(), but sets the hidden attribute on the</span></div>
<div class="line"><a name="l02365"></a><span class="lineno"> 2365</span>&#160;<span class="comment">    directory on systems that support it. */</span></div>
<div class="line"><a name="l02366"></a><span class="lineno"> 2366</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02367"></a><span class="lineno"> 2367</span>&#160;<a class="code" href="svn__io_8h.html#a052b330df7626a534833e6329b33d753">svn_io_dir_make_hidden</a>(const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l02368"></a><span class="lineno"> 2368</span>&#160;                       apr_fileperms_t perm,</div>
<div class="line"><a name="l02369"></a><span class="lineno"> 2369</span>&#160;                       apr_pool_t *pool);</div>
<div class="line"><a name="l02370"></a><span class="lineno"> 2370</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02371"></a><span class="lineno"> 2371</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l02372"></a><span class="lineno"> 2372</span>&#160;<span class="comment"> * Same as svn_io_dir_make(), but attempts to set the sgid on the</span></div>
<div class="line"><a name="l02373"></a><span class="lineno"> 2373</span>&#160;<span class="comment"> * directory on systems that support it.  Does not return an error if</span></div>
<div class="line"><a name="l02374"></a><span class="lineno"> 2374</span>&#160;<span class="comment"> * the attempt to set the sgid bit fails.  On Unix filesystems,</span></div>
<div class="line"><a name="l02375"></a><span class="lineno"> 2375</span>&#160;<span class="comment"> * setting the sgid bit on a directory ensures that files and</span></div>
<div class="line"><a name="l02376"></a><span class="lineno"> 2376</span>&#160;<span class="comment"> * subdirectories created within inherit group ownership from the</span></div>
<div class="line"><a name="l02377"></a><span class="lineno"> 2377</span>&#160;<span class="comment"> * parent instead of from the primary gid.</span></div>
<div class="line"><a name="l02378"></a><span class="lineno"> 2378</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02379"></a><span class="lineno"> 2379</span>&#160;<span class="comment"> * @since New in 1.1.</span></div>
<div class="line"><a name="l02380"></a><span class="lineno"> 2380</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02381"></a><span class="lineno"> 2381</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02382"></a><span class="lineno"> 2382</span>&#160;<a class="code" href="svn__io_8h.html#a51baaf892b96c9893bbae4fa5e747495">svn_io_dir_make_sgid</a>(const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l02383"></a><span class="lineno"> 2383</span>&#160;                     apr_fileperms_t perm,</div>
<div class="line"><a name="l02384"></a><span class="lineno"> 2384</span>&#160;                     apr_pool_t *pool);</div>
<div class="line"><a name="l02385"></a><span class="lineno"> 2385</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02386"></a><span class="lineno"> 2386</span>&#160;<span class="comment">/** Wrapper for apr_dir_open().  @a dirname is utf8-encoded. */</span></div>
<div class="line"><a name="l02387"></a><span class="lineno"> 2387</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02388"></a><span class="lineno"> 2388</span>&#160;<a class="code" href="svn__io_8h.html#a946da2aa39f21a0f6099d2984620b2ff">svn_io_dir_open</a>(apr_dir_t **new_dir,</div>
<div class="line"><a name="l02389"></a><span class="lineno"> 2389</span>&#160;                const <span class="keywordtype">char</span> *dirname,</div>
<div class="line"><a name="l02390"></a><span class="lineno"> 2390</span>&#160;                apr_pool_t *pool);</div>
<div class="line"><a name="l02391"></a><span class="lineno"> 2391</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02392"></a><span class="lineno"> 2392</span>&#160;<span class="comment">/** Wrapper for apr_dir_close().</span></div>
<div class="line"><a name="l02393"></a><span class="lineno"> 2393</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02394"></a><span class="lineno"> 2394</span>&#160;<span class="comment"> * @since New in 1.7.</span></div>
<div class="line"><a name="l02395"></a><span class="lineno"> 2395</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02396"></a><span class="lineno"> 2396</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02397"></a><span class="lineno"> 2397</span>&#160;<a class="code" href="svn__io_8h.html#ad06c1a3586d8ca151683f163edbc238d">svn_io_dir_close</a>(apr_dir_t *thedir);</div>
<div class="line"><a name="l02398"></a><span class="lineno"> 2398</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02399"></a><span class="lineno"> 2399</span>&#160;<span class="comment">/** Wrapper for apr_dir_remove().  @a dirname is utf8-encoded.</span></div>
<div class="line"><a name="l02400"></a><span class="lineno"> 2400</span>&#160;<span class="comment"> * @note This function has this name to avoid confusion with</span></div>
<div class="line"><a name="l02401"></a><span class="lineno"> 2401</span>&#160;<span class="comment"> * svn_io_remove_dir2(), which is recursive.</span></div>
<div class="line"><a name="l02402"></a><span class="lineno"> 2402</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02403"></a><span class="lineno"> 2403</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02404"></a><span class="lineno"> 2404</span>&#160;<a class="code" href="svn__io_8h.html#a09827e5b0404fd70abc39a2193aecb26">svn_io_dir_remove_nonrecursive</a>(const <span class="keywordtype">char</span> *dirname,</div>
<div class="line"><a name="l02405"></a><span class="lineno"> 2405</span>&#160;                               apr_pool_t *pool);</div>
<div class="line"><a name="l02406"></a><span class="lineno"> 2406</span>&#160;</div>
<div class="line"><a name="l02407"></a><span class="lineno"> 2407</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02408"></a><span class="lineno"> 2408</span>&#160;<span class="comment">/** Wrapper for apr_dir_read().  Ensures that @a finfo-&gt;name is</span></div>
<div class="line"><a name="l02409"></a><span class="lineno"> 2409</span>&#160;<span class="comment"> * utf8-encoded, which means allocating @a finfo-&gt;name in @a pool,</span></div>
<div class="line"><a name="l02410"></a><span class="lineno"> 2410</span>&#160;<span class="comment"> * which may or may not be the same as @a finfo&#39;s pool.  Use @a pool</span></div>
<div class="line"><a name="l02411"></a><span class="lineno"> 2411</span>&#160;<span class="comment"> * for error allocation as well.</span></div>
<div class="line"><a name="l02412"></a><span class="lineno"> 2412</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02413"></a><span class="lineno"> 2413</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02414"></a><span class="lineno"> 2414</span>&#160;<a class="code" href="svn__io_8h.html#a83669c6c77f141089dcc20ef80453d4a">svn_io_dir_read</a>(apr_finfo_t *finfo,</div>
<div class="line"><a name="l02415"></a><span class="lineno"> 2415</span>&#160;                apr_int32_t wanted,</div>
<div class="line"><a name="l02416"></a><span class="lineno"> 2416</span>&#160;                apr_dir_t *thedir,</div>
<div class="line"><a name="l02417"></a><span class="lineno"> 2417</span>&#160;                apr_pool_t *pool);</div>
<div class="line"><a name="l02418"></a><span class="lineno"> 2418</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02419"></a><span class="lineno"> 2419</span>&#160;<span class="comment">/** Wrapper for apr_file_name_get().  @a *filename is utf8-encoded.</span></div>
<div class="line"><a name="l02420"></a><span class="lineno"> 2420</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02421"></a><span class="lineno"> 2421</span>&#160;<span class="comment"> * @note The file name may be NULL.</span></div>
<div class="line"><a name="l02422"></a><span class="lineno"> 2422</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02423"></a><span class="lineno"> 2423</span>&#160;<span class="comment"> * @since New in 1.7. */</span></div>
<div class="line"><a name="l02424"></a><span class="lineno"> 2424</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02425"></a><span class="lineno"> 2425</span>&#160;<a class="code" href="svn__io_8h.html#acbcb8bfd6df6bbf9c35361b0f17f0ea7">svn_io_file_name_get</a>(const <span class="keywordtype">char</span> **filename,</div>
<div class="line"><a name="l02426"></a><span class="lineno"> 2426</span>&#160;                     apr_file_t *file,</div>
<div class="line"><a name="l02427"></a><span class="lineno"> 2427</span>&#160;                     apr_pool_t *pool);</div>
<div class="line"><a name="l02428"></a><span class="lineno"> 2428</span>&#160;</div>
<div class="line"><a name="l02429"></a><span class="lineno"> 2429</span>&#160;</div>
<div class="line"><a name="l02430"></a><span class="lineno"> 2430</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02431"></a><span class="lineno"> 2431</span>&#160;<span class="comment">/** Version/format files.</span></div>
<div class="line"><a name="l02432"></a><span class="lineno"> 2432</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02433"></a><span class="lineno"> 2433</span>&#160;<span class="comment"> * @defgroup svn_io_format_files Version/format files</span></div>
<div class="line"><a name="l02434"></a><span class="lineno"> 2434</span>&#160;<span class="comment"> * @{</span></div>
<div class="line"><a name="l02435"></a><span class="lineno"> 2435</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02436"></a><span class="lineno"> 2436</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02437"></a><span class="lineno"> 2437</span>&#160;<span class="comment">/** Set @a *version to the integer that starts the file at @a path.  If the</span></div>
<div class="line"><a name="l02438"></a><span class="lineno"> 2438</span>&#160;<span class="comment"> * file does not begin with a series of digits followed by a newline,</span></div>
<div class="line"><a name="l02439"></a><span class="lineno"> 2439</span>&#160;<span class="comment"> * return the error #SVN_ERR_BAD_VERSION_FILE_FORMAT.  Use @a pool for</span></div>
<div class="line"><a name="l02440"></a><span class="lineno"> 2440</span>&#160;<span class="comment"> * all allocations.</span></div>
<div class="line"><a name="l02441"></a><span class="lineno"> 2441</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02442"></a><span class="lineno"> 2442</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02443"></a><span class="lineno"> 2443</span>&#160;<a class="code" href="group__svn__io__format__files.html#ga80f0a4330380bafb4cd65e09151f411b">svn_io_read_version_file</a>(<span class="keywordtype">int</span> *version,</div>
<div class="line"><a name="l02444"></a><span class="lineno"> 2444</span>&#160;                         const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l02445"></a><span class="lineno"> 2445</span>&#160;                         apr_pool_t *pool);</div>
<div class="line"><a name="l02446"></a><span class="lineno"> 2446</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02447"></a><span class="lineno"> 2447</span>&#160;<span class="comment">/** Create (or overwrite) the file at @a path with new contents,</span></div>
<div class="line"><a name="l02448"></a><span class="lineno"> 2448</span>&#160;<span class="comment"> * formatted as a non-negative integer @a version followed by a single</span></div>
<div class="line"><a name="l02449"></a><span class="lineno"> 2449</span>&#160;<span class="comment"> * newline.  On successful completion the file will be read-only.  Use</span></div>
<div class="line"><a name="l02450"></a><span class="lineno"> 2450</span>&#160;<span class="comment"> * @a pool for all allocations.</span></div>
<div class="line"><a name="l02451"></a><span class="lineno"> 2451</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02452"></a><span class="lineno"> 2452</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02453"></a><span class="lineno"> 2453</span>&#160;<a class="code" href="group__svn__io__format__files.html#ga29aa0631f0facde88398ad50d9411aca">svn_io_write_version_file</a>(const <span class="keywordtype">char</span> *path,</div>
<div class="line"><a name="l02454"></a><span class="lineno"> 2454</span>&#160;                          <span class="keywordtype">int</span> version,</div>
<div class="line"><a name="l02455"></a><span class="lineno"> 2455</span>&#160;                          apr_pool_t *pool);</div>
<div class="line"><a name="l02456"></a><span class="lineno"> 2456</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02457"></a><span class="lineno"> 2457</span>&#160;<span class="comment">/** Read a line of text from a file, up to a specified length.</span></div>
<div class="line"><a name="l02458"></a><span class="lineno"> 2458</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02459"></a><span class="lineno"> 2459</span>&#160;<span class="comment"> * Allocate @a *stringbuf in @a result_pool, and read into it one line</span></div>
<div class="line"><a name="l02460"></a><span class="lineno"> 2460</span>&#160;<span class="comment"> * from @a file. Reading stops either after a line-terminator was found</span></div>
<div class="line"><a name="l02461"></a><span class="lineno"> 2461</span>&#160;<span class="comment"> * or after @a max_len bytes have been read.</span></div>
<div class="line"><a name="l02462"></a><span class="lineno"> 2462</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02463"></a><span class="lineno"> 2463</span>&#160;<span class="comment"> * If end-of-file is reached or @a max_len bytes have been read, and @a eof</span></div>
<div class="line"><a name="l02464"></a><span class="lineno"> 2464</span>&#160;<span class="comment"> * is not NULL, then set @a *eof to @c TRUE.</span></div>
<div class="line"><a name="l02465"></a><span class="lineno"> 2465</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02466"></a><span class="lineno"> 2466</span>&#160;<span class="comment"> * The line-terminator is not stored in @a *stringbuf.</span></div>
<div class="line"><a name="l02467"></a><span class="lineno"> 2467</span>&#160;<span class="comment"> * The line-terminator is detected automatically and stored in @a *eol</span></div>
<div class="line"><a name="l02468"></a><span class="lineno"> 2468</span>&#160;<span class="comment"> * if @a eol is not NULL. If EOF is reached and @a file does not end</span></div>
<div class="line"><a name="l02469"></a><span class="lineno"> 2469</span>&#160;<span class="comment"> * with a newline character, and @a eol is not NULL, @ *eol is set to NULL.</span></div>
<div class="line"><a name="l02470"></a><span class="lineno"> 2470</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02471"></a><span class="lineno"> 2471</span>&#160;<span class="comment"> * @a scratch_pool is used for temporary allocations.</span></div>
<div class="line"><a name="l02472"></a><span class="lineno"> 2472</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02473"></a><span class="lineno"> 2473</span>&#160;<span class="comment"> * Hint: To read all data until a line-terminator is hit, pass APR_SIZE_MAX</span></div>
<div class="line"><a name="l02474"></a><span class="lineno"> 2474</span>&#160;<span class="comment"> * for @a max_len.</span></div>
<div class="line"><a name="l02475"></a><span class="lineno"> 2475</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l02476"></a><span class="lineno"> 2476</span>&#160;<span class="comment"> * @since New in 1.8.</span></div>
<div class="line"><a name="l02477"></a><span class="lineno"> 2477</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l02478"></a><span class="lineno"> 2478</span>&#160;<a class="code" href="structsvn__error__t.html">svn_error_t</a> *</div>
<div class="line"><a name="l02479"></a><span class="lineno"> 2479</span>&#160;<a class="code" href="group__svn__io__format__files.html#ga2f23ddf4728df59584e14a67802654b3">svn_io_file_readline</a>(apr_file_t *file,</div>
<div class="line"><a name="l02480"></a><span class="lineno"> 2480</span>&#160;                     <a class="code" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> **stringbuf,</div>
<div class="line"><a name="l02481"></a><span class="lineno"> 2481</span>&#160;                     const <span class="keywordtype">char</span> **eol,</div>
<div class="line"><a name="l02482"></a><span class="lineno"> 2482</span>&#160;                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> *eof,</div>
<div class="line"><a name="l02483"></a><span class="lineno"> 2483</span>&#160;                     apr_size_t max_len,</div>
<div class="line"><a name="l02484"></a><span class="lineno"> 2484</span>&#160;                     apr_pool_t *result_pool,</div>
<div class="line"><a name="l02485"></a><span class="lineno"> 2485</span>&#160;                     apr_pool_t *scratch_pool);</div>
<div class="line"><a name="l02486"></a><span class="lineno"> 2486</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l02487"></a><span class="lineno"> 2487</span>&#160;<span class="comment">/** @} */</span></div>
<div class="line"><a name="l02488"></a><span class="lineno"> 2488</span>&#160;</div>
<div class="line"><a name="l02489"></a><span class="lineno"> 2489</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a name="l02490"></a><span class="lineno"> 2490</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l02491"></a><span class="lineno"> 2491</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l02492"></a><span class="lineno"> 2492</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l02493"></a><span class="lineno"> 2493</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* SVN_IO_H */</span><span class="preprocessor"></span></div>
<div class="ttc" id="svn__string_8h_html"><div class="ttname"><a href="svn__string_8h.html">svn_string.h</a></div><div class="ttdoc">Counted-length strings for Subversion, plus some C string goodies. </div></div>
<div class="ttc" id="svn__io_8h_html_ab296b86da8b825399792d38f68e0e914"><div class="ttname"><a href="svn__io_8h.html#ab296b86da8b825399792d38f68e0e914">svn_io_file_seek</a></div><div class="ttdeci">svn_error_t * svn_io_file_seek(apr_file_t *file, apr_seek_where_t where, apr_off_t *offset, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_seek(). </div></div>
<div class="ttc" id="svn__io_8h_html_a0f8fdad8dc4fe854ef5b9971f8ab043e"><div class="ttname"><a href="svn__io_8h.html#a0f8fdad8dc4fe854ef5b9971f8ab043e">svn_io_check_special_path</a></div><div class="ttdeci">svn_error_t * svn_io_check_special_path(const char *path, svn_node_kind_t *kind, svn_boolean_t *is_special, apr_pool_t *pool)</div><div class="ttdoc">Like svn_io_check_path(), but also set *is_special to TRUE if the path is not a normal file...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga524596d97d805d6f66c1d0247a5ab88b"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga524596d97d805d6f66c1d0247a5ab88b">svn_stringbuf_from_stream</a></div><div class="ttdeci">svn_error_t * svn_stringbuf_from_stream(svn_stringbuf_t **str, svn_stream_t *stream, apr_size_t len_hint, apr_pool_t *result_pool)</div><div class="ttdoc">Set *str to a string buffer allocated in result_pool that contains all data from the current position...</div></div>
<div class="ttc" id="svn__io_8h_html_a8c4c5176e73bd452ad321097e85b20bb"><div class="ttname"><a href="svn__io_8h.html#a8c4c5176e73bd452ad321097e85b20bb">svn_io_file_create_bytes</a></div><div class="ttdeci">svn_error_t * svn_io_file_create_bytes(const char *file, const void *contents, apr_size_t length, apr_pool_t *scratch_pool)</div><div class="ttdoc">Create a file at utf8-encoded path file with the contents given by contents of length bytes...</div></div>
<div class="ttc" id="svn__io_8h_html_aee7ca5e75c04cd6f947d87199a0313f5"><div class="ttname"><a href="svn__io_8h.html#aee7ca5e75c04cd6f947d87199a0313f5">svn_io_file_trunc</a></div><div class="ttdeci">svn_error_t * svn_io_file_trunc(apr_file_t *file, apr_off_t offset, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_trunc(). </div></div>
<div class="ttc" id="svn__io_8h_html_a1230fed18c27d237e6b1747bf1daeb57"><div class="ttname"><a href="svn__io_8h.html#a1230fed18c27d237e6b1747bf1daeb57">svn_io_file_read_full2</a></div><div class="ttdeci">svn_error_t * svn_io_file_read_full2(apr_file_t *file, void *buf, apr_size_t nbytes, apr_size_t *bytes_read, svn_boolean_t *hit_eof, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_read_full(). </div></div>
<div class="ttc" id="svn__io_8h_html_aaafb0039d02ec4d4393c433c9430aa48"><div class="ttname"><a href="svn__io_8h.html#aaafb0039d02ec4d4393c433c9430aa48">svn_io_file_open</a></div><div class="ttdeci">svn_error_t * svn_io_file_open(apr_file_t **new_file, const char *fname, apr_int32_t flag, apr_fileperms_t perm, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_open(). </div></div>
<div class="ttc" id="svn__io_8h_html_a185f4ee690965e622aa1748339847ae5"><div class="ttname"><a href="svn__io_8h.html#a185f4ee690965e622aa1748339847ae5">svn_io_set_file_read_only</a></div><div class="ttdeci">svn_error_t * svn_io_set_file_read_only(const char *path, svn_boolean_t ignore_enoent, apr_pool_t *pool)</div><div class="ttdoc">Make a file as read-only as the operating system allows. </div></div>
<div class="ttc" id="svn__io_8h_html_af9f5d05db9c9a8f513615e4ec2caf5b2"><div class="ttname"><a href="svn__io_8h.html#af9f5d05db9c9a8f513615e4ec2caf5b2">svn_io_dirent_t</a></div><div class="ttdeci">struct svn_io_dirent_t svn_io_dirent_t</div><div class="ttdoc">Represents the kind and special status of a directory entry. </div></div>
<div class="ttc" id="svn__checksum_8h_html_a7a6c373d03d7e6ec6b832a039f5e0aa1"><div class="ttname"><a href="svn__checksum_8h.html#a7a6c373d03d7e6ec6b832a039f5e0aa1">svn_checksum_kind_t</a></div><div class="ttdeci">svn_checksum_kind_t</div><div class="ttdoc">Various types of checksums. </div><div class="ttdef"><b>Definition:</b> <a href="svn__checksum_8h_source.html#l00045">svn_checksum.h:45</a></div></div>
<div class="ttc" id="svn__io_8h_html_a34796a32210e076a41c465564c5aef9e"><div class="ttname"><a href="svn__io_8h.html#a34796a32210e076a41c465564c5aef9e">svn_io_file_aligned_seek</a></div><div class="ttdeci">svn_error_t * svn_io_file_aligned_seek(apr_file_t *file, apr_off_t block_size, apr_off_t *buffer_start, apr_off_t offset, apr_pool_t *scratch_pool)</div><div class="ttdoc">Set the file pointer of the #APR_BUFFERED file to offset. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga47c17fbf09effd084d6b426d18175942"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga47c17fbf09effd084d6b426d18175942">svn_stream_mark</a></div><div class="ttdeci">svn_error_t * svn_stream_mark(svn_stream_t *stream, svn_stream_mark_t **mark, apr_pool_t *pool)</div><div class="ttdoc">Set a mark at the current position of a generic stream, which can later be sought back to using svn_s...</div></div>
<div class="ttc" id="svn__io_8h_html_ac53b59ed0d20666286dcc001f1aed43c"><div class="ttname"><a href="svn__io_8h.html#ac53b59ed0d20666286dcc001f1aed43c">svn_io_file_close</a></div><div class="ttdeci">svn_error_t * svn_io_file_close(apr_file_t *file, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_close(). </div></div>
<div class="ttc" id="svn__io_8h_html_abce28e789f76b15917b28b157d54dcfb"><div class="ttname"><a href="svn__io_8h.html#abce28e789f76b15917b28b157d54dcfb">svn_io_remove_file</a></div><div class="ttdeci">svn_error_t * svn_io_remove_file(const char *path, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_remove_file2(), except with ignore_enoent set to FALSE. </div></div>
<div class="ttc" id="svn__io_8h_html_acabda4f4f591bec06ece8e35829a79f4"><div class="ttname"><a href="svn__io_8h.html#acabda4f4f591bec06ece8e35829a79f4">svn_io_run_diff2</a></div><div class="ttdeci">svn_error_t * svn_io_run_diff2(const char *dir, const char *const *user_args, int num_user_args, const char *label1, const char *label2, const char *from, const char *to, int *exitcode, apr_file_t *outfile, apr_file_t *errfile, const char *diff_cmd, apr_pool_t *pool)</div><div class="ttdoc">Invoke the configured diff program, with user_args (an array of utf8-encoded num_user_args arguments)...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga8d37c4569b583fd76dde630be6ed68f7"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga8d37c4569b583fd76dde630be6ed68f7">svn_stream_buffered</a></div><div class="ttdeci">svn_stream_t * svn_stream_buffered(apr_pool_t *result_pool)</div><div class="ttdoc">Return a generic stream which implements buffered reads and writes. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga241e8929f8f7631a629142bd749b25fc"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga241e8929f8f7631a629142bd749b25fc">svn_stream_read</a></div><div class="ttdeci">svn_error_t * svn_stream_read(svn_stream_t *stream, char *buffer, apr_size_t *len)</div><div class="ttdoc">Read from a generic stream until the buffer is completely filled or EOF. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga444db383401ed714a240ff6ca5ca76b3"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga444db383401ed714a240ff6ca5ca76b3">svn_stream_copy</a></div><div class="ttdeci">svn_error_t * svn_stream_copy(svn_stream_t *from, svn_stream_t *to, apr_pool_t *pool)</div><div class="ttdoc">Same as svn_stream_copy3(), but without the cancellation function or stream closing. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga96e94eff159f85a3c8c6b7936e5c908d"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga96e94eff159f85a3c8c6b7936e5c908d">svn_stream_set_seek</a></div><div class="ttdeci">void svn_stream_set_seek(svn_stream_t *stream, svn_stream_seek_fn_t seek_fn)</div><div class="ttdoc">Set stream&amp;#39;s seek function to seek_fn. </div></div>
<div class="ttc" id="svn__io_8h_html_a1c80cac675b5711e2c2c3e4aa6b4fbb1"><div class="ttname"><a href="svn__io_8h.html#a1c80cac675b5711e2c2c3e4aa6b4fbb1">svn_io_copy_perms</a></div><div class="ttdeci">svn_error_t * svn_io_copy_perms(const char *src, const char *dst, apr_pool_t *pool)</div><div class="ttdoc">Copy permission flags from src onto the file at dst. </div></div>
<div class="ttc" id="svn__io_8h_html_a31ee1827a2b62a2f4a122ef18e378b05"><div class="ttname"><a href="svn__io_8h.html#a31ee1827a2b62a2f4a122ef18e378b05">svn_io_check_path</a></div><div class="ttdeci">svn_error_t * svn_io_check_path(const char *path, svn_node_kind_t *kind, apr_pool_t *pool)</div><div class="ttdoc">Determine the kind of path. </div></div>
<div class="ttc" id="svn__io_8h_html_a1738477996c854ac51fbd77cccaddfb5"><div class="ttname"><a href="svn__io_8h.html#a1738477996c854ac51fbd77cccaddfb5">svn_io_file_flush_to_disk</a></div><div class="ttdeci">svn_error_t * svn_io_file_flush_to_disk(apr_file_t *file, apr_pool_t *pool)</div><div class="ttdoc">Flush any unwritten data from file to disk. </div></div>
<div class="ttc" id="svn__checksum_8h_html"><div class="ttname"><a href="svn__checksum_8h.html">svn_checksum.h</a></div><div class="ttdoc">Subversion checksum routines. </div></div>
<div class="ttc" id="structsvn__io__dirent2__t_html_a42fe5c38e86515c4d56627764c2b0cb7"><div class="ttname"><a href="structsvn__io__dirent2__t.html#a42fe5c38e86515c4d56627764c2b0cb7">svn_io_dirent2_t::special</a></div><div class="ttdeci">svn_boolean_t special</div><div class="ttdoc">If kind is svn_node_file, whether this entry is a special file; else FALSE. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00089">svn_io.h:89</a></div></div>
<div class="ttc" id="svn__io_8h_html_ac407a16bc12b63d2e57a3e2375490ad5"><div class="ttname"><a href="svn__io_8h.html#ac407a16bc12b63d2e57a3e2375490ad5">svn_io_set_file_read_write</a></div><div class="ttdeci">svn_error_t * svn_io_set_file_read_write(const char *path, svn_boolean_t ignore_enoent, apr_pool_t *pool)</div><div class="ttdoc">Make a file as writable as the operating system allows. </div></div>
<div class="ttc" id="svn__io_8h_html_a0e7664bd83efaa663977639c03da878d"><div class="ttname"><a href="svn__io_8h.html#a0e7664bd83efaa663977639c03da878d">svn_io_file_putc</a></div><div class="ttdeci">svn_error_t * svn_io_file_putc(char ch, apr_file_t *file, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_putc(). </div></div>
<div class="ttc" id="svn__io_8h_html_a759d9be046832ba2e1f8d5408a7023d1"><div class="ttname"><a href="svn__io_8h.html#a759d9be046832ba2e1f8d5408a7023d1">svn_io_filesizes_different_p</a></div><div class="ttdeci">svn_error_t * svn_io_filesizes_different_p(svn_boolean_t *different_p, const char *file1, const char *file2, apr_pool_t *pool)</div><div class="ttdoc">Set *different_p to TRUE if file1 and file2 have different sizes, else set to FALSE. </div></div>
<div class="ttc" id="svn__io_8h_html_aa78fffc81af962281813070c753d7884"><div class="ttname"><a href="svn__io_8h.html#aa78fffc81af962281813070c753d7884">svn_io_file_del_t</a></div><div class="ttdeci">svn_io_file_del_t</div><div class="ttdoc">Used as an argument when creating temporary files to indicate when a file should be removed...</div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00058">svn_io.h:58</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga1d693ef9f905968c96895e82cfcfaf66"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga1d693ef9f905968c96895e82cfcfaf66">svn_stream_supports_partial_read</a></div><div class="ttdeci">svn_boolean_t svn_stream_supports_partial_read(svn_stream_t *stream)</div><div class="ttdoc">Returns TRUE if the generic stream supports svn_stream_read2(). </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga8665c4828daad13a35fd7e670552d888"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga8665c4828daad13a35fd7e670552d888">svn_stream_printf</a></div><div class="ttdeci">svn_error_t * svn_stream_printf(svn_stream_t *stream, apr_pool_t *pool, const char *fmt,...)</div><div class="ttdoc">Write to stream using a printf-style fmt specifier, passed through apr_psprintf() using memory from p...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gacdce9efd65576fafecb4df5fd2960d13"><div class="ttname"><a href="group__svn__io__byte__streams.html#gacdce9efd65576fafecb4df5fd2960d13">svn_stream_set_mark</a></div><div class="ttdeci">void svn_stream_set_mark(svn_stream_t *stream, svn_stream_mark_fn_t mark_fn)</div><div class="ttdoc">Set stream&amp;#39;s mark function to mark_fn. </div></div>
<div class="ttc" id="structsvn__io__dirent__t_html"><div class="ttname"><a href="structsvn__io__dirent__t.html">svn_io_dirent_t</a></div><div class="ttdoc">Represents the kind and special status of a directory entry. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00123">svn_io.h:123</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga823456ae87bbacf8b7022e8ea4c0d356"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga823456ae87bbacf8b7022e8ea4c0d356">svn_stream_checksummed2</a></div><div class="ttdeci">svn_stream_t * svn_stream_checksummed2(svn_stream_t *stream, svn_checksum_t **read_checksum, svn_checksum_t **write_checksum, svn_checksum_kind_t checksum_kind, svn_boolean_t read_all, apr_pool_t *pool)</div><div class="ttdoc">Return a stream that calculates checksums for all data read and written. </div></div>
<div class="ttc" id="svn__io_8h_html_a6f4ed09498f32ac633b3f880b92c9c42"><div class="ttname"><a href="svn__io_8h.html#a6f4ed09498f32ac633b3f880b92c9c42">svn_io_files_contents_three_same_p</a></div><div class="ttdeci">svn_error_t * svn_io_files_contents_three_same_p(svn_boolean_t *same12, svn_boolean_t *same23, svn_boolean_t *same13, const char *file1, const char *file2, const char *file3, apr_pool_t *scratch_pool)</div><div class="ttdoc">Set *same12 to TRUE if file1 and file2 have the same contents, else set it to FALSE. </div></div>
<div class="ttc" id="svn__io_8h_html_aa9bee2a2151cc7c57e9a01003dc6d2b6"><div class="ttname"><a href="svn__io_8h.html#aa9bee2a2151cc7c57e9a01003dc6d2b6">svn_io_file_checksum2</a></div><div class="ttdeci">svn_error_t * svn_io_file_checksum2(svn_checksum_t **checksum, const char *file, svn_checksum_kind_t kind, apr_pool_t *pool)</div><div class="ttdoc">Return in *checksum the checksum of type kind of file Use pool for temporary allocations and to alloc...</div></div>
<div class="ttc" id="svn__io_8h_html_a98ada015dbb0b5d467375edba000dd4b"><div class="ttname"><a href="svn__io_8h.html#a98ada015dbb0b5d467375edba000dd4b">svn_io_file_lock</a></div><div class="ttdeci">svn_error_t * svn_io_file_lock(const char *lock_file, svn_boolean_t exclusive, apr_pool_t *pool)</div><div class="ttdoc">Lock file at lock_file. </div></div>
<div class="ttc" id="svn__io_8h_html_a09827e5b0404fd70abc39a2193aecb26"><div class="ttname"><a href="svn__io_8h.html#a09827e5b0404fd70abc39a2193aecb26">svn_io_dir_remove_nonrecursive</a></div><div class="ttdeci">svn_error_t * svn_io_dir_remove_nonrecursive(const char *dirname, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_dir_remove(). </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga61c69116290c1f5e5fedd91ed7bed5ca"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga61c69116290c1f5e5fedd91ed7bed5ca">svn_stream_disown</a></div><div class="ttdeci">svn_stream_t * svn_stream_disown(svn_stream_t *stream, apr_pool_t *pool)</div><div class="ttdoc">Return a stream allocated in pool which forwards all requests to stream. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gacfb10864df6c3a6fd6e5fc08ae8ef7e8"><div class="ttname"><a href="group__svn__io__byte__streams.html#gacfb10864df6c3a6fd6e5fc08ae8ef7e8">svn_stream_printf_from_utf8</a></div><div class="ttdeci">svn_error_t * svn_stream_printf_from_utf8(svn_stream_t *stream, const char *encoding, apr_pool_t *pool, const char *fmt,...)</div><div class="ttdoc">Write to stream using a printf-style fmt specifier, passed through apr_psprintf() using memory from p...</div></div>
<div class="ttc" id="svn__io_8h_html_a7cf56b512d7aa14d5330d8b30eec6189"><div class="ttname"><a href="svn__io_8h.html#a7cf56b512d7aa14d5330d8b30eec6189">svn_io_get_dirents3</a></div><div class="ttdeci">svn_error_t * svn_io_get_dirents3(apr_hash_t **dirents, const char *path, svn_boolean_t only_check_type, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">Read all of the disk entries in directory path, a utf8-encoded path. </div></div>
<div class="ttc" id="svn__io_8h_html_ac1989d5030f1445f2502258bf4901ab4"><div class="ttname"><a href="svn__io_8h.html#ac1989d5030f1445f2502258bf4901ab4">svn_io_detect_mimetype2</a></div><div class="ttdeci">svn_error_t * svn_io_detect_mimetype2(const char **mimetype, const char *file, apr_hash_t *mimetype_map, apr_pool_t *pool)</div><div class="ttdoc">Examine utf8-encoded file to determine if it can be described by a known (as in, known by this functi...</div></div>
<div class="ttc" id="svn__io_8h_html_a9a26dab3678b7ee9c8ebdb8e1d60aedc"><div class="ttname"><a href="svn__io_8h.html#a9a26dab3678b7ee9c8ebdb8e1d60aedc">svn_io_remove_dir2</a></div><div class="ttdeci">svn_error_t * svn_io_remove_dir2(const char *path, svn_boolean_t ignore_enoent, svn_cancel_func_t cancel_func, void *cancel_baton, apr_pool_t *pool)</div><div class="ttdoc">Recursively remove directory path. </div></div>
<div class="ttc" id="svn__io_8h_html_a1583e69324a3f820894422f57fa37d57"><div class="ttname"><a href="svn__io_8h.html#a1583e69324a3f820894422f57fa37d57">svn_io_get_dirents2</a></div><div class="ttdeci">svn_error_t * svn_io_get_dirents2(apr_hash_t **dirents, const char *path, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_get_dirents3, but returns a mapping to svn_io_dirent_t structures instead of svn_io...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga270140f6cd4d6712ccebbf731cd5c713"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga270140f6cd4d6712ccebbf731cd5c713">svn_stream_data_available</a></div><div class="ttdeci">svn_error_t * svn_stream_data_available(svn_stream_t *stream, svn_boolean_t *data_available)</div><div class="ttdoc">When a stream supports polling for available data, obtain a boolean indicating whether data is waitin...</div></div>
<div class="ttc" id="svn__io_8h_html_ad1a7a7299bfe130c25becdd56ff0e870"><div class="ttname"><a href="svn__io_8h.html#ad1a7a7299bfe130c25becdd56ff0e870">svn_io_open_unique_file3</a></div><div class="ttdeci">svn_error_t * svn_io_open_unique_file3(apr_file_t **file, const char **temp_path, const char *dirpath, svn_io_file_del_t delete_when, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">Create a writable file, with an arbitrary and unique name, in the directory dirpath. </div></div>
<div class="ttc" id="svn__io_8h_html_a052b330df7626a534833e6329b33d753"><div class="ttname"><a href="svn__io_8h.html#a052b330df7626a534833e6329b33d753">svn_io_dir_make_hidden</a></div><div class="ttdeci">svn_error_t * svn_io_dir_make_hidden(const char *path, apr_fileperms_t perm, apr_pool_t *pool)</div><div class="ttdoc">Same as svn_io_dir_make(), but sets the hidden attribute on the directory on systems that support it...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga7d9cdab4d5d8707d59a1b1d3dab95bb4"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga7d9cdab4d5d8707d59a1b1d3dab95bb4">svn_stream_close</a></div><div class="ttdeci">svn_error_t * svn_stream_close(svn_stream_t *stream)</div><div class="ttdoc">Close a generic stream. </div></div>
<div class="ttc" id="structsvn__string__t_html"><div class="ttname"><a href="structsvn__string__t.html">svn_string_t</a></div><div class="ttdoc">A simple counted string. </div><div class="ttdef"><b>Definition:</b> <a href="svn__string_8h_source.html#l00096">svn_string.h:96</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gaa76703167b5bc9cc53a1f66e64c5f77a"><div class="ttname"><a href="group__svn__io__byte__streams.html#gaa76703167b5bc9cc53a1f66e64c5f77a">svn_stream_for_stderr</a></div><div class="ttdeci">svn_error_t * svn_stream_for_stderr(svn_stream_t **err, apr_pool_t *pool)</div><div class="ttdoc">Set *err to a generic stream connected to stderr, allocated in pool. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga090c93a72964b78a00de75fa10fc5078"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga090c93a72964b78a00de75fa10fc5078">svn_stream_set_close</a></div><div class="ttdeci">void svn_stream_set_close(svn_stream_t *stream, svn_close_fn_t close_fn)</div><div class="ttdoc">Set stream&amp;#39;s close function to close_fn. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gadda74c8a8bf6d4dc64488979aa197afc"><div class="ttname"><a href="group__svn__io__byte__streams.html#gadda74c8a8bf6d4dc64488979aa197afc">svn_stream_checksummed</a></div><div class="ttdeci">svn_stream_t * svn_stream_checksummed(svn_stream_t *stream, const unsigned char **read_digest, const unsigned char **write_digest, svn_boolean_t read_all, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_stream_checksummed2(), but always returning the MD5 checksum in read_digest and write_...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gaea19e182974e64a77d3f949a25f496a1"><div class="ttname"><a href="group__svn__io__byte__streams.html#gaea19e182974e64a77d3f949a25f496a1">svn_stream_set_write</a></div><div class="ttdeci">void svn_stream_set_write(svn_stream_t *stream, svn_write_fn_t write_fn)</div><div class="ttdoc">Set stream&amp;#39;s write function to write_fn. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gae9ebdcf950b897d9c0cb89c331262aed"><div class="ttname"><a href="group__svn__io__byte__streams.html#gae9ebdcf950b897d9c0cb89c331262aed">svn_stream_set_read</a></div><div class="ttdeci">void svn_stream_set_read(svn_stream_t *stream, svn_read_fn_t read_fn)</div><div class="ttdoc">Set stream&amp;#39;s read function to read_fn. </div></div>
<div class="ttc" id="svn__types_8h_html_ac3ca125707a8ca1289c73236b5ce7f9a"><div class="ttname"><a href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a">svn_node_kind_t</a></div><div class="ttdeci">svn_node_kind_t</div><div class="ttdoc">The various types of nodes in the Subversion filesystem. </div><div class="ttdef"><b>Definition:</b> <a href="svn__types_8h_source.html#l00307">svn_types.h:307</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga674a71b48f810dd21ad2db6fd611930d"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga674a71b48f810dd21ad2db6fd611930d">svn_stream_copy3</a></div><div class="ttdeci">svn_error_t * svn_stream_copy3(svn_stream_t *from, svn_stream_t *to, svn_cancel_func_t cancel_func, void *cancel_baton, apr_pool_t *pool)</div><div class="ttdoc">Read the contents of the readable stream from and write them to the writable stream to calling cancel...</div></div>
<div class="ttc" id="svn__io_8h_html_aa78fffc81af962281813070c753d7884a6256344ca6b43868daa12365d75834d2"><div class="ttname"><a href="svn__io_8h.html#aa78fffc81af962281813070c753d7884a6256344ca6b43868daa12365d75834d2">svn_io_file_del_on_close</a></div><div class="ttdoc">Remove when the file is closed. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00063">svn_io.h:63</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga13df23d9bc8f0c308223d7925f5da132"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga13df23d9bc8f0c308223d7925f5da132">svn_stream_read_full</a></div><div class="ttdeci">svn_error_t * svn_stream_read_full(svn_stream_t *stream, char *buffer, apr_size_t *len)</div><div class="ttdoc">Read from a generic stream until buffer is filled upto *len or until EOF is reached. </div></div>
<div class="ttc" id="svn__io_8h_html_ab3f73a4554d78dbbc3d9e0f29943380e"><div class="ttname"><a href="svn__io_8h.html#ab3f73a4554d78dbbc3d9e0f29943380e">svn_io_read_length_line</a></div><div class="ttdeci">svn_error_t * svn_io_read_length_line(apr_file_t *file, char *buf, apr_size_t *limit, apr_pool_t *pool)</div><div class="ttdoc">Read a line from file into buf, but not exceeding *limit bytes. </div></div>
<div class="ttc" id="svn__io_8h_html_ae9ed0a769c24087316ebcc868fb559a0"><div class="ttname"><a href="svn__io_8h.html#ae9ed0a769c24087316ebcc868fb559a0">svn_io_file_affected_time</a></div><div class="ttdeci">svn_error_t * svn_io_file_affected_time(apr_time_t *apr_time, const char *path, apr_pool_t *pool)</div><div class="ttdoc">Set *apr_time to the time of last modification of the contents of the file path. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga8e85f7340b0f3471fb79c1bc501e4fea"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga8e85f7340b0f3471fb79c1bc501e4fea">svn_stream_from_string</a></div><div class="ttdeci">svn_stream_t * svn_stream_from_string(const svn_string_t *str, apr_pool_t *pool)</div><div class="ttdoc">Return a generic read-only stream connected to string str. </div></div>
<div class="ttc" id="svn__io_8h_html_aa9e4a63f9f1c86d6ff712bcb6d51ddf4"><div class="ttname"><a href="svn__io_8h.html#aa9e4a63f9f1c86d6ff712bcb6d51ddf4">svn_io_start_cmd2</a></div><div class="ttdeci">svn_error_t * svn_io_start_cmd2(apr_proc_t *cmd_proc, const char *path, const char *cmd, const char *const *args, svn_boolean_t inherit, svn_boolean_t infile_pipe, apr_file_t *infile, svn_boolean_t outfile_pipe, apr_file_t *outfile, svn_boolean_t errfile_pipe, apr_file_t *errfile, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_start_cmd3() but with env always set to NULL. </div></div>
<div class="ttc" id="svn__io_8h_html_a2e4247ed6ed8390f4f7d68a5dea3f0e6"><div class="ttname"><a href="svn__io_8h.html#a2e4247ed6ed8390f4f7d68a5dea3f0e6">svn_io_file_move</a></div><div class="ttdeci">svn_error_t * svn_io_file_move(const char *from_path, const char *to_path, apr_pool_t *pool)</div><div class="ttdoc">Move the file from from_path to to_path, even across device boundaries. </div></div>
<div class="ttc" id="svn__io_8h_html_a474cc5427ee6e900ff8c96559e368fe6"><div class="ttname"><a href="svn__io_8h.html#a474cc5427ee6e900ff8c96559e368fe6">svn_io_set_file_affected_time</a></div><div class="ttdeci">svn_error_t * svn_io_set_file_affected_time(apr_time_t apr_time, const char *path, apr_pool_t *pool)</div><div class="ttdoc">Set the timestamp of file path to apr_time. </div></div>
<div class="ttc" id="svn__io_8h_html_a2384857ad348105316edf6d1036d599f"><div class="ttname"><a href="svn__io_8h.html#a2384857ad348105316edf6d1036d599f">svn_io_open_unique_file</a></div><div class="ttdeci">svn_error_t * svn_io_open_unique_file(apr_file_t **f, const char **unique_name_p, const char *path, const char *suffix, svn_boolean_t delete_on_close, apr_pool_t *pool)</div><div class="ttdoc">Like svn_io_open_unique_file2, but can&amp;#39;t delete on pool cleanup. </div></div>
<div class="ttc" id="svn__io_8h_html_ae800def15e3ffc5e1645b296c4e7a1ca"><div class="ttname"><a href="svn__io_8h.html#ae800def15e3ffc5e1645b296c4e7a1ca">svn_io_run_diff3</a></div><div class="ttdeci">svn_error_t * svn_io_run_diff3(const char *dir, const char *mine, const char *older, const char *yours, const char *mine_label, const char *older_label, const char *yours_label, apr_file_t *merged, int *exitcode, const char *diff3_cmd, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_run_diff3_2(), but with user_args set to NULL. </div></div>
<div class="ttc" id="svn__io_8h_html_a48ca8a48714c0353e1246e992def863b"><div class="ttname"><a href="svn__io_8h.html#a48ca8a48714c0353e1246e992def863b">svn_io_dirent2_create</a></div><div class="ttdeci">svn_io_dirent2_t * svn_io_dirent2_create(apr_pool_t *result_pool)</div><div class="ttdoc">Creates a new svn_io_dirent2_t structure. </div></div>
<div class="ttc" id="svn__io_8h_html_a02cd461341834d955e258a70def4f56f"><div class="ttname"><a href="svn__io_8h.html#a02cd461341834d955e258a70def4f56f">svn_io_set_file_read_write_carefully</a></div><div class="ttdeci">svn_error_t * svn_io_set_file_read_write_carefully(const char *path, svn_boolean_t enable_write, svn_boolean_t ignore_enoent, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_set_file_read_* functions. </div></div>
<div class="ttc" id="svn__io_8h_html_ae3dd33688b3e75430f4720f4d90c1506"><div class="ttname"><a href="svn__io_8h.html#ae3dd33688b3e75430f4720f4d90c1506">svn_io_walk_func_t</a></div><div class="ttdeci">svn_error_t *(* svn_io_walk_func_t)(void *baton, const char *path, const apr_finfo_t *finfo, apr_pool_t *pool)</div><div class="ttdoc">Callback function type for svn_io_dir_walk() </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l01766">svn_io.h:1766</a></div></div>
<div class="ttc" id="structsvn__error__t_html"><div class="ttname"><a href="structsvn__error__t.html">svn_error_t</a></div><div class="ttdoc">Subversion error object. </div><div class="ttdef"><b>Definition:</b> <a href="svn__types_8h_source.html#l00178">svn_types.h:178</a></div></div>
<div class="ttc" id="svn__io_8h_html_a4ee2641c854734f78337aee204b79201"><div class="ttname"><a href="svn__io_8h.html#a4ee2641c854734f78337aee204b79201">svn_io_start_cmd</a></div><div class="ttdeci">svn_error_t * svn_io_start_cmd(apr_proc_t *cmd_proc, const char *path, const char *cmd, const char *const *args, svn_boolean_t inherit, apr_file_t *infile, apr_file_t *outfile, apr_file_t *errfile, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_start_cmd2() but with infile_pipe, outfile_pipe, and errfile_pipe always FALSE...</div></div>
<div class="ttc" id="svn__io_8h_html_a0c5bfbe2bd1857ac6ff4e262fabcc25d"><div class="ttname"><a href="svn__io_8h.html#a0c5bfbe2bd1857ac6ff4e262fabcc25d">svn_io_lock_open_file</a></div><div class="ttdeci">svn_error_t * svn_io_lock_open_file(apr_file_t *lockfile_handle, svn_boolean_t exclusive, svn_boolean_t nonblocking, apr_pool_t *pool)</div><div class="ttdoc">Lock the file lockfile_handle. </div></div>
<div class="ttc" id="svn__io_8h_html_afbb4b86585411439008e934ede6f8b39"><div class="ttname"><a href="svn__io_8h.html#afbb4b86585411439008e934ede6f8b39">svn_io_temp_dir</a></div><div class="ttdeci">svn_error_t * svn_io_temp_dir(const char **dir, apr_pool_t *pool)</div><div class="ttdoc">Set *dir to a directory path (allocated in pool) deemed usable for the creation of temporary files an...</div></div>
<div class="ttc" id="svn__io_8h_html_a8b3c8bc2bdde3a1a28eb402432e410e0"><div class="ttname"><a href="svn__io_8h.html#a8b3c8bc2bdde3a1a28eb402432e410e0">svn_io_stat</a></div><div class="ttdeci">svn_error_t * svn_io_stat(apr_finfo_t *finfo, const char *fname, apr_int32_t wanted, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_stat(). </div></div>
<div class="ttc" id="svn__io_8h_html_a0ef4f589d31a5578526c3de2d0587cf7"><div class="ttname"><a href="svn__io_8h.html#a0ef4f589d31a5578526c3de2d0587cf7">svn_io_run_diff3_3</a></div><div class="ttdeci">svn_error_t * svn_io_run_diff3_3(int *exitcode, const char *dir, const char *mine, const char *older, const char *yours, const char *mine_label, const char *older_label, const char *yours_label, apr_file_t *merged, const char *diff3_cmd, const apr_array_header_t *user_args, apr_pool_t *pool)</div><div class="ttdoc">Invoke the configured diff3 program, in utf8-encoded dir like this: </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga821ab7add7a0216c86b1a7f94456fae9"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga821ab7add7a0216c86b1a7f94456fae9">svn_stream_open_unique</a></div><div class="ttdeci">svn_error_t * svn_stream_open_unique(svn_stream_t **stream, const char **temp_path, const char *dirpath, svn_io_file_del_t delete_when, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">Create a writable stream to a file in the directory dirpath. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gac7574ccd5c0f60779bdaef7f5b44febd"><div class="ttname"><a href="group__svn__io__byte__streams.html#gac7574ccd5c0f60779bdaef7f5b44febd">svn_stream_reset</a></div><div class="ttdeci">svn_error_t * svn_stream_reset(svn_stream_t *stream)</div><div class="ttdoc">Reset a generic stream back to its origin. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga13364f11af5666587fa9fd282812219e"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga13364f11af5666587fa9fd282812219e">svn_stream_lazyopen_func_t</a></div><div class="ttdeci">svn_error_t *(* svn_stream_lazyopen_func_t)(svn_stream_t **stream, void *baton, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">A function type provided for use as a callback from svn_stream_lazyopen_create(). ...</div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l01539">svn_io.h:1539</a></div></div>
<div class="ttc" id="svn__io_8h_html_a07a20fcb725f0941e6c53410ad5c12e4"><div class="ttname"><a href="svn__io_8h.html#a07a20fcb725f0941e6c53410ad5c12e4">svn_io_sleep_for_timestamps</a></div><div class="ttdeci">void svn_io_sleep_for_timestamps(const char *path, apr_pool_t *pool)</div><div class="ttdoc">Sleep to ensure that any files modified after we exit have a different timestamp than the one we reco...</div></div>
<div class="ttc" id="svn__io_8h_html_aa78fffc81af962281813070c753d7884a70268318a6e388419ae0e85ab7f7599c"><div class="ttname"><a href="svn__io_8h.html#aa78fffc81af962281813070c753d7884a70268318a6e388419ae0e85ab7f7599c">svn_io_file_del_none</a></div><div class="ttdoc">No deletion ever. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00061">svn_io.h:61</a></div></div>
<div class="ttc" id="svn__io_8h_html_a9135b41547d59296fc54c8316278a0d6"><div class="ttname"><a href="svn__io_8h.html#a9135b41547d59296fc54c8316278a0d6">svn_stringbuf_from_file2</a></div><div class="ttdeci">svn_error_t * svn_stringbuf_from_file2(svn_stringbuf_t **result, const char *filename, apr_pool_t *pool)</div><div class="ttdoc">Set *result to a string containing the contents of filename, which is either &amp;quot;-&amp;quot; (indicating that std...</div></div>
<div class="ttc" id="svn__io_8h_html_a59b7be5b78cc045ed972b226e06ab509"><div class="ttname"><a href="svn__io_8h.html#a59b7be5b78cc045ed972b226e06ab509">svn_stringbuf_from_aprfile</a></div><div class="ttdeci">svn_error_t * svn_stringbuf_from_aprfile(svn_stringbuf_t **result, apr_file_t *file, apr_pool_t *pool)</div><div class="ttdoc">Sets *result to a string containing the contents of the already opened file. </div></div>
<div class="ttc" id="svn__io_8h_html_a5a78c172c69437a05e32d3dff6f152d0"><div class="ttname"><a href="svn__io_8h.html#a5a78c172c69437a05e32d3dff6f152d0">svn_io_file_write</a></div><div class="ttdeci">svn_error_t * svn_io_file_write(apr_file_t *file, const void *buf, apr_size_t *nbytes, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_write(). </div></div>
<div class="ttc" id="svn__types_8h_html_a726e581898461c1d3e7dbdb16d99dad0"><div class="ttname"><a href="svn__types_8h.html#a726e581898461c1d3e7dbdb16d99dad0">svn_filesize_t</a></div><div class="ttdeci">apr_int64_t svn_filesize_t</div><div class="ttdoc">The size of a file in the Subversion FS. </div><div class="ttdef"><b>Definition:</b> <a href="svn__types_8h_source.html#l00473">svn_types.h:473</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gab5dc6f7105e2332ebda600b2d2300eb7"><div class="ttname"><a href="group__svn__io__byte__streams.html#gab5dc6f7105e2332ebda600b2d2300eb7">svn_stream_supports_mark</a></div><div class="ttdeci">svn_boolean_t svn_stream_supports_mark(svn_stream_t *stream)</div><div class="ttdoc">Returns TRUE if the generic stream supports svn_stream_mark(). </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga139e177f2f8600c47f01319f12dc5d4a"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga139e177f2f8600c47f01319f12dc5d4a">svn_stream_skip</a></div><div class="ttdeci">svn_error_t * svn_stream_skip(svn_stream_t *stream, apr_size_t len)</div><div class="ttdoc">Skip len bytes from a generic stream. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gaccbf1cdff3857cad09096f8f01f37260"><div class="ttname"><a href="group__svn__io__byte__streams.html#gaccbf1cdff3857cad09096f8f01f37260">svn_stream_readline</a></div><div class="ttdeci">svn_error_t * svn_stream_readline(svn_stream_t *stream, svn_stringbuf_t **stringbuf, const char *eol, svn_boolean_t *eof, apr_pool_t *pool)</div><div class="ttdoc">Allocate *stringbuf in pool, and read into it one line (terminated by eol) from stream. </div></div>
<div class="ttc" id="svn__io_8h_html_ad7384374afef049adcc8485de4083186"><div class="ttname"><a href="svn__io_8h.html#ad7384374afef049adcc8485de4083186">svn_io_file_checksum</a></div><div class="ttdeci">svn_error_t * svn_io_file_checksum(unsigned char digest[], const char *file, apr_pool_t *pool)</div><div class="ttdoc">Put the md5 checksum of file into digest. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga6d7ee6bcaf79551a18fa851742871902"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga6d7ee6bcaf79551a18fa851742871902">svn_stream_set_data_available</a></div><div class="ttdeci">void svn_stream_set_data_available(svn_stream_t *stream, svn_stream_data_available_fn_t data_available)</div><div class="ttdoc">Set stream&amp;#39;s data available function to data_available_fn. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga4f69e2ed9c7f1361bfa8bfd0d8d15c0a"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga4f69e2ed9c7f1361bfa8bfd0d8d15c0a">svn_stream_data_available_fn_t</a></div><div class="ttdeci">svn_error_t *(* svn_stream_data_available_fn_t)(void *baton, svn_boolean_t *data_available)</div><div class="ttdoc">Poll handler for generic streams that support incomplete reads,. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00918">svn_io.h:918</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga1960de4b4eb0cf1a69a5ba5e11aaa6be"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga1960de4b4eb0cf1a69a5ba5e11aaa6be">svn_stream_copy2</a></div><div class="ttdeci">svn_error_t * svn_stream_copy2(svn_stream_t *from, svn_stream_t *to, svn_cancel_func_t cancel_func, void *cancel_baton, apr_pool_t *pool)</div><div class="ttdoc">Same as svn_stream_copy3() but the streams are not closed. </div></div>
<div class="ttc" id="svn__io_8h_html_a108e7a96396aab7cacbf1e1c3ed5221f"><div class="ttname"><a href="svn__io_8h.html#a108e7a96396aab7cacbf1e1c3ed5221f">svn_io_dir_make</a></div><div class="ttdeci">svn_error_t * svn_io_dir_make(const char *path, apr_fileperms_t perm, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_dir_make(). </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga1cb32df4e14164a911490bae5e58e99e"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga1cb32df4e14164a911490bae5e58e99e">svn_stream_seek</a></div><div class="ttdeci">svn_error_t * svn_stream_seek(svn_stream_t *stream, const svn_stream_mark_t *mark)</div><div class="ttdoc">Seek to a mark in a generic stream. </div></div>
<div class="ttc" id="svn__io_8h_html_aa78fffc81af962281813070c753d7884a0f89c57067b563673ea1ec5605c908bd"><div class="ttname"><a href="svn__io_8h.html#aa78fffc81af962281813070c753d7884a0f89c57067b563673ea1ec5605c908bd">svn_io_file_del_on_pool_cleanup</a></div><div class="ttdoc">Remove when the associated pool is cleared. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00065">svn_io.h:65</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga4d03d151fe2d8fb4068dab914823d059"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga4d03d151fe2d8fb4068dab914823d059">svn_stream_open_readonly</a></div><div class="ttdeci">svn_error_t * svn_stream_open_readonly(svn_stream_t **stream, const char *path, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">Create a stream to read the file at path. </div></div>
<div class="ttc" id="svn__io_8h_html_a946da2aa39f21a0f6099d2984620b2ff"><div class="ttname"><a href="svn__io_8h.html#a946da2aa39f21a0f6099d2984620b2ff">svn_io_dir_open</a></div><div class="ttdeci">svn_error_t * svn_io_dir_open(apr_dir_t **new_dir, const char *dirname, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_dir_open(). </div></div>
<div class="ttc" id="svn__io_8h_html_a280a68283cb7852fe1f4c5835f0b8fdf"><div class="ttname"><a href="svn__io_8h.html#a280a68283cb7852fe1f4c5835f0b8fdf">svn_io_open_uniquely_named</a></div><div class="ttdeci">svn_error_t * svn_io_open_uniquely_named(apr_file_t **file, const char **unique_name, const char *dirpath, const char *filename, const char *suffix, svn_io_file_del_t delete_when, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">Open a new file (for reading and writing) with a unique name based on utf-8 encoded filename...</div></div>
<div class="ttc" id="svn__io_8h_html_ab4a3b25a089372c59aca6783a3a31595"><div class="ttname"><a href="svn__io_8h.html#ab4a3b25a089372c59aca6783a3a31595">svn_io_copy_file</a></div><div class="ttdeci">svn_error_t * svn_io_copy_file(const char *src, const char *dst, svn_boolean_t copy_perms, apr_pool_t *pool)</div><div class="ttdoc">Copy src to dst atomically, in a &amp;quot;byte-for-byte&amp;quot; manner. </div></div>
<div class="ttc" id="svn__io_8h_html_a94e184ae6677e8b0b4cae0ec145b7b67"><div class="ttname"><a href="svn__io_8h.html#a94e184ae6677e8b0b4cae0ec145b7b67">svn_io_read_link</a></div><div class="ttdeci">svn_error_t * svn_io_read_link(svn_string_t **dest, const char *path, apr_pool_t *pool)</div><div class="ttdoc">Set *dest to the path that the symlink at path references. </div></div>
<div class="ttc" id="structsvn__io__dirent2__t_html_a310bfc9a9c1cbe353c67bbc399840743"><div class="ttname"><a href="structsvn__io__dirent2__t.html#a310bfc9a9c1cbe353c67bbc399840743">svn_io_dirent2_t::mtime</a></div><div class="ttdeci">apr_time_t mtime</div><div class="ttdoc">The time the file was last modified. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00095">svn_io.h:95</a></div></div>
<div class="ttc" id="svn__io_8h_html_a58487bc76681879193a9a067dd37b483"><div class="ttname"><a href="svn__io_8h.html#a58487bc76681879193a9a067dd37b483">svn_io_file_read_full</a></div><div class="ttdeci">svn_error_t * svn_io_file_read_full(apr_file_t *file, void *buf, apr_size_t nbytes, apr_size_t *bytes_read, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_file_read_full2 with hit_eof being set to NULL. </div></div>
<div class="ttc" id="svn__io_8h_html_a783e5b2a7198107666cba41642610919"><div class="ttname"><a href="svn__io_8h.html#a783e5b2a7198107666cba41642610919">svn_io_file_read</a></div><div class="ttdeci">svn_error_t * svn_io_file_read(apr_file_t *file, void *buf, apr_size_t *nbytes, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_read(). </div></div>
<div class="ttc" id="svn__io_8h_html_a2cb981f75792c99480f93b83ae9265d2"><div class="ttname"><a href="svn__io_8h.html#a2cb981f75792c99480f93b83ae9265d2">svn_io_is_file_executable</a></div><div class="ttdeci">svn_error_t * svn_io_is_file_executable(svn_boolean_t *executable, const char *path, apr_pool_t *pool)</div><div class="ttdoc">Determine whether a file is executable by the current user. </div></div>
<div class="ttc" id="svn__io_8h_html_a40c25981a091fdcf9c34aa79e1c93ccc"><div class="ttname"><a href="svn__io_8h.html#a40c25981a091fdcf9c34aa79e1c93ccc">svn_io_unlock_open_file</a></div><div class="ttdeci">svn_error_t * svn_io_unlock_open_file(apr_file_t *lockfile_handle, apr_pool_t *pool)</div><div class="ttdoc">Unlock the file lockfile_handle. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gadf2971328919edf3fed5ef8353a90525"><div class="ttname"><a href="group__svn__io__byte__streams.html#gadf2971328919edf3fed5ef8353a90525">svn_stream_from_aprfile2</a></div><div class="ttdeci">svn_stream_t * svn_stream_from_aprfile2(apr_file_t *file, svn_boolean_t disown, apr_pool_t *pool)</div><div class="ttdoc">Create a stream from an APR file. </div></div>
<div class="ttc" id="group__svn__io__format__files_html_ga80f0a4330380bafb4cd65e09151f411b"><div class="ttname"><a href="group__svn__io__format__files.html#ga80f0a4330380bafb4cd65e09151f411b">svn_io_read_version_file</a></div><div class="ttdeci">svn_error_t * svn_io_read_version_file(int *version, const char *path, apr_pool_t *pool)</div><div class="ttdoc">Set *version to the integer that starts the file at path. </div></div>
<div class="ttc" id="svn__io_8h_html_acac394a2c49dcfb02b8cda55c9281625"><div class="ttname"><a href="svn__io_8h.html#acac394a2c49dcfb02b8cda55c9281625">svn_io_dir_walk</a></div><div class="ttdeci">svn_error_t * svn_io_dir_walk(const char *dirname, apr_int32_t wanted, svn_io_walk_func_t walk_func, void *walk_baton, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_dir_walk(), but only calls walk_func for files of type APR_DIR (directory) and APR_...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga4a84c869ab835792b5e441b5eb426fd6"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga4a84c869ab835792b5e441b5eb426fd6">svn_stream_contents_same2</a></div><div class="ttdeci">svn_error_t * svn_stream_contents_same2(svn_boolean_t *same, svn_stream_t *stream1, svn_stream_t *stream2, apr_pool_t *pool)</div><div class="ttdoc">Set *same to TRUE if stream1 and stream2 have the same contents, else set it to FALSE. </div></div>
<div class="ttc" id="svn__io_8h_html_a0900f4459a5ef43cb1634d3b89d829a4"><div class="ttname"><a href="svn__io_8h.html#a0900f4459a5ef43cb1634d3b89d829a4">svn_io_dirent2_t</a></div><div class="ttdeci">struct svn_io_dirent2_t svn_io_dirent2_t</div><div class="ttdoc">A set of directory entry data elements as returned by svn_io_get_dirents. </div></div>
<div class="ttc" id="svn__io_8h_html_a6c0266e00c285a0b90eef9faf0e31024"><div class="ttname"><a href="svn__io_8h.html#a6c0266e00c285a0b90eef9faf0e31024">svn_io_run_diff</a></div><div class="ttdeci">svn_error_t * svn_io_run_diff(const char *dir, const char *const *user_args, int num_user_args, const char *label1, const char *label2, const char *from, const char *to, int *exitcode, apr_file_t *outfile, apr_file_t *errfile, const char *diff_cmd, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_run_diff2() but with diff_cmd encoded in internal encoding used by APR...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gaa79398b116a9209eb3a79947a6066f54"><div class="ttname"><a href="group__svn__io__byte__streams.html#gaa79398b116a9209eb3a79947a6066f54">svn_write_fn_t</a></div><div class="ttdeci">svn_error_t *(* svn_write_fn_t)(void *baton, const char *data, apr_size_t *len)</div><div class="ttdoc">Write handler function for a generic stream. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00880">svn_io.h:880</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gaa5291159cc874084805155ccdfd68b4b"><div class="ttname"><a href="group__svn__io__byte__streams.html#gaa5291159cc874084805155ccdfd68b4b">svn_stream_seek_fn_t</a></div><div class="ttdeci">svn_error_t *(* svn_stream_seek_fn_t)(void *baton, const svn_stream_mark_t *mark)</div><div class="ttdoc">Seek handler function for a generic stream. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00910">svn_io.h:910</a></div></div>
<div class="ttc" id="svn__io_8h_html_acc0478196081ff559613daf3ac8a39c7"><div class="ttname"><a href="svn__io_8h.html#acc0478196081ff559613daf3ac8a39c7">svn_io_wait_for_cmd</a></div><div class="ttdeci">svn_error_t * svn_io_wait_for_cmd(apr_proc_t *cmd_proc, const char *cmd, int *exitcode, apr_exit_why_e *exitwhy, apr_pool_t *pool)</div><div class="ttdoc">Wait for the process *cmd_proc to complete and optionally retrieve its exit code. ...</div></div>
<div class="ttc" id="svn__io_8h_html_aedc30b43ce1e24730655803307a0fc1a"><div class="ttname"><a href="svn__io_8h.html#aedc30b43ce1e24730655803307a0fc1a">svn_io_file_create_empty</a></div><div class="ttdeci">svn_error_t * svn_io_file_create_empty(const char *file, apr_pool_t *scratch_pool)</div><div class="ttdoc">Create an empty file at utf8-encoded path file. </div></div>
<div class="ttc" id="svn__io_8h_html_ae6c6d960b1f742e2c00f8d7dd6ea1c5d"><div class="ttname"><a href="svn__io_8h.html#ae6c6d960b1f742e2c00f8d7dd6ea1c5d">svn_io_dir_file_copy</a></div><div class="ttdeci">svn_error_t * svn_io_dir_file_copy(const char *src_path, const char *dest_path, const char *file, apr_pool_t *pool)</div><div class="ttdoc">Copy the file whose basename (or relative path) is file within directory src_path to the same basenam...</div></div>
<div class="ttc" id="svn__io_8h_html_a51baaf892b96c9893bbae4fa5e747495"><div class="ttname"><a href="svn__io_8h.html#a51baaf892b96c9893bbae4fa5e747495">svn_io_dir_make_sgid</a></div><div class="ttdeci">svn_error_t * svn_io_dir_make_sgid(const char *path, apr_fileperms_t perm, apr_pool_t *pool)</div><div class="ttdoc">Same as svn_io_dir_make(), but attempts to set the sgid on the directory on systems that support it...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga06d6291c397e63f895deb92a2c14e6af"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a></div><div class="ttdeci">struct svn_stream_t svn_stream_t</div><div class="ttdoc">An abstract stream of bytes–either incoming or outgoing or both. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00863">svn_io.h:863</a></div></div>
<div class="ttc" id="structsvn__io__dirent2__t_html_ac9b659764697b01e9fb56cb5e1c6af8a"><div class="ttname"><a href="structsvn__io__dirent2__t.html#ac9b659764697b01e9fb56cb5e1c6af8a">svn_io_dirent2_t::filesize</a></div><div class="ttdeci">svn_filesize_t filesize</div><div class="ttdoc">The filesize of this entry or undefined for a directory. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00092">svn_io.h:92</a></div></div>
<div class="ttc" id="svn__types_8h_html"><div class="ttname"><a href="svn__types_8h.html">svn_types.h</a></div><div class="ttdoc">Subversion&amp;#39;s data types. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga4233ad62178dd3379e6d1feee18b5fc4"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga4233ad62178dd3379e6d1feee18b5fc4">svn_stream_puts</a></div><div class="ttdeci">svn_error_t * svn_stream_puts(svn_stream_t *stream, const char *str)</div><div class="ttdoc">Write NULL-terminated string str to stream. </div></div>
<div class="ttc" id="svn__io_8h_html_acbcb8bfd6df6bbf9c35361b0f17f0ea7"><div class="ttname"><a href="svn__io_8h.html#acbcb8bfd6df6bbf9c35361b0f17f0ea7">svn_io_file_name_get</a></div><div class="ttdeci">svn_error_t * svn_io_file_name_get(const char **filename, apr_file_t *file, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_name_get(). </div></div>
<div class="ttc" id="svn__io_8h_html_a539dc0c726940a466a3bc2358d6b85d8"><div class="ttname"><a href="svn__io_8h.html#a539dc0c726940a466a3bc2358d6b85d8">svn_io_copy_link</a></div><div class="ttdeci">svn_error_t * svn_io_copy_link(const char *src, const char *dst, apr_pool_t *pool)</div><div class="ttdoc">Copy symbolic link src to dst atomically. </div></div>
<div class="ttc" id="svn__io_8h_html_aabcfef527a38cb25dde9f1e1565bf578"><div class="ttname"><a href="svn__io_8h.html#aabcfef527a38cb25dde9f1e1565bf578">svn_io_write_unique</a></div><div class="ttdeci">svn_error_t * svn_io_write_unique(const char **tmp_path, const char *dirpath, const void *buf, apr_size_t nbytes, svn_io_file_del_t delete_when, apr_pool_t *pool)</div><div class="ttdoc">Open a unique file in dirpath, and write nbytes from buf to the file before flushing it to disk and c...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga14b9375f4e0300888b853650e15a987a"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga14b9375f4e0300888b853650e15a987a">svn_stream_contents_same</a></div><div class="ttdeci">svn_error_t * svn_stream_contents_same(svn_boolean_t *same, svn_stream_t *stream1, svn_stream_t *stream2, apr_pool_t *pool)</div><div class="ttdoc">Same as svn_stream_contents_same2(), but the streams will not be closed. </div></div>
<div class="ttc" id="structsvn__checksum__t_html"><div class="ttname"><a href="structsvn__checksum__t.html">svn_checksum_t</a></div><div class="ttdoc">A generic checksum representation. </div><div class="ttdef"><b>Definition:</b> <a href="svn__checksum_8h_source.html#l00069">svn_checksum.h:69</a></div></div>
<div class="ttc" id="svn__io_8h_html_a47336875b45ac006d69aef58db4fb5bb"><div class="ttname"><a href="svn__io_8h.html#a47336875b45ac006d69aef58db4fb5bb">svn_io_check_resolved_path</a></div><div class="ttdeci">svn_error_t * svn_io_check_resolved_path(const char *path, svn_node_kind_t *kind, apr_pool_t *pool)</div><div class="ttdoc">Like svn_io_check_path(), but resolve symlinks. </div></div>
<div class="ttc" id="svn__io_8h_html_ac4625a082416ccaafdd77e35e14ec4d4"><div class="ttname"><a href="svn__io_8h.html#ac4625a082416ccaafdd77e35e14ec4d4">svn_io_parse_mimetypes_file</a></div><div class="ttdeci">svn_error_t * svn_io_parse_mimetypes_file(apr_hash_t **type_map, const char *mimetypes_file, apr_pool_t *pool)</div><div class="ttdoc">Parse utf8-encoded mimetypes_file as a MIME types file (such as is provided with Apache HTTP Server)...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga9f0acad4da18e90c1dc5250643af7049"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga9f0acad4da18e90c1dc5250643af7049">svn_stream_empty</a></div><div class="ttdeci">svn_stream_t * svn_stream_empty(apr_pool_t *pool)</div><div class="ttdoc">Create a stream that is empty for reading and infinite for writing. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga576facc62f51e98c14cb440df1e58cd9"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga576facc62f51e98c14cb440df1e58cd9">svn_close_fn_t</a></div><div class="ttdeci">svn_error_t *(* svn_close_fn_t)(void *baton)</div><div class="ttdoc">Close handler function for a generic stream. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00885">svn_io.h:885</a></div></div>
<div class="ttc" id="svn__io_8h_html_a2ffefcabf44f9e9fb2f71d409fcf782e"><div class="ttname"><a href="svn__io_8h.html#a2ffefcabf44f9e9fb2f71d409fcf782e">svn_stringbuf_from_file</a></div><div class="ttdeci">svn_error_t * svn_stringbuf_from_file(svn_stringbuf_t **result, const char *filename, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_stringbuf_from_file2(), except that if filename is &amp;quot;-&amp;quot;, return the error SVN_ERR_UNS...</div></div>
<div class="ttc" id="svn__types_8h_html_aeced35b9b096eb3eb6f3d1af3e685aa1"><div class="ttname"><a href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1">SVN_DEPRECATED</a></div><div class="ttdeci">#define SVN_DEPRECATED</div><div class="ttdoc">Macro used to mark deprecated functions. </div><div class="ttdef"><b>Definition:</b> <a href="svn__types_8h_source.html#l00060">svn_types.h:60</a></div></div>
<div class="ttc" id="svn__io_8h_html_a83669c6c77f141089dcc20ef80453d4a"><div class="ttname"><a href="svn__io_8h.html#a83669c6c77f141089dcc20ef80453d4a">svn_io_dir_read</a></div><div class="ttdeci">svn_error_t * svn_io_dir_read(apr_finfo_t *finfo, apr_int32_t wanted, apr_dir_t *thedir, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_dir_read(). </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gadc3e897290c9479c6b903876d18dc87c"><div class="ttname"><a href="group__svn__io__byte__streams.html#gadc3e897290c9479c6b903876d18dc87c">svn_stream_create</a></div><div class="ttdeci">svn_stream_t * svn_stream_create(void *baton, apr_pool_t *pool)</div><div class="ttdoc">Create a generic stream. </div></div>
<div class="ttc" id="structsvn__io__dirent__t_html_a59909d8753fdf326d081cde8372443cb"><div class="ttname"><a href="structsvn__io__dirent__t.html#a59909d8753fdf326d081cde8372443cb">svn_io_dirent_t::kind</a></div><div class="ttdeci">svn_node_kind_t kind</div><div class="ttdoc">The kind of this entry. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00125">svn_io.h:125</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gaf834f41616e68fa7d0214814a56b81d4"><div class="ttname"><a href="group__svn__io__byte__streams.html#gaf834f41616e68fa7d0214814a56b81d4">svn_stream_set_skip</a></div><div class="ttdeci">void svn_stream_set_skip(svn_stream_t *stream, svn_stream_skip_fn_t skip_fn)</div><div class="ttdoc">Set stream&amp;#39;s skip function to skip_fn. </div></div>
<div class="ttc" id="svn__io_8h_html_a13cf1ae46bf9a45d01db6cf59d787ecd"><div class="ttname"><a href="svn__io_8h.html#a13cf1ae46bf9a45d01db6cf59d787ecd">svn_io_file_getc</a></div><div class="ttdeci">svn_error_t * svn_io_file_getc(char *ch, apr_file_t *file, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_getc(). </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gaca2f3b74a1215c13b5ae2ca3b99437b9"><div class="ttname"><a href="group__svn__io__byte__streams.html#gaca2f3b74a1215c13b5ae2ca3b99437b9">svn_stream_mark_t</a></div><div class="ttdeci">struct svn_stream_mark_t svn_stream_mark_t</div><div class="ttdoc">An opaque type which represents a mark on a stream. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00894">svn_io.h:894</a></div></div>
<div class="ttc" id="svn__io_8h_html_a284650316c8ceefd30c4dae9aef49ec4"><div class="ttname"><a href="svn__io_8h.html#a284650316c8ceefd30c4dae9aef49ec4">svn_io_run_diff3_2</a></div><div class="ttdeci">svn_error_t * svn_io_run_diff3_2(int *exitcode, const char *dir, const char *mine, const char *older, const char *yours, const char *mine_label, const char *older_label, const char *yours_label, apr_file_t *merged, const char *diff3_cmd, const apr_array_header_t *user_args, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_run_diff3_3(), but with diff3_cmd encoded in internal encoding used by APR...</div></div>
<div class="ttc" id="svn__io_8h_html_ac47edc693b1106c9b4494017b469d206"><div class="ttname"><a href="svn__io_8h.html#ac47edc693b1106c9b4494017b469d206">svn_io_dir_walk2</a></div><div class="ttdeci">svn_error_t * svn_io_dir_walk2(const char *dirname, apr_int32_t wanted, svn_io_walk_func_t walk_func, void *walk_baton, apr_pool_t *pool)</div><div class="ttdoc">Recursively walk the directory rooted at dirname, a utf8-encoded path, invoking walk_func (with walk_...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gaf5a36107d7ac577e62a88c3281538304"><div class="ttname"><a href="group__svn__io__byte__streams.html#gaf5a36107d7ac577e62a88c3281538304">svn_stream_lazyopen_create</a></div><div class="ttdeci">svn_stream_t * svn_stream_lazyopen_create(svn_stream_lazyopen_func_t open_func, void *open_baton, svn_boolean_t open_on_close, apr_pool_t *result_pool)</div><div class="ttdoc">Return a generic stream which wraps another primary stream, delaying the &amp;quot;opening&amp;quot; of that stream unt...</div></div>
<div class="ttc" id="svn__io_8h_html_a9dab9b761a5b9cae7c5610bcce781141"><div class="ttname"><a href="svn__io_8h.html#a9dab9b761a5b9cae7c5610bcce781141">svn_io_is_binary_data</a></div><div class="ttdeci">svn_boolean_t svn_io_is_binary_data(const void *buf, apr_size_t len)</div><div class="ttdoc">Examine up to len bytes of data in buf to determine if the can be considered binary data...</div></div>
<div class="ttc" id="svn__io_8h_html_ae1a5fef60e9dde8f5537e637e21d025a"><div class="ttname"><a href="svn__io_8h.html#ae1a5fef60e9dde8f5537e637e21d025a">svn_io_detect_mimetype</a></div><div class="ttdeci">svn_error_t * svn_io_detect_mimetype(const char **mimetype, const char *file, apr_pool_t *pool)</div><div class="ttdoc">Like svn_io_detect_mimetype2, but with mimetypes_map set to NULL. </div></div>
<div class="ttc" id="svn__io_8h_html_a256b06e01a023d03c47e8a29f8a0344a"><div class="ttname"><a href="svn__io_8h.html#a256b06e01a023d03c47e8a29f8a0344a">svn_io_file_lock2</a></div><div class="ttdeci">svn_error_t * svn_io_file_lock2(const char *lock_file, svn_boolean_t exclusive, svn_boolean_t nonblocking, apr_pool_t *pool)</div><div class="ttdoc">Lock file at lock_file. </div></div>
<div class="ttc" id="svn__types_8h_html_addaab83431a3d41b6c62e9d501cd5ecc"><div class="ttname"><a href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a></div><div class="ttdeci">svn_error_t *(* svn_cancel_func_t)(void *cancel_baton)</div><div class="ttdoc">A user defined callback that subversion will call with a user defined baton to see if the current ope...</div><div class="ttdef"><b>Definition:</b> <a href="svn__types_8h_source.html#l01167">svn_types.h:1167</a></div></div>
<div class="ttc" id="structsvn__io__dirent2__t_html"><div class="ttname"><a href="structsvn__io__dirent2__t.html">svn_io_dirent2_t</a></div><div class="ttdoc">A set of directory entry data elements as returned by svn_io_get_dirents. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00078">svn_io.h:78</a></div></div>
<div class="ttc" id="svn__io_8h_html_ad06c1a3586d8ca151683f163edbc238d"><div class="ttname"><a href="svn__io_8h.html#ad06c1a3586d8ca151683f163edbc238d">svn_io_dir_close</a></div><div class="ttdeci">svn_error_t * svn_io_dir_close(apr_dir_t *thedir)</div><div class="ttdoc">Wrapper for apr_dir_close(). </div></div>
<div class="ttc" id="svn__io_8h_html_acea0b7ecaacd02da03a5cfaebe27067a"><div class="ttname"><a href="svn__io_8h.html#acea0b7ecaacd02da03a5cfaebe27067a">svn_io_dir_empty</a></div><div class="ttdeci">svn_error_t * svn_io_dir_empty(svn_boolean_t *is_empty_p, const char *path, apr_pool_t *pool)</div><div class="ttdoc">Set *is_empty_p to TRUE if directory path is empty, else to FALSE if it is not empty. </div></div>
<div class="ttc" id="svn__io_8h_html_aa9b673694dfebc9fa7018f423b6459c3"><div class="ttname"><a href="svn__io_8h.html#aa9b673694dfebc9fa7018f423b6459c3">svn_io_file_info_get</a></div><div class="ttdeci">svn_error_t * svn_io_file_info_get(apr_finfo_t *finfo, apr_int32_t wanted, apr_file_t *file, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_info_get(). </div></div>
<div class="ttc" id="svn__io_8h_html_a58df63b2898a8a2a7df988b2d633eb1a"><div class="ttname"><a href="svn__io_8h.html#a58df63b2898a8a2a7df988b2d633eb1a">svn_io_open_unique_file2</a></div><div class="ttdeci">svn_error_t * svn_io_open_unique_file2(apr_file_t **f, const char **unique_name_p, const char *path, const char *suffix, svn_io_file_del_t delete_when, apr_pool_t *pool)</div><div class="ttdoc">Like svn_io_open_uniquely_named(), but takes a joined dirpath and filename, and a single pool...</div></div>
<div class="ttc" id="svn__io_8h_html_a4b09482c9762a2391435a6d1702d59af"><div class="ttname"><a href="svn__io_8h.html#a4b09482c9762a2391435a6d1702d59af">svn_io_get_dirents</a></div><div class="ttdeci">svn_error_t * svn_io_get_dirents(apr_hash_t **dirents, const char *path, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_get_dirents2(), but *dirents is a hash table with svn_node_kind_t values...</div></div>
<div class="ttc" id="svn__io_8h_html_a967781b8e5991f3c72f125a333661d1b"><div class="ttname"><a href="svn__io_8h.html#a967781b8e5991f3c72f125a333661d1b">svn_io_append_file</a></div><div class="ttdeci">svn_error_t * svn_io_append_file(const char *src, const char *dst, apr_pool_t *pool)</div><div class="ttdoc">Append src to dst. </div></div>
<div class="ttc" id="svn__io_8h_html_ac3ddb92f73a78796c75a0790bc9cf727"><div class="ttname"><a href="svn__io_8h.html#ac3ddb92f73a78796c75a0790bc9cf727">svn_io_files_contents_same_p</a></div><div class="ttdeci">svn_error_t * svn_io_files_contents_same_p(svn_boolean_t *same, const char *file1, const char *file2, apr_pool_t *pool)</div><div class="ttdoc">Set *same to TRUE if file1 and file2 have the same contents, else set it to FALSE. </div></div>
<div class="ttc" id="svn__io_8h_html_a0ef4d0c5c6a86ab48f515b4a31efad70"><div class="ttname"><a href="svn__io_8h.html#a0ef4d0c5c6a86ab48f515b4a31efad70">svn_io_make_dir_recursively</a></div><div class="ttdeci">svn_error_t * svn_io_make_dir_recursively(const char *path, apr_pool_t *pool)</div><div class="ttdoc">Create directory path on the file system, creating intermediate directories as required, like mkdir -p. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga2e8d5c7ca3a74393f3350540149e8e3d"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga2e8d5c7ca3a74393f3350540149e8e3d">svn_stream_for_stdin</a></div><div class="ttdeci">svn_error_t * svn_stream_for_stdin(svn_stream_t **in, apr_pool_t *pool)</div><div class="ttdoc">Set *in to a generic stream connected to stdin, allocated in pool. </div></div>
<div class="ttc" id="structsvn__io__dirent__t_html_ad3b184b3fa42b284e35dab3d3fe97828"><div class="ttname"><a href="structsvn__io__dirent__t.html#ad3b184b3fa42b284e35dab3d3fe97828">svn_io_dirent_t::special</a></div><div class="ttdeci">svn_boolean_t special</div><div class="ttdoc">If kind is svn_node_file, whether this entry is a special file; else FALSE. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00131">svn_io.h:131</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gaf811477b7cafa3c5c20cb3428976d0be"><div class="ttname"><a href="group__svn__io__byte__streams.html#gaf811477b7cafa3c5c20cb3428976d0be">svn_stream_mark_fn_t</a></div><div class="ttdeci">svn_error_t *(* svn_stream_mark_fn_t)(void *baton, svn_stream_mark_t **mark, apr_pool_t *pool)</div><div class="ttdoc">Mark handler function for a generic stream. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00901">svn_io.h:901</a></div></div>
<div class="ttc" id="svn__io_8h_html_afcaeff1ea5e9ae65c8188678a1e042bf"><div class="ttname"><a href="svn__io_8h.html#afcaeff1ea5e9ae65c8188678a1e042bf">svn_io_copy_dir_recursively</a></div><div class="ttdeci">svn_error_t * svn_io_copy_dir_recursively(const char *src, const char *dst_parent, const char *dst_basename, svn_boolean_t copy_perms, svn_cancel_func_t cancel_func, void *cancel_baton, apr_pool_t *pool)</div><div class="ttdoc">Recursively copy directory src into dst_parent, as a new entry named dst_basename. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gad12a2e4cbc23bcf8ee3f650966b8c43b"><div class="ttname"><a href="group__svn__io__byte__streams.html#gad12a2e4cbc23bcf8ee3f650966b8c43b">svn_stream_from_aprfile</a></div><div class="ttdeci">svn_stream_t * svn_stream_from_aprfile(apr_file_t *file, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_stream_from_aprfile2(), except that the file will always be disowned. </div></div>
<div class="ttc" id="svn__io_8h_html_a4f8003befd372a93c2443dd60fcca593"><div class="ttname"><a href="svn__io_8h.html#a4f8003befd372a93c2443dd60fcca593">svn_io_stat_dirent2</a></div><div class="ttdeci">svn_error_t * svn_io_stat_dirent2(const svn_io_dirent2_t **dirent_p, const char *path, svn_boolean_t verify_truename, svn_boolean_t ignore_enoent, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">Create a svn_io_dirent2_t instance for path. </div></div>
<div class="ttc" id="svn__io_8h_html_a6789d12c70d0a2fefb539830183ee773"><div class="ttname"><a href="svn__io_8h.html#a6789d12c70d0a2fefb539830183ee773">svn_io_file_write_full</a></div><div class="ttdeci">svn_error_t * svn_io_file_write_full(apr_file_t *file, const void *buf, apr_size_t nbytes, apr_size_t *bytes_written, apr_pool_t *pool)</div><div class="ttdoc">Wrapper for apr_file_write_full(). </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gace8995769bb736796262450ef90f033e"><div class="ttname"><a href="group__svn__io__byte__streams.html#gace8995769bb736796262450ef90f033e">svn_stream_open_writable</a></div><div class="ttdeci">svn_error_t * svn_stream_open_writable(svn_stream_t **stream, const char *path, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">Create a stream to write a file at path. </div></div>
<div class="ttc" id="svn__io_8h_html_a4373588a310c126338eee38f6fa8f67c"><div class="ttname"><a href="svn__io_8h.html#a4373588a310c126338eee38f6fa8f67c">svn_io_dirent2_dup</a></div><div class="ttdeci">svn_io_dirent2_t * svn_io_dirent2_dup(const svn_io_dirent2_t *item, apr_pool_t *result_pool)</div><div class="ttdoc">Duplicates a svn_io_dirent2_t structure into result_pool. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_gabe260b52fa278bc63ba75ea695e54303"><div class="ttname"><a href="group__svn__io__byte__streams.html#gabe260b52fa278bc63ba75ea695e54303">svn_stream_from_stringbuf</a></div><div class="ttdeci">svn_stream_t * svn_stream_from_stringbuf(svn_stringbuf_t *str, apr_pool_t *pool)</div><div class="ttdoc">Return a generic stream connected to stringbuf str. </div></div>
<div class="ttc" id="group__svn__io__format__files_html_ga29aa0631f0facde88398ad50d9411aca"><div class="ttname"><a href="group__svn__io__format__files.html#ga29aa0631f0facde88398ad50d9411aca">svn_io_write_version_file</a></div><div class="ttdeci">svn_error_t * svn_io_write_version_file(const char *path, int version, apr_pool_t *pool)</div><div class="ttdoc">Create (or overwrite) the file at path with new contents, formatted as a non-negative integer version...</div></div>
<div class="ttc" id="svn__io_8h_html_a19c1e3dc7082830df5474b01284f7b01"><div class="ttname"><a href="svn__io_8h.html#a19c1e3dc7082830df5474b01284f7b01">svn_io_filesizes_three_different_p</a></div><div class="ttdeci">svn_error_t * svn_io_filesizes_three_different_p(svn_boolean_t *different_p12, svn_boolean_t *different_p23, svn_boolean_t *different_p13, const char *file1, const char *file2, const char *file3, apr_pool_t *scratch_pool)</div><div class="ttdoc">Set *different_p12 to non-zero if file1 and file2 have different sizes, else set to zero...</div></div>
<div class="ttc" id="svn__io_8h_html_a0f79a74771d956231850979d58b9106e"><div class="ttname"><a href="svn__io_8h.html#a0f79a74771d956231850979d58b9106e">svn_io_get_dir_filenames</a></div><div class="ttdeci">svn_error_t * svn_io_get_dir_filenames(apr_hash_t **dirents, const char *path, apr_pool_t *pool)</div><div class="ttdoc">Read all of the disk entries in directory path, a utf8-encoded path. </div></div>
<div class="ttc" id="svn__io_8h_html_a528121fa3625ec79bea870b5e53d98c6"><div class="ttname"><a href="svn__io_8h.html#a528121fa3625ec79bea870b5e53d98c6">svn_io_remove_file2</a></div><div class="ttdeci">svn_error_t * svn_io_remove_file2(const char *path, svn_boolean_t ignore_enoent, apr_pool_t *scratch_pool)</div><div class="ttdoc">Remove file path, a utf8-encoded path. </div></div>
<div class="ttc" id="svn__io_8h_html_a358a735a173b43509cf4060b73930cf5"><div class="ttname"><a href="svn__io_8h.html#a358a735a173b43509cf4060b73930cf5">svn_io_set_file_executable</a></div><div class="ttdeci">svn_error_t * svn_io_set_file_executable(const char *path, svn_boolean_t executable, svn_boolean_t ignore_enoent, apr_pool_t *pool)</div><div class="ttdoc">Set path&amp;#39;s &amp;quot;executability&amp;quot; (but do nothing if it is a symlink). </div></div>
<div class="ttc" id="svn__types_8h_html_a22b35baddc4213c688d1bb12feea1024"><div class="ttname"><a href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a></div><div class="ttdeci">int svn_boolean_t</div><div class="ttdoc">YABT: Yet Another Boolean Type. </div><div class="ttdef"><b>Definition:</b> <a href="svn__types_8h_source.html#l00139">svn_types.h:139</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga77fdb810198d9c7832610882fd57546b"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga77fdb810198d9c7832610882fd57546b">svn_stream_tee</a></div><div class="ttdeci">svn_stream_t * svn_stream_tee(svn_stream_t *out1, svn_stream_t *out2, apr_pool_t *pool)</div><div class="ttdoc">Return a writable stream which, when written to, writes to both of the underlying streams...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga0094764a89afdedecac79df9ad1ebccb"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga0094764a89afdedecac79df9ad1ebccb">svn_stream_write</a></div><div class="ttdeci">svn_error_t * svn_stream_write(svn_stream_t *stream, const char *data, apr_size_t *len)</div><div class="ttdoc">Write to a generic stream. </div></div>
<div class="ttc" id="structsvn__io__dirent2__t_html_aff8960cd16e36941d7e8c1d040f8b044"><div class="ttname"><a href="structsvn__io__dirent2__t.html#aff8960cd16e36941d7e8c1d040f8b044">svn_io_dirent2_t::kind</a></div><div class="ttdeci">svn_node_kind_t kind</div><div class="ttdoc">The kind of this entry. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00082">svn_io.h:82</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga0ff601f7fb4a7c8c92770edd7376b052"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga0ff601f7fb4a7c8c92770edd7376b052">svn_stream_set_baton</a></div><div class="ttdeci">void svn_stream_set_baton(svn_stream_t *stream, void *baton)</div><div class="ttdoc">Set stream&amp;#39;s baton to baton. </div></div>
<div class="ttc" id="svn__io_8h_html_ab2a9b76609a3063adf33def0f111f61e"><div class="ttname"><a href="svn__io_8h.html#ab2a9b76609a3063adf33def0f111f61e">svn_io_start_cmd3</a></div><div class="ttdeci">svn_error_t * svn_io_start_cmd3(apr_proc_t *cmd_proc, const char *path, const char *cmd, const char *const *args, const char *const *env, svn_boolean_t inherit, svn_boolean_t infile_pipe, apr_file_t *infile, svn_boolean_t outfile_pipe, apr_file_t *outfile, svn_boolean_t errfile_pipe, apr_file_t *errfile, apr_pool_t *pool)</div><div class="ttdoc">Start cmd with args, using utf8-encoded path as working directory. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga10756ab562fd20d32fb880c859607b4c"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga10756ab562fd20d32fb880c859607b4c">svn_stream_compressed</a></div><div class="ttdeci">svn_stream_t * svn_stream_compressed(svn_stream_t *stream, apr_pool_t *pool)</div><div class="ttdoc">Return a stream that decompresses all data read and compresses all data written. </div></div>
<div class="ttc" id="svn__io_8h_html_a953abf96ee32861fef6645c0317d4fc7"><div class="ttname"><a href="svn__io_8h.html#a953abf96ee32861fef6645c0317d4fc7">svn_io_write_atomic</a></div><div class="ttdeci">svn_error_t * svn_io_write_atomic(const char *final_path, const void *buf, apr_size_t nbytes, const char *copy_perms_path, apr_pool_t *scratch_pool)</div><div class="ttdoc">Writes nbytes bytes from *buf to a temporary file inside the same directory as *final_path. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga1fe68c0cf442e4e2af1d8357a7f01cb2"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga1fe68c0cf442e4e2af1d8357a7f01cb2">svn_stream_set_read2</a></div><div class="ttdeci">void svn_stream_set_read2(svn_stream_t *stream, svn_read_fn_t read_fn, svn_read_fn_t read_full_fn)</div><div class="ttdoc">Set stream&amp;#39;s read functions to read_fn and read_full_fn. </div></div>
<div class="ttc" id="svn__io_8h_html_a2025c26deff364a6268a58818ce534a0"><div class="ttname"><a href="svn__io_8h.html#a2025c26deff364a6268a58818ce534a0">svn_io_file_flush</a></div><div class="ttdeci">svn_error_t * svn_io_file_flush(apr_file_t *file, apr_pool_t *scratch_pool)</div><div class="ttdoc">Wrapper for apr_file_flush(). </div></div>
<div class="ttc" id="svn__io_8h_html_a958d10520c3e99ddcbbf333eed40d86f"><div class="ttname"><a href="svn__io_8h.html#a958d10520c3e99ddcbbf333eed40d86f">svn_io_file_rename</a></div><div class="ttdeci">svn_error_t * svn_io_file_rename(const char *from_path, const char *to_path, apr_pool_t *pool)</div><div class="ttdoc">Rename and/or move the node (not necessarily a regular file) at from_path to a new path to_path withi...</div></div>
<div class="ttc" id="svn__io_8h_html_a5f173471fff3a277d315845056e61f94"><div class="ttname"><a href="svn__io_8h.html#a5f173471fff3a277d315845056e61f94">svn_io_stat_dirent</a></div><div class="ttdeci">svn_error_t * svn_io_stat_dirent(const svn_io_dirent2_t **dirent_p, const char *path, svn_boolean_t ignore_enoent, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">Similar to svn_io_stat_dirent2(), but always passes FALSE for verify_truename. </div></div>
<div class="ttc" id="svn__io_8h_html_ad11db24f003c6f280e39d3c9675280dc"><div class="ttname"><a href="svn__io_8h.html#ad11db24f003c6f280e39d3c9675280dc">svn_io_create_unique_link</a></div><div class="ttdeci">svn_error_t * svn_io_create_unique_link(const char **unique_name_p, const char *path, const char *dest, const char *suffix, apr_pool_t *pool)</div><div class="ttdoc">Like svn_io_open_unique_file(), except that instead of creating a file, a symlink is generated that r...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga64eca282d3b75b431a6f8ae5a6637fbb"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga64eca282d3b75b431a6f8ae5a6637fbb">svn_stream_for_stdout</a></div><div class="ttdeci">svn_error_t * svn_stream_for_stdout(svn_stream_t **out, apr_pool_t *pool)</div><div class="ttdoc">Set *out to a generic stream connected to stdout, allocated in pool. </div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga2c0bc2f0ebff96271f427013fece2a39"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga2c0bc2f0ebff96271f427013fece2a39">svn_stream_skip_fn_t</a></div><div class="ttdeci">svn_error_t *(* svn_stream_skip_fn_t)(void *baton, apr_size_t len)</div><div class="ttdoc">Skip data handler function for a generic stream. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00876">svn_io.h:876</a></div></div>
<div class="ttc" id="structsvn__stringbuf__t_html"><div class="ttname"><a href="structsvn__stringbuf__t.html">svn_stringbuf_t</a></div><div class="ttdoc">A buffered string, capable of appending without an allocation and copy for each append. </div><div class="ttdef"><b>Definition:</b> <a href="svn__string_8h_source.html#l00104">svn_string.h:104</a></div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga9a8939b5258b070a48aa1e0cd154909a"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga9a8939b5258b070a48aa1e0cd154909a">svn_read_fn_t</a></div><div class="ttdeci">svn_error_t *(* svn_read_fn_t)(void *baton, char *buffer, apr_size_t *len)</div><div class="ttdoc">Read handler function for a generic stream. </div><div class="ttdef"><b>Definition:</b> <a href="svn__io_8h_source.html#l00868">svn_io.h:868</a></div></div>
<div class="ttc" id="svn__io_8h_html_a36cd10dc8fb91f40c0df79edf8fc3a18"><div class="ttname"><a href="svn__io_8h.html#a36cd10dc8fb91f40c0df79edf8fc3a18">svn_io_file_create</a></div><div class="ttdeci">svn_error_t * svn_io_file_create(const char *file, const char *contents, apr_pool_t *pool)</div><div class="ttdoc">Create a file at utf8-encoded path file with the contents given by the null-terminated string content...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga8b6506623bf959fc8528d9c4fbd427d4"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga8b6506623bf959fc8528d9c4fbd427d4">svn_stream_read2</a></div><div class="ttdeci">svn_error_t * svn_stream_read2(svn_stream_t *stream, char *buffer, apr_size_t *len)</div><div class="ttdoc">Read all currently available upto *len into buffer. </div></div>
<div class="ttc" id="svn__io_8h_html_ad7a26505bf041286d02793eb2a17be04"><div class="ttname"><a href="svn__io_8h.html#ad7a26505bf041286d02793eb2a17be04">svn_io_remove_dir</a></div><div class="ttdeci">svn_error_t * svn_io_remove_dir(const char *path, apr_pool_t *pool)</div><div class="ttdoc">Similar to svn_io_remove_dir2(), but with ignore_enoent set to FALSE and cancel_func and cancel_baton...</div></div>
<div class="ttc" id="group__svn__io__byte__streams_html_ga91b87b96c3f9a302d390263bd0d451a2"><div class="ttname"><a href="group__svn__io__byte__streams.html#ga91b87b96c3f9a302d390263bd0d451a2">svn_string_from_stream</a></div><div class="ttdeci">svn_error_t * svn_string_from_stream(svn_string_t **result, svn_stream_t *stream, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">Read the contents of stream into memory, returning the data in result. </div></div>
<div class="ttc" id="group__svn__io__format__files_html_ga2f23ddf4728df59584e14a67802654b3"><div class="ttname"><a href="group__svn__io__format__files.html#ga2f23ddf4728df59584e14a67802654b3">svn_io_file_readline</a></div><div class="ttdeci">svn_error_t * svn_io_file_readline(apr_file_t *file, svn_stringbuf_t **stringbuf, const char **eol, svn_boolean_t *eof, apr_size_t max_len, apr_pool_t *result_pool, apr_pool_t *scratch_pool)</div><div class="ttdoc">Read a line of text from a file, up to a specified length. </div></div>
<div class="ttc" id="svn__io_8h_html_ab59c1c8d67cf405ca36a5556858da82d"><div class="ttname"><a href="svn__io_8h.html#ab59c1c8d67cf405ca36a5556858da82d">svn_io_run_cmd</a></div><div class="ttdeci">svn_error_t * svn_io_run_cmd(const char *path, const char *cmd, const char *const *args, int *exitcode, apr_exit_why_e *exitwhy, svn_boolean_t inherit, apr_file_t *infile, apr_file_t *outfile, apr_file_t *errfile, apr_pool_t *pool)</div><div class="ttdoc">Run a command to completion, by first calling svn_io_start_cmd() and then calling svn_io_wait_for_cmd...</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:17:25 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
