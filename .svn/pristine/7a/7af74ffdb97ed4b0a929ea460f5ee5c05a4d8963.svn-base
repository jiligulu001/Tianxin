<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: svn_repos_parse_fns3_t Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="functions.html"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">svn_repos_parse_fns3_t Struct Reference<div class="ingroups"><a class="el" href="group__svn__repos__dump__load.html">Dumping and loading filesystem data</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#gae5ed3287ba9df58687aaaeb2b9095c05" title="Read and parse dumpfile-formatted stream, calling callbacks in parse_fns/parse_baton, and using pool for allocations. ">svn_repos_parse_dumpstream3()</a>.  
 <a href="structsvn__repos__parse__fns3__t.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:aa0e050b3571fdcd5fd5bc650b0850a4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#aa0e050b3571fdcd5fd5bc650b0850a4d">magic_header_record</a> )(int version, void *parse_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:aa0e050b3571fdcd5fd5bc650b0850a4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">The parser has discovered a new "magic header" record within the parsing session represented by <em>parse_baton</em>.  <a href="#aa0e050b3571fdcd5fd5bc650b0850a4d">More...</a><br/></td></tr>
<tr class="separator:aa0e050b3571fdcd5fd5bc650b0850a4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a688f8c2fe2b14a6447be37efc10625e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#a688f8c2fe2b14a6447be37efc10625e5">uuid_record</a> )(const char *uuid, void *parse_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a688f8c2fe2b14a6447be37efc10625e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">The parser has discovered a new uuid record within the parsing session represented by <em>parse_baton</em>.  <a href="#a688f8c2fe2b14a6447be37efc10625e5">More...</a><br/></td></tr>
<tr class="separator:a688f8c2fe2b14a6447be37efc10625e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c085254975f6886b7c861b9d286a4cb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#a9c085254975f6886b7c861b9d286a4cb">new_revision_record</a> )(void **revision_baton, apr_hash_t *headers, void *parse_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a9c085254975f6886b7c861b9d286a4cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">The parser has discovered a new revision record within the parsing session represented by <em>parse_baton</em>.  <a href="#a9c085254975f6886b7c861b9d286a4cb">More...</a><br/></td></tr>
<tr class="separator:a9c085254975f6886b7c861b9d286a4cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fac4102114cc4f413bf92bb8633774a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#a2fac4102114cc4f413bf92bb8633774a">new_node_record</a> )(void **node_baton, apr_hash_t *headers, void *revision_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a2fac4102114cc4f413bf92bb8633774a"><td class="mdescLeft">&#160;</td><td class="mdescRight">The parser has discovered a new node record within the current revision represented by <em>revision_baton</em>.  <a href="#a2fac4102114cc4f413bf92bb8633774a">More...</a><br/></td></tr>
<tr class="separator:a2fac4102114cc4f413bf92bb8633774a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ed6b48dabba1e75c6dce338a94d4d19"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#a7ed6b48dabba1e75c6dce338a94d4d19">set_revision_property</a> )(void *revision_baton, const char *name, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *value)</td></tr>
<tr class="memdesc:a7ed6b48dabba1e75c6dce338a94d4d19"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given <em>revision_baton</em>, set a property <em>name</em> to <em>value</em>.  <a href="#a7ed6b48dabba1e75c6dce338a94d4d19">More...</a><br/></td></tr>
<tr class="separator:a7ed6b48dabba1e75c6dce338a94d4d19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1baa470cfc9f501427508b9809bcbb9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#af1baa470cfc9f501427508b9809bcbb9">set_node_property</a> )(void *node_baton, const char *name, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *value)</td></tr>
<tr class="memdesc:af1baa470cfc9f501427508b9809bcbb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given <em>node_baton</em>, set a property <em>name</em> to <em>value</em>.  <a href="#af1baa470cfc9f501427508b9809bcbb9">More...</a><br/></td></tr>
<tr class="separator:af1baa470cfc9f501427508b9809bcbb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3582623883a4bbb4415d2eca7d6088e7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#a3582623883a4bbb4415d2eca7d6088e7">delete_node_property</a> )(void *node_baton, const char *name)</td></tr>
<tr class="memdesc:a3582623883a4bbb4415d2eca7d6088e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given <em>node_baton</em>, delete property <em>name</em>.  <a href="#a3582623883a4bbb4415d2eca7d6088e7">More...</a><br/></td></tr>
<tr class="separator:a3582623883a4bbb4415d2eca7d6088e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9dbf23effea7688bd93e4d7c23e1330"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#ab9dbf23effea7688bd93e4d7c23e1330">remove_node_props</a> )(void *node_baton)</td></tr>
<tr class="memdesc:ab9dbf23effea7688bd93e4d7c23e1330"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given <em>node_baton</em>, remove all properties.  <a href="#ab9dbf23effea7688bd93e4d7c23e1330">More...</a><br/></td></tr>
<tr class="separator:ab9dbf23effea7688bd93e4d7c23e1330"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2405143d84d23a350709c0e88c6727f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#a2405143d84d23a350709c0e88c6727f4">set_fulltext</a> )(<a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **stream, void *node_baton)</td></tr>
<tr class="memdesc:a2405143d84d23a350709c0e88c6727f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given <em>node_baton</em>, receive a writable <em>stream</em> capable of receiving the node's fulltext.  <a href="#a2405143d84d23a350709c0e88c6727f4">More...</a><br/></td></tr>
<tr class="separator:a2405143d84d23a350709c0e88c6727f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf9c440cd7a740d01646ab2f9cf66817"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#adf9c440cd7a740d01646ab2f9cf66817">apply_textdelta</a> )(<a class="el" href="group__svn__delta__txt__delta.html#ga1c0d461a3f244928d7f0339c1cbe3219">svn_txdelta_window_handler_t</a> *handler, void **handler_baton, void *node_baton)</td></tr>
<tr class="memdesc:adf9c440cd7a740d01646ab2f9cf66817"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given <em>node_baton</em>, set <em>handler</em> and <em>handler_baton</em> to a window handler and baton capable of receiving a delta against the node's previous contents.  <a href="#adf9c440cd7a740d01646ab2f9cf66817">More...</a><br/></td></tr>
<tr class="separator:adf9c440cd7a740d01646ab2f9cf66817"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af39904da60ae1b07cd10970a65b71cb7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af39904da60ae1b07cd10970a65b71cb7"></a>
<a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#af39904da60ae1b07cd10970a65b71cb7">close_node</a> )(void *node_baton)</td></tr>
<tr class="memdesc:af39904da60ae1b07cd10970a65b71cb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">The parser has reached the end of the current node represented by <em>node_baton</em>, it can be freed. <br/></td></tr>
<tr class="separator:af39904da60ae1b07cd10970a65b71cb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d3cf7f6da6fb3964bf1cf702112fb09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsvn__repos__parse__fns3__t.html#a1d3cf7f6da6fb3964bf1cf702112fb09">close_revision</a> )(void *revision_baton)</td></tr>
<tr class="memdesc:a1d3cf7f6da6fb3964bf1cf702112fb09"><td class="mdescLeft">&#160;</td><td class="mdescRight">The parser has reached the end of the current revision represented by <em>revision_baton</em>.  <a href="#a1d3cf7f6da6fb3964bf1cf702112fb09">More...</a><br/></td></tr>
<tr class="separator:a1d3cf7f6da6fb3964bf1cf702112fb09"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A vtable that is driven by <a class="el" href="group__svn__repos__dump__load.html#gae5ed3287ba9df58687aaaeb2b9095c05" title="Read and parse dumpfile-formatted stream, calling callbacks in parse_fns/parse_baton, and using pool for allocations. ">svn_repos_parse_dumpstream3()</a>. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.8. </dd></dl>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02802">2802</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>
</div><h2 class="groupheader">Field Documentation</h2>
<a class="anchor" id="adf9c440cd7a740d01646ab2f9cf66817"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::apply_textdelta)(<a class="el" href="group__svn__delta__txt__delta.html#ga1c0d461a3f244928d7f0339c1cbe3219">svn_txdelta_window_handler_t</a> *handler, void **handler_baton, void *node_baton)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>For a given <em>node_baton</em>, set <em>handler</em> and <em>handler_baton</em> to a window handler and baton capable of receiving a delta against the node's previous contents. </p>
<p>A NULL window will be sent to the handler after all the windows are sent.</p>
<p>If a <code>NULL</code> is returned instead of a handler, the vtable is indicating that no delta is desired, and the parser will not attempt to send it. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02879">2879</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1d3cf7f6da6fb3964bf1cf702112fb09"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::close_revision)(void *revision_baton)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The parser has reached the end of the current revision represented by <em>revision_baton</em>. </p>
<p>In other words, there are no more changed nodes within the revision. The baton can be freed. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02892">2892</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3582623883a4bbb4415d2eca7d6088e7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::delete_node_property)(void *node_baton, const char *name)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>For a given <em>node_baton</em>, delete property <em>name</em>. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02854">2854</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa0e050b3571fdcd5fd5bc650b0850a4d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::magic_header_record)(int version, void *parse_baton, apr_pool_t *pool)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The parser has discovered a new "magic header" record within the parsing session represented by <em>parse_baton</em>. </p>
<p>The dump-format version number is <em>version</em>. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02808">2808</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2fac4102114cc4f413bf92bb8633774a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::new_node_record)(void **node_baton, apr_hash_t *headers, void *revision_baton, apr_pool_t *pool)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The parser has discovered a new node record within the current revision represented by <em>revision_baton</em>. </p>
<p>All the headers are placed in <em>headers</em> (as with <code>new_revision_record</code>), allocated in <em>pool</em>. The <em>node_baton</em> received back is allocated in <em>pool</em> and represents the node. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02838">2838</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9c085254975f6886b7c861b9d286a4cb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::new_revision_record)(void **revision_baton, apr_hash_t *headers, void *parse_baton, apr_pool_t *pool)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The parser has discovered a new revision record within the parsing session represented by <em>parse_baton</em>. </p>
<p>All the headers are placed in <em>headers</em> (allocated in <em>pool</em>), which maps <code>const char *</code> header-name ==&gt; <code>const char *</code> header-value. The <em>revision_baton</em> received back (also allocated in <em>pool</em>) represents the revision. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02827">2827</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab9dbf23effea7688bd93e4d7c23e1330"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::remove_node_props)(void *node_baton)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>For a given <em>node_baton</em>, remove all properties. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02857">2857</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2405143d84d23a350709c0e88c6727f4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::set_fulltext)(<a class="el" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af">svn_stream_t</a> **stream, void *node_baton)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>For a given <em>node_baton</em>, receive a writable <em>stream</em> capable of receiving the node's fulltext. </p>
<p>After writing the fulltext, call the stream's close() function.</p>
<p>If a <code>NULL</code> is returned instead of a stream, the vtable is indicating that no text is desired, and the parser will not attempt to send it. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02867">2867</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="af1baa470cfc9f501427508b9809bcbb9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::set_node_property)(void *node_baton, const char *name, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *value)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>For a given <em>node_baton</em>, set a property <em>name</em> to <em>value</em>. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02849">2849</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7ed6b48dabba1e75c6dce338a94d4d19"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::set_revision_property)(void *revision_baton, const char *name, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *value)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>For a given <em>revision_baton</em>, set a property <em>name</em> to <em>value</em>. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02844">2844</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<a class="anchor" id="a688f8c2fe2b14a6447be37efc10625e5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>*(* svn_repos_parse_fns3_t::uuid_record)(const char *uuid, void *parse_baton, apr_pool_t *pool)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The parser has discovered a new uuid record within the parsing session represented by <em>parse_baton</em>. </p>
<p>The uuid's value is <em>uuid</em>, and it is allocated in <em>pool</em>. </p>

<p>Definition at line <a class="el" href="svn__repos_8h_source.html#l02816">2816</a> of file <a class="el" href="svn__repos_8h_source.html">svn_repos.h</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="svn__repos_8h_source.html">svn_repos.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:37:25 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
