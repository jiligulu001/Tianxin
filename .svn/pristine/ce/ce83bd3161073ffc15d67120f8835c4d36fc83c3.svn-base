<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Subversion: svn_client.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">svn_client.h</div>  </div>
</div>
<div class="contents">
<a href="svn__client_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**</span>
<a name="l00002"></a>00002 <span class="comment"> * @copyright</span>
<a name="l00003"></a>00003 <span class="comment"> * ====================================================================</span>
<a name="l00004"></a>00004 <span class="comment"> *    Licensed to the Apache Software Foundation (ASF) under one</span>
<a name="l00005"></a>00005 <span class="comment"> *    or more contributor license agreements.  See the NOTICE file</span>
<a name="l00006"></a>00006 <span class="comment"> *    distributed with this work for additional information</span>
<a name="l00007"></a>00007 <span class="comment"> *    regarding copyright ownership.  The ASF licenses this file</span>
<a name="l00008"></a>00008 <span class="comment"> *    to you under the Apache License, Version 2.0 (the</span>
<a name="l00009"></a>00009 <span class="comment"> *    &quot;License&quot;); you may not use this file except in compliance</span>
<a name="l00010"></a>00010 <span class="comment"> *    with the License.  You may obtain a copy of the License at</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00013"></a>00013 <span class="comment"> *</span>
<a name="l00014"></a>00014 <span class="comment"> *    Unless required by applicable law or agreed to in writing,</span>
<a name="l00015"></a>00015 <span class="comment"> *    software distributed under the License is distributed on an</span>
<a name="l00016"></a>00016 <span class="comment"> *    &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span>
<a name="l00017"></a>00017 <span class="comment"> *    KIND, either express or implied.  See the License for the</span>
<a name="l00018"></a>00018 <span class="comment"> *    specific language governing permissions and limitations</span>
<a name="l00019"></a>00019 <span class="comment"> *    under the License.</span>
<a name="l00020"></a>00020 <span class="comment"> * ====================================================================</span>
<a name="l00021"></a>00021 <span class="comment"> * @endcopyright</span>
<a name="l00022"></a>00022 <span class="comment"> *</span>
<a name="l00023"></a>00023 <span class="comment"> * @file svn_client.h</span>
<a name="l00024"></a>00024 <span class="comment"> * @brief Subversion&#39;s client library</span>
<a name="l00025"></a>00025 <span class="comment"> *</span>
<a name="l00026"></a>00026 <span class="comment"> * Requires:  The working copy library and repository access library.</span>
<a name="l00027"></a>00027 <span class="comment"> * Provides:  Broad wrappers around working copy library functionality.</span>
<a name="l00028"></a>00028 <span class="comment"> * Used By:   Client programs.</span>
<a name="l00029"></a>00029 <span class="comment"> */</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="preprocessor">#ifndef SVN_CLIENT_H</span>
<a name="l00032"></a>00032 <span class="preprocessor"></span><span class="preprocessor">#define SVN_CLIENT_H</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;apr.h&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;apr_pools.h&gt;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &lt;apr_hash.h&gt;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &lt;apr_tables.h&gt;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &lt;apr_getopt.h&gt;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &lt;apr_file_io.h&gt;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &lt;apr_time.h&gt;</span>
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="svn__types_8h.html" title="Subversion&#39;s data types.">svn_types.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="svn__string_8h.html" title="Counted-length strings for Subversion, plus some C string goodies.">svn_string.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;<a class="code" href="svn__wc_8h.html" title="Subversion&#39;s working copy library.">svn_wc.h</a>&quot;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;<a class="code" href="svn__opt_8h.html" title="Option and argument parsing for Subversion command lines.">svn_opt.h</a>&quot;</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include &quot;<a class="code" href="svn__ra_8h.html" title="Repository Access.">svn_ra.h</a>&quot;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &quot;<a class="code" href="svn__diff_8h.html" title="Contextual diffing.">svn_diff.h</a>&quot;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &quot;<a class="code" href="svn__auth_8h.html" title="Subversion&#39;s authentication system.">svn_auth.h</a>&quot;</span>
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00051"></a>00051 <span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {
<a name="l00052"></a>00052 <span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span>
<a name="l00053"></a>00053 
<a name="l00054"></a>00054 
<a name="l00055"></a>00055 <span class="comment"></span>
<a name="l00056"></a>00056 <span class="comment">/**</span>
<a name="l00057"></a>00057 <span class="comment"> * Get libsvn_client version information.</span>
<a name="l00058"></a>00058 <span class="comment"> *</span>
<a name="l00059"></a>00059 <span class="comment"> * @since New in 1.1.</span>
<a name="l00060"></a>00060 <span class="comment"> */</span>
<a name="l00061"></a>00061 <span class="keyword">const</span> <a class="code" href="structsvn__version__t.html" title="Version information.">svn_version_t</a> *
<a name="l00062"></a>00062 <a class="code" href="svn__client_8h.html#a5f7e24ff1d65fd6fd64b0acf01e43ecb" title="Get libsvn_client version information.">svn_client_version</a>(<span class="keywordtype">void</span>);
<a name="l00063"></a>00063 <span class="comment"></span>
<a name="l00064"></a>00064 <span class="comment">/** Client supporting functions</span>
<a name="l00065"></a>00065 <span class="comment"> *</span>
<a name="l00066"></a>00066 <span class="comment"> * @defgroup clnt_support Client supporting subsystem</span>
<a name="l00067"></a>00067 <span class="comment"> *</span>
<a name="l00068"></a>00068 <span class="comment"> * @{</span>
<a name="l00069"></a>00069 <span class="comment"> */</span>
<a name="l00070"></a>00070 
<a name="l00071"></a>00071 
<a name="l00072"></a>00072 <span class="comment">/*** Authentication stuff ***/</span>
<a name="l00073"></a>00073 <span class="comment"></span>
<a name="l00074"></a>00074 <span class="comment">/**  The new authentication system allows the RA layer to &quot;pull&quot;</span>
<a name="l00075"></a>00075 <span class="comment"> *   information as needed from libsvn_client.</span>
<a name="l00076"></a>00076 <span class="comment"> *</span>
<a name="l00077"></a>00077 <span class="comment"> *   @deprecated Replaced by the svn_auth_* functions.</span>
<a name="l00078"></a>00078 <span class="comment"> *   @see auth_fns</span>
<a name="l00079"></a>00079 <span class="comment"> *</span>
<a name="l00080"></a>00080 <span class="comment"> *   @defgroup auth_fns_depr (deprecated) AuthZ client subsystem</span>
<a name="l00081"></a>00081 <span class="comment"> *</span>
<a name="l00082"></a>00082 <span class="comment"> *   @{</span>
<a name="l00083"></a>00083 <span class="comment"> */</span>
<a name="l00084"></a>00084 <span class="comment"></span>
<a name="l00085"></a>00085 <span class="comment">/** Create and return @a *provider, an authentication provider of type</span>
<a name="l00086"></a>00086 <span class="comment"> * svn_auth_cred_simple_t that gets information by prompting the user</span>
<a name="l00087"></a>00087 <span class="comment"> * with @a prompt_func and @a prompt_baton.  Allocate @a *provider in</span>
<a name="l00088"></a>00088 <span class="comment"> * @a pool.</span>
<a name="l00089"></a>00089 <span class="comment"> *</span>
<a name="l00090"></a>00090 <span class="comment"> * If both #SVN_AUTH_PARAM_DEFAULT_USERNAME and</span>
<a name="l00091"></a>00091 <span class="comment"> * #SVN_AUTH_PARAM_DEFAULT_PASSWORD are defined as runtime</span>
<a name="l00092"></a>00092 <span class="comment"> * parameters in the @c auth_baton, then @a *provider will return the</span>
<a name="l00093"></a>00093 <span class="comment"> * default arguments when svn_auth_first_credentials() is called.  If</span>
<a name="l00094"></a>00094 <span class="comment"> * svn_auth_first_credentials() fails, then @a *provider will</span>
<a name="l00095"></a>00095 <span class="comment"> * re-prompt @a retry_limit times (via svn_auth_next_credentials()).</span>
<a name="l00096"></a>00096 <span class="comment"> * For infinite retries, set @a retry_limit to value less than 0.</span>
<a name="l00097"></a>00097 <span class="comment"> *</span>
<a name="l00098"></a>00098 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00099"></a>00099 <span class="comment"> * Use svn_auth_get_simple_prompt_provider() instead.</span>
<a name="l00100"></a>00100 <span class="comment"> */</span>
<a name="l00101"></a>00101 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00102"></a>00102 <span class="keywordtype">void</span>
<a name="l00103"></a>00103 <a class="code" href="group__auth__fns__depr.html#gac48f373d9e23557fe39d6326f778beff" title="Create and return *provider, an authentication provider of type svn_auth_cred_simple_t that gets info...">svn_client_get_simple_prompt_provider</a>(
<a name="l00104"></a>00104   <a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00105"></a>00105   <a class="code" href="group__auth__fns.html#gab3e889e27559677e7e1a13a9142a381d" title="Credential-constructing prompt functions.">svn_auth_simple_prompt_func_t</a> prompt_func,
<a name="l00106"></a>00106   <span class="keywordtype">void</span> *prompt_baton,
<a name="l00107"></a>00107   <span class="keywordtype">int</span> retry_limit,
<a name="l00108"></a>00108   apr_pool_t *pool);
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 <span class="comment"></span>
<a name="l00111"></a>00111 <span class="comment">/** Create and return @a *provider, an authentication provider of type</span>
<a name="l00112"></a>00112 <span class="comment"> * #svn_auth_cred_username_t that gets information by prompting the</span>
<a name="l00113"></a>00113 <span class="comment"> * user with @a prompt_func and @a prompt_baton.  Allocate @a *provider</span>
<a name="l00114"></a>00114 <span class="comment"> * in @a pool.</span>
<a name="l00115"></a>00115 <span class="comment"> *</span>
<a name="l00116"></a>00116 <span class="comment"> * If #SVN_AUTH_PARAM_DEFAULT_USERNAME is defined as a runtime</span>
<a name="l00117"></a>00117 <span class="comment"> * parameter in the @c auth_baton, then @a *provider will return the</span>
<a name="l00118"></a>00118 <span class="comment"> * default argument when svn_auth_first_credentials() is called.  If</span>
<a name="l00119"></a>00119 <span class="comment"> * svn_auth_first_credentials() fails, then @a *provider will</span>
<a name="l00120"></a>00120 <span class="comment"> * re-prompt @a retry_limit times (via svn_auth_next_credentials()).</span>
<a name="l00121"></a>00121 <span class="comment"> * For infinite retries, set @a retry_limit to value less than 0.</span>
<a name="l00122"></a>00122 <span class="comment"> *</span>
<a name="l00123"></a>00123 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00124"></a>00124 <span class="comment"> * Use svn_auth_get_username_prompt_provider() instead.</span>
<a name="l00125"></a>00125 <span class="comment"> */</span>
<a name="l00126"></a>00126 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00127"></a>00127 <span class="keywordtype">void</span>
<a name="l00128"></a>00128 <a class="code" href="group__auth__fns__depr.html#ga3ec77aeb4c8a7f3ceac74eec0f365cff" title="Create and return *provider, an authentication provider of type svn_auth_cred_username_t that gets in...">svn_client_get_username_prompt_provider</a>(
<a name="l00129"></a>00129   <a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00130"></a>00130   <a class="code" href="group__auth__fns.html#gaf05167cb101739421c2e9542e27d5a88" title="Set *cred by prompting the user, allocating *cred in pool.">svn_auth_username_prompt_func_t</a> prompt_func,
<a name="l00131"></a>00131   <span class="keywordtype">void</span> *prompt_baton,
<a name="l00132"></a>00132   <span class="keywordtype">int</span> retry_limit,
<a name="l00133"></a>00133   apr_pool_t *pool);
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 <span class="comment"></span>
<a name="l00136"></a>00136 <span class="comment">/** Create and return @a *provider, an authentication provider of type</span>
<a name="l00137"></a>00137 <span class="comment"> * #svn_auth_cred_simple_t that gets/sets information from the user&#39;s</span>
<a name="l00138"></a>00138 <span class="comment"> * ~/.subversion configuration directory.  Allocate @a *provider in</span>
<a name="l00139"></a>00139 <span class="comment"> * @a pool.</span>
<a name="l00140"></a>00140 <span class="comment"> *</span>
<a name="l00141"></a>00141 <span class="comment"> * If a default username or password is available, @a *provider will</span>
<a name="l00142"></a>00142 <span class="comment"> * honor them as well, and return them when</span>
<a name="l00143"></a>00143 <span class="comment"> * svn_auth_first_credentials() is called.  (see</span>
<a name="l00144"></a>00144 <span class="comment"> * #SVN_AUTH_PARAM_DEFAULT_USERNAME and #SVN_AUTH_PARAM_DEFAULT_PASSWORD).</span>
<a name="l00145"></a>00145 <span class="comment"> *</span>
<a name="l00146"></a>00146 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00147"></a>00147 <span class="comment"> * Use svn_auth_get_simple_provider2() instead.</span>
<a name="l00148"></a>00148 <span class="comment"> */</span>
<a name="l00149"></a>00149 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00150"></a>00150 <span class="keywordtype">void</span>
<a name="l00151"></a>00151 <a class="code" href="group__auth__fns__depr.html#ga6d34f6704d7d95da3b6bad548d3bcf58" title="Create and return *provider, an authentication provider of type svn_auth_cred_simple_t that gets/sets...">svn_client_get_simple_provider</a>(<a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00152"></a>00152                                apr_pool_t *pool);
<a name="l00153"></a>00153 
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 <span class="preprocessor">#if (defined(WIN32) &amp;&amp; !defined(__MINGW32__)) || defined(DOXYGEN) || defined(CTYPESGEN) || defined(SWIG)</span>
<a name="l00156"></a>00156 <span class="preprocessor"></span><span class="comment">/**</span>
<a name="l00157"></a>00157 <span class="comment"> * Create and return @a *provider, an authentication provider of type</span>
<a name="l00158"></a>00158 <span class="comment"> * #svn_auth_cred_simple_t that gets/sets information from the user&#39;s</span>
<a name="l00159"></a>00159 <span class="comment"> * ~/.subversion configuration directory.  Allocate @a *provider in</span>
<a name="l00160"></a>00160 <span class="comment"> * @a pool.</span>
<a name="l00161"></a>00161 <span class="comment"> *</span>
<a name="l00162"></a>00162 <span class="comment"> * This is like svn_client_get_simple_provider(), except that, when</span>
<a name="l00163"></a>00163 <span class="comment"> * running on Window 2000 or newer (or any other Windows version that</span>
<a name="l00164"></a>00164 <span class="comment"> * includes the CryptoAPI), the provider encrypts the password before</span>
<a name="l00165"></a>00165 <span class="comment"> * storing it to disk. On earlier versions of Windows, the provider</span>
<a name="l00166"></a>00166 <span class="comment"> * does nothing.</span>
<a name="l00167"></a>00167 <span class="comment"> *</span>
<a name="l00168"></a>00168 <span class="comment"> * @since New in 1.2.</span>
<a name="l00169"></a>00169 <span class="comment"> * @note This function is only available on Windows.</span>
<a name="l00170"></a>00170 <span class="comment"> *</span>
<a name="l00171"></a>00171 <span class="comment"> * @note An administrative password reset may invalidate the account&#39;s</span>
<a name="l00172"></a>00172 <span class="comment"> * secret key. This function will detect that situation and behave as</span>
<a name="l00173"></a>00173 <span class="comment"> * if the password were not cached at all.</span>
<a name="l00174"></a>00174 <span class="comment"> *</span>
<a name="l00175"></a>00175 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00176"></a>00176 <span class="comment"> * Use svn_auth_get_windows_simple_provider() instead.</span>
<a name="l00177"></a>00177 <span class="comment"> */</span>
<a name="l00178"></a>00178 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00179"></a>00179 <span class="keywordtype">void</span>
<a name="l00180"></a>00180 <a class="code" href="group__auth__fns__depr.html#gaa0038b72473f387cb4ce574ab1f0e97a" title="Create and return *provider, an authentication provider of type svn_auth_cred_simple_t that gets/sets...">svn_client_get_windows_simple_provider</a>(<a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00181"></a>00181                                        apr_pool_t *pool);
<a name="l00182"></a>00182 <span class="preprocessor">#endif </span><span class="comment">/* WIN32 &amp;&amp; !__MINGW32__ || DOXYGEN || CTYPESGEN || SWIG */</span>
<a name="l00183"></a>00183 <span class="comment"></span>
<a name="l00184"></a>00184 <span class="comment">/** Create and return @a *provider, an authentication provider of type</span>
<a name="l00185"></a>00185 <span class="comment"> * #svn_auth_cred_username_t that gets/sets information from a user&#39;s</span>
<a name="l00186"></a>00186 <span class="comment"> * ~/.subversion configuration directory.  Allocate @a *provider in</span>
<a name="l00187"></a>00187 <span class="comment"> * @a pool.</span>
<a name="l00188"></a>00188 <span class="comment"> *</span>
<a name="l00189"></a>00189 <span class="comment"> * If a default username is available, @a *provider will honor it,</span>
<a name="l00190"></a>00190 <span class="comment"> * and return it when svn_auth_first_credentials() is called.  (see</span>
<a name="l00191"></a>00191 <span class="comment"> * #SVN_AUTH_PARAM_DEFAULT_USERNAME).</span>
<a name="l00192"></a>00192 <span class="comment"> *</span>
<a name="l00193"></a>00193 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00194"></a>00194 <span class="comment"> * Use svn_auth_get_username_provider() instead.</span>
<a name="l00195"></a>00195 <span class="comment"> */</span>
<a name="l00196"></a>00196 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00197"></a>00197 <span class="keywordtype">void</span>
<a name="l00198"></a>00198 <a class="code" href="group__auth__fns__depr.html#ga7cad62f927b0c5f37d58255a695ed15a" title="Create and return *provider, an authentication provider of type svn_auth_cred_username_t that gets/se...">svn_client_get_username_provider</a>(<a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00199"></a>00199                                  apr_pool_t *pool);
<a name="l00200"></a>00200 
<a name="l00201"></a>00201 <span class="comment"></span>
<a name="l00202"></a>00202 <span class="comment">/** Create and return @a *provider, an authentication provider of type</span>
<a name="l00203"></a>00203 <span class="comment"> * #svn_auth_cred_ssl_server_trust_t, allocated in @a pool.</span>
<a name="l00204"></a>00204 <span class="comment"> *</span>
<a name="l00205"></a>00205 <span class="comment"> * @a *provider retrieves its credentials from the configuration</span>
<a name="l00206"></a>00206 <span class="comment"> * mechanism.  The returned credential is used to override SSL</span>
<a name="l00207"></a>00207 <span class="comment"> * security on an error.</span>
<a name="l00208"></a>00208 <span class="comment"> *</span>
<a name="l00209"></a>00209 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00210"></a>00210 <span class="comment"> * Use svn_auth_get_ssl_server_trust_file_provider() instead.</span>
<a name="l00211"></a>00211 <span class="comment"> */</span>
<a name="l00212"></a>00212 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00213"></a>00213 <span class="keywordtype">void</span>
<a name="l00214"></a>00214 <a class="code" href="group__auth__fns__depr.html#gaf45bf7daebda5b3aa64e7a6c822943d0" title="Create and return *provider, an authentication provider of type svn_auth_cred_ssl_server_trust_t, allocated in pool.">svn_client_get_ssl_server_trust_file_provider</a>(
<a name="l00215"></a>00215   <a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00216"></a>00216   apr_pool_t *pool);
<a name="l00217"></a>00217 
<a name="l00218"></a>00218 <span class="comment"></span>
<a name="l00219"></a>00219 <span class="comment">/** Create and return @a *provider, an authentication provider of type</span>
<a name="l00220"></a>00220 <span class="comment"> * #svn_auth_cred_ssl_client_cert_t, allocated in @a pool.</span>
<a name="l00221"></a>00221 <span class="comment"> *</span>
<a name="l00222"></a>00222 <span class="comment"> * @a *provider retrieves its credentials from the configuration</span>
<a name="l00223"></a>00223 <span class="comment"> * mechanism.  The returned credential is used to load the appropriate</span>
<a name="l00224"></a>00224 <span class="comment"> * client certificate for authentication when requested by a server.</span>
<a name="l00225"></a>00225 <span class="comment"> *</span>
<a name="l00226"></a>00226 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00227"></a>00227 <span class="comment"> * Use svn_auth_get_ssl_client_cert_file_provider() instead.</span>
<a name="l00228"></a>00228 <span class="comment"> */</span>
<a name="l00229"></a>00229 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00230"></a>00230 <span class="keywordtype">void</span>
<a name="l00231"></a>00231 <a class="code" href="group__auth__fns__depr.html#gaf4478650a91ea335900b846e485dba14" title="Create and return *provider, an authentication provider of type svn_auth_cred_ssl_client_cert_t, allocated in pool.">svn_client_get_ssl_client_cert_file_provider</a>(
<a name="l00232"></a>00232   <a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00233"></a>00233   apr_pool_t *pool);
<a name="l00234"></a>00234 
<a name="l00235"></a>00235 <span class="comment"></span>
<a name="l00236"></a>00236 <span class="comment">/** Create and return @a *provider, an authentication provider of type</span>
<a name="l00237"></a>00237 <span class="comment"> * #svn_auth_cred_ssl_client_cert_pw_t, allocated in @a pool.</span>
<a name="l00238"></a>00238 <span class="comment"> *</span>
<a name="l00239"></a>00239 <span class="comment"> * @a *provider retrieves its credentials from the configuration</span>
<a name="l00240"></a>00240 <span class="comment"> * mechanism.  The returned credential is used when a loaded client</span>
<a name="l00241"></a>00241 <span class="comment"> * certificate is protected by a passphrase.</span>
<a name="l00242"></a>00242 <span class="comment"> *</span>
<a name="l00243"></a>00243 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00244"></a>00244 <span class="comment"> * Use svn_auth_get_ssl_client_cert_pw_file_provider2() instead.</span>
<a name="l00245"></a>00245 <span class="comment"> */</span>
<a name="l00246"></a>00246 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00247"></a>00247 <span class="keywordtype">void</span>
<a name="l00248"></a>00248 <a class="code" href="group__auth__fns__depr.html#gac3c621371933d52e2b1791aea07b31d3" title="Create and return *provider, an authentication provider of type svn_auth_cred_ssl_client_cert_pw_t, allocated in pool.">svn_client_get_ssl_client_cert_pw_file_provider</a>(
<a name="l00249"></a>00249   <a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00250"></a>00250   apr_pool_t *pool);
<a name="l00251"></a>00251 
<a name="l00252"></a>00252 <span class="comment"></span>
<a name="l00253"></a>00253 <span class="comment">/** Create and return @a *provider, an authentication provider of type</span>
<a name="l00254"></a>00254 <span class="comment"> * #svn_auth_cred_ssl_server_trust_t, allocated in @a pool.</span>
<a name="l00255"></a>00255 <span class="comment"> *</span>
<a name="l00256"></a>00256 <span class="comment"> * @a *provider retrieves its credentials by using the @a prompt_func</span>
<a name="l00257"></a>00257 <span class="comment"> * and @a prompt_baton.  The returned credential is used to override</span>
<a name="l00258"></a>00258 <span class="comment"> * SSL security on an error.</span>
<a name="l00259"></a>00259 <span class="comment"> *</span>
<a name="l00260"></a>00260 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00261"></a>00261 <span class="comment"> * Use svn_auth_get_ssl_server_trust_prompt_provider() instead.</span>
<a name="l00262"></a>00262 <span class="comment"> */</span>
<a name="l00263"></a>00263 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00264"></a>00264 <span class="keywordtype">void</span>
<a name="l00265"></a>00265 <a class="code" href="group__auth__fns__depr.html#ga2a800d7a8eb83518fce700b2b7ab27df" title="Create and return *provider, an authentication provider of type svn_auth_cred_ssl_server_trust_t, allocated in pool.">svn_client_get_ssl_server_trust_prompt_provider</a>(
<a name="l00266"></a>00266   <a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00267"></a>00267   <a class="code" href="group__auth__fns.html#gac5805f633a96271f97b919297e9908a3" title="Set *cred by prompting the user, allocating *cred in pool.">svn_auth_ssl_server_trust_prompt_func_t</a> prompt_func,
<a name="l00268"></a>00268   <span class="keywordtype">void</span> *prompt_baton,
<a name="l00269"></a>00269   apr_pool_t *pool);
<a name="l00270"></a>00270 
<a name="l00271"></a>00271 <span class="comment"></span>
<a name="l00272"></a>00272 <span class="comment">/** Create and return @a *provider, an authentication provider of type</span>
<a name="l00273"></a>00273 <span class="comment"> * #svn_auth_cred_ssl_client_cert_t, allocated in @a pool.</span>
<a name="l00274"></a>00274 <span class="comment"> *</span>
<a name="l00275"></a>00275 <span class="comment"> * @a *provider retrieves its credentials by using the @a prompt_func</span>
<a name="l00276"></a>00276 <span class="comment"> * and @a prompt_baton.  The returned credential is used to load the</span>
<a name="l00277"></a>00277 <span class="comment"> * appropriate client certificate for authentication when requested by</span>
<a name="l00278"></a>00278 <span class="comment"> * a server.  The prompt will be retried @a retry_limit times.</span>
<a name="l00279"></a>00279 <span class="comment"> * For infinite retries, set @a retry_limit to value less than 0.</span>
<a name="l00280"></a>00280 <span class="comment"> *</span>
<a name="l00281"></a>00281 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00282"></a>00282 <span class="comment"> * Use svn_auth_get_ssl_client_cert_prompt_provider() instead.</span>
<a name="l00283"></a>00283 <span class="comment"> */</span>
<a name="l00284"></a>00284 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00285"></a>00285 <span class="keywordtype">void</span>
<a name="l00286"></a>00286 <a class="code" href="group__auth__fns__depr.html#gaacabebf3b905a98232c743f735574166" title="Create and return *provider, an authentication provider of type svn_auth_cred_ssl_client_cert_t, allocated in pool.">svn_client_get_ssl_client_cert_prompt_provider</a>(
<a name="l00287"></a>00287   <a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00288"></a>00288   <a class="code" href="group__auth__fns.html#ga5afb52c44e95354a2ec52f6fe030c5d2" title="Set *cred by prompting the user, allocating *cred in pool.">svn_auth_ssl_client_cert_prompt_func_t</a> prompt_func,
<a name="l00289"></a>00289   <span class="keywordtype">void</span> *prompt_baton,
<a name="l00290"></a>00290   <span class="keywordtype">int</span> retry_limit,
<a name="l00291"></a>00291   apr_pool_t *pool);
<a name="l00292"></a>00292 
<a name="l00293"></a>00293 <span class="comment"></span>
<a name="l00294"></a>00294 <span class="comment">/** Create and return @a *provider, an authentication provider of type</span>
<a name="l00295"></a>00295 <span class="comment"> * #svn_auth_cred_ssl_client_cert_pw_t, allocated in @a pool.</span>
<a name="l00296"></a>00296 <span class="comment"> *</span>
<a name="l00297"></a>00297 <span class="comment"> * @a *provider retrieves its credentials by using the @a prompt_func</span>
<a name="l00298"></a>00298 <span class="comment"> * and @a prompt_baton.  The returned credential is used when a loaded</span>
<a name="l00299"></a>00299 <span class="comment"> * client certificate is protected by a passphrase.  The prompt will</span>
<a name="l00300"></a>00300 <span class="comment"> * be retried @a retry_limit times. For infinite retries, set @a retry_limit</span>
<a name="l00301"></a>00301 <span class="comment"> * to value less than 0.</span>
<a name="l00302"></a>00302 <span class="comment"> *</span>
<a name="l00303"></a>00303 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00304"></a>00304 <span class="comment"> * Use svn_auth_get_ssl_client_cert_pw_prompt_provider() instead.</span>
<a name="l00305"></a>00305 <span class="comment"> */</span>
<a name="l00306"></a>00306 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00307"></a>00307 <span class="keywordtype">void</span>
<a name="l00308"></a>00308 <a class="code" href="group__auth__fns__depr.html#ga84751b034cf4dbc07bac2b26250b0494" title="Create and return *provider, an authentication provider of type svn_auth_cred_ssl_client_cert_pw_t, allocated in pool.">svn_client_get_ssl_client_cert_pw_prompt_provider</a>(
<a name="l00309"></a>00309   <a class="code" href="structsvn__auth__provider__object__t.html" title="A provider object, ready to be put into an array and given to svn_auth_open().">svn_auth_provider_object_t</a> **provider,
<a name="l00310"></a>00310   <a class="code" href="group__auth__fns.html#gafeb529b5bafaed2e3f423e4186d60f06" title="Set *cred by prompting the user, allocating *cred in pool.">svn_auth_ssl_client_cert_pw_prompt_func_t</a> prompt_func,
<a name="l00311"></a>00311   <span class="keywordtype">void</span> *prompt_baton,
<a name="l00312"></a>00312   <span class="keywordtype">int</span> retry_limit,
<a name="l00313"></a>00313   apr_pool_t *pool);
<a name="l00314"></a>00314 <span class="comment"></span>
<a name="l00315"></a>00315 <span class="comment">/** @} */</span>
<a name="l00316"></a>00316 <span class="comment"></span>
<a name="l00317"></a>00317 <span class="comment">/**</span>
<a name="l00318"></a>00318 <span class="comment"> * Revisions and Peg Revisions</span>
<a name="l00319"></a>00319 <span class="comment"> *</span>
<a name="l00320"></a>00320 <span class="comment"> * @defgroup clnt_revisions Revisions and Peg Revisions</span>
<a name="l00321"></a>00321 <span class="comment"> *</span>
<a name="l00322"></a>00322 <span class="comment"> * A brief word on operative and peg revisions.</span>
<a name="l00323"></a>00323 <span class="comment"> *</span>
<a name="l00324"></a>00324 <span class="comment"> * If the kind of the peg revision is #svn_opt_revision_unspecified, then it</span>
<a name="l00325"></a>00325 <span class="comment"> * defaults to #svn_opt_revision_head for URLs and #svn_opt_revision_working</span>
<a name="l00326"></a>00326 <span class="comment"> * for local paths.</span>
<a name="l00327"></a>00327 <span class="comment"> *</span>
<a name="l00328"></a>00328 <span class="comment"> * For deeper insight, please see the</span>
<a name="l00329"></a>00329 <span class="comment"> * &lt;a href=&quot;http://svnbook.red-bean.com/nightly/en/svn.advanced.pegrevs.html&quot;&gt;</span>
<a name="l00330"></a>00330 <span class="comment"> * Peg and Operative Revisions&lt;/a&gt; section of the Subversion Book.</span>
<a name="l00331"></a>00331 <span class="comment"> */</span>
<a name="l00332"></a>00332 <span class="comment"></span>
<a name="l00333"></a>00333 <span class="comment">/**</span>
<a name="l00334"></a>00334 <span class="comment"> * Commit operations</span>
<a name="l00335"></a>00335 <span class="comment"> *</span>
<a name="l00336"></a>00336 <span class="comment"> * @defgroup clnt_commit Client commit subsystem</span>
<a name="l00337"></a>00337 <span class="comment"> *</span>
<a name="l00338"></a>00338 <span class="comment"> * @{</span>
<a name="l00339"></a>00339 <span class="comment"> */</span>
<a name="l00340"></a>00340 <span class="comment"></span>
<a name="l00341"></a>00341 <span class="comment">/** This is a structure which stores a filename and a hash of property</span>
<a name="l00342"></a>00342 <span class="comment"> * names and values.</span>
<a name="l00343"></a>00343 <span class="comment"> *</span>
<a name="l00344"></a>00344 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l00345"></a>00345 <span class="comment"> */</span>
<a name="l00346"></a><a class="code" href="structsvn__client__proplist__item__t.html">00346</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__client__proplist__item__t.html" title="This is a structure which stores a filename and a hash of property names and values.">svn_client_proplist_item_t</a>
<a name="l00347"></a>00347 {<span class="comment"></span>
<a name="l00348"></a>00348 <span class="comment">  /** The name of the node on which these properties are set. */</span>
<a name="l00349"></a><a class="code" href="structsvn__client__proplist__item__t.html#adbd1342ddd15e49705960b6381b56277">00349</a>   <a class="code" href="structsvn__stringbuf__t.html" title="A buffered string, capable of appending without an allocation and copy for each append.">svn_stringbuf_t</a> *<a class="code" href="structsvn__client__proplist__item__t.html#adbd1342ddd15e49705960b6381b56277" title="The name of the node on which these properties are set.">node_name</a>;
<a name="l00350"></a>00350 <span class="comment"></span>
<a name="l00351"></a>00351 <span class="comment">  /** A hash of (const char *) property names, and (svn_string_t *) property</span>
<a name="l00352"></a>00352 <span class="comment">   * values. */</span>
<a name="l00353"></a><a class="code" href="structsvn__client__proplist__item__t.html#a42ecc0a7c78c5eeae28650b1b9ac9796">00353</a>   apr_hash_t *<a class="code" href="structsvn__client__proplist__item__t.html#a42ecc0a7c78c5eeae28650b1b9ac9796" title="A hash of (const char *) property names, and (svn_string_t *) property values.">prop_hash</a>;
<a name="l00354"></a>00354 
<a name="l00355"></a>00355 } <a class="code" href="group__clnt__commit.html#ga445b192b3195a0fda1e68b8ea91389f9" title="This is a structure which stores a filename and a hash of property names and values.">svn_client_proplist_item_t</a>;
<a name="l00356"></a>00356 <span class="comment"></span>
<a name="l00357"></a>00357 <span class="comment">/**</span>
<a name="l00358"></a>00358 <span class="comment"> * The callback invoked by svn_client_proplist3().  Each invocation</span>
<a name="l00359"></a>00359 <span class="comment"> * provides the regular properties of @a path which is either a WC path or</span>
<a name="l00360"></a>00360 <span class="comment"> * a URL.  @a prop_hash maps property names (char *) to property</span>
<a name="l00361"></a>00361 <span class="comment">   values (svn_string_t *).  Use @a pool for all temporary allocation.</span>
<a name="l00362"></a>00362 <span class="comment"> *</span>
<a name="l00363"></a>00363 <span class="comment"> * @since New in 1.5.</span>
<a name="l00364"></a>00364 <span class="comment"> */</span>
<a name="l00365"></a><a class="code" href="group__clnt__commit.html#ga880d237c32626991c259e6fbced459d2">00365</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_proplist_receiver_t)(
<a name="l00366"></a>00366   <span class="keywordtype">void</span> *baton,
<a name="l00367"></a>00367   <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00368"></a>00368   apr_hash_t *prop_hash,
<a name="l00369"></a>00369   apr_pool_t *pool);
<a name="l00370"></a>00370 <span class="comment"></span>
<a name="l00371"></a>00371 <span class="comment">/**</span>
<a name="l00372"></a>00372 <span class="comment"> * Return a duplicate of @a item, allocated in @a pool. No part of the new</span>
<a name="l00373"></a>00373 <span class="comment"> * structure will be shared with @a item.</span>
<a name="l00374"></a>00374 <span class="comment"> *</span>
<a name="l00375"></a>00375 <span class="comment"> * @since New in 1.3.</span>
<a name="l00376"></a>00376 <span class="comment"> *</span>
<a name="l00377"></a>00377 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l00378"></a>00378 <span class="comment"> */</span>
<a name="l00379"></a>00379 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00380"></a>00380 <a class="code" href="structsvn__client__proplist__item__t.html" title="This is a structure which stores a filename and a hash of property names and values.">svn_client_proplist_item_t</a> *
<a name="l00381"></a>00381 <a class="code" href="group__clnt__commit.html#gaead02178801b0393e696d411327b6599" title="Return a duplicate of item, allocated in pool.">svn_client_proplist_item_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__client__proplist__item__t.html" title="This is a structure which stores a filename and a hash of property names and values.">svn_client_proplist_item_t</a> *item,
<a name="l00382"></a>00382                              apr_pool_t *pool);
<a name="l00383"></a>00383 <span class="comment"></span>
<a name="l00384"></a>00384 <span class="comment">/** Information about commits passed back to client from this module.</span>
<a name="l00385"></a>00385 <span class="comment"> *</span>
<a name="l00386"></a>00386 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l00387"></a>00387 <span class="comment"> */</span>
<a name="l00388"></a><a class="code" href="structsvn__client__commit__info__t.html">00388</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__client__commit__info__t.html" title="Information about commits passed back to client from this module.">svn_client_commit_info_t</a>
<a name="l00389"></a>00389 {<span class="comment"></span>
<a name="l00390"></a>00390 <span class="comment">  /** just-committed revision. */</span>
<a name="l00391"></a><a class="code" href="structsvn__client__commit__info__t.html#a109b398b5a0a436268964226470adfb5">00391</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__client__commit__info__t.html#a109b398b5a0a436268964226470adfb5" title="just-committed revision.">revision</a>;
<a name="l00392"></a>00392 <span class="comment"></span>
<a name="l00393"></a>00393 <span class="comment">  /** server-side date of the commit. */</span>
<a name="l00394"></a><a class="code" href="structsvn__client__commit__info__t.html#a5b4993784cb4dc6ee77640eceb2e3bf6">00394</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__info__t.html#a5b4993784cb4dc6ee77640eceb2e3bf6" title="server-side date of the commit.">date</a>;
<a name="l00395"></a>00395 <span class="comment"></span>
<a name="l00396"></a>00396 <span class="comment">  /** author of the commit. */</span>
<a name="l00397"></a><a class="code" href="structsvn__client__commit__info__t.html#a7646dd52f20884b541491549424c7e70">00397</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__info__t.html#a7646dd52f20884b541491549424c7e70" title="author of the commit.">author</a>;
<a name="l00398"></a>00398 
<a name="l00399"></a>00399 } <a class="code" href="group__clnt__commit.html#ga41a2e341983463820a96e01c9108988a" title="Information about commits passed back to client from this module.">svn_client_commit_info_t</a>;
<a name="l00400"></a>00400 
<a name="l00401"></a>00401 <span class="comment"></span>
<a name="l00402"></a>00402 <span class="comment">/**</span>
<a name="l00403"></a>00403 <span class="comment"> * @name Commit state flags</span>
<a name="l00404"></a>00404 <span class="comment"> * @brief State flags for use with the #svn_client_commit_item3_t structure</span>
<a name="l00405"></a>00405 <span class="comment"> * (see the note about the namespace for that structure, which also</span>
<a name="l00406"></a>00406 <span class="comment"> * applies to these flags).</span>
<a name="l00407"></a>00407 <span class="comment"> * @{</span>
<a name="l00408"></a>00408 <span class="comment"> */</span>
<a name="l00409"></a>00409 <span class="preprocessor">#define SVN_CLIENT_COMMIT_ITEM_ADD         0x01</span>
<a name="l00410"></a>00410 <span class="preprocessor"></span><span class="preprocessor">#define SVN_CLIENT_COMMIT_ITEM_DELETE      0x02</span>
<a name="l00411"></a>00411 <span class="preprocessor"></span><span class="preprocessor">#define SVN_CLIENT_COMMIT_ITEM_TEXT_MODS   0x04</span>
<a name="l00412"></a>00412 <span class="preprocessor"></span><span class="preprocessor">#define SVN_CLIENT_COMMIT_ITEM_PROP_MODS   0x08</span>
<a name="l00413"></a>00413 <span class="preprocessor"></span><span class="preprocessor">#define SVN_CLIENT_COMMIT_ITEM_IS_COPY     0x10</span>
<a name="l00414"></a>00414 <span class="preprocessor"></span><span class="comment">/** @since New in 1.2. */</span>
<a name="l00415"></a><a class="code" href="group__clnt__commit.html#ga5d1b9acd1fe520e0bbc623bcd5af3c44">00415</a> <span class="preprocessor">#define SVN_CLIENT_COMMIT_ITEM_LOCK_TOKEN  0x20</span>
<a name="l00416"></a>00416 <span class="preprocessor"></span><span class="comment">/** @} */</span>
<a name="l00417"></a>00417 <span class="comment"></span>
<a name="l00418"></a>00418 <span class="comment">/** The commit candidate structure.</span>
<a name="l00419"></a>00419 <span class="comment"> *</span>
<a name="l00420"></a>00420 <span class="comment"> * In order to avoid backwards compatibility problems clients should use</span>
<a name="l00421"></a>00421 <span class="comment"> * svn_client_commit_item3_create() to allocate and initialize this</span>
<a name="l00422"></a>00422 <span class="comment"> * structure instead of doing so themselves.</span>
<a name="l00423"></a>00423 <span class="comment"> *</span>
<a name="l00424"></a>00424 <span class="comment"> * @since New in 1.5.</span>
<a name="l00425"></a>00425 <span class="comment"> */</span>
<a name="l00426"></a><a class="code" href="structsvn__client__commit__item3__t.html">00426</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__client__commit__item3__t.html" title="The commit candidate structure.">svn_client_commit_item3_t</a>
<a name="l00427"></a>00427 {
<a name="l00428"></a>00428   <span class="comment">/* IMPORTANT: If you extend this structure, add new fields to the end. */</span>
<a name="l00429"></a>00429 <span class="comment"></span>
<a name="l00430"></a>00430 <span class="comment">  /** absolute working-copy path of item */</span>
<a name="l00431"></a><a class="code" href="structsvn__client__commit__item3__t.html#ae62b5d1e8da11bbbb4d3ab02f6738f20">00431</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__item3__t.html#ae62b5d1e8da11bbbb4d3ab02f6738f20" title="absolute working-copy path of item">path</a>;
<a name="l00432"></a>00432 <span class="comment"></span>
<a name="l00433"></a>00433 <span class="comment">  /** node kind (dir, file) */</span>
<a name="l00434"></a><a class="code" href="structsvn__client__commit__item3__t.html#a4f06bd44a608e1c60a2e428243cac6b2">00434</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__client__commit__item3__t.html#a4f06bd44a608e1c60a2e428243cac6b2" title="node kind (dir, file)">kind</a>;
<a name="l00435"></a>00435 <span class="comment"></span>
<a name="l00436"></a>00436 <span class="comment">  /** commit URL for this item */</span>
<a name="l00437"></a><a class="code" href="structsvn__client__commit__item3__t.html#a4858d4312bb750b78d7f69d0bd41dea8">00437</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__item3__t.html#a4858d4312bb750b78d7f69d0bd41dea8" title="commit URL for this item">url</a>;
<a name="l00438"></a>00438 <span class="comment"></span>
<a name="l00439"></a>00439 <span class="comment">  /** revision of textbase */</span>
<a name="l00440"></a><a class="code" href="structsvn__client__commit__item3__t.html#a279d73133d49c0a7be43becaad70500f">00440</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__client__commit__item3__t.html#a279d73133d49c0a7be43becaad70500f" title="revision of textbase">revision</a>;
<a name="l00441"></a>00441 <span class="comment"></span>
<a name="l00442"></a>00442 <span class="comment">  /** copyfrom-url or NULL if not a copied item */</span>
<a name="l00443"></a><a class="code" href="structsvn__client__commit__item3__t.html#a51e13a0d082b702d878b21f2ceb7a43a">00443</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__item3__t.html#a51e13a0d082b702d878b21f2ceb7a43a" title="copyfrom-url or NULL if not a copied item">copyfrom_url</a>;
<a name="l00444"></a>00444 <span class="comment"></span>
<a name="l00445"></a>00445 <span class="comment">  /** copyfrom-rev, valid when copyfrom_url != NULL */</span>
<a name="l00446"></a><a class="code" href="structsvn__client__commit__item3__t.html#aa8aa54e164893729ef6ae6b98f0519ac">00446</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__client__commit__item3__t.html#aa8aa54e164893729ef6ae6b98f0519ac" title="copyfrom-rev, valid when copyfrom_url != NULL">copyfrom_rev</a>;
<a name="l00447"></a>00447 <span class="comment"></span>
<a name="l00448"></a>00448 <span class="comment">  /** state flags */</span>
<a name="l00449"></a><a class="code" href="structsvn__client__commit__item3__t.html#ac675df02091a35fcab2ff510d5cebfcd">00449</a>   apr_byte_t <a class="code" href="structsvn__client__commit__item3__t.html#ac675df02091a35fcab2ff510d5cebfcd" title="state flags">state_flags</a>;
<a name="l00450"></a>00450 <span class="comment"></span>
<a name="l00451"></a>00451 <span class="comment">  /** An array of #svn_prop_t *&#39;s, which are incoming changes from</span>
<a name="l00452"></a>00452 <span class="comment">   * the repository to WC properties.  These changes are applied</span>
<a name="l00453"></a>00453 <span class="comment">   * post-commit.</span>
<a name="l00454"></a>00454 <span class="comment">   *</span>
<a name="l00455"></a>00455 <span class="comment">   * When adding to this array, allocate the #svn_prop_t and its</span>
<a name="l00456"></a>00456 <span class="comment">   * contents in @c incoming_prop_changes-&gt;pool, so that it has the</span>
<a name="l00457"></a>00457 <span class="comment">   * same lifetime as this data structure.</span>
<a name="l00458"></a>00458 <span class="comment">   *</span>
<a name="l00459"></a>00459 <span class="comment">   * See http://subversion.tigris.org/issues/show_bug.cgi?id=806 for a</span>
<a name="l00460"></a>00460 <span class="comment">   * description of what would happen if the post-commit process</span>
<a name="l00461"></a>00461 <span class="comment">   * didn&#39;t group these changes together with all other changes to the</span>
<a name="l00462"></a>00462 <span class="comment">   * item.</span>
<a name="l00463"></a>00463 <span class="comment">   */</span>
<a name="l00464"></a><a class="code" href="structsvn__client__commit__item3__t.html#a88936d3f05e59d6af78d45abbdd20374">00464</a>   apr_array_header_t *<a class="code" href="structsvn__client__commit__item3__t.html#a88936d3f05e59d6af78d45abbdd20374" title="An array of svn_prop_t *&#39;s, which are incoming changes from the repository to WC properties.">incoming_prop_changes</a>;
<a name="l00465"></a>00465 <span class="comment"></span>
<a name="l00466"></a>00466 <span class="comment">  /** An array of #svn_prop_t *&#39;s, which are outgoing changes to</span>
<a name="l00467"></a>00467 <span class="comment">   * make to properties in the repository.  These extra property</span>
<a name="l00468"></a>00468 <span class="comment">   * changes are declared pre-commit, and applied to the repository as</span>
<a name="l00469"></a>00469 <span class="comment">   * part of a commit.</span>
<a name="l00470"></a>00470 <span class="comment">   *</span>
<a name="l00471"></a>00471 <span class="comment">   * When adding to this array, allocate the #svn_prop_t and its</span>
<a name="l00472"></a>00472 <span class="comment">   * contents in @c outgoing_prop_changes-&gt;pool, so that it has the</span>
<a name="l00473"></a>00473 <span class="comment">   * same lifetime as this data structure.</span>
<a name="l00474"></a>00474 <span class="comment">   */</span>
<a name="l00475"></a><a class="code" href="structsvn__client__commit__item3__t.html#a9bc8c2164338cf5239b20ae97258bd7e">00475</a>   apr_array_header_t *<a class="code" href="structsvn__client__commit__item3__t.html#a9bc8c2164338cf5239b20ae97258bd7e" title="An array of svn_prop_t *&#39;s, which are outgoing changes to make to properties in the repository...">outgoing_prop_changes</a>;
<a name="l00476"></a>00476 <span class="comment"></span>
<a name="l00477"></a>00477 <span class="comment">  /**</span>
<a name="l00478"></a>00478 <span class="comment">   * When processing the commit this contains the relative path for</span>
<a name="l00479"></a>00479 <span class="comment">   * the commit session. #NULL until the commit item is preprocessed.</span>
<a name="l00480"></a>00480 <span class="comment">   */</span>
<a name="l00481"></a><a class="code" href="structsvn__client__commit__item3__t.html#afd71111af9be9deb3cd462ffdbd2ec6f">00481</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__item3__t.html#afd71111af9be9deb3cd462ffdbd2ec6f" title="When processing the commit this contains the relative path for the commit session.">session_relpath</a>;
<a name="l00482"></a>00482 } <a class="code" href="group__clnt__commit.html#ga89ffe5753c1670239717f309e13a7ed5" title="The commit candidate structure.">svn_client_commit_item3_t</a>;
<a name="l00483"></a>00483 <span class="comment"></span>
<a name="l00484"></a>00484 <span class="comment">/** The commit candidate structure.</span>
<a name="l00485"></a>00485 <span class="comment"> *</span>
<a name="l00486"></a>00486 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l00487"></a>00487 <span class="comment"> */</span>
<a name="l00488"></a><a class="code" href="structsvn__client__commit__item2__t.html">00488</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__client__commit__item2__t.html" title="The commit candidate structure.">svn_client_commit_item2_t</a>
<a name="l00489"></a>00489 {<span class="comment"></span>
<a name="l00490"></a>00490 <span class="comment">  /** absolute working-copy path of item */</span>
<a name="l00491"></a><a class="code" href="structsvn__client__commit__item2__t.html#a7f75d6fee6b49370ab70072e2f04a5aa">00491</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__item2__t.html#a7f75d6fee6b49370ab70072e2f04a5aa" title="absolute working-copy path of item">path</a>;
<a name="l00492"></a>00492 <span class="comment"></span>
<a name="l00493"></a>00493 <span class="comment">  /** node kind (dir, file) */</span>
<a name="l00494"></a><a class="code" href="structsvn__client__commit__item2__t.html#ada5a677b046bde7cd934433bfc7a15d2">00494</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__client__commit__item2__t.html#ada5a677b046bde7cd934433bfc7a15d2" title="node kind (dir, file)">kind</a>;
<a name="l00495"></a>00495 <span class="comment"></span>
<a name="l00496"></a>00496 <span class="comment">  /** commit URL for this item */</span>
<a name="l00497"></a><a class="code" href="structsvn__client__commit__item2__t.html#ad8b7ecb8d3658c6913f958d0972b64a5">00497</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__item2__t.html#ad8b7ecb8d3658c6913f958d0972b64a5" title="commit URL for this item">url</a>;
<a name="l00498"></a>00498 <span class="comment"></span>
<a name="l00499"></a>00499 <span class="comment">  /** revision of textbase */</span>
<a name="l00500"></a><a class="code" href="structsvn__client__commit__item2__t.html#aa8f5a061c588bc1bd1737f4fed896f08">00500</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__client__commit__item2__t.html#aa8f5a061c588bc1bd1737f4fed896f08" title="revision of textbase">revision</a>;
<a name="l00501"></a>00501 <span class="comment"></span>
<a name="l00502"></a>00502 <span class="comment">  /** copyfrom-url or NULL if not a copied item */</span>
<a name="l00503"></a><a class="code" href="structsvn__client__commit__item2__t.html#aa975bcf213660f54c55880c53b64e2e7">00503</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__item2__t.html#aa975bcf213660f54c55880c53b64e2e7" title="copyfrom-url or NULL if not a copied item">copyfrom_url</a>;
<a name="l00504"></a>00504 <span class="comment"></span>
<a name="l00505"></a>00505 <span class="comment">  /** copyfrom-rev, valid when copyfrom_url != NULL */</span>
<a name="l00506"></a><a class="code" href="structsvn__client__commit__item2__t.html#a24ca325c3b41583714043bccf0b7df6e">00506</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__client__commit__item2__t.html#a24ca325c3b41583714043bccf0b7df6e" title="copyfrom-rev, valid when copyfrom_url != NULL">copyfrom_rev</a>;
<a name="l00507"></a>00507 <span class="comment"></span>
<a name="l00508"></a>00508 <span class="comment">  /** state flags */</span>
<a name="l00509"></a><a class="code" href="structsvn__client__commit__item2__t.html#a2fb65a81a4607ddd931fb9351faf5582">00509</a>   apr_byte_t <a class="code" href="structsvn__client__commit__item2__t.html#a2fb65a81a4607ddd931fb9351faf5582" title="state flags">state_flags</a>;
<a name="l00510"></a>00510 <span class="comment"></span>
<a name="l00511"></a>00511 <span class="comment">  /** Analogous to the #svn_client_commit_item3_t.incoming_prop_changes</span>
<a name="l00512"></a>00512 <span class="comment">   * field.</span>
<a name="l00513"></a>00513 <span class="comment">   */</span>
<a name="l00514"></a><a class="code" href="structsvn__client__commit__item2__t.html#ade34c45a89c230160b3c6b5469a44149">00514</a>   apr_array_header_t *<a class="code" href="structsvn__client__commit__item2__t.html#ade34c45a89c230160b3c6b5469a44149" title="Analogous to the svn_client_commit_item3_t.incoming_prop_changes field.">wcprop_changes</a>;
<a name="l00515"></a>00515 } <a class="code" href="group__clnt__commit.html#ga75102cfa63e74cdecb3ec8b50708d2d4" title="The commit candidate structure.">svn_client_commit_item2_t</a>;
<a name="l00516"></a>00516 <span class="comment"></span>
<a name="l00517"></a>00517 <span class="comment">/** The commit candidate structure.</span>
<a name="l00518"></a>00518 <span class="comment"> *</span>
<a name="l00519"></a>00519 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l00520"></a>00520 <span class="comment"> */</span>
<a name="l00521"></a><a class="code" href="structsvn__client__commit__item__t.html">00521</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__client__commit__item__t.html" title="The commit candidate structure.">svn_client_commit_item_t</a>
<a name="l00522"></a>00522 {<span class="comment"></span>
<a name="l00523"></a>00523 <span class="comment">  /** absolute working-copy path of item */</span>
<a name="l00524"></a><a class="code" href="structsvn__client__commit__item__t.html#aeaf833e14a1428b5435438e01acbcd81">00524</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__item__t.html#aeaf833e14a1428b5435438e01acbcd81" title="absolute working-copy path of item">path</a>;
<a name="l00525"></a>00525 <span class="comment"></span>
<a name="l00526"></a>00526 <span class="comment">  /** node kind (dir, file) */</span>
<a name="l00527"></a><a class="code" href="structsvn__client__commit__item__t.html#a6047ca5d9b0a507581a1c59174508ed2">00527</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__client__commit__item__t.html#a6047ca5d9b0a507581a1c59174508ed2" title="node kind (dir, file)">kind</a>;
<a name="l00528"></a>00528 <span class="comment"></span>
<a name="l00529"></a>00529 <span class="comment">  /** commit URL for this item */</span>
<a name="l00530"></a><a class="code" href="structsvn__client__commit__item__t.html#a4b5f651bb4b7c08af69b479d0ffec7b4">00530</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__item__t.html#a4b5f651bb4b7c08af69b479d0ffec7b4" title="commit URL for this item">url</a>;
<a name="l00531"></a>00531 <span class="comment"></span>
<a name="l00532"></a>00532 <span class="comment">  /** revision (copyfrom-rev if _IS_COPY) */</span>
<a name="l00533"></a><a class="code" href="structsvn__client__commit__item__t.html#aa45ff2c4e5de0ecf24312b6e4c5b0562">00533</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__client__commit__item__t.html#aa45ff2c4e5de0ecf24312b6e4c5b0562" title="revision (copyfrom-rev if _IS_COPY)">revision</a>;
<a name="l00534"></a>00534 <span class="comment"></span>
<a name="l00535"></a>00535 <span class="comment">  /** copyfrom-url */</span>
<a name="l00536"></a><a class="code" href="structsvn__client__commit__item__t.html#a3ab6344bbe08f28630390e13edc04130">00536</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__commit__item__t.html#a3ab6344bbe08f28630390e13edc04130" title="copyfrom-url">copyfrom_url</a>;
<a name="l00537"></a>00537 <span class="comment"></span>
<a name="l00538"></a>00538 <span class="comment">  /** state flags */</span>
<a name="l00539"></a><a class="code" href="structsvn__client__commit__item__t.html#ab43fa290a6a38e24cddcc875958f860b">00539</a>   apr_byte_t <a class="code" href="structsvn__client__commit__item__t.html#ab43fa290a6a38e24cddcc875958f860b" title="state flags">state_flags</a>;
<a name="l00540"></a>00540 <span class="comment"></span>
<a name="l00541"></a>00541 <span class="comment">  /** Analogous to the #svn_client_commit_item3_t.incoming_prop_changes</span>
<a name="l00542"></a>00542 <span class="comment">   * field.</span>
<a name="l00543"></a>00543 <span class="comment">   */</span>
<a name="l00544"></a><a class="code" href="structsvn__client__commit__item__t.html#af8d63279594e973d9d561c8459d994e1">00544</a>   apr_array_header_t *<a class="code" href="structsvn__client__commit__item__t.html#af8d63279594e973d9d561c8459d994e1" title="Analogous to the svn_client_commit_item3_t.incoming_prop_changes field.">wcprop_changes</a>;
<a name="l00545"></a>00545 
<a name="l00546"></a>00546 } <a class="code" href="group__clnt__commit.html#ga6bae6a76831218f9d21da3edb13a777e" title="The commit candidate structure.">svn_client_commit_item_t</a>;
<a name="l00547"></a>00547 <span class="comment"></span>
<a name="l00548"></a>00548 <span class="comment">/** Return a new commit item object, allocated in @a pool.</span>
<a name="l00549"></a>00549 <span class="comment"> *</span>
<a name="l00550"></a>00550 <span class="comment"> * In order to avoid backwards compatibility problems, this function</span>
<a name="l00551"></a>00551 <span class="comment"> * is used to initialize and allocate the #svn_client_commit_item3_t</span>
<a name="l00552"></a>00552 <span class="comment"> * structure rather than doing so explicitly, as the size of this</span>
<a name="l00553"></a>00553 <span class="comment"> * structure may change in the future.</span>
<a name="l00554"></a>00554 <span class="comment"> *</span>
<a name="l00555"></a>00555 <span class="comment"> * @since New in 1.6.</span>
<a name="l00556"></a>00556 <span class="comment"> */</span>
<a name="l00557"></a>00557 <a class="code" href="structsvn__client__commit__item3__t.html" title="The commit candidate structure.">svn_client_commit_item3_t</a> *
<a name="l00558"></a>00558 <a class="code" href="group__clnt__commit.html#ga58974f9371d0c103bdb9412f7f88bddc" title="Return a new commit item object, allocated in pool.">svn_client_commit_item3_create</a>(apr_pool_t *pool);
<a name="l00559"></a>00559 <span class="comment"></span>
<a name="l00560"></a>00560 <span class="comment">/** Like svn_client_commit_item3_create() but with a stupid &quot;const&quot;</span>
<a name="l00561"></a>00561 <span class="comment"> * qualifier on the returned structure, and it returns an error that</span>
<a name="l00562"></a>00562 <span class="comment"> * will never happen.</span>
<a name="l00563"></a>00563 <span class="comment"> *</span>
<a name="l00564"></a>00564 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l00565"></a>00565 <span class="comment"> */</span>
<a name="l00566"></a>00566 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00567"></a>00567 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00568"></a>00568 <a class="code" href="group__clnt__commit.html#gabff86875919045f00b9092db26d13e2e" title="Like svn_client_commit_item3_create() but with a stupid &quot;const&quot; qualifier on the returned structure...">svn_client_commit_item_create</a>(<span class="keyword">const</span> <a class="code" href="structsvn__client__commit__item3__t.html" title="The commit candidate structure.">svn_client_commit_item3_t</a> **item,
<a name="l00569"></a>00569                               apr_pool_t *pool);
<a name="l00570"></a>00570 <span class="comment"></span>
<a name="l00571"></a>00571 <span class="comment">/**</span>
<a name="l00572"></a>00572 <span class="comment"> * Return a duplicate of @a item, allocated in @a pool. No part of the</span>
<a name="l00573"></a>00573 <span class="comment"> * new structure will be shared with @a item, except for the adm_access</span>
<a name="l00574"></a>00574 <span class="comment"> * member.</span>
<a name="l00575"></a>00575 <span class="comment"> *</span>
<a name="l00576"></a>00576 <span class="comment"> * @since New in 1.5.</span>
<a name="l00577"></a>00577 <span class="comment"> */</span>
<a name="l00578"></a>00578 <a class="code" href="structsvn__client__commit__item3__t.html" title="The commit candidate structure.">svn_client_commit_item3_t</a> *
<a name="l00579"></a>00579 <a class="code" href="group__clnt__commit.html#gae231a020c76ea69d21a0bbd3f6f1894e" title="Return a duplicate of item, allocated in pool.">svn_client_commit_item3_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__client__commit__item3__t.html" title="The commit candidate structure.">svn_client_commit_item3_t</a> *item,
<a name="l00580"></a>00580                             apr_pool_t *pool);
<a name="l00581"></a>00581 <span class="comment"></span>
<a name="l00582"></a>00582 <span class="comment">/**</span>
<a name="l00583"></a>00583 <span class="comment"> * Return a duplicate of @a item, allocated in @a pool. No part of the new</span>
<a name="l00584"></a>00584 <span class="comment"> * structure will be shared with @a item.</span>
<a name="l00585"></a>00585 <span class="comment"> *</span>
<a name="l00586"></a>00586 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l00587"></a>00587 <span class="comment"> */</span>
<a name="l00588"></a>00588 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00589"></a>00589 <a class="code" href="structsvn__client__commit__item2__t.html" title="The commit candidate structure.">svn_client_commit_item2_t</a> *
<a name="l00590"></a>00590 <a class="code" href="group__clnt__commit.html#ga422f000cdf8f33a59ba1a4df8666892b" title="Return a duplicate of item, allocated in pool.">svn_client_commit_item2_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__client__commit__item2__t.html" title="The commit candidate structure.">svn_client_commit_item2_t</a> *item,
<a name="l00591"></a>00591                             apr_pool_t *pool);
<a name="l00592"></a>00592 <span class="comment"></span>
<a name="l00593"></a>00593 <span class="comment">/** Callback type used by commit-y operations to get a commit log message</span>
<a name="l00594"></a>00594 <span class="comment"> * from the caller.</span>
<a name="l00595"></a>00595 <span class="comment"> *</span>
<a name="l00596"></a>00596 <span class="comment"> * Set @a *log_msg to the log message for the commit, allocated in @a</span>
<a name="l00597"></a>00597 <span class="comment"> * pool, or @c NULL if wish to abort the commit process.  Set @a *tmp_file</span>
<a name="l00598"></a>00598 <span class="comment"> * to the path of any temporary file which might be holding that log</span>
<a name="l00599"></a>00599 <span class="comment"> * message, or @c NULL if no such file exists (though, if @a *log_msg is</span>
<a name="l00600"></a>00600 <span class="comment"> * @c NULL, this value is undefined).  The log message MUST be a UTF8</span>
<a name="l00601"></a>00601 <span class="comment"> * string with LF line separators.</span>
<a name="l00602"></a>00602 <span class="comment"> *</span>
<a name="l00603"></a>00603 <span class="comment"> * @a commit_items is a read-only array of #svn_client_commit_item3_t</span>
<a name="l00604"></a>00604 <span class="comment"> * structures, which may be fully or only partially filled-in,</span>
<a name="l00605"></a>00605 <span class="comment"> * depending on the type of commit operation.</span>
<a name="l00606"></a>00606 <span class="comment"> *</span>
<a name="l00607"></a>00607 <span class="comment"> * @a baton is provided along with the callback for use by the handler.</span>
<a name="l00608"></a>00608 <span class="comment"> *</span>
<a name="l00609"></a>00609 <span class="comment"> * All allocations should be performed in @a pool.</span>
<a name="l00610"></a>00610 <span class="comment"> *</span>
<a name="l00611"></a>00611 <span class="comment"> * @since New in 1.5.</span>
<a name="l00612"></a>00612 <span class="comment"> */</span>
<a name="l00613"></a><a class="code" href="group__clnt__commit.html#gad8d9c386fe79564a1b8b66e2a7d67d60">00613</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_get_commit_log3_t)(
<a name="l00614"></a>00614   <span class="keyword">const</span> <span class="keywordtype">char</span> **log_msg,
<a name="l00615"></a>00615   <span class="keyword">const</span> <span class="keywordtype">char</span> **tmp_file,
<a name="l00616"></a>00616   <span class="keyword">const</span> apr_array_header_t *commit_items,
<a name="l00617"></a>00617   <span class="keywordtype">void</span> *baton,
<a name="l00618"></a>00618   apr_pool_t *pool);
<a name="l00619"></a>00619 <span class="comment"></span>
<a name="l00620"></a>00620 <span class="comment">/** Callback type used by commit-y operations to get a commit log message</span>
<a name="l00621"></a>00621 <span class="comment"> * from the caller.</span>
<a name="l00622"></a>00622 <span class="comment"> *</span>
<a name="l00623"></a>00623 <span class="comment"> * Set @a *log_msg to the log message for the commit, allocated in @a</span>
<a name="l00624"></a>00624 <span class="comment"> * pool, or @c NULL if wish to abort the commit process.  Set @a *tmp_file</span>
<a name="l00625"></a>00625 <span class="comment"> * to the path of any temporary file which might be holding that log</span>
<a name="l00626"></a>00626 <span class="comment"> * message, or @c NULL if no such file exists (though, if @a *log_msg is</span>
<a name="l00627"></a>00627 <span class="comment"> * @c NULL, this value is undefined).  The log message MUST be a UTF8</span>
<a name="l00628"></a>00628 <span class="comment"> * string with LF line separators.</span>
<a name="l00629"></a>00629 <span class="comment"> *</span>
<a name="l00630"></a>00630 <span class="comment"> * @a commit_items is a read-only array of #svn_client_commit_item2_t</span>
<a name="l00631"></a>00631 <span class="comment"> * structures, which may be fully or only partially filled-in,</span>
<a name="l00632"></a>00632 <span class="comment"> * depending on the type of commit operation.</span>
<a name="l00633"></a>00633 <span class="comment"> *</span>
<a name="l00634"></a>00634 <span class="comment"> * @a baton is provided along with the callback for use by the handler.</span>
<a name="l00635"></a>00635 <span class="comment"> *</span>
<a name="l00636"></a>00636 <span class="comment"> * All allocations should be performed in @a pool.</span>
<a name="l00637"></a>00637 <span class="comment"> *</span>
<a name="l00638"></a>00638 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l00639"></a>00639 <span class="comment"> */</span>
<a name="l00640"></a><a class="code" href="group__clnt__commit.html#gaa1d88be008d4568af150f0256ed792e2">00640</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_get_commit_log2_t)(
<a name="l00641"></a>00641   <span class="keyword">const</span> <span class="keywordtype">char</span> **log_msg,
<a name="l00642"></a>00642   <span class="keyword">const</span> <span class="keywordtype">char</span> **tmp_file,
<a name="l00643"></a>00643   <span class="keyword">const</span> apr_array_header_t *commit_items,
<a name="l00644"></a>00644   <span class="keywordtype">void</span> *baton,
<a name="l00645"></a>00645   apr_pool_t *pool);
<a name="l00646"></a>00646 <span class="comment"></span>
<a name="l00647"></a>00647 <span class="comment">/** Callback type used by commit-y operations to get a commit log message</span>
<a name="l00648"></a>00648 <span class="comment"> * from the caller.</span>
<a name="l00649"></a>00649 <span class="comment"> *</span>
<a name="l00650"></a>00650 <span class="comment"> * Set @a *log_msg to the log message for the commit, allocated in @a</span>
<a name="l00651"></a>00651 <span class="comment"> * pool, or @c NULL if wish to abort the commit process.  Set @a *tmp_file</span>
<a name="l00652"></a>00652 <span class="comment"> * to the path of any temporary file which might be holding that log</span>
<a name="l00653"></a>00653 <span class="comment"> * message, or @c NULL if no such file exists (though, if @a *log_msg is</span>
<a name="l00654"></a>00654 <span class="comment"> * @c NULL, this value is undefined).  The log message MUST be a UTF8</span>
<a name="l00655"></a>00655 <span class="comment"> * string with LF line separators.</span>
<a name="l00656"></a>00656 <span class="comment"> *</span>
<a name="l00657"></a>00657 <span class="comment"> * @a commit_items is a read-only array of #svn_client_commit_item_t</span>
<a name="l00658"></a>00658 <span class="comment"> * structures, which may be fully or only partially filled-in,</span>
<a name="l00659"></a>00659 <span class="comment"> * depending on the type of commit operation.</span>
<a name="l00660"></a>00660 <span class="comment"> *</span>
<a name="l00661"></a>00661 <span class="comment"> * @a baton is provided along with the callback for use by the handler.</span>
<a name="l00662"></a>00662 <span class="comment"> *</span>
<a name="l00663"></a>00663 <span class="comment"> * All allocations should be performed in @a pool.</span>
<a name="l00664"></a>00664 <span class="comment"> *</span>
<a name="l00665"></a>00665 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l00666"></a>00666 <span class="comment"> */</span>
<a name="l00667"></a><a class="code" href="group__clnt__commit.html#ga39899194e67568bec4a3ef6fba817c1f">00667</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_get_commit_log_t)(
<a name="l00668"></a>00668   <span class="keyword">const</span> <span class="keywordtype">char</span> **log_msg,
<a name="l00669"></a>00669   <span class="keyword">const</span> <span class="keywordtype">char</span> **tmp_file,
<a name="l00670"></a>00670   apr_array_header_t *commit_items,
<a name="l00671"></a>00671   <span class="keywordtype">void</span> *baton,
<a name="l00672"></a>00672   apr_pool_t *pool);
<a name="l00673"></a>00673 <span class="comment"></span>
<a name="l00674"></a>00674 <span class="comment">/** @} */</span>
<a name="l00675"></a>00675 <span class="comment"></span>
<a name="l00676"></a>00676 <span class="comment">/**</span>
<a name="l00677"></a>00677 <span class="comment"> * Client blame</span>
<a name="l00678"></a>00678 <span class="comment"> *</span>
<a name="l00679"></a>00679 <span class="comment"> * @defgroup clnt_blame Client blame functionality</span>
<a name="l00680"></a>00680 <span class="comment"> *</span>
<a name="l00681"></a>00681 <span class="comment"> * @{</span>
<a name="l00682"></a>00682 <span class="comment"> */</span>
<a name="l00683"></a>00683 <span class="comment"></span>
<a name="l00684"></a>00684 <span class="comment">/** Callback type used by svn_client_blame5() to notify the caller</span>
<a name="l00685"></a>00685 <span class="comment"> * that line @a line_no of the blamed file was last changed in @a revision</span>
<a name="l00686"></a>00686 <span class="comment"> * which has the revision properties @a rev_props, and that the contents were</span>
<a name="l00687"></a>00687 <span class="comment"> * @a line.</span>
<a name="l00688"></a>00688 <span class="comment"> *</span>
<a name="l00689"></a>00689 <span class="comment"> * @a start_revnum and @a end_revnum contain the start and end revision</span>
<a name="l00690"></a>00690 <span class="comment"> * number of the entire blame operation, as determined from the repository</span>
<a name="l00691"></a>00691 <span class="comment"> * inside svn_client_blame5(). This can be useful for the blame receiver</span>
<a name="l00692"></a>00692 <span class="comment"> * to format the blame output.</span>
<a name="l00693"></a>00693 <span class="comment"> *</span>
<a name="l00694"></a>00694 <span class="comment"> * If svn_client_blame5() was called with @a include_merged_revisions set to</span>
<a name="l00695"></a>00695 <span class="comment"> * TRUE, @a merged_revision, @a merged_rev_props and @a merged_path will be</span>
<a name="l00696"></a>00696 <span class="comment"> * set, otherwise they will be NULL. @a merged_path will be set to the</span>
<a name="l00697"></a>00697 <span class="comment"> * absolute repository path.</span>
<a name="l00698"></a>00698 <span class="comment"> *</span>
<a name="l00699"></a>00699 <span class="comment"> * All allocations should be performed in @a pool.</span>
<a name="l00700"></a>00700 <span class="comment"> *</span>
<a name="l00701"></a>00701 <span class="comment"> * @note If there is no blame information for this line, @a revision will be</span>
<a name="l00702"></a>00702 <span class="comment"> * invalid and @a rev_props will be NULL. In this case @a local_change</span>
<a name="l00703"></a>00703 <span class="comment"> * will be true if the reason there is no blame information is that the line</span>
<a name="l00704"></a>00704 <span class="comment"> * was modified locally. In all other cases @a local_change will be false.</span>
<a name="l00705"></a>00705 <span class="comment"> *</span>
<a name="l00706"></a>00706 <span class="comment"> * @since New in 1.7.</span>
<a name="l00707"></a>00707 <span class="comment"> */</span>
<a name="l00708"></a><a class="code" href="group__clnt__blame.html#gad09bd6cc9210114056b4a2d6b81f2b7a">00708</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_blame_receiver3_t)(
<a name="l00709"></a>00709   <span class="keywordtype">void</span> *baton,
<a name="l00710"></a>00710   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> start_revnum,
<a name="l00711"></a>00711   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> end_revnum,
<a name="l00712"></a>00712   apr_int64_t line_no,
<a name="l00713"></a>00713   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> revision,
<a name="l00714"></a>00714   apr_hash_t *rev_props,
<a name="l00715"></a>00715   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> merged_revision,
<a name="l00716"></a>00716   apr_hash_t *merged_rev_props,
<a name="l00717"></a>00717   <span class="keyword">const</span> <span class="keywordtype">char</span> *merged_path,
<a name="l00718"></a>00718   <span class="keyword">const</span> <span class="keywordtype">char</span> *line,
<a name="l00719"></a>00719   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> local_change,
<a name="l00720"></a>00720   apr_pool_t *pool);
<a name="l00721"></a>00721 <span class="comment"></span>
<a name="l00722"></a>00722 <span class="comment">/**</span>
<a name="l00723"></a>00723 <span class="comment"> * Similar to #svn_client_blame_receiver3_t, but with separate author and</span>
<a name="l00724"></a>00724 <span class="comment"> * date revision properties instead of all revision properties, and without</span>
<a name="l00725"></a>00725 <span class="comment"> * information about local changes.</span>
<a name="l00726"></a>00726 <span class="comment"> *</span>
<a name="l00727"></a>00727 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00728"></a>00728 <span class="comment"> *</span>
<a name="l00729"></a>00729 <span class="comment"> * @since New in 1.5.</span>
<a name="l00730"></a>00730 <span class="comment"> */</span>
<a name="l00731"></a><a class="code" href="group__clnt__blame.html#gae286c859f92c68d7fa0b91452a67a7d5">00731</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_blame_receiver2_t)(
<a name="l00732"></a>00732   <span class="keywordtype">void</span> *baton,
<a name="l00733"></a>00733   apr_int64_t line_no,
<a name="l00734"></a>00734   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> revision,
<a name="l00735"></a>00735   <span class="keyword">const</span> <span class="keywordtype">char</span> *author,
<a name="l00736"></a>00736   <span class="keyword">const</span> <span class="keywordtype">char</span> *date,
<a name="l00737"></a>00737   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> merged_revision,
<a name="l00738"></a>00738   <span class="keyword">const</span> <span class="keywordtype">char</span> *merged_author,
<a name="l00739"></a>00739   <span class="keyword">const</span> <span class="keywordtype">char</span> *merged_date,
<a name="l00740"></a>00740   <span class="keyword">const</span> <span class="keywordtype">char</span> *merged_path,
<a name="l00741"></a>00741   <span class="keyword">const</span> <span class="keywordtype">char</span> *line,
<a name="l00742"></a>00742   apr_pool_t *pool);
<a name="l00743"></a>00743 <span class="comment"></span>
<a name="l00744"></a>00744 <span class="comment">/**</span>
<a name="l00745"></a>00745 <span class="comment"> * Similar to #svn_client_blame_receiver2_t, but without @a merged_revision,</span>
<a name="l00746"></a>00746 <span class="comment"> * @a merged_author, @a merged_date, or @a merged_path members.</span>
<a name="l00747"></a>00747 <span class="comment"> *</span>
<a name="l00748"></a>00748 <span class="comment"> * @note New in 1.4 is that the line is defined to contain only the line</span>
<a name="l00749"></a>00749 <span class="comment"> * content (and no [partial] EOLs; which was undefined in older versions).</span>
<a name="l00750"></a>00750 <span class="comment"> * Using this callback with svn_client_blame() or svn_client_blame2()</span>
<a name="l00751"></a>00751 <span class="comment"> * will still give you the old behaviour.</span>
<a name="l00752"></a>00752 <span class="comment"> *</span>
<a name="l00753"></a>00753 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l00754"></a>00754 <span class="comment"> */</span>
<a name="l00755"></a><a class="code" href="group__clnt__blame.html#ga6e49c82c6c0be02792b0df2f4a9f067c">00755</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_blame_receiver_t)(
<a name="l00756"></a>00756   <span class="keywordtype">void</span> *baton,
<a name="l00757"></a>00757   apr_int64_t line_no,
<a name="l00758"></a>00758   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> revision,
<a name="l00759"></a>00759   <span class="keyword">const</span> <span class="keywordtype">char</span> *author,
<a name="l00760"></a>00760   <span class="keyword">const</span> <span class="keywordtype">char</span> *date,
<a name="l00761"></a>00761   <span class="keyword">const</span> <span class="keywordtype">char</span> *line,
<a name="l00762"></a>00762   apr_pool_t *pool);
<a name="l00763"></a>00763 
<a name="l00764"></a>00764 <span class="comment"></span>
<a name="l00765"></a>00765 <span class="comment">/** @} */</span>
<a name="l00766"></a>00766 <span class="comment"></span>
<a name="l00767"></a>00767 <span class="comment">/**</span>
<a name="l00768"></a>00768 <span class="comment"> * Client diff</span>
<a name="l00769"></a>00769 <span class="comment"> *</span>
<a name="l00770"></a>00770 <span class="comment"> * @defgroup clnt_diff Client diff functionality</span>
<a name="l00771"></a>00771 <span class="comment"> *</span>
<a name="l00772"></a>00772 <span class="comment"> * @{</span>
<a name="l00773"></a>00773 <span class="comment"> */</span><span class="comment"></span>
<a name="l00774"></a>00774 <span class="comment">/** The difference type in an svn_diff_summarize_t structure.</span>
<a name="l00775"></a>00775 <span class="comment"> *</span>
<a name="l00776"></a>00776 <span class="comment"> * @since New in 1.4.</span>
<a name="l00777"></a>00777 <span class="comment"> */</span>
<a name="l00778"></a><a class="code" href="group__clnt__diff.html#ga16389160a6aca07f22f8573a40920ec6">00778</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__clnt__diff.html#ga16389160a6aca07f22f8573a40920ec6" title="The difference type in an svn_diff_summarize_t structure.">svn_client_diff_summarize_kind_t</a>
<a name="l00779"></a>00779 {<span class="comment"></span>
<a name="l00780"></a>00780 <span class="comment">  /** An item with no text modifications */</span>
<a name="l00781"></a><a class="code" href="group__clnt__diff.html#gga16389160a6aca07f22f8573a40920ec6ac26534cd23093e3652666fccf2aa2b79">00781</a>   <a class="code" href="group__clnt__diff.html#gga16389160a6aca07f22f8573a40920ec6ac26534cd23093e3652666fccf2aa2b79" title="An item with no text modifications.">svn_client_diff_summarize_kind_normal</a>,
<a name="l00782"></a>00782 <span class="comment"></span>
<a name="l00783"></a>00783 <span class="comment">  /** An added item */</span>
<a name="l00784"></a><a class="code" href="group__clnt__diff.html#gga16389160a6aca07f22f8573a40920ec6a61eaa9ed7af3d0d7b87becfebea4f0ac">00784</a>   <a class="code" href="group__clnt__diff.html#gga16389160a6aca07f22f8573a40920ec6a61eaa9ed7af3d0d7b87becfebea4f0ac" title="An added item.">svn_client_diff_summarize_kind_added</a>,
<a name="l00785"></a>00785 <span class="comment"></span>
<a name="l00786"></a>00786 <span class="comment">  /** An item with text modifications */</span>
<a name="l00787"></a><a class="code" href="group__clnt__diff.html#gga16389160a6aca07f22f8573a40920ec6a91ad34ce271c511df44517a03af41d5f">00787</a>   <a class="code" href="group__clnt__diff.html#gga16389160a6aca07f22f8573a40920ec6a91ad34ce271c511df44517a03af41d5f" title="An item with text modifications.">svn_client_diff_summarize_kind_modified</a>,
<a name="l00788"></a>00788 <span class="comment"></span>
<a name="l00789"></a>00789 <span class="comment">  /** A deleted item */</span>
<a name="l00790"></a><a class="code" href="group__clnt__diff.html#gga16389160a6aca07f22f8573a40920ec6a2bb1e53b7ba323cd3476dff1b82afe68">00790</a>   <a class="code" href="group__clnt__diff.html#gga16389160a6aca07f22f8573a40920ec6a2bb1e53b7ba323cd3476dff1b82afe68" title="A deleted item.">svn_client_diff_summarize_kind_deleted</a>
<a name="l00791"></a>00791 } <a class="code" href="group__clnt__diff.html#ga16389160a6aca07f22f8573a40920ec6" title="The difference type in an svn_diff_summarize_t structure.">svn_client_diff_summarize_kind_t</a>;
<a name="l00792"></a>00792 
<a name="l00793"></a>00793 <span class="comment"></span>
<a name="l00794"></a>00794 <span class="comment">/** A struct that describes the diff of an item. Passed to</span>
<a name="l00795"></a>00795 <span class="comment"> * #svn_client_diff_summarize_func_t.</span>
<a name="l00796"></a>00796 <span class="comment"> *</span>
<a name="l00797"></a>00797 <span class="comment"> * @note Fields may be added to the end of this structure in future</span>
<a name="l00798"></a>00798 <span class="comment"> * versions.  Therefore, users shouldn&#39;t allocate structures of this</span>
<a name="l00799"></a>00799 <span class="comment"> * type, to preserve binary compatibility.</span>
<a name="l00800"></a>00800 <span class="comment"> *</span>
<a name="l00801"></a>00801 <span class="comment"> * @since New in 1.4.</span>
<a name="l00802"></a>00802 <span class="comment"> */</span>
<a name="l00803"></a><a class="code" href="structsvn__client__diff__summarize__t.html">00803</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__client__diff__summarize__t.html" title="A struct that describes the diff of an item.">svn_client_diff_summarize_t</a>
<a name="l00804"></a>00804 {<span class="comment"></span>
<a name="l00805"></a>00805 <span class="comment">  /** Path relative to the target.  If the target is a file, path is</span>
<a name="l00806"></a>00806 <span class="comment">   * the empty string. */</span>
<a name="l00807"></a><a class="code" href="structsvn__client__diff__summarize__t.html#a19910a8fd39aafd10b6d48d283f1ed8d">00807</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__diff__summarize__t.html#a19910a8fd39aafd10b6d48d283f1ed8d" title="Path relative to the target.">path</a>;
<a name="l00808"></a>00808 <span class="comment"></span>
<a name="l00809"></a>00809 <span class="comment">  /** Change kind */</span>
<a name="l00810"></a><a class="code" href="structsvn__client__diff__summarize__t.html#aa7a78da5a34223495546522655b3bd49">00810</a>   <a class="code" href="group__clnt__diff.html#ga16389160a6aca07f22f8573a40920ec6" title="The difference type in an svn_diff_summarize_t structure.">svn_client_diff_summarize_kind_t</a> <a class="code" href="structsvn__client__diff__summarize__t.html#aa7a78da5a34223495546522655b3bd49" title="Change kind.">summarize_kind</a>;
<a name="l00811"></a>00811 <span class="comment"></span>
<a name="l00812"></a>00812 <span class="comment">  /** Properties changed?  For consistency with &#39;svn status&#39; output,</span>
<a name="l00813"></a>00813 <span class="comment">   * this should be false if summarize_kind is _added or _deleted. */</span>
<a name="l00814"></a><a class="code" href="structsvn__client__diff__summarize__t.html#a415919e57c06978b576ebe73b44f1747">00814</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__client__diff__summarize__t.html#a415919e57c06978b576ebe73b44f1747" title="Properties changed? For consistency with &#39;svn status&#39; output, this should be false if summarize_kind ...">prop_changed</a>;
<a name="l00815"></a>00815 <span class="comment"></span>
<a name="l00816"></a>00816 <span class="comment">  /** File or dir */</span>
<a name="l00817"></a><a class="code" href="structsvn__client__diff__summarize__t.html#affe236d308d80b1a631bd633ac1de2aa">00817</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__client__diff__summarize__t.html#affe236d308d80b1a631bd633ac1de2aa" title="File or dir.">node_kind</a>;
<a name="l00818"></a>00818 } <a class="code" href="group__clnt__diff.html#gaab1c022886672b2bf49a9f47162e775b" title="A struct that describes the diff of an item.">svn_client_diff_summarize_t</a>;
<a name="l00819"></a>00819 <span class="comment"></span>
<a name="l00820"></a>00820 <span class="comment">/**</span>
<a name="l00821"></a>00821 <span class="comment"> * Return a duplicate of @a diff, allocated in @a pool. No part of the new</span>
<a name="l00822"></a>00822 <span class="comment"> * structure will be shared with @a diff.</span>
<a name="l00823"></a>00823 <span class="comment"> *</span>
<a name="l00824"></a>00824 <span class="comment"> * @since New in 1.4.</span>
<a name="l00825"></a>00825 <span class="comment"> */</span>
<a name="l00826"></a>00826 <a class="code" href="structsvn__client__diff__summarize__t.html" title="A struct that describes the diff of an item.">svn_client_diff_summarize_t</a> *
<a name="l00827"></a>00827 <a class="code" href="group__clnt__diff.html#gaa0635edf736406a7418fdba5c5fec2db" title="Return a duplicate of diff, allocated in pool.">svn_client_diff_summarize_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__client__diff__summarize__t.html" title="A struct that describes the diff of an item.">svn_client_diff_summarize_t</a> *diff,
<a name="l00828"></a>00828                               apr_pool_t *pool);
<a name="l00829"></a>00829 
<a name="l00830"></a>00830 <span class="comment"></span>
<a name="l00831"></a>00831 <span class="comment">/** A callback used in svn_client_diff_summarize2() and</span>
<a name="l00832"></a>00832 <span class="comment"> * svn_client_diff_summarize_peg2() for reporting a @a diff summary.</span>
<a name="l00833"></a>00833 <span class="comment"> *</span>
<a name="l00834"></a>00834 <span class="comment"> * All allocations should be performed in @a pool.</span>
<a name="l00835"></a>00835 <span class="comment"> *</span>
<a name="l00836"></a>00836 <span class="comment"> * @a baton is a closure object; it should be provided by the implementation,</span>
<a name="l00837"></a>00837 <span class="comment"> * and passed by the caller.</span>
<a name="l00838"></a>00838 <span class="comment"> *</span>
<a name="l00839"></a>00839 <span class="comment"> * @since New in 1.4.</span>
<a name="l00840"></a>00840 <span class="comment"> */</span>
<a name="l00841"></a><a class="code" href="group__clnt__diff.html#gaf9a4030e5c1c4d914e2f513fa1bd5f58">00841</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_diff_summarize_func_t)(
<a name="l00842"></a>00842   <span class="keyword">const</span> <a class="code" href="structsvn__client__diff__summarize__t.html" title="A struct that describes the diff of an item.">svn_client_diff_summarize_t</a> *diff,
<a name="l00843"></a>00843   <span class="keywordtype">void</span> *baton,
<a name="l00844"></a>00844   apr_pool_t *pool);
<a name="l00845"></a>00845 
<a name="l00846"></a>00846 
<a name="l00847"></a>00847 <span class="comment"></span>
<a name="l00848"></a>00848 <span class="comment">/** @} */</span>
<a name="l00849"></a>00849 
<a name="l00850"></a>00850 <span class="comment"></span>
<a name="l00851"></a>00851 <span class="comment">/**</span>
<a name="l00852"></a>00852 <span class="comment"> * Client context</span>
<a name="l00853"></a>00853 <span class="comment"> *</span>
<a name="l00854"></a>00854 <span class="comment"> * @defgroup clnt_ctx Client context management</span>
<a name="l00855"></a>00855 <span class="comment"> *</span>
<a name="l00856"></a>00856 <span class="comment"> * @{</span>
<a name="l00857"></a>00857 <span class="comment"> */</span>
<a name="l00858"></a>00858 <span class="comment"></span>
<a name="l00859"></a>00859 <span class="comment">/** A client context structure, which holds client specific callbacks,</span>
<a name="l00860"></a>00860 <span class="comment"> * batons, serves as a cache for configuration options, and other various</span>
<a name="l00861"></a>00861 <span class="comment"> * and sundry things.  In order to avoid backwards compatibility problems</span>
<a name="l00862"></a>00862 <span class="comment"> * clients should use svn_client_create_context() to allocate and</span>
<a name="l00863"></a>00863 <span class="comment"> * initialize this structure instead of doing so themselves.</span>
<a name="l00864"></a>00864 <span class="comment"> */</span>
<a name="l00865"></a><a class="code" href="structsvn__client__ctx__t.html">00865</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a>
<a name="l00866"></a>00866 {<span class="comment"></span>
<a name="l00867"></a>00867 <span class="comment">  /** main authentication baton. */</span>
<a name="l00868"></a><a class="code" href="structsvn__client__ctx__t.html#adc764312fbed05b0bb6d5f91746f49a6">00868</a>   <a class="code" href="group__auth__fns.html#gaa77a422f326606f52366fb2fb0a43f8d" title="The type of a Subversion authentication object.">svn_auth_baton_t</a> *<a class="code" href="structsvn__client__ctx__t.html#adc764312fbed05b0bb6d5f91746f49a6" title="main authentication baton.">auth_baton</a>;
<a name="l00869"></a>00869 <span class="comment"></span>
<a name="l00870"></a>00870 <span class="comment">  /** notification callback function.</span>
<a name="l00871"></a>00871 <span class="comment">   * This will be called by notify_func2() by default.</span>
<a name="l00872"></a>00872 <span class="comment">   * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l00873"></a>00873 <span class="comment">   * Use @c notify_func2 instead. */</span>
<a name="l00874"></a><a class="code" href="structsvn__client__ctx__t.html#a22655d9e3f37e098ef0b9b2c67e9e489">00874</a>   <a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2" title="Similar to svn_wc_notify_func2_t, but takes the information as arguments instead of struct fields...">svn_wc_notify_func_t</a> <a class="code" href="structsvn__client__ctx__t.html#a22655d9e3f37e098ef0b9b2c67e9e489" title="notification callback function.">notify_func</a>;
<a name="l00875"></a>00875 <span class="comment"></span>
<a name="l00876"></a>00876 <span class="comment">  /** notification callback baton for notify_func()</span>
<a name="l00877"></a>00877 <span class="comment">   * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l00878"></a>00878 <span class="comment">   * Use @c notify_baton2 instead */</span>
<a name="l00879"></a><a class="code" href="structsvn__client__ctx__t.html#a657f053bd9bb8f06551653d2e660fc8b">00879</a>   <span class="keywordtype">void</span> *<a class="code" href="structsvn__client__ctx__t.html#a657f053bd9bb8f06551653d2e660fc8b" title="notification callback baton for notify_func()">notify_baton</a>;
<a name="l00880"></a>00880 <span class="comment"></span>
<a name="l00881"></a>00881 <span class="comment">  /** Log message callback function.  NULL means that Subversion</span>
<a name="l00882"></a>00882 <span class="comment">    * should try not attempt to fetch a log message.</span>
<a name="l00883"></a>00883 <span class="comment">    * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l00884"></a>00884 <span class="comment">    * Use @c log_msg_func2 instead. */</span>
<a name="l00885"></a><a class="code" href="structsvn__client__ctx__t.html#a9cb8bf63f2dc4c3527f271a16832dedc">00885</a>   <a class="code" href="group__clnt__commit.html#ga39899194e67568bec4a3ef6fba817c1f" title="Callback type used by commit-y operations to get a commit log message from the caller.">svn_client_get_commit_log_t</a> <a class="code" href="structsvn__client__ctx__t.html#a9cb8bf63f2dc4c3527f271a16832dedc" title="Log message callback function.">log_msg_func</a>;
<a name="l00886"></a>00886 <span class="comment"></span>
<a name="l00887"></a>00887 <span class="comment">  /** log message callback baton</span>
<a name="l00888"></a>00888 <span class="comment">    * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l00889"></a>00889 <span class="comment">    * Use @c log_msg_baton2 instead. */</span>
<a name="l00890"></a><a class="code" href="structsvn__client__ctx__t.html#a676cc28eeca833a25966e2bce3727bce">00890</a>   <span class="keywordtype">void</span> *<a class="code" href="structsvn__client__ctx__t.html#a676cc28eeca833a25966e2bce3727bce" title="log message callback baton">log_msg_baton</a>;
<a name="l00891"></a>00891 <span class="comment"></span>
<a name="l00892"></a>00892 <span class="comment">  /** a hash mapping of &lt;tt&gt;const char *&lt;/tt&gt; configuration file names to</span>
<a name="l00893"></a>00893 <span class="comment">   * #svn_config_t *&#39;s. For example, the &#39;~/.subversion/config&#39; file&#39;s</span>
<a name="l00894"></a>00894 <span class="comment">   * contents should have the key &quot;config&quot;.  May be left unset (or set to</span>
<a name="l00895"></a>00895 <span class="comment">   * NULL) to use the built-in default settings and not use any configuration.</span>
<a name="l00896"></a>00896 <span class="comment">   */</span>
<a name="l00897"></a><a class="code" href="structsvn__client__ctx__t.html#a6afd6ae21ace4924b68841d334cd1980">00897</a>   apr_hash_t *<a class="code" href="structsvn__client__ctx__t.html#a6afd6ae21ace4924b68841d334cd1980" title="a hash mapping of const char * configuration file names to svn_config_t *&#39;s.">config</a>;
<a name="l00898"></a>00898 <span class="comment"></span>
<a name="l00899"></a>00899 <span class="comment">  /** a callback to be used to see if the client wishes to cancel the running</span>
<a name="l00900"></a>00900 <span class="comment">   * operation. */</span>
<a name="l00901"></a><a class="code" href="structsvn__client__ctx__t.html#aa2b746fc8d498fb12b560c086dc6d29d">00901</a>   <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> <a class="code" href="structsvn__client__ctx__t.html#aa2b746fc8d498fb12b560c086dc6d29d" title="a callback to be used to see if the client wishes to cancel the running operation.">cancel_func</a>;
<a name="l00902"></a>00902 <span class="comment"></span>
<a name="l00903"></a>00903 <span class="comment">  /** a baton to pass to the cancellation callback. */</span>
<a name="l00904"></a><a class="code" href="structsvn__client__ctx__t.html#a477c8480ac4061bcf7ad165c4293dcf2">00904</a>   <span class="keywordtype">void</span> *<a class="code" href="structsvn__client__ctx__t.html#a477c8480ac4061bcf7ad165c4293dcf2" title="a baton to pass to the cancellation callback.">cancel_baton</a>;
<a name="l00905"></a>00905 <span class="comment"></span>
<a name="l00906"></a>00906 <span class="comment">  /** notification function, defaulting to a function that forwards</span>
<a name="l00907"></a>00907 <span class="comment">   * to notify_func().  If @c NULL, it will not be invoked.</span>
<a name="l00908"></a>00908 <span class="comment">   * @since New in 1.2. */</span>
<a name="l00909"></a><a class="code" href="structsvn__client__ctx__t.html#a49a79aa35f4ca043254c980b9955eb92">00909</a>   <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> <a class="code" href="structsvn__client__ctx__t.html#a49a79aa35f4ca043254c980b9955eb92" title="notification function, defaulting to a function that forwards to notify_func().">notify_func2</a>;
<a name="l00910"></a>00910 <span class="comment"></span>
<a name="l00911"></a>00911 <span class="comment">  /** notification baton for notify_func2().</span>
<a name="l00912"></a>00912 <span class="comment">   * @since New in 1.2. */</span>
<a name="l00913"></a><a class="code" href="structsvn__client__ctx__t.html#a356db2deb2d235b0797bb1b1eee2c24c">00913</a>   <span class="keywordtype">void</span> *<a class="code" href="structsvn__client__ctx__t.html#a356db2deb2d235b0797bb1b1eee2c24c" title="notification baton for notify_func2().">notify_baton2</a>;
<a name="l00914"></a>00914 <span class="comment"></span>
<a name="l00915"></a>00915 <span class="comment">  /** Log message callback function. NULL means that Subversion</span>
<a name="l00916"></a>00916 <span class="comment">   *   should try log_msg_func.</span>
<a name="l00917"></a>00917 <span class="comment">   * @since New in 1.3. */</span>
<a name="l00918"></a><a class="code" href="structsvn__client__ctx__t.html#a41fc30781f3d8ce03d27951b182ba6d7">00918</a>   <a class="code" href="group__clnt__commit.html#gaa1d88be008d4568af150f0256ed792e2" title="Callback type used by commit-y operations to get a commit log message from the caller.">svn_client_get_commit_log2_t</a> <a class="code" href="structsvn__client__ctx__t.html#a41fc30781f3d8ce03d27951b182ba6d7" title="Log message callback function.">log_msg_func2</a>;
<a name="l00919"></a>00919 <span class="comment"></span>
<a name="l00920"></a>00920 <span class="comment">  /** callback baton for log_msg_func2</span>
<a name="l00921"></a>00921 <span class="comment">   * @since New in 1.3. */</span>
<a name="l00922"></a><a class="code" href="structsvn__client__ctx__t.html#a1d29968058759e823a15078c2d1e4ec4">00922</a>   <span class="keywordtype">void</span> *<a class="code" href="structsvn__client__ctx__t.html#a1d29968058759e823a15078c2d1e4ec4" title="callback baton for log_msg_func2">log_msg_baton2</a>;
<a name="l00923"></a>00923 <span class="comment"></span>
<a name="l00924"></a>00924 <span class="comment">  /** Notification callback for network progress information.</span>
<a name="l00925"></a>00925 <span class="comment">   * May be NULL if not used.</span>
<a name="l00926"></a>00926 <span class="comment">   * @since New in 1.3. */</span>
<a name="l00927"></a><a class="code" href="structsvn__client__ctx__t.html#aa204c48425fa9872a07fbee7a27e67e6">00927</a>   <a class="code" href="svn__ra_8h.html#a44f6e7f50bf0acdee8ee9bdf1ce984c3" title="Callback function type for progress notification.">svn_ra_progress_notify_func_t</a> <a class="code" href="structsvn__client__ctx__t.html#aa204c48425fa9872a07fbee7a27e67e6" title="Notification callback for network progress information.">progress_func</a>;
<a name="l00928"></a>00928 <span class="comment"></span>
<a name="l00929"></a>00929 <span class="comment">  /** Callback baton for progress_func.</span>
<a name="l00930"></a>00930 <span class="comment">   * @since New in 1.3. */</span>
<a name="l00931"></a><a class="code" href="structsvn__client__ctx__t.html#a789df7a47de0131527795ab885912e13">00931</a>   <span class="keywordtype">void</span> *<a class="code" href="structsvn__client__ctx__t.html#a789df7a47de0131527795ab885912e13" title="Callback baton for progress_func.">progress_baton</a>;
<a name="l00932"></a>00932 <span class="comment"></span>
<a name="l00933"></a>00933 <span class="comment">  /** Log message callback function. NULL means that Subversion</span>
<a name="l00934"></a>00934 <span class="comment">   *   should try @c log_msg_func2, then @c log_msg_func.</span>
<a name="l00935"></a>00935 <span class="comment">   * @since New in 1.5. */</span>
<a name="l00936"></a><a class="code" href="structsvn__client__ctx__t.html#a49dd26d9ad0d8828743b2e63c5b6db13">00936</a>   <a class="code" href="group__clnt__commit.html#gad8d9c386fe79564a1b8b66e2a7d67d60" title="Callback type used by commit-y operations to get a commit log message from the caller.">svn_client_get_commit_log3_t</a> <a class="code" href="structsvn__client__ctx__t.html#a49dd26d9ad0d8828743b2e63c5b6db13" title="Log message callback function.">log_msg_func3</a>;
<a name="l00937"></a>00937 <span class="comment"></span>
<a name="l00938"></a>00938 <span class="comment">  /** The callback baton for @c log_msg_func3.</span>
<a name="l00939"></a>00939 <span class="comment">   * @since New in 1.5. */</span>
<a name="l00940"></a><a class="code" href="structsvn__client__ctx__t.html#ae13aa1a168bd7420cb031fd40c438ebf">00940</a>   <span class="keywordtype">void</span> *<a class="code" href="structsvn__client__ctx__t.html#ae13aa1a168bd7420cb031fd40c438ebf" title="The callback baton for log_msg_func3.">log_msg_baton3</a>;
<a name="l00941"></a>00941 <span class="comment"></span>
<a name="l00942"></a>00942 <span class="comment">  /** MIME types map.</span>
<a name="l00943"></a>00943 <span class="comment">   * @since New in 1.5. */</span>
<a name="l00944"></a><a class="code" href="structsvn__client__ctx__t.html#acea1a9261fec72bc8190a95cf183910e">00944</a>   apr_hash_t *<a class="code" href="structsvn__client__ctx__t.html#acea1a9261fec72bc8190a95cf183910e" title="MIME types map.">mimetypes_map</a>;
<a name="l00945"></a>00945 <span class="comment"></span>
<a name="l00946"></a>00946 <span class="comment">  /** Conflict resolution callback and baton, if available.</span>
<a name="l00947"></a>00947 <span class="comment">   * @since New in 1.5. */</span>
<a name="l00948"></a><a class="code" href="structsvn__client__ctx__t.html#a2edb6df0a041995e2302e2296b466747">00948</a>   <a class="code" href="group__svn__wc__conflict.html#gaad913ce66a4c5efdd82397da73e6a21d" title="Similar to svn_wc_conflict_resolver_func2_t, but using svn_wc_conflict_description_t instead of svn_w...">svn_wc_conflict_resolver_func_t</a> <a class="code" href="structsvn__client__ctx__t.html#a2edb6df0a041995e2302e2296b466747" title="Conflict resolution callback and baton, if available.">conflict_func</a>;
<a name="l00949"></a>00949   <span class="keywordtype">void</span> *conflict_baton;
<a name="l00950"></a>00950 <span class="comment"></span>
<a name="l00951"></a>00951 <span class="comment">  /** Custom client name string, or @c NULL.</span>
<a name="l00952"></a>00952 <span class="comment">   * @since New in 1.5. */</span>
<a name="l00953"></a><a class="code" href="structsvn__client__ctx__t.html#abb4fdb4861feca625120edc95d254a82">00953</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__ctx__t.html#abb4fdb4861feca625120edc95d254a82" title="Custom client name string, or NULL.">client_name</a>;
<a name="l00954"></a>00954 <span class="comment"></span>
<a name="l00955"></a>00955 <span class="comment">  /** Conflict resolution callback and baton, if available. NULL means that</span>
<a name="l00956"></a>00956 <span class="comment">   * subversion should try @c conflict_func.</span>
<a name="l00957"></a>00957 <span class="comment">   * @since New in 1.7. */</span>
<a name="l00958"></a><a class="code" href="structsvn__client__ctx__t.html#afdc89d4474e4669272b8f662b5aa57e7">00958</a>   <a class="code" href="group__svn__wc__conflict.html#gaaf65c206c4bb05353897170ad4453656" title="A callback used in merge, update and switch for resolving conflicts during the application of a tree ...">svn_wc_conflict_resolver_func2_t</a> <a class="code" href="structsvn__client__ctx__t.html#afdc89d4474e4669272b8f662b5aa57e7" title="Conflict resolution callback and baton, if available.">conflict_func2</a>;
<a name="l00959"></a>00959   <span class="keywordtype">void</span> *conflict_baton2;
<a name="l00960"></a>00960 <span class="comment"></span>
<a name="l00961"></a>00961 <span class="comment">  /** A working copy context for the client operation to use.</span>
<a name="l00962"></a>00962 <span class="comment">   * This is initialized by svn_client_create_context() and should never</span>
<a name="l00963"></a>00963 <span class="comment">   * be @c NULL.</span>
<a name="l00964"></a>00964 <span class="comment">   *</span>
<a name="l00965"></a>00965 <span class="comment">   * @since New in 1.7.  */</span>
<a name="l00966"></a><a class="code" href="structsvn__client__ctx__t.html#af687ec14c4b5bbeef8c0ca14043ad7d8">00966</a>   <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *<a class="code" href="structsvn__client__ctx__t.html#af687ec14c4b5bbeef8c0ca14043ad7d8" title="A working copy context for the client operation to use.">wc_ctx</a>;
<a name="l00967"></a>00967 
<a name="l00968"></a>00968 } <a class="code" href="group__clnt__ctx.html#ga13ef108e31dd4b7f700d55d23beafaa3" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a>;
<a name="l00969"></a>00969 <span class="comment"></span>
<a name="l00970"></a>00970 <span class="comment">/** Initialize a client context.</span>
<a name="l00971"></a>00971 <span class="comment"> * Set @a *ctx to a client context object, allocated in @a pool, that</span>
<a name="l00972"></a>00972 <span class="comment"> * represents a particular instance of an svn client.</span>
<a name="l00973"></a>00973 <span class="comment"> *</span>
<a name="l00974"></a>00974 <span class="comment"> * In order to avoid backwards compatibility problems, clients must</span>
<a name="l00975"></a>00975 <span class="comment"> * use this function to initialize and allocate the</span>
<a name="l00976"></a>00976 <span class="comment"> * #svn_client_ctx_t structure rather than doing so themselves, as</span>
<a name="l00977"></a>00977 <span class="comment"> * the size of this structure may change in the future.</span>
<a name="l00978"></a>00978 <span class="comment"> *</span>
<a name="l00979"></a>00979 <span class="comment"> * The current implementation never returns error, but callers should</span>
<a name="l00980"></a>00980 <span class="comment"> * still check for error, for compatibility with future versions.</span>
<a name="l00981"></a>00981 <span class="comment"> */</span>
<a name="l00982"></a>00982 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00983"></a>00983 <a class="code" href="group__clnt__ctx.html#ga9529eb0c90589b849417f151bcbee479" title="Initialize a client context.">svn_client_create_context</a>(<a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> **ctx,
<a name="l00984"></a>00984                           apr_pool_t *pool);
<a name="l00985"></a>00985 <span class="comment"></span>
<a name="l00986"></a>00986 <span class="comment">/** @} end group: Client context management */</span>
<a name="l00987"></a>00987 <span class="comment"></span>
<a name="l00988"></a>00988 <span class="comment">/**</span>
<a name="l00989"></a>00989 <span class="comment"> * @name Authentication information file names</span>
<a name="l00990"></a>00990 <span class="comment"> *</span>
<a name="l00991"></a>00991 <span class="comment"> * Names of files that contain authentication information.</span>
<a name="l00992"></a>00992 <span class="comment"> *</span>
<a name="l00993"></a>00993 <span class="comment"> * These filenames are decided by libsvn_client, since this library</span>
<a name="l00994"></a>00994 <span class="comment"> * implements all the auth-protocols;  libsvn_wc does nothing but</span>
<a name="l00995"></a>00995 <span class="comment"> * blindly store and retrieve these files from protected areas.</span>
<a name="l00996"></a>00996 <span class="comment"> *</span>
<a name="l00997"></a>00997 <span class="comment"> * @defgroup clnt_auth_filenames Client authentication file names</span>
<a name="l00998"></a>00998 <span class="comment"> * @{</span>
<a name="l00999"></a>00999 <span class="comment"> */</span>
<a name="l01000"></a>01000 <span class="preprocessor">#define SVN_CLIENT_AUTH_USERNAME            &quot;username&quot;</span>
<a name="l01001"></a>01001 <span class="preprocessor"></span><span class="preprocessor">#define SVN_CLIENT_AUTH_PASSWORD            &quot;password&quot;</span>
<a name="l01002"></a>01002 <span class="preprocessor"></span><span class="comment">/** @} group end: Authentication information file names */</span>
<a name="l01003"></a>01003 <span class="comment"></span>
<a name="l01004"></a>01004 <span class="comment">/** Client argument processing</span>
<a name="l01005"></a>01005 <span class="comment"> *</span>
<a name="l01006"></a>01006 <span class="comment"> * @defgroup clnt_cmdline Client command-line processing</span>
<a name="l01007"></a>01007 <span class="comment"> *</span>
<a name="l01008"></a>01008 <span class="comment"> * @{</span>
<a name="l01009"></a>01009 <span class="comment"> */</span>
<a name="l01010"></a>01010 <span class="comment"></span>
<a name="l01011"></a>01011 <span class="comment">/**</span>
<a name="l01012"></a>01012 <span class="comment"> * Pull remaining target arguments from @a os into @a *targets_p,</span>
<a name="l01013"></a>01013 <span class="comment"> * converting them to UTF-8, followed by targets from @a known_targets</span>
<a name="l01014"></a>01014 <span class="comment"> * (which might come from, for example, the &quot;--targets&quot; command line option).</span>
<a name="l01015"></a>01015 <span class="comment"> *</span>
<a name="l01016"></a>01016 <span class="comment"> * Process each target in one of the following ways.  For a repository-</span>
<a name="l01017"></a>01017 <span class="comment"> * relative URL: resolve to a full URL, contacting the repository if</span>
<a name="l01018"></a>01018 <span class="comment"> * necessary to do so, and then treat as a full URL.  For a URL: do some</span>
<a name="l01019"></a>01019 <span class="comment"> * IRI-to-URI encoding and some auto-escaping, and canonicalize.  For a</span>
<a name="l01020"></a>01020 <span class="comment"> * local path: canonicalize case and path separators.</span>
<a name="l01021"></a>01021 <span class="comment"> *</span>
<a name="l01022"></a>01022 <span class="comment"> * If @a keep_last_origpath_on_truepath_collision is TRUE, and there are</span>
<a name="l01023"></a>01023 <span class="comment"> * exactly two targets which both case-canonicalize to the same path, the last</span>
<a name="l01024"></a>01024 <span class="comment"> * target will be returned in the original non-case-canonicalized form.</span>
<a name="l01025"></a>01025 <span class="comment"> *</span>
<a name="l01026"></a>01026 <span class="comment"> * Allocate @a *targets_p and its elements in @a pool.</span>
<a name="l01027"></a>01027 <span class="comment"> *</span>
<a name="l01028"></a>01028 <span class="comment"> * @a ctx is required for possible repository authentication.</span>
<a name="l01029"></a>01029 <span class="comment"> *</span>
<a name="l01030"></a>01030 <span class="comment"> * If a path has the same name as a Subversion working copy</span>
<a name="l01031"></a>01031 <span class="comment"> * administrative directory, return #SVN_ERR_RESERVED_FILENAME_SPECIFIED;</span>
<a name="l01032"></a>01032 <span class="comment"> * if multiple reserved paths are encountered, return a chain of</span>
<a name="l01033"></a>01033 <span class="comment"> * errors, all of which are #SVN_ERR_RESERVED_FILENAME_SPECIFIED.  Do</span>
<a name="l01034"></a>01034 <span class="comment"> * not return this type of error in a chain with any other type of</span>
<a name="l01035"></a>01035 <span class="comment"> * error, and if this is the only type of error encountered, complete</span>
<a name="l01036"></a>01036 <span class="comment"> * the operation before returning the error(s).</span>
<a name="l01037"></a>01037 <span class="comment"> *</span>
<a name="l01038"></a>01038 <span class="comment"> * @since New in 1.7</span>
<a name="l01039"></a>01039 <span class="comment"> */</span>
<a name="l01040"></a>01040 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01041"></a>01041 <a class="code" href="group__clnt__cmdline.html#gabec5dd1be1199bde89e47b1ecb54cfda" title="Pull remaining target arguments from os into *targets_p, converting them to UTF-8, followed by targets from known_targets (which might come from, for example, the &quot;--targets&quot; command line option).">svn_client_args_to_target_array2</a>(apr_array_header_t **targets_p,
<a name="l01042"></a>01042                                  apr_getopt_t *os,
<a name="l01043"></a>01043                                  <span class="keyword">const</span> apr_array_header_t *known_targets,
<a name="l01044"></a>01044                                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01045"></a>01045                                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_last_origpath_on_truepath_collision,
<a name="l01046"></a>01046                                  apr_pool_t *pool);
<a name="l01047"></a>01047 
<a name="l01048"></a>01048 <span class="comment">/*</span>
<a name="l01049"></a>01049 <span class="comment"> * Similar to svn_client_args_to_target_array2() but with</span>
<a name="l01050"></a>01050 <span class="comment"> * @a keep_last_origpath_on_truepath_collision always set to FALSE.</span>
<a name="l01051"></a>01051 <span class="comment"> *</span>
<a name="l01052"></a>01052 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l01053"></a>01053 <span class="comment"> */</span>
<a name="l01054"></a>01054 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01055"></a>01055 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01056"></a>01056 svn_client_args_to_target_array(apr_array_header_t **targets_p,
<a name="l01057"></a>01057                                 apr_getopt_t *os,
<a name="l01058"></a>01058                                 <span class="keyword">const</span> apr_array_header_t *known_targets,
<a name="l01059"></a>01059                                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01060"></a>01060                                 apr_pool_t *pool);
<a name="l01061"></a>01061 <span class="comment"></span>
<a name="l01062"></a>01062 <span class="comment">/** @} group end: Client command-line processing */</span>
<a name="l01063"></a>01063 <span class="comment"></span>
<a name="l01064"></a>01064 <span class="comment">/** @} */</span>
<a name="l01065"></a>01065 <span class="comment"></span>
<a name="l01066"></a>01066 <span class="comment">/**</span>
<a name="l01067"></a>01067 <span class="comment"> * Client working copy management functions</span>
<a name="l01068"></a>01068 <span class="comment"> *</span>
<a name="l01069"></a>01069 <span class="comment"> * @defgroup clnt_wc Client working copy management</span>
<a name="l01070"></a>01070 <span class="comment"> *</span>
<a name="l01071"></a>01071 <span class="comment"> * @{</span>
<a name="l01072"></a>01072 <span class="comment"> */</span>
<a name="l01073"></a>01073 <span class="comment"></span>
<a name="l01074"></a>01074 <span class="comment">/**</span>
<a name="l01075"></a>01075 <span class="comment"> * @defgroup clnt_wc_checkout Checkout</span>
<a name="l01076"></a>01076 <span class="comment"> *</span>
<a name="l01077"></a>01077 <span class="comment"> * @{</span>
<a name="l01078"></a>01078 <span class="comment"> */</span>
<a name="l01079"></a>01079 
<a name="l01080"></a>01080 <span class="comment"></span>
<a name="l01081"></a>01081 <span class="comment">/**</span>
<a name="l01082"></a>01082 <span class="comment"> * Checkout a working copy from a repository.</span>
<a name="l01083"></a>01083 <span class="comment"> *</span>
<a name="l01084"></a>01084 <span class="comment"> * @param[out] result_rev   If non-NULL, the value of the revision checked</span>
<a name="l01085"></a>01085 <span class="comment"> *              out from the repository.</span>
<a name="l01086"></a>01086 <span class="comment"> * @param[in] URL       The repository URL of the checkout source.</span>
<a name="l01087"></a>01087 <span class="comment"> * @param[in] path      The root of the new working copy.</span>
<a name="l01088"></a>01088 <span class="comment"> * @param[in] peg_revision  The peg revision.</span>
<a name="l01089"></a>01089 <span class="comment"> * @param[in] revision  The operative revision.</span>
<a name="l01090"></a>01090 <span class="comment"> * @param[in] depth     The depth of the operation.  If #svn_depth_unknown,</span>
<a name="l01091"></a>01091 <span class="comment"> *              then behave as if for #svn_depth_infinity, except in the case</span>
<a name="l01092"></a>01092 <span class="comment"> *              of resuming a previous checkout of @a path (i.e., updating),</span>
<a name="l01093"></a>01093 <span class="comment"> *              in which case use the depth of the existing working copy.</span>
<a name="l01094"></a>01094 <span class="comment"> * @param[in] ignore_externals  If @c TRUE, don&#39;t process externals</span>
<a name="l01095"></a>01095 <span class="comment"> *              definitions as part of this operation.</span>
<a name="l01096"></a>01096 <span class="comment"> * @param[in] allow_unver_obstructions  If @c TRUE, then tolerate existing</span>
<a name="l01097"></a>01097 <span class="comment"> *              unversioned items that obstruct incoming paths.  Only</span>
<a name="l01098"></a>01098 <span class="comment"> *              obstructions of the same type (file or dir) as the added</span>
<a name="l01099"></a>01099 <span class="comment"> *              item are tolerated.  The text of obstructing files is left</span>
<a name="l01100"></a>01100 <span class="comment"> *              as-is, effectively treating it as a user modification after</span>
<a name="l01101"></a>01101 <span class="comment"> *              the checkout.  Working properties of obstructing items are</span>
<a name="l01102"></a>01102 <span class="comment"> *              set equal to the base properties. &lt;br&gt;</span>
<a name="l01103"></a>01103 <span class="comment"> *              If @c FALSE, then abort if there are any unversioned</span>
<a name="l01104"></a>01104 <span class="comment"> *              obstructing items.</span>
<a name="l01105"></a>01105 <span class="comment"> * @param[in] ctx   The standard client context, used for authentication and</span>
<a name="l01106"></a>01106 <span class="comment"> *              notification.</span>
<a name="l01107"></a>01107 <span class="comment"> * @param[in] pool  Used for any temporary allocation.</span>
<a name="l01108"></a>01108 <span class="comment"> *</span>
<a name="l01109"></a>01109 <span class="comment"> * @return A pointer to an #svn_error_t of the type (this list is not</span>
<a name="l01110"></a>01110 <span class="comment"> *         exhaustive): &lt;br&gt;</span>
<a name="l01111"></a>01111 <span class="comment"> *         #SVN_ERR_UNSUPPORTED_FEATURE if @a URL refers to a file rather</span>
<a name="l01112"></a>01112 <span class="comment"> *         than a directory; &lt;br&gt;</span>
<a name="l01113"></a>01113 <span class="comment"> *         #SVN_ERR_RA_ILLEGAL_URL if @a URL does not exist; &lt;br&gt;</span>
<a name="l01114"></a>01114 <span class="comment"> *         #SVN_ERR_CLIENT_BAD_REVISION if @a revision is not one of</span>
<a name="l01115"></a>01115 <span class="comment"> *         #svn_opt_revision_number, #svn_opt_revision_head, or</span>
<a name="l01116"></a>01116 <span class="comment"> *         #svn_opt_revision_date. &lt;br&gt;</span>
<a name="l01117"></a>01117 <span class="comment"> *         If no error occurred, return #SVN_NO_ERROR.</span>
<a name="l01118"></a>01118 <span class="comment"> *</span>
<a name="l01119"></a>01119 <span class="comment"> * @since New in 1.5.</span>
<a name="l01120"></a>01120 <span class="comment"> *</span>
<a name="l01121"></a>01121 <span class="comment"> * @see #svn_depth_t &lt;br&gt; #svn_client_ctx_t &lt;br&gt; @ref clnt_revisions for</span>
<a name="l01122"></a>01122 <span class="comment"> *      a discussion of operative and peg revisions.</span>
<a name="l01123"></a>01123 <span class="comment"> */</span>
<a name="l01124"></a>01124 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01125"></a>01125 <a class="code" href="group__clnt__wc__checkout.html#ga31e87d0db53bf1158eaceb6552c63bae" title="Checkout a working copy from a repository.">svn_client_checkout3</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l01126"></a>01126                      <span class="keyword">const</span> <span class="keywordtype">char</span> *URL,
<a name="l01127"></a>01127                      <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01128"></a>01128                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l01129"></a>01129                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l01130"></a>01130                      <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l01131"></a>01131                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l01132"></a>01132                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_unver_obstructions,
<a name="l01133"></a>01133                      <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01134"></a>01134                      apr_pool_t *pool);
<a name="l01135"></a>01135 
<a name="l01136"></a>01136 <span class="comment"></span>
<a name="l01137"></a>01137 <span class="comment">/**</span>
<a name="l01138"></a>01138 <span class="comment"> * Similar to svn_client_checkout3() but with @a allow_unver_obstructions</span>
<a name="l01139"></a>01139 <span class="comment"> * always set to FALSE, and @a depth set according to @a recurse: if</span>
<a name="l01140"></a>01140 <span class="comment"> * @a recurse is TRUE, @a depth is #svn_depth_infinity, if @a recurse</span>
<a name="l01141"></a>01141 <span class="comment"> * is FALSE, @a depth is #svn_depth_files.</span>
<a name="l01142"></a>01142 <span class="comment"> *</span>
<a name="l01143"></a>01143 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l01144"></a>01144 <span class="comment"> */</span>
<a name="l01145"></a>01145 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01146"></a>01146 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01147"></a>01147 <a class="code" href="group__clnt__wc__checkout.html#gab0eda7fa3972970ef7dfce7e7bb1891e" title="Similar to svn_client_checkout3() but with allow_unver_obstructions always set to FALSE...">svn_client_checkout2</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l01148"></a>01148                      <span class="keyword">const</span> <span class="keywordtype">char</span> *URL,
<a name="l01149"></a>01149                      <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01150"></a>01150                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l01151"></a>01151                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l01152"></a>01152                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l01153"></a>01153                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l01154"></a>01154                      <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01155"></a>01155                      apr_pool_t *pool);
<a name="l01156"></a>01156 
<a name="l01157"></a>01157 <span class="comment"></span>
<a name="l01158"></a>01158 <span class="comment">/**</span>
<a name="l01159"></a>01159 <span class="comment"> * Similar to svn_client_checkout2(), but with @a peg_revision</span>
<a name="l01160"></a>01160 <span class="comment"> * always set to #svn_opt_revision_unspecified and</span>
<a name="l01161"></a>01161 <span class="comment"> * @a ignore_externals always set to FALSE.</span>
<a name="l01162"></a>01162 <span class="comment"> *</span>
<a name="l01163"></a>01163 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l01164"></a>01164 <span class="comment"> */</span>
<a name="l01165"></a>01165 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01166"></a>01166 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01167"></a>01167 <a class="code" href="group__clnt__wc__checkout.html#ga66a785a668ff17e0a97c2b531b262022" title="Similar to svn_client_checkout2(), but with peg_revision always set to svn_opt_revision_unspecified a...">svn_client_checkout</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l01168"></a>01168                     <span class="keyword">const</span> <span class="keywordtype">char</span> *URL,
<a name="l01169"></a>01169                     <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01170"></a>01170                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l01171"></a>01171                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l01172"></a>01172                     <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01173"></a>01173                     apr_pool_t *pool);<span class="comment"></span>
<a name="l01174"></a>01174 <span class="comment">/** @} */</span>
<a name="l01175"></a>01175 <span class="comment"></span>
<a name="l01176"></a>01176 <span class="comment">/**</span>
<a name="l01177"></a>01177 <span class="comment"> * @defgroup Update Bring a working copy up-to-date with a repository</span>
<a name="l01178"></a>01178 <span class="comment"> *</span>
<a name="l01179"></a>01179 <span class="comment"> * @{</span>
<a name="l01180"></a>01180 <span class="comment"> *</span>
<a name="l01181"></a>01181 <span class="comment"> */</span>
<a name="l01182"></a>01182 <span class="comment"></span>
<a name="l01183"></a>01183 <span class="comment">/**</span>
<a name="l01184"></a>01184 <span class="comment"> * Update working trees @a paths to @a revision, authenticating with the</span>
<a name="l01185"></a>01185 <span class="comment"> * authentication baton cached in @a ctx.  @a paths is an array of const</span>
<a name="l01186"></a>01186 <span class="comment"> * char * paths to be updated.  Unversioned paths that are direct children</span>
<a name="l01187"></a>01187 <span class="comment"> * of a versioned path will cause an update that attempts to add that path;</span>
<a name="l01188"></a>01188 <span class="comment"> * other unversioned paths are skipped.  If @a result_revs is not NULL,</span>
<a name="l01189"></a>01189 <span class="comment"> * @a *result_revs will be set to an array of svn_revnum_t with each</span>
<a name="l01190"></a>01190 <span class="comment"> * element set to the revision to which @a revision was resolved for the</span>
<a name="l01191"></a>01191 <span class="comment"> * corresponding element of @a paths.</span>
<a name="l01192"></a>01192 <span class="comment"> *</span>
<a name="l01193"></a>01193 <span class="comment"> * @a revision must be of kind #svn_opt_revision_number,</span>
<a name="l01194"></a>01194 <span class="comment"> * #svn_opt_revision_head, or #svn_opt_revision_date.  If @a</span>
<a name="l01195"></a>01195 <span class="comment"> * revision does not meet these requirements, return the error</span>
<a name="l01196"></a>01196 <span class="comment"> * #SVN_ERR_CLIENT_BAD_REVISION.</span>
<a name="l01197"></a>01197 <span class="comment"> *</span>
<a name="l01198"></a>01198 <span class="comment"> * The paths in @a paths can be from multiple working copies from multiple</span>
<a name="l01199"></a>01199 <span class="comment"> * repositories, but even if they all come from the same repository there</span>
<a name="l01200"></a>01200 <span class="comment"> * is no guarantee that revision represented by #svn_opt_revision_head</span>
<a name="l01201"></a>01201 <span class="comment"> * will remain the same as each path is updated.</span>
<a name="l01202"></a>01202 <span class="comment"> *</span>
<a name="l01203"></a>01203 <span class="comment"> * If @a ignore_externals is set, don&#39;t process externals definitions</span>
<a name="l01204"></a>01204 <span class="comment"> * as part of this operation.</span>
<a name="l01205"></a>01205 <span class="comment"> *</span>
<a name="l01206"></a>01206 <span class="comment"> * If @a depth is #svn_depth_infinity, update fully recursively.</span>
<a name="l01207"></a>01207 <span class="comment"> * Else if it is #svn_depth_immediates or #svn_depth_files, update</span>
<a name="l01208"></a>01208 <span class="comment"> * each target and its file entries, but not its subdirectories.  Else</span>
<a name="l01209"></a>01209 <span class="comment"> * if #svn_depth_empty, update exactly each target, nonrecursively</span>
<a name="l01210"></a>01210 <span class="comment"> * (essentially, update the target&#39;s properties).</span>
<a name="l01211"></a>01211 <span class="comment"> *</span>
<a name="l01212"></a>01212 <span class="comment"> * If @a depth is #svn_depth_unknown, take the working depth from</span>
<a name="l01213"></a>01213 <span class="comment"> * @a paths and then behave as described above.</span>
<a name="l01214"></a>01214 <span class="comment"> *</span>
<a name="l01215"></a>01215 <span class="comment"> * If @a depth_is_sticky is set and @a depth is not</span>
<a name="l01216"></a>01216 <span class="comment"> * #svn_depth_unknown, then in addition to updating PATHS, also set</span>
<a name="l01217"></a>01217 <span class="comment"> * their sticky ambient depth value to @a depth.</span>
<a name="l01218"></a>01218 <span class="comment"> *</span>
<a name="l01219"></a>01219 <span class="comment"> * If @a allow_unver_obstructions is TRUE then the update tolerates</span>
<a name="l01220"></a>01220 <span class="comment"> * existing unversioned items that obstruct added paths.  Only</span>
<a name="l01221"></a>01221 <span class="comment"> * obstructions of the same type (file or dir) as the added item are</span>
<a name="l01222"></a>01222 <span class="comment"> * tolerated.  The text of obstructing files is left as-is, effectively</span>
<a name="l01223"></a>01223 <span class="comment"> * treating it as a user modification after the update.  Working</span>
<a name="l01224"></a>01224 <span class="comment"> * properties of obstructing items are set equal to the base properties.</span>
<a name="l01225"></a>01225 <span class="comment"> * If @a allow_unver_obstructions is FALSE then the update will abort</span>
<a name="l01226"></a>01226 <span class="comment"> * if there are any unversioned obstructing items.</span>
<a name="l01227"></a>01227 <span class="comment"> *</span>
<a name="l01228"></a>01228 <span class="comment"> * If @a adds_as_modification is TRUE, a local addition at the same path</span>
<a name="l01229"></a>01229 <span class="comment"> * as an incoming addition of the same node kind results in a normal node</span>
<a name="l01230"></a>01230 <span class="comment"> * with a possible local modification, instead of a tree conflict.</span>
<a name="l01231"></a>01231 <span class="comment"> *</span>
<a name="l01232"></a>01232 <span class="comment"> * If @a make_parents is TRUE, create any non-existent parent</span>
<a name="l01233"></a>01233 <span class="comment"> * directories also by checking them out at depth=empty.</span>
<a name="l01234"></a>01234 <span class="comment"> *</span>
<a name="l01235"></a>01235 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, invoke @a ctx-&gt;notify_func2 with</span>
<a name="l01236"></a>01236 <span class="comment"> * @a ctx-&gt;notify_baton2 for each item handled by the update, and also for</span>
<a name="l01237"></a>01237 <span class="comment"> * files restored from text-base.  If @a ctx-&gt;cancel_func is non-NULL, invoke</span>
<a name="l01238"></a>01238 <span class="comment"> * it passing @a ctx-&gt;cancel_baton at various places during the update.</span>
<a name="l01239"></a>01239 <span class="comment"> *</span>
<a name="l01240"></a>01240 <span class="comment"> * Use @a pool for any temporary allocation.</span>
<a name="l01241"></a>01241 <span class="comment"> *</span>
<a name="l01242"></a>01242 <span class="comment"> *  @todo  Multiple Targets</span>
<a name="l01243"></a>01243 <span class="comment"> *  - Up for debate:  an update on multiple targets is *not* atomic.</span>
<a name="l01244"></a>01244 <span class="comment"> *  Right now, svn_client_update only takes one path.  What&#39;s</span>
<a name="l01245"></a>01245 <span class="comment"> *  debatable is whether this should ever change.  On the one hand,</span>
<a name="l01246"></a>01246 <span class="comment"> *  it&#39;s kind of losing to have the client application loop over</span>
<a name="l01247"></a>01247 <span class="comment"> *  targets and call svn_client_update() on each one;  each call to</span>
<a name="l01248"></a>01248 <span class="comment"> *  update initializes a whole new repository session (network</span>
<a name="l01249"></a>01249 <span class="comment"> *  overhead, etc.)  On the other hand, it&#39;s a very simple</span>
<a name="l01250"></a>01250 <span class="comment"> *  implementation, and allows for the possibility that different</span>
<a name="l01251"></a>01251 <span class="comment"> *  targets may come from different repositories.</span>
<a name="l01252"></a>01252 <span class="comment"> *</span>
<a name="l01253"></a>01253 <span class="comment"> * @since New in 1.7.</span>
<a name="l01254"></a>01254 <span class="comment"> */</span>
<a name="l01255"></a>01255 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01256"></a>01256 <a class="code" href="group__Update.html#ga2a6fbac0a7b1c7489859498960000ba8" title="Update working trees paths to revision, authenticating with the authentication baton cached in ctx...">svn_client_update4</a>(apr_array_header_t **result_revs,
<a name="l01257"></a>01257                    <span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01258"></a>01258                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l01259"></a>01259                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l01260"></a>01260                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_is_sticky,
<a name="l01261"></a>01261                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l01262"></a>01262                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_unver_obstructions,
<a name="l01263"></a>01263                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> adds_as_modification,
<a name="l01264"></a>01264                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> make_parents,
<a name="l01265"></a>01265                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01266"></a>01266                    apr_pool_t *pool);
<a name="l01267"></a>01267 <span class="comment"></span>
<a name="l01268"></a>01268 <span class="comment">/**</span>
<a name="l01269"></a>01269 <span class="comment"> * Similar to svn_client_update4() but with @a make_parents always set</span>
<a name="l01270"></a>01270 <span class="comment"> * to FALSE and @a adds_as_modification set to TRUE.</span>
<a name="l01271"></a>01271 <span class="comment"> *</span>
<a name="l01272"></a>01272 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l01273"></a>01273 <span class="comment"> * @since New in 1.5.</span>
<a name="l01274"></a>01274 <span class="comment"> */</span>
<a name="l01275"></a>01275 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01276"></a>01276 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01277"></a>01277 <a class="code" href="group__Update.html#ga079508afca6b7892f93cf038bda21495" title="Similar to svn_client_update4() but with make_parents always set to FALSE and adds_as_modification se...">svn_client_update3</a>(apr_array_header_t **result_revs,
<a name="l01278"></a>01278                    <span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01279"></a>01279                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l01280"></a>01280                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l01281"></a>01281                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_is_sticky,
<a name="l01282"></a>01282                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l01283"></a>01283                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_unver_obstructions,
<a name="l01284"></a>01284                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01285"></a>01285                    apr_pool_t *pool);
<a name="l01286"></a>01286 <span class="comment"></span>
<a name="l01287"></a>01287 <span class="comment">/**</span>
<a name="l01288"></a>01288 <span class="comment"> * Similar to svn_client_update3() but with @a allow_unver_obstructions</span>
<a name="l01289"></a>01289 <span class="comment"> * always set to FALSE, @a depth_is_sticky to FALSE, and @a depth set</span>
<a name="l01290"></a>01290 <span class="comment"> * according to @a recurse: if @a recurse is TRUE, set @a depth to</span>
<a name="l01291"></a>01291 <span class="comment"> * #svn_depth_infinity, if @a recurse is FALSE, set @a depth to</span>
<a name="l01292"></a>01292 <span class="comment"> * #svn_depth_files.</span>
<a name="l01293"></a>01293 <span class="comment"> *</span>
<a name="l01294"></a>01294 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l01295"></a>01295 <span class="comment"> */</span>
<a name="l01296"></a>01296 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01297"></a>01297 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01298"></a>01298 <a class="code" href="group__Update.html#ga7d1b2ee1735736798e64973a39d393f4" title="Similar to svn_client_update3() but with allow_unver_obstructions always set to FALSE, depth_is_sticky to FALSE, and depth set according to recurse: if recurse is TRUE, set depth to svn_depth_infinity, if recurse is FALSE, set depth to svn_depth_files.">svn_client_update2</a>(apr_array_header_t **result_revs,
<a name="l01299"></a>01299                    <span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01300"></a>01300                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l01301"></a>01301                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l01302"></a>01302                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l01303"></a>01303                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01304"></a>01304                    apr_pool_t *pool);
<a name="l01305"></a>01305 <span class="comment"></span>
<a name="l01306"></a>01306 <span class="comment">/**</span>
<a name="l01307"></a>01307 <span class="comment"> * Similar to svn_client_update2() except that it accepts only a single</span>
<a name="l01308"></a>01308 <span class="comment"> * target in @a path, returns a single revision if @a result_rev is</span>
<a name="l01309"></a>01309 <span class="comment"> * not NULL, and @a ignore_externals is always set to FALSE.</span>
<a name="l01310"></a>01310 <span class="comment"> *</span>
<a name="l01311"></a>01311 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l01312"></a>01312 <span class="comment"> */</span>
<a name="l01313"></a>01313 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01314"></a>01314 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01315"></a>01315 <a class="code" href="group__Update.html#ga03281f5793596f3934b893bf03a1e385" title="Similar to svn_client_update2() except that it accepts only a single target in path, returns a single revision if result_rev is not NULL, and ignore_externals is always set to FALSE.">svn_client_update</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l01316"></a>01316                   <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01317"></a>01317                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l01318"></a>01318                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l01319"></a>01319                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01320"></a>01320                   apr_pool_t *pool);<span class="comment"></span>
<a name="l01321"></a>01321 <span class="comment">/** @} */</span>
<a name="l01322"></a>01322 <span class="comment"></span>
<a name="l01323"></a>01323 <span class="comment">/**</span>
<a name="l01324"></a>01324 <span class="comment"> * @defgroup Switch Switch a working copy to another location.</span>
<a name="l01325"></a>01325 <span class="comment"> *</span>
<a name="l01326"></a>01326 <span class="comment"> * @{</span>
<a name="l01327"></a>01327 <span class="comment"> */</span>
<a name="l01328"></a>01328 <span class="comment"></span>
<a name="l01329"></a>01329 <span class="comment">/**</span>
<a name="l01330"></a>01330 <span class="comment"> * Switch an existing working copy directory to a different repository</span>
<a name="l01331"></a>01331 <span class="comment"> * location.</span>
<a name="l01332"></a>01332 <span class="comment"> *</span>
<a name="l01333"></a>01333 <span class="comment"> * This is normally used to switch a working copy directory over to another</span>
<a name="l01334"></a>01334 <span class="comment"> * line of development, such as a branch or a tag.  Switching an existing</span>
<a name="l01335"></a>01335 <span class="comment"> * working copy directory is more efficient than checking out @a url from</span>
<a name="l01336"></a>01336 <span class="comment"> * scratch.</span>
<a name="l01337"></a>01337 <span class="comment"> *</span>
<a name="l01338"></a>01338 <span class="comment"> * @param[out] result_rev   If non-NULL, the value of the revision to which</span>
<a name="l01339"></a>01339 <span class="comment"> *                          the working copy was actually switched.</span>
<a name="l01340"></a>01340 <span class="comment"> * @param[in] path      The directory to be switched.  This need not be the</span>
<a name="l01341"></a>01341 <span class="comment"> *              root of a working copy.</span>
<a name="l01342"></a>01342 <span class="comment"> * @param[in] url       The repository URL to switch to.</span>
<a name="l01343"></a>01343 <span class="comment"> * @param[in] peg_revision  The peg revision.</span>
<a name="l01344"></a>01344 <span class="comment"> * @param[in] revision  The operative revision.</span>
<a name="l01345"></a>01345 <span class="comment"> * @param[in] depth     The depth of the operation.  If #svn_depth_infinity,</span>
<a name="l01346"></a>01346 <span class="comment"> *                      switch fully recursively.  Else if #svn_depth_immediates,</span>
<a name="l01347"></a>01347 <span class="comment"> *                      switch @a path and its file children (if any), and</span>
<a name="l01348"></a>01348 <span class="comment"> *                      switch subdirectories but do not update them.  Else if</span>
<a name="l01349"></a>01349 <span class="comment"> *                      #svn_depth_files, switch just file children, ignoring</span>
<a name="l01350"></a>01350 <span class="comment"> *                      subdirectories completely.  Else if #svn_depth_empty,</span>
<a name="l01351"></a>01351 <span class="comment"> *                      switch just @a path and touch nothing underneath it.</span>
<a name="l01352"></a>01352 <span class="comment"> * @param[in] depth_is_sticky   If @c TRUE, and @a depth is not</span>
<a name="l01353"></a>01353 <span class="comment"> *              #svn_depth_unknown, then in addition to switching @a path, also</span>
<a name="l01354"></a>01354 <span class="comment"> *              set its sticky ambient depth value to @a depth.</span>
<a name="l01355"></a>01355 <span class="comment"> * @param[in] ignore_externals  If @c TRUE, don&#39;t process externals</span>
<a name="l01356"></a>01356 <span class="comment"> *              definitions as part of this operation.</span>
<a name="l01357"></a>01357 <span class="comment"> * @param[in] allow_unver_obstructions  If @c TRUE, then tolerate existing</span>
<a name="l01358"></a>01358 <span class="comment"> *              unversioned items that obstruct incoming paths.  Only</span>
<a name="l01359"></a>01359 <span class="comment"> *              obstructions of the same type (file or dir) as the added</span>
<a name="l01360"></a>01360 <span class="comment"> *              item are tolerated.  The text of obstructing files is left</span>
<a name="l01361"></a>01361 <span class="comment"> *              as-is, effectively treating it as a user modification after</span>
<a name="l01362"></a>01362 <span class="comment"> *              the checkout.  Working properties of obstructing items are</span>
<a name="l01363"></a>01363 <span class="comment"> *              set equal to the base properties. &lt;br&gt;</span>
<a name="l01364"></a>01364 <span class="comment"> *              If @c FALSE, then abort if there are any unversioned</span>
<a name="l01365"></a>01365 <span class="comment"> *              obstructing items.</span>
<a name="l01366"></a>01366 <span class="comment"> * @param[in] ignore_ancestry  If @c FALSE, then verify that the file</span>
<a name="l01367"></a>01367 <span class="comment"> *              or directory at @a path shares some common version control</span>
<a name="l01368"></a>01368 <span class="comment"> *              ancestry with the switch URL location (represented by the</span>
<a name="l01369"></a>01369 <span class="comment"> *              combination of @a url, @a peg_revision, and @a revision),</span>
<a name="l01370"></a>01370 <span class="comment"> *              and returning #SVN_ERR_CLIENT_UNRELATED_RESOURCES if they</span>
<a name="l01371"></a>01371 <span class="comment"> *              do not. If @c TRUE, no such sanity checks are performed.</span>
<a name="l01372"></a>01372 <span class="comment"> *</span>
<a name="l01373"></a>01373 <span class="comment"> * @param[in] ctx   The standard client context, used for authentication and</span>
<a name="l01374"></a>01374 <span class="comment"> *              notification.  The notifier is invoked for paths affected by</span>
<a name="l01375"></a>01375 <span class="comment"> *              the switch, and also for files which may be restored from the</span>
<a name="l01376"></a>01376 <span class="comment"> *              pristine store after being previously removed from the working</span>
<a name="l01377"></a>01377 <span class="comment"> *              copy.</span>
<a name="l01378"></a>01378 <span class="comment"> * @param[in] pool  Used for any temporary allocation.</span>
<a name="l01379"></a>01379 <span class="comment"> *</span>
<a name="l01380"></a>01380 <span class="comment"> * @return A pointer to an #svn_error_t of the type (this list is not</span>
<a name="l01381"></a>01381 <span class="comment"> *         exhaustive): &lt;br&gt;</span>
<a name="l01382"></a>01382 <span class="comment"> *         #SVN_ERR_CLIENT_BAD_REVISION if @a revision is not one of</span>
<a name="l01383"></a>01383 <span class="comment"> *         #svn_opt_revision_number, #svn_opt_revision_head, or</span>
<a name="l01384"></a>01384 <span class="comment"> *         #svn_opt_revision_date. &lt;br&gt;</span>
<a name="l01385"></a>01385 <span class="comment"> *         If no error occurred, return #SVN_NO_ERROR.</span>
<a name="l01386"></a>01386 <span class="comment"> *</span>
<a name="l01387"></a>01387 <span class="comment"> * @since New in 1.7.</span>
<a name="l01388"></a>01388 <span class="comment"> *</span>
<a name="l01389"></a>01389 <span class="comment"> * @see #svn_depth_t &lt;br&gt; #svn_client_ctx_t &lt;br&gt; @ref clnt_revisions for</span>
<a name="l01390"></a>01390 <span class="comment"> *      a discussion of operative and peg revisions.</span>
<a name="l01391"></a>01391 <span class="comment"> */</span>
<a name="l01392"></a>01392 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01393"></a>01393 <a class="code" href="group__Switch.html#ga54de0571861872342a47c726fd082796" title="Switch an existing working copy directory to a different repository location.">svn_client_switch3</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l01394"></a>01394                    <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01395"></a>01395                    <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l01396"></a>01396                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l01397"></a>01397                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l01398"></a>01398                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l01399"></a>01399                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_is_sticky,
<a name="l01400"></a>01400                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l01401"></a>01401                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_unver_obstructions,
<a name="l01402"></a>01402                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l01403"></a>01403                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01404"></a>01404                    apr_pool_t *pool);
<a name="l01405"></a>01405 
<a name="l01406"></a>01406 <span class="comment"></span>
<a name="l01407"></a>01407 <span class="comment">/**</span>
<a name="l01408"></a>01408 <span class="comment"> * Similar to svn_client_switch3() but with @a ignore_ancestry always</span>
<a name="l01409"></a>01409 <span class="comment"> * set to TRUE.</span>
<a name="l01410"></a>01410 <span class="comment"> *</span>
<a name="l01411"></a>01411 <span class="comment"> * @since New in 1.5.</span>
<a name="l01412"></a>01412 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l01413"></a>01413 <span class="comment"> */</span>
<a name="l01414"></a>01414 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01415"></a>01415 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01416"></a>01416 <a class="code" href="group__Switch.html#ga07da3a9ba97cfe57f0ce4b89d846bed6" title="Similar to svn_client_switch3() but with ignore_ancestry always set to TRUE.">svn_client_switch2</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l01417"></a>01417                    <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01418"></a>01418                    <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l01419"></a>01419                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l01420"></a>01420                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l01421"></a>01421                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l01422"></a>01422                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_is_sticky,
<a name="l01423"></a>01423                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l01424"></a>01424                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_unver_obstructions,
<a name="l01425"></a>01425                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01426"></a>01426                    apr_pool_t *pool);
<a name="l01427"></a>01427 
<a name="l01428"></a>01428 <span class="comment"></span>
<a name="l01429"></a>01429 <span class="comment">/**</span>
<a name="l01430"></a>01430 <span class="comment"> * Similar to svn_client_switch2() but with @a allow_unver_obstructions,</span>
<a name="l01431"></a>01431 <span class="comment"> * @a ignore_externals, and @a depth_is_sticky always set to FALSE,</span>
<a name="l01432"></a>01432 <span class="comment"> * and @a depth set according to @a recurse: if @a recurse is TRUE,</span>
<a name="l01433"></a>01433 <span class="comment"> * set @a depth to #svn_depth_infinity, if @a recurse is FALSE, set</span>
<a name="l01434"></a>01434 <span class="comment"> * @a depth to #svn_depth_files.</span>
<a name="l01435"></a>01435 <span class="comment"> *</span>
<a name="l01436"></a>01436 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l01437"></a>01437 <span class="comment"> */</span>
<a name="l01438"></a>01438 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01439"></a>01439 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01440"></a>01440 <a class="code" href="group__Switch.html#gafcab99a2843a5a900a214328d7fce326" title="Similar to svn_client_switch2() but with allow_unver_obstructions, ignore_externals, and depth_is_sticky always set to FALSE, and depth set according to recurse: if recurse is TRUE, set depth to svn_depth_infinity, if recurse is FALSE, set depth to svn_depth_files.">svn_client_switch</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l01441"></a>01441                   <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01442"></a>01442                   <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l01443"></a>01443                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l01444"></a>01444                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l01445"></a>01445                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01446"></a>01446                   apr_pool_t *pool);
<a name="l01447"></a>01447 <span class="comment"></span>
<a name="l01448"></a>01448 <span class="comment">/** @} */</span>
<a name="l01449"></a>01449 <span class="comment"></span>
<a name="l01450"></a>01450 <span class="comment">/**</span>
<a name="l01451"></a>01451 <span class="comment"> * @defgroup Add Begin versioning files/directories in a working copy.</span>
<a name="l01452"></a>01452 <span class="comment"> *</span>
<a name="l01453"></a>01453 <span class="comment"> * @{</span>
<a name="l01454"></a>01454 <span class="comment"> */</span>
<a name="l01455"></a>01455 <span class="comment"></span>
<a name="l01456"></a>01456 <span class="comment">/**</span>
<a name="l01457"></a>01457 <span class="comment"> * Schedule a working copy @a path for addition to the repository.</span>
<a name="l01458"></a>01458 <span class="comment"> *</span>
<a name="l01459"></a>01459 <span class="comment"> * If @a depth is #svn_depth_empty, add just @a path and nothing</span>
<a name="l01460"></a>01460 <span class="comment"> * below it.  If #svn_depth_files, add @a path and any file</span>
<a name="l01461"></a>01461 <span class="comment"> * children of @a path.  If #svn_depth_immediates, add @a path, any</span>
<a name="l01462"></a>01462 <span class="comment"> * file children, and any immediate subdirectories (but nothing</span>
<a name="l01463"></a>01463 <span class="comment"> * underneath those subdirectories).  If #svn_depth_infinity, add</span>
<a name="l01464"></a>01464 <span class="comment"> * @a path and everything under it fully recursively.</span>
<a name="l01465"></a>01465 <span class="comment"> *</span>
<a name="l01466"></a>01466 <span class="comment"> * @a path&#39;s parent must be under revision control already (unless</span>
<a name="l01467"></a>01467 <span class="comment"> * @a add_parents is TRUE), but @a path is not.  If @a recursive is</span>
<a name="l01468"></a>01468 <span class="comment"> * set, then assuming @a path is a directory, all of its contents will</span>
<a name="l01469"></a>01469 <span class="comment"> * be scheduled for addition as well.</span>
<a name="l01470"></a>01470 <span class="comment"> *</span>
<a name="l01471"></a>01471 <span class="comment"> * If @a force is not set and @a path is already under version</span>
<a name="l01472"></a>01472 <span class="comment"> * control, return the error #SVN_ERR_ENTRY_EXISTS.  If @a force is</span>
<a name="l01473"></a>01473 <span class="comment"> * set, do not error on already-versioned items.  When used on a</span>
<a name="l01474"></a>01474 <span class="comment"> * directory in conjunction with the @a recursive flag, this has the</span>
<a name="l01475"></a>01475 <span class="comment"> * effect of scheduling for addition unversioned files and directories</span>
<a name="l01476"></a>01476 <span class="comment"> * scattered deep within a versioned tree.</span>
<a name="l01477"></a>01477 <span class="comment"> *</span>
<a name="l01478"></a>01478 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, then for each added item, call</span>
<a name="l01479"></a>01479 <span class="comment"> * @a ctx-&gt;notify_func2 with @a ctx-&gt;notify_baton2 and the path of the</span>
<a name="l01480"></a>01480 <span class="comment"> * added item.</span>
<a name="l01481"></a>01481 <span class="comment"> *</span>
<a name="l01482"></a>01482 <span class="comment"> * If @a no_ignore is FALSE, don&#39;t add any file or directory (or recurse</span>
<a name="l01483"></a>01483 <span class="comment"> * into any directory) that is unversioned and found by recursion (as</span>
<a name="l01484"></a>01484 <span class="comment"> * opposed to being the explicit target @a path) and whose name matches the</span>
<a name="l01485"></a>01485 <span class="comment"> * svn:ignore property on its parent directory or the global-ignores list in</span>
<a name="l01486"></a>01486 <span class="comment"> * @a ctx-&gt;config. If @a no_ignore is TRUE, do include such files and</span>
<a name="l01487"></a>01487 <span class="comment"> * directories. (Note that an svn:ignore property can influence this</span>
<a name="l01488"></a>01488 <span class="comment"> * behaviour only when recursing into an already versioned directory with @a</span>
<a name="l01489"></a>01489 <span class="comment"> * force.)</span>
<a name="l01490"></a>01490 <span class="comment"> *</span>
<a name="l01491"></a>01491 <span class="comment"> * If @a add_parents is TRUE, recurse up @a path&#39;s directory and look for</span>
<a name="l01492"></a>01492 <span class="comment"> * a versioned directory.  If found, add all intermediate paths between it</span>
<a name="l01493"></a>01493 <span class="comment"> * and @a path.  If not found, return #SVN_ERR_CLIENT_NO_VERSIONED_PARENT.</span>
<a name="l01494"></a>01494 <span class="comment"> *</span>
<a name="l01495"></a>01495 <span class="comment"> * @par Important:</span>
<a name="l01496"></a>01496 <span class="comment"> * This is a *scheduling* operation.  No changes will</span>
<a name="l01497"></a>01497 <span class="comment"> * happen to the repository until a commit occurs.  This scheduling</span>
<a name="l01498"></a>01498 <span class="comment"> * can be removed with svn_client_revert2().</span>
<a name="l01499"></a>01499 <span class="comment"> *</span>
<a name="l01500"></a>01500 <span class="comment"> * @since New in 1.5.</span>
<a name="l01501"></a>01501 <span class="comment"> */</span>
<a name="l01502"></a>01502 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01503"></a>01503 <a class="code" href="group__Add.html#gaf3dad04d9841b82ed3e15c01c815701b" title="Schedule a working copy path for addition to the repository.">svn_client_add4</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01504"></a>01504                 <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l01505"></a>01505                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l01506"></a>01506                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l01507"></a>01507                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> add_parents,
<a name="l01508"></a>01508                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01509"></a>01509                 apr_pool_t *pool);
<a name="l01510"></a>01510 <span class="comment"></span>
<a name="l01511"></a>01511 <span class="comment">/**</span>
<a name="l01512"></a>01512 <span class="comment"> * Similar to svn_client_add4(), but with @a add_parents always set to</span>
<a name="l01513"></a>01513 <span class="comment"> * FALSE and @a depth set according to @a recursive: if TRUE, then</span>
<a name="l01514"></a>01514 <span class="comment"> * @a depth is #svn_depth_infinity, if FALSE, then #svn_depth_empty.</span>
<a name="l01515"></a>01515 <span class="comment"> *</span>
<a name="l01516"></a>01516 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l01517"></a>01517 <span class="comment"> */</span>
<a name="l01518"></a>01518 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01519"></a>01519 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01520"></a>01520 <a class="code" href="group__Add.html#ga663ba842814592227853452f2508dd05" title="Similar to svn_client_add4(), but with add_parents always set to FALSE and depth set according to rec...">svn_client_add3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01521"></a>01521                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recursive,
<a name="l01522"></a>01522                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l01523"></a>01523                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l01524"></a>01524                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01525"></a>01525                 apr_pool_t *pool);
<a name="l01526"></a>01526 <span class="comment"></span>
<a name="l01527"></a>01527 <span class="comment">/**</span>
<a name="l01528"></a>01528 <span class="comment"> * Similar to svn_client_add3(), but with @a no_ignore always set to</span>
<a name="l01529"></a>01529 <span class="comment"> * FALSE.</span>
<a name="l01530"></a>01530 <span class="comment"> *</span>
<a name="l01531"></a>01531 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l01532"></a>01532 <span class="comment"> */</span>
<a name="l01533"></a>01533 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01534"></a>01534 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01535"></a>01535 <a class="code" href="group__Add.html#ga2631116d4eef41db38488031f4a297d6" title="Similar to svn_client_add3(), but with no_ignore always set to FALSE.">svn_client_add2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01536"></a>01536                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recursive,
<a name="l01537"></a>01537                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l01538"></a>01538                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01539"></a>01539                 apr_pool_t *pool);
<a name="l01540"></a>01540 <span class="comment"></span>
<a name="l01541"></a>01541 <span class="comment">/**</span>
<a name="l01542"></a>01542 <span class="comment"> * Similar to svn_client_add2(), but with @a force always set to FALSE.</span>
<a name="l01543"></a>01543 <span class="comment"> *</span>
<a name="l01544"></a>01544 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.0 API.</span>
<a name="l01545"></a>01545 <span class="comment"> */</span>
<a name="l01546"></a>01546 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01547"></a>01547 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01548"></a>01548 <a class="code" href="group__Add.html#gaf195ea9edb1abcf4439f9b60a8cece2b" title="Similar to svn_client_add2(), but with force always set to FALSE.">svn_client_add</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01549"></a>01549                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recursive,
<a name="l01550"></a>01550                <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01551"></a>01551                apr_pool_t *pool);
<a name="l01552"></a>01552 <span class="comment"></span>
<a name="l01553"></a>01553 <span class="comment">/** @} */</span>
<a name="l01554"></a>01554 <span class="comment"></span>
<a name="l01555"></a>01555 <span class="comment">/**</span>
<a name="l01556"></a>01556 <span class="comment"> * @defgroup Mkdir Create directories in a working copy or repository.</span>
<a name="l01557"></a>01557 <span class="comment"> *</span>
<a name="l01558"></a>01558 <span class="comment"> * @{</span>
<a name="l01559"></a>01559 <span class="comment"> */</span>
<a name="l01560"></a>01560 <span class="comment"></span>
<a name="l01561"></a>01561 <span class="comment">/** Create a directory, either in a repository or a working copy.</span>
<a name="l01562"></a>01562 <span class="comment"> *</span>
<a name="l01563"></a>01563 <span class="comment"> * If @a paths contains URLs, use the authentication baton in @a ctx</span>
<a name="l01564"></a>01564 <span class="comment"> * and @a message to immediately attempt to commit the creation of the</span>
<a name="l01565"></a>01565 <span class="comment"> * directories in @a paths in the repository.</span>
<a name="l01566"></a>01566 <span class="comment"> *</span>
<a name="l01567"></a>01567 <span class="comment"> * Else, create the directories on disk, and attempt to schedule them</span>
<a name="l01568"></a>01568 <span class="comment"> * for addition (using svn_client_add(), whose docstring you should</span>
<a name="l01569"></a>01569 <span class="comment"> * read).</span>
<a name="l01570"></a>01570 <span class="comment"> *</span>
<a name="l01571"></a>01571 <span class="comment"> * If @a make_parents is TRUE, create any non-existent parent directories</span>
<a name="l01572"></a>01572 <span class="comment"> * also.</span>
<a name="l01573"></a>01573 <span class="comment"> *</span>
<a name="l01574"></a>01574 <span class="comment"> * If non-NULL, @a revprop_table is a hash table holding additional,</span>
<a name="l01575"></a>01575 <span class="comment"> * custom revision properties (&lt;tt&gt;const char *&lt;/tt&gt; names mapped to</span>
<a name="l01576"></a>01576 <span class="comment"> * &lt;tt&gt;svn_string_t *&lt;/tt&gt; values) to be set on the new revision in</span>
<a name="l01577"></a>01577 <span class="comment"> * the event that this is a committing operation.  This table cannot</span>
<a name="l01578"></a>01578 <span class="comment"> * contain any standard Subversion properties.</span>
<a name="l01579"></a>01579 <span class="comment"> *</span>
<a name="l01580"></a>01580 <span class="comment"> * @a ctx-&gt;log_msg_func3/@a ctx-&gt;log_msg_baton3 are a callback/baton</span>
<a name="l01581"></a>01581 <span class="comment"> * combo that this function can use to query for a commit log message</span>
<a name="l01582"></a>01582 <span class="comment"> * when one is needed.</span>
<a name="l01583"></a>01583 <span class="comment"> *</span>
<a name="l01584"></a>01584 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, when the directory has been created</span>
<a name="l01585"></a>01585 <span class="comment"> * (successfully) in the working copy, call @a ctx-&gt;notify_func2 with</span>
<a name="l01586"></a>01586 <span class="comment"> * @a ctx-&gt;notify_baton2 and the path of the new directory.  Note that this is</span>
<a name="l01587"></a>01587 <span class="comment"> * only called for items added to the working copy.</span>
<a name="l01588"></a>01588 <span class="comment"> *</span>
<a name="l01589"></a>01589 <span class="comment"> * If @a commit_callback is non-NULL, then for each successful commit, call</span>
<a name="l01590"></a>01590 <span class="comment"> * @a commit_callback with @a commit_baton and a #svn_commit_info_t for</span>
<a name="l01591"></a>01591 <span class="comment"> * the commit.</span>
<a name="l01592"></a>01592 <span class="comment"> *</span>
<a name="l01593"></a>01593 <span class="comment"> * @since New in 1.7.</span>
<a name="l01594"></a>01594 <span class="comment"> */</span>
<a name="l01595"></a>01595 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01596"></a>01596 <a class="code" href="group__Mkdir.html#ga08cc79d52178f9d8d7a86fdc2c2f04c2" title="Create a directory, either in a repository or a working copy.">svn_client_mkdir4</a>(<span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01597"></a>01597                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> make_parents,
<a name="l01598"></a>01598                   <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l01599"></a>01599                   <a class="code" href="svn__types_8h.html#a5aca95325ba984f70a316d7d9966e1df" title="Callback function type for commits.">svn_commit_callback2_t</a> commit_callback,
<a name="l01600"></a>01600                   <span class="keywordtype">void</span> *commit_baton,
<a name="l01601"></a>01601                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01602"></a>01602                   apr_pool_t *pool);
<a name="l01603"></a>01603 <span class="comment"></span>
<a name="l01604"></a>01604 <span class="comment">/**</span>
<a name="l01605"></a>01605 <span class="comment"> * Similar to svn_client_mkdir4(), but returns the commit info in</span>
<a name="l01606"></a>01606 <span class="comment"> * @a *commit_info_p rather than through a callback function.</span>
<a name="l01607"></a>01607 <span class="comment"> *</span>
<a name="l01608"></a>01608 <span class="comment"> * @since New in 1.5.</span>
<a name="l01609"></a>01609 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l01610"></a>01610 <span class="comment"> */</span>
<a name="l01611"></a>01611 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01612"></a>01612 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01613"></a>01613 <a class="code" href="group__Mkdir.html#gacb2c2f48636d4e4301b2f140499f8d90" title="Similar to svn_client_mkdir4(), but returns the commit info in *commit_info_p rather than through a c...">svn_client_mkdir3</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l01614"></a>01614                   <span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01615"></a>01615                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> make_parents,
<a name="l01616"></a>01616                   <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l01617"></a>01617                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01618"></a>01618                   apr_pool_t *pool);
<a name="l01619"></a>01619 
<a name="l01620"></a>01620 <span class="comment"></span>
<a name="l01621"></a>01621 <span class="comment">/**</span>
<a name="l01622"></a>01622 <span class="comment"> * Same as svn_client_mkdir3(), but with @a make_parents always FALSE,</span>
<a name="l01623"></a>01623 <span class="comment"> * and @a revprop_table always NULL.</span>
<a name="l01624"></a>01624 <span class="comment"> *</span>
<a name="l01625"></a>01625 <span class="comment"> * @since New in 1.3.</span>
<a name="l01626"></a>01626 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l01627"></a>01627 <span class="comment"> */</span>
<a name="l01628"></a>01628 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01629"></a>01629 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01630"></a>01630 <a class="code" href="group__Mkdir.html#ga86176a9c9b4c658a42729fe32e5c3278" title="Same as svn_client_mkdir3(), but with make_parents always FALSE, and revprop_table always NULL...">svn_client_mkdir2</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l01631"></a>01631                   <span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01632"></a>01632                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01633"></a>01633                   apr_pool_t *pool);
<a name="l01634"></a>01634 <span class="comment"></span>
<a name="l01635"></a>01635 <span class="comment">/**</span>
<a name="l01636"></a>01636 <span class="comment"> * Same as svn_client_mkdir2(), but takes the #svn_client_commit_info_t</span>
<a name="l01637"></a>01637 <span class="comment"> * type for @a commit_info_p.</span>
<a name="l01638"></a>01638 <span class="comment"> *</span>
<a name="l01639"></a>01639 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l01640"></a>01640 <span class="comment"> */</span>
<a name="l01641"></a>01641 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01642"></a>01642 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01643"></a>01643 <a class="code" href="group__Mkdir.html#ga61128f585eb9d10549b8d6050c6ca8c1" title="Same as svn_client_mkdir2(), but takes the svn_client_commit_info_t type for commit_info_p.">svn_client_mkdir</a>(<a class="code" href="structsvn__client__commit__info__t.html" title="Information about commits passed back to client from this module.">svn_client_commit_info_t</a> **commit_info_p,
<a name="l01644"></a>01644                  <span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01645"></a>01645                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01646"></a>01646                  apr_pool_t *pool);
<a name="l01647"></a>01647 <span class="comment"></span>
<a name="l01648"></a>01648 <span class="comment">/** @} */</span>
<a name="l01649"></a>01649 <span class="comment"></span>
<a name="l01650"></a>01650 <span class="comment">/**</span>
<a name="l01651"></a>01651 <span class="comment"> * @defgroup Delete Remove files/directories from a working copy or repository.</span>
<a name="l01652"></a>01652 <span class="comment"> *</span>
<a name="l01653"></a>01653 <span class="comment"> * @{</span>
<a name="l01654"></a>01654 <span class="comment"> */</span>
<a name="l01655"></a>01655 <span class="comment"></span>
<a name="l01656"></a>01656 <span class="comment">/** Delete items from a repository or working copy.</span>
<a name="l01657"></a>01657 <span class="comment"> *</span>
<a name="l01658"></a>01658 <span class="comment"> * If the paths in @a paths are URLs, use the authentication baton in</span>
<a name="l01659"></a>01659 <span class="comment"> * @a ctx and @a ctx-&gt;log_msg_func3/@a ctx-&gt;log_msg_baton3 to</span>
<a name="l01660"></a>01660 <span class="comment"> * immediately attempt to commit a deletion of the URLs from the</span>
<a name="l01661"></a>01661 <span class="comment"> * repository.  Every path must belong to the same repository.</span>
<a name="l01662"></a>01662 <span class="comment"> *</span>
<a name="l01663"></a>01663 <span class="comment"> * Else, schedule the working copy paths in @a paths for removal from</span>
<a name="l01664"></a>01664 <span class="comment"> * the repository.  Each path&#39;s parent must be under revision control.</span>
<a name="l01665"></a>01665 <span class="comment"> * This is just a *scheduling* operation.  No changes will happen to</span>
<a name="l01666"></a>01666 <span class="comment"> * the repository until a commit occurs.  This scheduling can be</span>
<a name="l01667"></a>01667 <span class="comment"> * removed with svn_client_revert2(). If a path is a file it is</span>
<a name="l01668"></a>01668 <span class="comment"> * immediately removed from the working copy. If the path is a</span>
<a name="l01669"></a>01669 <span class="comment"> * directory it will remain in the working copy but all the files, and</span>
<a name="l01670"></a>01670 <span class="comment"> * all unversioned items, it contains will be removed. If @a force is</span>
<a name="l01671"></a>01671 <span class="comment"> * not set then this operation will fail if any path contains locally</span>
<a name="l01672"></a>01672 <span class="comment"> * modified and/or unversioned items. If @a force is set such items</span>
<a name="l01673"></a>01673 <span class="comment"> * will be deleted.</span>
<a name="l01674"></a>01674 <span class="comment"> *</span>
<a name="l01675"></a>01675 <span class="comment"> * If the paths are working copy paths and @a keep_local is TRUE then</span>
<a name="l01676"></a>01676 <span class="comment"> * the paths will not be removed from the working copy, only scheduled</span>
<a name="l01677"></a>01677 <span class="comment"> * for removal from the repository.  Once the scheduled deletion is</span>
<a name="l01678"></a>01678 <span class="comment"> * committed, they will appear as unversioned paths in the working copy.</span>
<a name="l01679"></a>01679 <span class="comment"> *</span>
<a name="l01680"></a>01680 <span class="comment"> * If non-NULL, @a revprop_table is a hash table holding additional,</span>
<a name="l01681"></a>01681 <span class="comment"> * custom revision properties (&lt;tt&gt;const char *&lt;/tt&gt; names mapped to</span>
<a name="l01682"></a>01682 <span class="comment"> * &lt;tt&gt;svn_string_t *&lt;/tt&gt; values) to be set on the new revision in</span>
<a name="l01683"></a>01683 <span class="comment"> * the event that this is a committing operation.  This table cannot</span>
<a name="l01684"></a>01684 <span class="comment"> * contain any standard Subversion properties.</span>
<a name="l01685"></a>01685 <span class="comment"> *</span>
<a name="l01686"></a>01686 <span class="comment"> * @a ctx-&gt;log_msg_func3/@a ctx-&gt;log_msg_baton3 are a callback/baton</span>
<a name="l01687"></a>01687 <span class="comment"> * combo that this function can use to query for a commit log message</span>
<a name="l01688"></a>01688 <span class="comment"> * when one is needed.</span>
<a name="l01689"></a>01689 <span class="comment"> *</span>
<a name="l01690"></a>01690 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, then for each item deleted, call</span>
<a name="l01691"></a>01691 <span class="comment"> * @a ctx-&gt;notify_func2 with @a ctx-&gt;notify_baton2 and the path of the deleted</span>
<a name="l01692"></a>01692 <span class="comment"> * item.</span>
<a name="l01693"></a>01693 <span class="comment"> *</span>
<a name="l01694"></a>01694 <span class="comment"> * If @a commit_callback is non-NULL, then for each successful commit, call</span>
<a name="l01695"></a>01695 <span class="comment"> * @a commit_callback with @a commit_baton and a #svn_commit_info_t for</span>
<a name="l01696"></a>01696 <span class="comment"> * the commit.</span>
<a name="l01697"></a>01697 <span class="comment"> *</span>
<a name="l01698"></a>01698 <span class="comment"> * @since New in 1.7.</span>
<a name="l01699"></a>01699 <span class="comment"> */</span>
<a name="l01700"></a>01700 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01701"></a>01701 <a class="code" href="group__Delete.html#ga81929753d0f29c41a748a2206e2c106d" title="Delete items from a repository or working copy.">svn_client_delete4</a>(<span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01702"></a>01702                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l01703"></a>01703                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_local,
<a name="l01704"></a>01704                    <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l01705"></a>01705                    <a class="code" href="svn__types_8h.html#a5aca95325ba984f70a316d7d9966e1df" title="Callback function type for commits.">svn_commit_callback2_t</a> commit_callback,
<a name="l01706"></a>01706                    <span class="keywordtype">void</span> *commit_baton,
<a name="l01707"></a>01707                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01708"></a>01708                    apr_pool_t *pool);
<a name="l01709"></a>01709 <span class="comment"></span>
<a name="l01710"></a>01710 <span class="comment">/**</span>
<a name="l01711"></a>01711 <span class="comment"> * Similar to svn_client_delete4(), but returns the commit info in</span>
<a name="l01712"></a>01712 <span class="comment"> * @a *commit_info_p rather than through a callback function.</span>
<a name="l01713"></a>01713 <span class="comment"> *</span>
<a name="l01714"></a>01714 <span class="comment"> * @since New in 1.5.</span>
<a name="l01715"></a>01715 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l01716"></a>01716 <span class="comment"> */</span>
<a name="l01717"></a>01717 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01718"></a>01718 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01719"></a>01719 <a class="code" href="group__Delete.html#ga862b476739ee2d859aee1ce81fbb77d7" title="Similar to svn_client_delete4(), but returns the commit info in *commit_info_p rather than through a ...">svn_client_delete3</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l01720"></a>01720                    <span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01721"></a>01721                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l01722"></a>01722                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_local,
<a name="l01723"></a>01723                    <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l01724"></a>01724                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01725"></a>01725                    apr_pool_t *pool);
<a name="l01726"></a>01726 <span class="comment"></span>
<a name="l01727"></a>01727 <span class="comment">/**</span>
<a name="l01728"></a>01728 <span class="comment"> * Similar to svn_client_delete3(), but with @a keep_local always set</span>
<a name="l01729"></a>01729 <span class="comment"> * to FALSE, and @a revprop_table passed as NULL.</span>
<a name="l01730"></a>01730 <span class="comment"> *</span>
<a name="l01731"></a>01731 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l01732"></a>01732 <span class="comment"> */</span>
<a name="l01733"></a>01733 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01734"></a>01734 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01735"></a>01735 <a class="code" href="group__Delete.html#ga4643a8257665f1cef69c3ca468d5f3b3" title="Similar to svn_client_delete3(), but with keep_local always set to FALSE, and revprop_table passed as...">svn_client_delete2</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l01736"></a>01736                    <span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01737"></a>01737                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l01738"></a>01738                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01739"></a>01739                    apr_pool_t *pool);
<a name="l01740"></a>01740 <span class="comment"></span>
<a name="l01741"></a>01741 <span class="comment">/**</span>
<a name="l01742"></a>01742 <span class="comment"> * Similar to svn_client_delete2(), but takes the #svn_client_commit_info_t</span>
<a name="l01743"></a>01743 <span class="comment"> * type for @a commit_info_p.</span>
<a name="l01744"></a>01744 <span class="comment"> *</span>
<a name="l01745"></a>01745 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l01746"></a>01746 <span class="comment"> */</span>
<a name="l01747"></a>01747 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01748"></a>01748 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01749"></a>01749 <a class="code" href="group__Delete.html#ga46e1489a906c31f42e4c646150a442db" title="Similar to svn_client_delete2(), but takes the svn_client_commit_info_t type for commit_info_p.">svn_client_delete</a>(<a class="code" href="structsvn__client__commit__info__t.html" title="Information about commits passed back to client from this module.">svn_client_commit_info_t</a> **commit_info_p,
<a name="l01750"></a>01750                   <span class="keyword">const</span> apr_array_header_t *paths,
<a name="l01751"></a>01751                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l01752"></a>01752                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01753"></a>01753                   apr_pool_t *pool);
<a name="l01754"></a>01754 
<a name="l01755"></a>01755 <span class="comment"></span>
<a name="l01756"></a>01756 <span class="comment">/** @} */</span>
<a name="l01757"></a>01757 <span class="comment"></span>
<a name="l01758"></a>01758 <span class="comment">/**</span>
<a name="l01759"></a>01759 <span class="comment"> * @defgroup Import Import files into the repository.</span>
<a name="l01760"></a>01760 <span class="comment"> *</span>
<a name="l01761"></a>01761 <span class="comment"> * @{</span>
<a name="l01762"></a>01762 <span class="comment"> */</span>
<a name="l01763"></a>01763 <span class="comment"></span>
<a name="l01764"></a>01764 <span class="comment">/** Import file or directory @a path into repository directory @a url at</span>
<a name="l01765"></a>01765 <span class="comment"> * head, authenticating with the authentication baton cached in @a ctx,</span>
<a name="l01766"></a>01766 <span class="comment"> * and using @a ctx-&gt;log_msg_func3/@a ctx-&gt;log_msg_baton3 to get a log message</span>
<a name="l01767"></a>01767 <span class="comment"> * for the (implied) commit.  If some components of @a url do not exist</span>
<a name="l01768"></a>01768 <span class="comment"> * then create parent directories as necessary.</span>
<a name="l01769"></a>01769 <span class="comment"> *</span>
<a name="l01770"></a>01770 <span class="comment"> * This function reads an unversioned tree from disk and skips any &quot;.svn&quot;</span>
<a name="l01771"></a>01771 <span class="comment"> * directories. Even if a file or directory being imported is part of an</span>
<a name="l01772"></a>01772 <span class="comment"> * existing WC, this function sees it as unversioned and does not notice any</span>
<a name="l01773"></a>01773 <span class="comment"> * existing Subversion properties in it.</span>
<a name="l01774"></a>01774 <span class="comment"> *</span>
<a name="l01775"></a>01775 <span class="comment"> * If @a path is a directory, the contents of that directory are</span>
<a name="l01776"></a>01776 <span class="comment"> * imported directly into the directory identified by @a url.  Note that the</span>
<a name="l01777"></a>01777 <span class="comment"> * directory @a path itself is not imported -- that is, the basename of</span>
<a name="l01778"></a>01778 <span class="comment"> * @a path is not part of the import.</span>
<a name="l01779"></a>01779 <span class="comment"> *</span>
<a name="l01780"></a>01780 <span class="comment"> * If @a path is a file, then the dirname of @a url is the directory</span>
<a name="l01781"></a>01781 <span class="comment"> * receiving the import.  The basename of @a url is the filename in the</span>
<a name="l01782"></a>01782 <span class="comment"> * repository.  In this case if @a url already exists, return error.</span>
<a name="l01783"></a>01783 <span class="comment"> *</span>
<a name="l01784"></a>01784 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, then call @a ctx-&gt;notify_func2 with</span>
<a name="l01785"></a>01785 <span class="comment"> * @a ctx-&gt;notify_baton2 as the import progresses, with any of the following</span>
<a name="l01786"></a>01786 <span class="comment"> * actions: #svn_wc_notify_commit_added,</span>
<a name="l01787"></a>01787 <span class="comment"> * #svn_wc_notify_commit_postfix_txdelta.</span>
<a name="l01788"></a>01788 <span class="comment"> *</span>
<a name="l01789"></a>01789 <span class="comment"> * Use @a pool for any temporary allocation.</span>
<a name="l01790"></a>01790 <span class="comment"> *</span>
<a name="l01791"></a>01791 <span class="comment"> * If non-NULL, @a revprop_table is a hash table holding additional,</span>
<a name="l01792"></a>01792 <span class="comment"> * custom revision properties (&lt;tt&gt;const char *&lt;/tt&gt; names mapped to</span>
<a name="l01793"></a>01793 <span class="comment"> * &lt;tt&gt;svn_string_t *&lt;/tt&gt; values) to be set on the new revision.</span>
<a name="l01794"></a>01794 <span class="comment"> * This table cannot contain any standard Subversion properties.</span>
<a name="l01795"></a>01795 <span class="comment"> *</span>
<a name="l01796"></a>01796 <span class="comment"> * @a ctx-&gt;log_msg_func3/@a ctx-&gt;log_msg_baton3 are a callback/baton</span>
<a name="l01797"></a>01797 <span class="comment"> * combo that this function can use to query for a commit log message</span>
<a name="l01798"></a>01798 <span class="comment"> * when one is needed.</span>
<a name="l01799"></a>01799 <span class="comment"> *</span>
<a name="l01800"></a>01800 <span class="comment"> * If @a depth is #svn_depth_empty, import just @a path and nothing</span>
<a name="l01801"></a>01801 <span class="comment"> * below it.  If #svn_depth_files, import @a path and any file</span>
<a name="l01802"></a>01802 <span class="comment"> * children of @a path.  If #svn_depth_immediates, import @a path, any</span>
<a name="l01803"></a>01803 <span class="comment"> * file children, and any immediate subdirectories (but nothing</span>
<a name="l01804"></a>01804 <span class="comment"> * underneath those subdirectories).  If #svn_depth_infinity, import</span>
<a name="l01805"></a>01805 <span class="comment"> * @a path and everything under it fully recursively.</span>
<a name="l01806"></a>01806 <span class="comment"> *</span>
<a name="l01807"></a>01807 <span class="comment"> * If @a no_ignore is @c FALSE, don&#39;t import any file or directory (or</span>
<a name="l01808"></a>01808 <span class="comment"> * recurse into any directory) that is found by recursion (as opposed to</span>
<a name="l01809"></a>01809 <span class="comment"> * being the explicit target @a path) and whose name matches the</span>
<a name="l01810"></a>01810 <span class="comment"> * global-ignores list in @a ctx-&gt;config. If @a no_ignore is @c TRUE, do</span>
<a name="l01811"></a>01811 <span class="comment"> * include such files and directories. (Note that svn:ignore properties are</span>
<a name="l01812"></a>01812 <span class="comment"> * not involved, as auto-props cannot set properties on directories and even</span>
<a name="l01813"></a>01813 <span class="comment"> * if the target is part of a WC the import ignores any existing</span>
<a name="l01814"></a>01814 <span class="comment"> * properties.)</span>
<a name="l01815"></a>01815 <span class="comment"> *</span>
<a name="l01816"></a>01816 <span class="comment"> * If @a ignore_unknown_node_types is @c FALSE, ignore files of which the</span>
<a name="l01817"></a>01817 <span class="comment"> * node type is unknown, such as device files and pipes.</span>
<a name="l01818"></a>01818 <span class="comment"> *</span>
<a name="l01819"></a>01819 <span class="comment"> * If @a commit_callback is non-NULL, then for each successful commit, call</span>
<a name="l01820"></a>01820 <span class="comment"> * @a commit_callback with @a commit_baton and a #svn_commit_info_t for</span>
<a name="l01821"></a>01821 <span class="comment"> * the commit.</span>
<a name="l01822"></a>01822 <span class="comment"> *</span>
<a name="l01823"></a>01823 <span class="comment"> * @since New in 1.7.</span>
<a name="l01824"></a>01824 <span class="comment"> */</span>
<a name="l01825"></a>01825 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01826"></a>01826 <a class="code" href="group__Import.html#ga70404d050bad9e73cf72844e71a9c74e" title="Import file or directory path into repository directory url at head, authenticating with the authenti...">svn_client_import4</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01827"></a>01827                    <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l01828"></a>01828                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l01829"></a>01829                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l01830"></a>01830                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_unknown_node_types,
<a name="l01831"></a>01831                    <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l01832"></a>01832                    <a class="code" href="svn__types_8h.html#a5aca95325ba984f70a316d7d9966e1df" title="Callback function type for commits.">svn_commit_callback2_t</a> commit_callback,
<a name="l01833"></a>01833                    <span class="keywordtype">void</span> *commit_baton,
<a name="l01834"></a>01834                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01835"></a>01835                    apr_pool_t *pool);
<a name="l01836"></a>01836 <span class="comment"></span>
<a name="l01837"></a>01837 <span class="comment">/**</span>
<a name="l01838"></a>01838 <span class="comment"> * Similar to svn_client_import4(), but returns the commit info in</span>
<a name="l01839"></a>01839 <span class="comment"> * @a *commit_info_p rather than through a callback function.</span>
<a name="l01840"></a>01840 <span class="comment"> *</span>
<a name="l01841"></a>01841 <span class="comment"> * @since New in 1.5.</span>
<a name="l01842"></a>01842 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l01843"></a>01843 <span class="comment"> */</span>
<a name="l01844"></a>01844 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01845"></a>01845 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01846"></a>01846 <a class="code" href="group__Import.html#ga6305aae8e982fdbbbb0fd4d33aaf740d" title="Similar to svn_client_import4(), but returns the commit info in *commit_info_p rather than through a ...">svn_client_import3</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l01847"></a>01847                    <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01848"></a>01848                    <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l01849"></a>01849                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l01850"></a>01850                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l01851"></a>01851                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_unknown_node_types,
<a name="l01852"></a>01852                    <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l01853"></a>01853                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01854"></a>01854                    apr_pool_t *pool);
<a name="l01855"></a>01855 <span class="comment"></span>
<a name="l01856"></a>01856 <span class="comment">/**</span>
<a name="l01857"></a>01857 <span class="comment"> * Similar to svn_client_import3(), but with @a ignore_unknown_node_types</span>
<a name="l01858"></a>01858 <span class="comment"> * always set to @c FALSE, @a revprop_table passed as NULL, and @a</span>
<a name="l01859"></a>01859 <span class="comment"> * depth set according to @a nonrecursive: if TRUE, then @a depth is</span>
<a name="l01860"></a>01860 <span class="comment"> * #svn_depth_files, else #svn_depth_infinity.</span>
<a name="l01861"></a>01861 <span class="comment"> *</span>
<a name="l01862"></a>01862 <span class="comment"> * @since New in 1.3.</span>
<a name="l01863"></a>01863 <span class="comment"> *</span>
<a name="l01864"></a>01864 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API</span>
<a name="l01865"></a>01865 <span class="comment"> */</span>
<a name="l01866"></a>01866 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01867"></a>01867 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01868"></a>01868 <a class="code" href="group__Import.html#gae974b2afbdd76069c5393ca4e22d0611" title="Similar to svn_client_import3(), but with ignore_unknown_node_types always set to FALSE...">svn_client_import2</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l01869"></a>01869                    <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01870"></a>01870                    <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l01871"></a>01871                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> nonrecursive,
<a name="l01872"></a>01872                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l01873"></a>01873                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01874"></a>01874                    apr_pool_t *pool);
<a name="l01875"></a>01875 <span class="comment"></span>
<a name="l01876"></a>01876 <span class="comment">/**</span>
<a name="l01877"></a>01877 <span class="comment"> * Similar to svn_client_import2(), but with @a no_ignore always set</span>
<a name="l01878"></a>01878 <span class="comment"> * to FALSE and using the #svn_client_commit_info_t type for</span>
<a name="l01879"></a>01879 <span class="comment"> * @a commit_info_p.</span>
<a name="l01880"></a>01880 <span class="comment"> *</span>
<a name="l01881"></a>01881 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l01882"></a>01882 <span class="comment"> */</span>
<a name="l01883"></a>01883 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01884"></a>01884 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01885"></a>01885 <a class="code" href="group__Import.html#ga1837630712a2dd45e9de04a4188e6057" title="Similar to svn_client_import2(), but with no_ignore always set to FALSE and using the svn_client_comm...">svn_client_import</a>(<a class="code" href="structsvn__client__commit__info__t.html" title="Information about commits passed back to client from this module.">svn_client_commit_info_t</a> **commit_info_p,
<a name="l01886"></a>01886                   <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01887"></a>01887                   <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l01888"></a>01888                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> nonrecursive,
<a name="l01889"></a>01889                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01890"></a>01890                   apr_pool_t *pool);
<a name="l01891"></a>01891 <span class="comment"></span>
<a name="l01892"></a>01892 <span class="comment">/** @} */</span>
<a name="l01893"></a>01893 <span class="comment"></span>
<a name="l01894"></a>01894 <span class="comment">/**</span>
<a name="l01895"></a>01895 <span class="comment"> * @defgroup Commit Commit local modifications to the repository.</span>
<a name="l01896"></a>01896 <span class="comment"> *</span>
<a name="l01897"></a>01897 <span class="comment"> * @{</span>
<a name="l01898"></a>01898 <span class="comment"> */</span>
<a name="l01899"></a>01899 <span class="comment"></span>
<a name="l01900"></a>01900 <span class="comment">/**</span>
<a name="l01901"></a>01901 <span class="comment"> * Commit files or directories into repository, authenticating with</span>
<a name="l01902"></a>01902 <span class="comment"> * the authentication baton cached in @a ctx, and using</span>
<a name="l01903"></a>01903 <span class="comment"> * @a ctx-&gt;log_msg_func3/@a ctx-&gt;log_msg_baton3 to obtain the log message.</span>
<a name="l01904"></a>01904 <span class="comment"> * Set @a *commit_info_p to the results of the commit, allocated in @a pool.</span>
<a name="l01905"></a>01905 <span class="comment"> *</span>
<a name="l01906"></a>01906 <span class="comment"> * @a targets is an array of &lt;tt&gt;const char *&lt;/tt&gt; paths to commit.  They</span>
<a name="l01907"></a>01907 <span class="comment"> * need not be canonicalized nor condensed; this function will take care of</span>
<a name="l01908"></a>01908 <span class="comment"> * that.  If @a targets has zero elements, then do nothing and return</span>
<a name="l01909"></a>01909 <span class="comment"> * immediately without error.</span>
<a name="l01910"></a>01910 <span class="comment"> *</span>
<a name="l01911"></a>01911 <span class="comment"> * If non-NULL, @a revprop_table is a hash table holding additional,</span>
<a name="l01912"></a>01912 <span class="comment"> * custom revision properties (&lt;tt&gt;const char *&lt;/tt&gt; names mapped to</span>
<a name="l01913"></a>01913 <span class="comment"> * &lt;tt&gt;svn_string_t *&lt;/tt&gt; values) to be set on the new revision.</span>
<a name="l01914"></a>01914 <span class="comment"> * This table cannot contain any standard Subversion properties.</span>
<a name="l01915"></a>01915 <span class="comment"> *</span>
<a name="l01916"></a>01916 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, then call @a ctx-&gt;notify_func2 with</span>
<a name="l01917"></a>01917 <span class="comment"> * @a ctx-&gt;notify_baton2 as the commit progresses, with any of the following</span>
<a name="l01918"></a>01918 <span class="comment"> * actions: #svn_wc_notify_commit_modified, #svn_wc_notify_commit_added,</span>
<a name="l01919"></a>01919 <span class="comment"> * #svn_wc_notify_commit_deleted, #svn_wc_notify_commit_replaced,</span>
<a name="l01920"></a>01920 <span class="comment"> * #svn_wc_notify_commit_copied, #svn_wc_notify_commit_copied_replaced,</span>
<a name="l01921"></a>01921 <span class="comment"> * #svn_wc_notify_commit_postfix_txdelta.</span>
<a name="l01922"></a>01922 <span class="comment"> *</span>
<a name="l01923"></a>01923 <span class="comment"> * If @a depth is #svn_depth_infinity, commit all changes to and</span>
<a name="l01924"></a>01924 <span class="comment"> * below named targets.  If @a depth is #svn_depth_empty, commit</span>
<a name="l01925"></a>01925 <span class="comment"> * only named targets (that is, only property changes on named</span>
<a name="l01926"></a>01926 <span class="comment"> * directory targets, and property and content changes for named file</span>
<a name="l01927"></a>01927 <span class="comment"> * targets).  If @a depth is #svn_depth_files, behave as above for</span>
<a name="l01928"></a>01928 <span class="comment"> * named file targets, and for named directory targets, commit</span>
<a name="l01929"></a>01929 <span class="comment"> * property changes on a named directory and all changes to files</span>
<a name="l01930"></a>01930 <span class="comment"> * directly inside that directory.  If #svn_depth_immediates, behave</span>
<a name="l01931"></a>01931 <span class="comment"> * as for #svn_depth_files, and for subdirectories of any named</span>
<a name="l01932"></a>01932 <span class="comment"> * directory target commit as though for #svn_depth_empty.</span>
<a name="l01933"></a>01933 <span class="comment"> *</span>
<a name="l01934"></a>01934 <span class="comment"> * Unlock paths in the repository, unless @a keep_locks is TRUE.</span>
<a name="l01935"></a>01935 <span class="comment"> *</span>
<a name="l01936"></a>01936 <span class="comment"> * @a changelists is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l01937"></a>01937 <span class="comment"> * names, used as a restrictive filter on items that are committed;</span>
<a name="l01938"></a>01938 <span class="comment"> * that is, don&#39;t commit anything unless it&#39;s a member of one of those</span>
<a name="l01939"></a>01939 <span class="comment"> * changelists.  After the commit completes successfully, remove</span>
<a name="l01940"></a>01940 <span class="comment"> * changelist associations from the targets, unless @a</span>
<a name="l01941"></a>01941 <span class="comment"> * keep_changelists is set.  If @a changelists is</span>
<a name="l01942"></a>01942 <span class="comment"> * empty (or altogether @c NULL), no changelist filtering occurs.</span>
<a name="l01943"></a>01943 <span class="comment"> *</span>
<a name="l01944"></a>01944 <span class="comment"> * If @a commit_as_operations is set to FALSE, when a copy is committed</span>
<a name="l01945"></a>01945 <span class="comment"> * all changes below the copy are always committed at the same time</span>
<a name="l01946"></a>01946 <span class="comment"> * (independent of the value of @a depth). If @a commit_as_operations is</span>
<a name="l01947"></a>01947 <span class="comment"> * #TRUE, changes to descendants are only committed if they are itself</span>
<a name="l01948"></a>01948 <span class="comment"> * included via @a depth and targets.</span>
<a name="l01949"></a>01949 <span class="comment"> *</span>
<a name="l01950"></a>01950 <span class="comment"> * When @a commit_as_operations is #TRUE it is possible to delete a node and</span>
<a name="l01951"></a>01951 <span class="comment"> * all its descendants by selecting just the root of the deletion. If it is</span>
<a name="l01952"></a>01952 <span class="comment"> * set to #FALSE this will raise an error.</span>
<a name="l01953"></a>01953 <span class="comment"> *</span>
<a name="l01954"></a>01954 <span class="comment"> * If @a commit_callback is non-NULL, then for each successful commit, call</span>
<a name="l01955"></a>01955 <span class="comment"> * @a commit_callback with @a commit_baton and a #svn_commit_info_t for</span>
<a name="l01956"></a>01956 <span class="comment"> * the commit.</span>
<a name="l01957"></a>01957 <span class="comment"> *</span>
<a name="l01958"></a>01958 <span class="comment"> * @note #svn_depth_unknown and #svn_depth_exclude must not be passed</span>
<a name="l01959"></a>01959 <span class="comment"> * for @a depth.</span>
<a name="l01960"></a>01960 <span class="comment"> *</span>
<a name="l01961"></a>01961 <span class="comment"> * Use @a pool for any temporary allocations.</span>
<a name="l01962"></a>01962 <span class="comment"> *</span>
<a name="l01963"></a>01963 <span class="comment"> * @since New in 1.7.</span>
<a name="l01964"></a>01964 <span class="comment"> */</span>
<a name="l01965"></a>01965 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01966"></a>01966 <a class="code" href="group__Commit.html#gadcafe29fd95a825b3188c822ceafc6a6" title="Commit files or directories into repository, authenticating with the authentication baton cached in c...">svn_client_commit5</a>(<span class="keyword">const</span> apr_array_header_t *targets,
<a name="l01967"></a>01967                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l01968"></a>01968                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_locks,
<a name="l01969"></a>01969                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_changelists,
<a name="l01970"></a>01970                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> commit_as_operations,
<a name="l01971"></a>01971                    <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l01972"></a>01972                    <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l01973"></a>01973                    <a class="code" href="svn__types_8h.html#a5aca95325ba984f70a316d7d9966e1df" title="Callback function type for commits.">svn_commit_callback2_t</a> commit_callback,
<a name="l01974"></a>01974                    <span class="keywordtype">void</span> *commit_baton,
<a name="l01975"></a>01975                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l01976"></a>01976                    apr_pool_t *pool);
<a name="l01977"></a>01977 <span class="comment"></span>
<a name="l01978"></a>01978 <span class="comment">/**</span>
<a name="l01979"></a>01979 <span class="comment"> * Similar to svn_client_commit5(), but returns the commit info in</span>
<a name="l01980"></a>01980 <span class="comment"> * @a *commit_info_p rather than through a callback function.  Does not use</span>
<a name="l01981"></a>01981 <span class="comment"> * #svn_wc_notify_commit_copied or #svn_wc_notify_commit_copied_replaced</span>
<a name="l01982"></a>01982 <span class="comment"> * (preferring #svn_wc_notify_commit_added and</span>
<a name="l01983"></a>01983 <span class="comment"> * #svn_wc_notify_commit_replaced, respectively, instead).</span>
<a name="l01984"></a>01984 <span class="comment"> *</span>
<a name="l01985"></a>01985 <span class="comment"> * Also, if no error is returned and @a (*commit_info_p)-&gt;revision is set to</span>
<a name="l01986"></a>01986 <span class="comment"> * #SVN_INVALID_REVNUM, then the commit was a no-op; nothing needed to</span>
<a name="l01987"></a>01987 <span class="comment"> * be committed.</span>
<a name="l01988"></a>01988 <span class="comment"> *</span>
<a name="l01989"></a>01989 <span class="comment"> * Sets @a commit_as_operations to FALSE to match Subversion 1.6&#39;s behavior.</span>
<a name="l01990"></a>01990 <span class="comment"> *</span>
<a name="l01991"></a>01991 <span class="comment"> * @since New in 1.5.</span>
<a name="l01992"></a>01992 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l01993"></a>01993 <span class="comment"> */</span>
<a name="l01994"></a>01994 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01995"></a>01995 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l01996"></a>01996 <a class="code" href="group__Commit.html#gada07a12e2a42d0892881401242a45bdf" title="Similar to svn_client_commit5(), but returns the commit info in *commit_info_p rather than through a ...">svn_client_commit4</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l01997"></a>01997                    <span class="keyword">const</span> apr_array_header_t *targets,
<a name="l01998"></a>01998                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l01999"></a>01999                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_locks,
<a name="l02000"></a>02000                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_changelists,
<a name="l02001"></a>02001                    <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l02002"></a>02002                    <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l02003"></a>02003                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02004"></a>02004                    apr_pool_t *pool);
<a name="l02005"></a>02005 <span class="comment"></span>
<a name="l02006"></a>02006 <span class="comment">/**</span>
<a name="l02007"></a>02007 <span class="comment"> * Similar to svn_client_commit4(), but always with NULL for</span>
<a name="l02008"></a>02008 <span class="comment"> * @a changelist_name, FALSE for @a keep_changelist, NULL for @a</span>
<a name="l02009"></a>02009 <span class="comment"> * revprop_table, and @a depth set according to @a recurse: if @a</span>
<a name="l02010"></a>02010 <span class="comment"> * recurse is TRUE, use #svn_depth_infinity, else #svn_depth_empty.</span>
<a name="l02011"></a>02011 <span class="comment"> *</span>
<a name="l02012"></a>02012 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l02013"></a>02013 <span class="comment"> *</span>
<a name="l02014"></a>02014 <span class="comment"> * @since New in 1.3.</span>
<a name="l02015"></a>02015 <span class="comment"> */</span>
<a name="l02016"></a>02016 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02017"></a>02017 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02018"></a>02018 <a class="code" href="group__Commit.html#ga4b02fbcc90bf6beab2a6222b438f966d" title="Similar to svn_client_commit4(), but always with NULL for changelist_name, FALSE for keep_changelist...">svn_client_commit3</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l02019"></a>02019                    <span class="keyword">const</span> apr_array_header_t *targets,
<a name="l02020"></a>02020                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l02021"></a>02021                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_locks,
<a name="l02022"></a>02022                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02023"></a>02023                    apr_pool_t *pool);
<a name="l02024"></a>02024 <span class="comment"></span>
<a name="l02025"></a>02025 <span class="comment">/**</span>
<a name="l02026"></a>02026 <span class="comment"> * Similar to svn_client_commit3(), but uses #svn_client_commit_info_t</span>
<a name="l02027"></a>02027 <span class="comment"> * for @a commit_info_p.</span>
<a name="l02028"></a>02028 <span class="comment"> *</span>
<a name="l02029"></a>02029 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l02030"></a>02030 <span class="comment"> *</span>
<a name="l02031"></a>02031 <span class="comment"> * @since New in 1.2.</span>
<a name="l02032"></a>02032 <span class="comment"> */</span>
<a name="l02033"></a>02033 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02034"></a>02034 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02035"></a>02035 <a class="code" href="group__Commit.html#ga4a74d62bcd0f25a3337a9b19be2cdf98" title="Similar to svn_client_commit3(), but uses svn_client_commit_info_t for commit_info_p.">svn_client_commit2</a>(<a class="code" href="structsvn__client__commit__info__t.html" title="Information about commits passed back to client from this module.">svn_client_commit_info_t</a> **commit_info_p,
<a name="l02036"></a>02036                    <span class="keyword">const</span> apr_array_header_t *targets,
<a name="l02037"></a>02037                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l02038"></a>02038                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_locks,
<a name="l02039"></a>02039                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02040"></a>02040                    apr_pool_t *pool);
<a name="l02041"></a>02041 <span class="comment"></span>
<a name="l02042"></a>02042 <span class="comment">/**</span>
<a name="l02043"></a>02043 <span class="comment"> * Similar to svn_client_commit2(), but with @a keep_locks set to</span>
<a name="l02044"></a>02044 <span class="comment"> * TRUE and @a nonrecursive instead of @a recurse.</span>
<a name="l02045"></a>02045 <span class="comment"> *</span>
<a name="l02046"></a>02046 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l02047"></a>02047 <span class="comment"> */</span>
<a name="l02048"></a>02048 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02049"></a>02049 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02050"></a>02050 <a class="code" href="group__Commit.html#gae0445b6839201c1b4ad9470daa2685f4" title="Similar to svn_client_commit2(), but with keep_locks set to TRUE and nonrecursive instead of recurse...">svn_client_commit</a>(<a class="code" href="structsvn__client__commit__info__t.html" title="Information about commits passed back to client from this module.">svn_client_commit_info_t</a> **commit_info_p,
<a name="l02051"></a>02051                   <span class="keyword">const</span> apr_array_header_t *targets,
<a name="l02052"></a>02052                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> nonrecursive,
<a name="l02053"></a>02053                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02054"></a>02054                   apr_pool_t *pool);
<a name="l02055"></a>02055 <span class="comment"></span>
<a name="l02056"></a>02056 <span class="comment">/** @} */</span>
<a name="l02057"></a>02057 <span class="comment"></span>
<a name="l02058"></a>02058 <span class="comment">/**</span>
<a name="l02059"></a>02059 <span class="comment"> * @defgroup Status Report interesting information about paths in the \</span>
<a name="l02060"></a>02060 <span class="comment"> *                  working copy.</span>
<a name="l02061"></a>02061 <span class="comment"> *</span>
<a name="l02062"></a>02062 <span class="comment"> * @{</span>
<a name="l02063"></a>02063 <span class="comment"> */</span>
<a name="l02064"></a>02064 <span class="comment"></span>
<a name="l02065"></a>02065 <span class="comment">/**</span>
<a name="l02066"></a>02066 <span class="comment"> * Structure for holding the &quot;status&quot; of a working copy item.</span>
<a name="l02067"></a>02067 <span class="comment"> *</span>
<a name="l02068"></a>02068 <span class="comment"> * @note Fields may be added to the end of this structure in future</span>
<a name="l02069"></a>02069 <span class="comment"> * versions.  Therefore, to preserve binary compatibility, users</span>
<a name="l02070"></a>02070 <span class="comment"> * should not directly allocate structures of this type.</span>
<a name="l02071"></a>02071 <span class="comment"> *</span>
<a name="l02072"></a>02072 <span class="comment"> * @since New in 1.7.</span>
<a name="l02073"></a>02073 <span class="comment"> */</span>
<a name="l02074"></a><a class="code" href="structsvn__client__status__t.html">02074</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__client__status__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_client_status_t</a>
<a name="l02075"></a>02075 {<span class="comment"></span>
<a name="l02076"></a>02076 <span class="comment">  /** The kind of node as recorded in the working copy */</span>
<a name="l02077"></a><a class="code" href="structsvn__client__status__t.html#ae1c25dec9f6e5ec58b32463c74bb0c74">02077</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__client__status__t.html#ae1c25dec9f6e5ec58b32463c74bb0c74" title="The kind of node as recorded in the working copy.">kind</a>;
<a name="l02078"></a>02078 <span class="comment"></span>
<a name="l02079"></a>02079 <span class="comment">  /** The absolute path to the node */</span>
<a name="l02080"></a><a class="code" href="structsvn__client__status__t.html#a6ff47755a4f94e789d0af89a517d9ada">02080</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__status__t.html#a6ff47755a4f94e789d0af89a517d9ada" title="The absolute path to the node.">local_abspath</a>;
<a name="l02081"></a>02081 <span class="comment"></span>
<a name="l02082"></a>02082 <span class="comment">  /** The actual size of the working file on disk, or SVN_INVALID_FILESIZE</span>
<a name="l02083"></a>02083 <span class="comment">   * if unknown (or if the item isn&#39;t a file at all). */</span>
<a name="l02084"></a><a class="code" href="structsvn__client__status__t.html#a32c85c61c797befe983ea29349e78027">02084</a>   <a class="code" href="svn__types_8h.html#a726e581898461c1d3e7dbdb16d99dad0" title="The size of a file in the Subversion FS.">svn_filesize_t</a> <a class="code" href="structsvn__client__status__t.html#a32c85c61c797befe983ea29349e78027" title="The actual size of the working file on disk, or SVN_INVALID_FILESIZE if unknown (or if the item isn&#39;t...">filesize</a>;
<a name="l02085"></a>02085 <span class="comment"></span>
<a name="l02086"></a>02086 <span class="comment">  /** If the path is under version control, versioned is TRUE, otherwise</span>
<a name="l02087"></a>02087 <span class="comment">   * FALSE. */</span>
<a name="l02088"></a><a class="code" href="structsvn__client__status__t.html#ae34445e807c42edfe24162ef58031ecd">02088</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__client__status__t.html#ae34445e807c42edfe24162ef58031ecd" title="If the path is under version control, versioned is TRUE, otherwise FALSE.">versioned</a>;
<a name="l02089"></a>02089 <span class="comment"></span>
<a name="l02090"></a>02090 <span class="comment">  /** Set to TRUE if the node is the victim of some kind of conflict. */</span>
<a name="l02091"></a><a class="code" href="structsvn__client__status__t.html#a0503d9c3b55e3044d0ea7de67621848a">02091</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__client__status__t.html#a0503d9c3b55e3044d0ea7de67621848a" title="Set to TRUE if the node is the victim of some kind of conflict.">conflicted</a>;
<a name="l02092"></a>02092 <span class="comment"></span>
<a name="l02093"></a>02093 <span class="comment">  /** The status of the node, based on the restructuring changes and if the</span>
<a name="l02094"></a>02094 <span class="comment">   * node has no restructuring changes the text and prop status. */</span>
<a name="l02095"></a><a class="code" href="structsvn__client__status__t.html#a379a4a4ecccac774eaf406392503890b">02095</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__client__status__t.html#a379a4a4ecccac774eaf406392503890b" title="The status of the node, based on the restructuring changes and if the node has no restructuring chang...">node_status</a>;
<a name="l02096"></a>02096 <span class="comment"></span>
<a name="l02097"></a>02097 <span class="comment">  /** The status of the text of the node, not including restructuring changes.</span>
<a name="l02098"></a>02098 <span class="comment">   * Valid values are: svn_wc_status_none, svn_wc_status_normal,</span>
<a name="l02099"></a>02099 <span class="comment">   * svn_wc_status_modified and svn_wc_status_conflicted. */</span>
<a name="l02100"></a><a class="code" href="structsvn__client__status__t.html#aa3c52746932b8d715b41636edc6778de">02100</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__client__status__t.html#aa3c52746932b8d715b41636edc6778de" title="The status of the text of the node, not including restructuring changes.">text_status</a>;
<a name="l02101"></a>02101 <span class="comment"></span>
<a name="l02102"></a>02102 <span class="comment">  /** The status of the node&#39;s properties.</span>
<a name="l02103"></a>02103 <span class="comment">   * Valid values are: svn_wc_status_none, svn_wc_status_normal,</span>
<a name="l02104"></a>02104 <span class="comment">   * svn_wc_status_modified and svn_wc_status_conflicted. */</span>
<a name="l02105"></a><a class="code" href="structsvn__client__status__t.html#a87d4b460ba11521d4edac64de2ea07f4">02105</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__client__status__t.html#a87d4b460ba11521d4edac64de2ea07f4" title="The status of the node&#39;s properties.">prop_status</a>;
<a name="l02106"></a>02106 <span class="comment"></span>
<a name="l02107"></a>02107 <span class="comment">  /** a node can be &#39;locked&#39; if a working copy update is in progress or</span>
<a name="l02108"></a>02108 <span class="comment">   * was interrupted. */</span>
<a name="l02109"></a><a class="code" href="structsvn__client__status__t.html#af5aac19e3f7f18ada309e38d75892b67">02109</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__client__status__t.html#af5aac19e3f7f18ada309e38d75892b67" title="a node can be &#39;locked&#39; if a working copy update is in progress or was interrupted.">wc_is_locked</a>;
<a name="l02110"></a>02110 <span class="comment"></span>
<a name="l02111"></a>02111 <span class="comment">  /** a file or directory can be &#39;copied&#39; if it&#39;s scheduled for</span>
<a name="l02112"></a>02112 <span class="comment">   * addition-with-history (or part of a subtree that is scheduled as such.).</span>
<a name="l02113"></a>02113 <span class="comment">   */</span>
<a name="l02114"></a><a class="code" href="structsvn__client__status__t.html#a91aef06cfb381d6bbe4d5f32c93c7861">02114</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__client__status__t.html#a91aef06cfb381d6bbe4d5f32c93c7861" title="a file or directory can be &#39;copied&#39; if it&#39;s scheduled for addition-with-history (or part of a subtree...">copied</a>;
<a name="l02115"></a>02115 <span class="comment"></span>
<a name="l02116"></a>02116 <span class="comment">  /** The URL of the repository root. */</span>
<a name="l02117"></a><a class="code" href="structsvn__client__status__t.html#a17db4b3dce08ca617f8a9e7cf06b77b2">02117</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__status__t.html#a17db4b3dce08ca617f8a9e7cf06b77b2" title="The URL of the repository root.">repos_root_url</a>;
<a name="l02118"></a>02118 <span class="comment"></span>
<a name="l02119"></a>02119 <span class="comment">  /** The UUID of the repository */</span>
<a name="l02120"></a><a class="code" href="structsvn__client__status__t.html#a8a3cf69be1344e5006d7b920010a2ca4">02120</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__status__t.html#a8a3cf69be1344e5006d7b920010a2ca4" title="The UUID of the repository.">repos_uuid</a>;
<a name="l02121"></a>02121 <span class="comment"></span>
<a name="l02122"></a>02122 <span class="comment">  /** The in-repository path relative to the repository root. */</span>
<a name="l02123"></a><a class="code" href="structsvn__client__status__t.html#a541dc83ad78e3a90e5234c05abecf82d">02123</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__status__t.html#a541dc83ad78e3a90e5234c05abecf82d" title="The in-repository path relative to the repository root.">repos_relpath</a>;
<a name="l02124"></a>02124 <span class="comment"></span>
<a name="l02125"></a>02125 <span class="comment">  /** Base revision. */</span>
<a name="l02126"></a><a class="code" href="structsvn__client__status__t.html#ab56dea57b97c01a56455f5529717d59a">02126</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__client__status__t.html#ab56dea57b97c01a56455f5529717d59a" title="Base revision.">revision</a>;
<a name="l02127"></a>02127 <span class="comment"></span>
<a name="l02128"></a>02128 <span class="comment">  /** Last revision this was changed */</span>
<a name="l02129"></a><a class="code" href="structsvn__client__status__t.html#a0ddee71e019331f4ffa5b4ed9eee602a">02129</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__client__status__t.html#a0ddee71e019331f4ffa5b4ed9eee602a" title="Last revision this was changed.">changed_rev</a>;
<a name="l02130"></a>02130 <span class="comment"></span>
<a name="l02131"></a>02131 <span class="comment">  /** Date of last commit. */</span>
<a name="l02132"></a><a class="code" href="structsvn__client__status__t.html#a54b9e20e7cd3f18bd13f30fcf01ade7d">02132</a>   apr_time_t <a class="code" href="structsvn__client__status__t.html#a54b9e20e7cd3f18bd13f30fcf01ade7d" title="Date of last commit.">changed_date</a>;
<a name="l02133"></a>02133 <span class="comment"></span>
<a name="l02134"></a>02134 <span class="comment">  /** Last commit author of this item */</span>
<a name="l02135"></a><a class="code" href="structsvn__client__status__t.html#afc524f793a75bff805dad325586efb70">02135</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__status__t.html#afc524f793a75bff805dad325586efb70" title="Last commit author of this item.">changed_author</a>;
<a name="l02136"></a>02136 <span class="comment"></span>
<a name="l02137"></a>02137 <span class="comment">    /** a file or directory can be &#39;switched&#39; if the switch command has been</span>
<a name="l02138"></a>02138 <span class="comment">   * used.  If this is TRUE, then file_external will be FALSE.</span>
<a name="l02139"></a>02139 <span class="comment">   */</span>
<a name="l02140"></a><a class="code" href="structsvn__client__status__t.html#a2c5e52215a966dffaf9c29d0ee96bfbe">02140</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__client__status__t.html#a2c5e52215a966dffaf9c29d0ee96bfbe" title="a file or directory can be &#39;switched&#39; if the switch command has been used.">switched</a>;
<a name="l02141"></a>02141 <span class="comment"></span>
<a name="l02142"></a>02142 <span class="comment">  /** If the item is a file that was added to the working copy with an</span>
<a name="l02143"></a>02143 <span class="comment">   * svn:externals; if file_external is TRUE, then switched is always</span>
<a name="l02144"></a>02144 <span class="comment">   * FALSE.</span>
<a name="l02145"></a>02145 <span class="comment">   */</span>
<a name="l02146"></a><a class="code" href="structsvn__client__status__t.html#a80dc0a0e56cef643c82343655a83e427">02146</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__client__status__t.html#a80dc0a0e56cef643c82343655a83e427" title="If the item is a file that was added to the working copy with an svn:externals; if file_external is T...">file_external</a>;
<a name="l02147"></a>02147 <span class="comment"></span>
<a name="l02148"></a>02148 <span class="comment">  /** The locally present lock. (Values of path, token, owner, comment and</span>
<a name="l02149"></a>02149 <span class="comment">   * are available if a lock is present) */</span>
<a name="l02150"></a><a class="code" href="structsvn__client__status__t.html#a89f89e9d06740eac2ae14149e9bc464c">02150</a>   <span class="keyword">const</span> <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *<a class="code" href="structsvn__client__status__t.html#a89f89e9d06740eac2ae14149e9bc464c" title="The locally present lock.">lock</a>;
<a name="l02151"></a>02151 <span class="comment"></span>
<a name="l02152"></a>02152 <span class="comment">  /** Which changelist this item is part of, or NULL if not part of any. */</span>
<a name="l02153"></a><a class="code" href="structsvn__client__status__t.html#a590d6be82e31b4dc8dc649836df081f6">02153</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__status__t.html#a590d6be82e31b4dc8dc649836df081f6" title="Which changelist this item is part of, or NULL if not part of any.">changelist</a>;
<a name="l02154"></a>02154 <span class="comment"></span>
<a name="l02155"></a>02155 <span class="comment">  /** The depth of the node as recorded in the working copy</span>
<a name="l02156"></a>02156 <span class="comment">   * (#svn_depth_unknown for files or when no depth is recorded) */</span>
<a name="l02157"></a><a class="code" href="structsvn__client__status__t.html#ae880c4ef6942c69d26c9bea931242b44">02157</a>   <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> <a class="code" href="structsvn__client__status__t.html#ae880c4ef6942c69d26c9bea931242b44" title="The depth of the node as recorded in the working copy (svn_depth_unknown for files or when no depth i...">depth</a>;
<a name="l02158"></a>02158 <span class="comment"></span>
<a name="l02159"></a>02159 <span class="comment">  /**</span>
<a name="l02160"></a>02160 <span class="comment">   * @defgroup svn_wc_status_ood WC out-of-date info from the repository</span>
<a name="l02161"></a>02161 <span class="comment">   * @{</span>
<a name="l02162"></a>02162 <span class="comment">   *</span>
<a name="l02163"></a>02163 <span class="comment">   * When the working copy item is out-of-date compared to the</span>
<a name="l02164"></a>02164 <span class="comment">   * repository, the following fields represent the state of the</span>
<a name="l02165"></a>02165 <span class="comment">   * youngest revision of the item in the repository.  If the working</span>
<a name="l02166"></a>02166 <span class="comment">   * copy is not out of date, the fields are initialized as described</span>
<a name="l02167"></a>02167 <span class="comment">   * below.</span>
<a name="l02168"></a>02168 <span class="comment">   */</span>
<a name="l02169"></a>02169 <span class="comment"></span>
<a name="l02170"></a>02170 <span class="comment">  /** Set to the node kind of the youngest commit, or #svn_node_none</span>
<a name="l02171"></a>02171 <span class="comment">   * if not out of date. */</span>
<a name="l02172"></a><a class="code" href="group__svn__wc__status__ood.html#gaccdd8d5f60eb50e9803fd47035398c28">02172</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="group__svn__wc__status__ood.html#gaccdd8d5f60eb50e9803fd47035398c28" title="Set to the node kind of the youngest commit, or svn_node_none if not out of date.">ood_kind</a>;
<a name="l02173"></a>02173 <span class="comment"></span>
<a name="l02174"></a>02174 <span class="comment">  /** The status of the node, based on the text status if the node has no</span>
<a name="l02175"></a>02175 <span class="comment">   * restructuring changes */</span>
<a name="l02176"></a><a class="code" href="group__svn__wc__status__ood.html#gaef6fdedc213938db70e4fabf66fbd0e5">02176</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="group__svn__wc__status__ood.html#gaef6fdedc213938db70e4fabf66fbd0e5" title="The status of the node, based on the text status if the node has no restructuring changes...">repos_node_status</a>;
<a name="l02177"></a>02177 <span class="comment"></span>
<a name="l02178"></a>02178 <span class="comment">  /** The node&#39;s text status in the repository. */</span>
<a name="l02179"></a><a class="code" href="group__svn__wc__status__ood.html#ga6849d6ca20c6199bca29bc82fc088820">02179</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="group__svn__wc__status__ood.html#ga6849d6ca20c6199bca29bc82fc088820" title="The node&#39;s text status in the repository.">repos_text_status</a>;
<a name="l02180"></a>02180 <span class="comment"></span>
<a name="l02181"></a>02181 <span class="comment">  /** The node&#39;s property status in the repository. */</span>
<a name="l02182"></a><a class="code" href="group__svn__wc__status__ood.html#ga15093a04d67bd2b5f35c08ee6f2f5b5d">02182</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="group__svn__wc__status__ood.html#ga15093a04d67bd2b5f35c08ee6f2f5b5d" title="The node&#39;s property status in the repository.">repos_prop_status</a>;
<a name="l02183"></a>02183 <span class="comment"></span>
<a name="l02184"></a>02184 <span class="comment">  /** The node&#39;s lock in the repository, if any. */</span>
<a name="l02185"></a><a class="code" href="group__svn__wc__status__ood.html#ga92c23c575b8f6593f871da8ba26b4bb2">02185</a>   <span class="keyword">const</span> <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *<a class="code" href="group__svn__wc__status__ood.html#ga92c23c575b8f6593f871da8ba26b4bb2" title="The node&#39;s lock in the repository, if any.">repos_lock</a>;
<a name="l02186"></a>02186 <span class="comment"></span>
<a name="l02187"></a>02187 <span class="comment">  /** Set to the youngest committed revision, or #SVN_INVALID_REVNUM</span>
<a name="l02188"></a>02188 <span class="comment">   * if not out of date. */</span>
<a name="l02189"></a><a class="code" href="group__svn__wc__status__ood.html#ga4e5a23c1f451b61a63381c8939e5979a">02189</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="group__svn__wc__status__ood.html#ga4e5a23c1f451b61a63381c8939e5979a" title="Set to the youngest committed revision, or SVN_INVALID_REVNUM if not out of date.">ood_changed_rev</a>;
<a name="l02190"></a>02190 <span class="comment"></span>
<a name="l02191"></a>02191 <span class="comment">  /** Set to the most recent commit date, or @c 0 if not out of date. */</span>
<a name="l02192"></a><a class="code" href="group__svn__wc__status__ood.html#gabf33a5e8c7af25909ec3da06e252b80d">02192</a>   apr_time_t <a class="code" href="group__svn__wc__status__ood.html#gabf33a5e8c7af25909ec3da06e252b80d" title="Set to the most recent commit date, or 0 if not out of date.">ood_changed_date</a>;
<a name="l02193"></a>02193 <span class="comment"></span>
<a name="l02194"></a>02194 <span class="comment">  /** Set to the user name of the youngest commit, or @c NULL if not</span>
<a name="l02195"></a>02195 <span class="comment">   * out of date or non-existent.  Because a non-existent @c</span>
<a name="l02196"></a>02196 <span class="comment">   * svn:author property has the same behavior as an out-of-date</span>
<a name="l02197"></a>02197 <span class="comment">   * working copy, examine @c ood_changed_rev to determine whether</span>
<a name="l02198"></a>02198 <span class="comment">   * the working copy is out of date. */</span>
<a name="l02199"></a><a class="code" href="group__svn__wc__status__ood.html#gaf941810ba276721c6ebe5a5773d16c65">02199</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="group__svn__wc__status__ood.html#gaf941810ba276721c6ebe5a5773d16c65" title="Set to the user name of the youngest commit, or NULL if not out of date or non-existent.">ood_changed_author</a>;
<a name="l02200"></a>02200 <span class="comment"></span>
<a name="l02201"></a>02201 <span class="comment">  /** @} */</span>
<a name="l02202"></a>02202 <span class="comment"></span>
<a name="l02203"></a>02203 <span class="comment">  /** Reserved for libsvn_client&#39;s internal use; this value is only to be used for</span>
<a name="l02204"></a>02204 <span class="comment">   * libsvn_client backwards compatibility wrappers. This value may be NULL or</span>
<a name="l02205"></a>02205 <span class="comment">   * to other data in future versions. */</span>
<a name="l02206"></a><a class="code" href="structsvn__client__status__t.html#a01ff05ad7b9c2d962c3549166cc6871f">02206</a>   <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="structsvn__client__status__t.html#a01ff05ad7b9c2d962c3549166cc6871f" title="Reserved for libsvn_client&#39;s internal use; this value is only to be used for libsvn_client backwards ...">backwards_compatibility_baton</a>;
<a name="l02207"></a>02207 
<a name="l02208"></a>02208   <span class="comment">/* NOTE! Please update svn_client_status_dup() when adding new fields here. */</span>
<a name="l02209"></a>02209 } <a class="code" href="group__Status.html#ga11d8e5ca91624826f99cffe481dad37e" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_client_status_t</a>;
<a name="l02210"></a>02210 <span class="comment"></span>
<a name="l02211"></a>02211 <span class="comment">/**</span>
<a name="l02212"></a>02212 <span class="comment"> * Return a duplicate of @a status, allocated in @a result_pool. No part of the new</span>
<a name="l02213"></a>02213 <span class="comment"> * structure will be shared with @a status.</span>
<a name="l02214"></a>02214 <span class="comment"> *</span>
<a name="l02215"></a>02215 <span class="comment"> * @since New in 1.7.</span>
<a name="l02216"></a>02216 <span class="comment"> */</span>
<a name="l02217"></a>02217 <a class="code" href="structsvn__client__status__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_client_status_t</a> *
<a name="l02218"></a>02218 <a class="code" href="group__Status.html#gac00ec82307f0eb5760b3c063c36c7c6f" title="Return a duplicate of status, allocated in result_pool.">svn_client_status_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__client__status__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_client_status_t</a> *status,
<a name="l02219"></a>02219                       apr_pool_t *result_pool);
<a name="l02220"></a>02220 <span class="comment"></span>
<a name="l02221"></a>02221 <span class="comment">/**</span>
<a name="l02222"></a>02222 <span class="comment"> * A callback for reporting a @a status about @a path (which may be an</span>
<a name="l02223"></a>02223 <span class="comment"> * absolute or relative path).</span>
<a name="l02224"></a>02224 <span class="comment"> *</span>
<a name="l02225"></a>02225 <span class="comment"> * @a baton is a closure object; it should be provided by the</span>
<a name="l02226"></a>02226 <span class="comment"> * implementation, and passed by the caller.</span>
<a name="l02227"></a>02227 <span class="comment"> *</span>
<a name="l02228"></a>02228 <span class="comment"> * @a scratch_pool will be cleared between invocations to the callback.</span>
<a name="l02229"></a>02229 <span class="comment"> *</span>
<a name="l02230"></a>02230 <span class="comment"> * ### we might be revamping the status infrastructure, and this callback</span>
<a name="l02231"></a>02231 <span class="comment"> * ### could totally disappear by the end of 1.7 development. however, we</span>
<a name="l02232"></a>02232 <span class="comment"> * ### need to mark the STATUS parameter as &quot;const&quot; so that it is easier</span>
<a name="l02233"></a>02233 <span class="comment"> * ### to reason about who/what can modify those structures.</span>
<a name="l02234"></a>02234 <span class="comment"> *</span>
<a name="l02235"></a>02235 <span class="comment"> * @since New in 1.7.</span>
<a name="l02236"></a>02236 <span class="comment"> */</span>
<a name="l02237"></a><a class="code" href="group__Status.html#gacb890deb709a8e091b71996b50ba92cc">02237</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_status_func_t)(
<a name="l02238"></a>02238                                             <span class="keywordtype">void</span> *baton,
<a name="l02239"></a>02239                                             <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02240"></a>02240                                             <span class="keyword">const</span> <a class="code" href="structsvn__client__status__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_client_status_t</a> *status,
<a name="l02241"></a>02241                                             apr_pool_t *scratch_pool);
<a name="l02242"></a>02242 <span class="comment"></span>
<a name="l02243"></a>02243 <span class="comment">/**</span>
<a name="l02244"></a>02244 <span class="comment"> * Given @a path to a working copy directory (or single file), call</span>
<a name="l02245"></a>02245 <span class="comment"> * @a status_func/status_baton with a set of #svn_wc_status_t *</span>
<a name="l02246"></a>02246 <span class="comment"> * structures which describe the status of @a path, and its children</span>
<a name="l02247"></a>02247 <span class="comment"> * (recursing according to @a depth).</span>
<a name="l02248"></a>02248 <span class="comment"> *</span>
<a name="l02249"></a>02249 <span class="comment"> *    - If @a get_all is set, retrieve all entries; otherwise,</span>
<a name="l02250"></a>02250 <span class="comment"> *      retrieve only &quot;interesting&quot; entries (local mods and/or</span>
<a name="l02251"></a>02251 <span class="comment"> *      out of date).</span>
<a name="l02252"></a>02252 <span class="comment"> *</span>
<a name="l02253"></a>02253 <span class="comment"> *    - If @a update is set, contact the repository and augment the</span>
<a name="l02254"></a>02254 <span class="comment"> *      status structures with information about out-of-dateness (with</span>
<a name="l02255"></a>02255 <span class="comment"> *      respect to @a revision).  Also, if @a result_rev is not @c NULL,</span>
<a name="l02256"></a>02256 <span class="comment"> *      set @a *result_rev to the actual revision against which the</span>
<a name="l02257"></a>02257 <span class="comment"> *      working copy was compared (@a *result_rev is not meaningful unless</span>
<a name="l02258"></a>02258 <span class="comment"> *      @a update is set).</span>
<a name="l02259"></a>02259 <span class="comment"> *</span>
<a name="l02260"></a>02260 <span class="comment"> * If @a no_ignore is @c FALSE, don&#39;t report any file or directory (or</span>
<a name="l02261"></a>02261 <span class="comment"> * recurse into any directory) that is found by recursion (as opposed to</span>
<a name="l02262"></a>02262 <span class="comment"> * being the explicit target @a path) and whose name matches the</span>
<a name="l02263"></a>02263 <span class="comment"> * svn:ignore property on its parent directory or the global-ignores</span>
<a name="l02264"></a>02264 <span class="comment"> * list in @a ctx-&gt;config. If @a no_ignore is @c TRUE, report each such</span>
<a name="l02265"></a>02265 <span class="comment"> * file or directory with the status code #svn_wc_status_ignored.</span>
<a name="l02266"></a>02266 <span class="comment"> *</span>
<a name="l02267"></a>02267 <span class="comment"> * If @a ignore_externals is not set, then recurse into externals</span>
<a name="l02268"></a>02268 <span class="comment"> * definitions (if any exist) after handling the main target.  This</span>
<a name="l02269"></a>02269 <span class="comment"> * calls the client notification function (in @a ctx) with the</span>
<a name="l02270"></a>02270 <span class="comment"> * #svn_wc_notify_status_external action before handling each externals</span>
<a name="l02271"></a>02271 <span class="comment"> * definition, and with #svn_wc_notify_status_completed</span>
<a name="l02272"></a>02272 <span class="comment"> * after each.</span>
<a name="l02273"></a>02273 <span class="comment"> *</span>
<a name="l02274"></a>02274 <span class="comment"> * If @a depth_as_sticky is set and @a depth is not</span>
<a name="l02275"></a>02275 <span class="comment"> * #svn_depth_unknown, then the status is calculated as if depth_is_sticky</span>
<a name="l02276"></a>02276 <span class="comment"> * was passed to an equivalent update command.</span>
<a name="l02277"></a>02277 <span class="comment"> *</span>
<a name="l02278"></a>02278 <span class="comment"> * @a changelists is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l02279"></a>02279 <span class="comment"> * names, used as a restrictive filter on items whose statuses are</span>
<a name="l02280"></a>02280 <span class="comment"> * reported; that is, don&#39;t report status about any item unless</span>
<a name="l02281"></a>02281 <span class="comment"> * it&#39;s a member of one of those changelists.  If @a changelists is</span>
<a name="l02282"></a>02282 <span class="comment"> * empty (or altogether @c NULL), no changelist filtering occurs.</span>
<a name="l02283"></a>02283 <span class="comment"> *</span>
<a name="l02284"></a>02284 <span class="comment"> * If @a path is an absolute path then the @c path parameter passed in each</span>
<a name="l02285"></a>02285 <span class="comment"> * call to @a status_func will be an absolute path.</span>
<a name="l02286"></a>02286 <span class="comment"> *</span>
<a name="l02287"></a>02287 <span class="comment"> * All temporary allocations are performed in @a scratch_pool.</span>
<a name="l02288"></a>02288 <span class="comment"> *</span>
<a name="l02289"></a>02289 <span class="comment"> * @since New in 1.7.</span>
<a name="l02290"></a>02290 <span class="comment"> */</span>
<a name="l02291"></a>02291 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02292"></a>02292 <a class="code" href="group__Status.html#gabc7fb432c6019f76d98fb0dcbac66340" title="Given path to a working copy directory (or single file), call status_func/status_baton with a set of ...">svn_client_status5</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l02293"></a>02293                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02294"></a>02294                    <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02295"></a>02295                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l02296"></a>02296                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l02297"></a>02297                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l02298"></a>02298                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> update,
<a name="l02299"></a>02299                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l02300"></a>02300                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l02301"></a>02301                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_as_sticky,
<a name="l02302"></a>02302                    <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l02303"></a>02303                    <a class="code" href="group__Status.html#gacb890deb709a8e091b71996b50ba92cc" title="A callback for reporting a status about path (which may be an absolute or relative path)...">svn_client_status_func_t</a> status_func,
<a name="l02304"></a>02304                    <span class="keywordtype">void</span> *status_baton,
<a name="l02305"></a>02305                    apr_pool_t *scratch_pool);
<a name="l02306"></a>02306 <span class="comment"></span>
<a name="l02307"></a>02307 <span class="comment">/**</span>
<a name="l02308"></a>02308 <span class="comment"> * Same as svn_client_status5(), but using #svn_wc_status_func3_t</span>
<a name="l02309"></a>02309 <span class="comment"> * instead of #svn_client_status_func_t and depth_as_sticky set to TRUE.</span>
<a name="l02310"></a>02310 <span class="comment"> *</span>
<a name="l02311"></a>02311 <span class="comment"> * @since New in 1.6.</span>
<a name="l02312"></a>02312 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02313"></a>02313 <span class="comment"> */</span>
<a name="l02314"></a>02314 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02315"></a>02315 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02316"></a>02316 <a class="code" href="group__Status.html#ga8548513bfe87803a1c62fde47f5264f5" title="Same as svn_client_status5(), but using svn_wc_status_func3_t instead of svn_client_status_func_t and...">svn_client_status4</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l02317"></a>02317                    <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02318"></a>02318                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l02319"></a>02319                    <a class="code" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a" title="Same as svn_wc_status_func4_t, but with a non-const status and a relative path.">svn_wc_status_func3_t</a> status_func,
<a name="l02320"></a>02320                    <span class="keywordtype">void</span> *status_baton,
<a name="l02321"></a>02321                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l02322"></a>02322                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l02323"></a>02323                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> update,
<a name="l02324"></a>02324                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l02325"></a>02325                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l02326"></a>02326                    <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l02327"></a>02327                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02328"></a>02328                    apr_pool_t *pool);
<a name="l02329"></a>02329 <span class="comment"></span>
<a name="l02330"></a>02330 <span class="comment">/**</span>
<a name="l02331"></a>02331 <span class="comment"> * Same as svn_client_status4(), but using an #svn_wc_status_func2_t</span>
<a name="l02332"></a>02332 <span class="comment"> * instead of an #svn_wc_status_func3_t.</span>
<a name="l02333"></a>02333 <span class="comment"> *</span>
<a name="l02334"></a>02334 <span class="comment"> * @since New in 1.5.</span>
<a name="l02335"></a>02335 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l02336"></a>02336 <span class="comment"> */</span>
<a name="l02337"></a>02337 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02338"></a>02338 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02339"></a>02339 <a class="code" href="group__Status.html#gac9abf15736b3c21c7c4f8c376d43e956" title="Same as svn_client_status4(), but using an svn_wc_status_func2_t instead of an svn_wc_status_func3_t...">svn_client_status3</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l02340"></a>02340                    <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02341"></a>02341                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l02342"></a>02342                    <a class="code" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a> status_func,
<a name="l02343"></a>02343                    <span class="keywordtype">void</span> *status_baton,
<a name="l02344"></a>02344                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l02345"></a>02345                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l02346"></a>02346                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> update,
<a name="l02347"></a>02347                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l02348"></a>02348                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l02349"></a>02349                    <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l02350"></a>02350                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02351"></a>02351                    apr_pool_t *pool);
<a name="l02352"></a>02352 <span class="comment"></span>
<a name="l02353"></a>02353 <span class="comment">/**</span>
<a name="l02354"></a>02354 <span class="comment"> * Like svn_client_status3(), except with @a changelists passed as @c</span>
<a name="l02355"></a>02355 <span class="comment"> * NULL, and with @a recurse instead of @a depth.  If @a recurse is</span>
<a name="l02356"></a>02356 <span class="comment"> * TRUE, behave as if for #svn_depth_infinity; else if @a recurse is</span>
<a name="l02357"></a>02357 <span class="comment"> * FALSE, behave as if for #svn_depth_immediates.</span>
<a name="l02358"></a>02358 <span class="comment"> *</span>
<a name="l02359"></a>02359 <span class="comment"> * @since New in 1.2.</span>
<a name="l02360"></a>02360 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l02361"></a>02361 <span class="comment"> */</span>
<a name="l02362"></a>02362 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02363"></a>02363 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02364"></a>02364 <a class="code" href="group__Status.html#ga248f69ba6e4356b593f285d8d14995fe" title="Like svn_client_status3(), except with changelists passed as NULL, and with recurse instead of depth...">svn_client_status2</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l02365"></a>02365                    <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02366"></a>02366                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l02367"></a>02367                    <a class="code" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a> status_func,
<a name="l02368"></a>02368                    <span class="keywordtype">void</span> *status_baton,
<a name="l02369"></a>02369                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l02370"></a>02370                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l02371"></a>02371                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> update,
<a name="l02372"></a>02372                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l02373"></a>02373                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l02374"></a>02374                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02375"></a>02375                    apr_pool_t *pool);
<a name="l02376"></a>02376 
<a name="l02377"></a>02377 <span class="comment"></span>
<a name="l02378"></a>02378 <span class="comment">/**</span>
<a name="l02379"></a>02379 <span class="comment"> * Similar to svn_client_status2(), but with @a ignore_externals</span>
<a name="l02380"></a>02380 <span class="comment"> * always set to FALSE, taking the #svn_wc_status_func_t type</span>
<a name="l02381"></a>02381 <span class="comment"> * instead of the #svn_wc_status_func2_t type for @a status_func,</span>
<a name="l02382"></a>02382 <span class="comment"> * and requiring @a *revision to be non-const even though it is</span>
<a name="l02383"></a>02383 <span class="comment"> * treated as constant.</span>
<a name="l02384"></a>02384 <span class="comment"> *</span>
<a name="l02385"></a>02385 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l02386"></a>02386 <span class="comment"> */</span>
<a name="l02387"></a>02387 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02388"></a>02388 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02389"></a>02389 <a class="code" href="group__Status.html#ga52e822422ef964810712209c0d567b4f" title="Similar to svn_client_status2(), but with ignore_externals always set to FALSE, taking the svn_wc_sta...">svn_client_status</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l02390"></a>02390                   <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02391"></a>02391                   <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l02392"></a>02392                   <a class="code" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a" title="Same as svn_wc_status_func2_t, but for older svn_wc_status_t structures.">svn_wc_status_func_t</a> status_func,
<a name="l02393"></a>02393                   <span class="keywordtype">void</span> *status_baton,
<a name="l02394"></a>02394                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l02395"></a>02395                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l02396"></a>02396                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> update,
<a name="l02397"></a>02397                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l02398"></a>02398                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02399"></a>02399                   apr_pool_t *pool);
<a name="l02400"></a>02400 <span class="comment"></span>
<a name="l02401"></a>02401 <span class="comment">/** @} */</span>
<a name="l02402"></a>02402 <span class="comment"></span>
<a name="l02403"></a>02403 <span class="comment">/**</span>
<a name="l02404"></a>02404 <span class="comment"> * @defgroup Log View information about previous revisions of an object.</span>
<a name="l02405"></a>02405 <span class="comment"> *</span>
<a name="l02406"></a>02406 <span class="comment"> * @{</span>
<a name="l02407"></a>02407 <span class="comment"> */</span>
<a name="l02408"></a>02408 <span class="comment"></span>
<a name="l02409"></a>02409 <span class="comment">/**</span>
<a name="l02410"></a>02410 <span class="comment"> * Invoke @a receiver with @a receiver_baton on each log message from</span>
<a name="l02411"></a>02411 <span class="comment"> * each (#svn_opt_revision_range_t *) range in @a revision_ranges in turn,</span>
<a name="l02412"></a>02412 <span class="comment"> * inclusive (but never invoke @a receiver on a given log message more</span>
<a name="l02413"></a>02413 <span class="comment"> * than once).</span>
<a name="l02414"></a>02414 <span class="comment"> *</span>
<a name="l02415"></a>02415 <span class="comment"> * @a targets contains either a URL followed by zero or more relative</span>
<a name="l02416"></a>02416 <span class="comment"> * paths, or 1 working copy path, as &lt;tt&gt;const char *&lt;/tt&gt;, for which log</span>
<a name="l02417"></a>02417 <span class="comment"> * messages are desired.  @a receiver is invoked only on messages whose</span>
<a name="l02418"></a>02418 <span class="comment"> * revisions involved a change to some path in @a targets.  @a peg_revision</span>
<a name="l02419"></a>02419 <span class="comment"> * indicates in which revision @a targets are valid.  If @a peg_revision is</span>
<a name="l02420"></a>02420 <span class="comment"> * #svn_opt_revision_unspecified, it defaults to #svn_opt_revision_head</span>
<a name="l02421"></a>02421 <span class="comment"> * for URLs or #svn_opt_revision_working for WC paths.</span>
<a name="l02422"></a>02422 <span class="comment"> *</span>
<a name="l02423"></a>02423 <span class="comment"> * If @a limit is non-zero only invoke @a receiver on the first @a limit</span>
<a name="l02424"></a>02424 <span class="comment"> * logs.</span>
<a name="l02425"></a>02425 <span class="comment"> *</span>
<a name="l02426"></a>02426 <span class="comment"> * If @a discover_changed_paths is set, then the `@a changed_paths&#39; argument</span>
<a name="l02427"></a>02427 <span class="comment"> * to @a receiver will be passed on each invocation.</span>
<a name="l02428"></a>02428 <span class="comment"> *</span>
<a name="l02429"></a>02429 <span class="comment"> * If @a strict_node_history is set, copy history (if any exists) will</span>
<a name="l02430"></a>02430 <span class="comment"> * not be traversed while harvesting revision logs for each target.</span>
<a name="l02431"></a>02431 <span class="comment"> *</span>
<a name="l02432"></a>02432 <span class="comment"> * If @a include_merged_revisions is set, log information for revisions</span>
<a name="l02433"></a>02433 <span class="comment"> * which have been merged to @a targets will also be returned.</span>
<a name="l02434"></a>02434 <span class="comment"> *</span>
<a name="l02435"></a>02435 <span class="comment"> * If @a revprops is NULL, retrieve all revprops; else, retrieve only the</span>
<a name="l02436"></a>02436 <span class="comment"> * revprops named in the array (i.e. retrieve none if the array is empty).</span>
<a name="l02437"></a>02437 <span class="comment"> *</span>
<a name="l02438"></a>02438 <span class="comment"> * Use @a pool for any temporary allocation.</span>
<a name="l02439"></a>02439 <span class="comment"> *</span>
<a name="l02440"></a>02440 <span class="comment"> * @par Important:</span>
<a name="l02441"></a>02441 <span class="comment"> * A special case for the revision range HEAD:1, which was present</span>
<a name="l02442"></a>02442 <span class="comment"> * in svn_client_log(), has been removed from svn_client_log2().  Instead, it</span>
<a name="l02443"></a>02443 <span class="comment"> * is expected that callers will specify the range HEAD:0, to avoid a</span>
<a name="l02444"></a>02444 <span class="comment"> * #SVN_ERR_FS_NO_SUCH_REVISION error when invoked against an empty repository</span>
<a name="l02445"></a>02445 <span class="comment"> * (i.e. one not containing a revision 1).</span>
<a name="l02446"></a>02446 <span class="comment"> *</span>
<a name="l02447"></a>02447 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, then call @a ctx-&gt;notify_func2/baton2</span>
<a name="l02448"></a>02448 <span class="comment"> * with a &#39;skip&#39; signal on any unversioned targets.</span>
<a name="l02449"></a>02449 <span class="comment"> *</span>
<a name="l02450"></a>02450 <span class="comment"> * @since New in 1.6.</span>
<a name="l02451"></a>02451 <span class="comment"> */</span>
<a name="l02452"></a>02452 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02453"></a>02453 <a class="code" href="group__Log.html#ga6907dbe5f0117b0beee65c41fa6d0837" title="Invoke receiver with receiver_baton on each log message from each (svn_opt_revision_range_t *) range ...">svn_client_log5</a>(<span class="keyword">const</span> apr_array_header_t *targets,
<a name="l02454"></a>02454                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02455"></a>02455                 <span class="keyword">const</span> apr_array_header_t *revision_ranges,
<a name="l02456"></a>02456                 <span class="keywordtype">int</span> limit,
<a name="l02457"></a>02457                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> discover_changed_paths,
<a name="l02458"></a>02458                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> strict_node_history,
<a name="l02459"></a>02459                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> include_merged_revisions,
<a name="l02460"></a>02460                 <span class="keyword">const</span> apr_array_header_t *revprops,
<a name="l02461"></a>02461                 <a class="code" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb" title="The callback invoked by log message loopers, such as svn_ra_plugin_t.get_log() and svn_repos_get_logs...">svn_log_entry_receiver_t</a> receiver,
<a name="l02462"></a>02462                 <span class="keywordtype">void</span> *receiver_baton,
<a name="l02463"></a>02463                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02464"></a>02464                 apr_pool_t *pool);
<a name="l02465"></a>02465 <span class="comment"></span>
<a name="l02466"></a>02466 <span class="comment">/**</span>
<a name="l02467"></a>02467 <span class="comment"> * Similar to svn_client_log5(), but takes explicit start and end parameters</span>
<a name="l02468"></a>02468 <span class="comment"> * instead of an array of revision ranges.</span>
<a name="l02469"></a>02469 <span class="comment"> *</span>
<a name="l02470"></a>02470 <span class="comment"> * @deprecated Provided for compatibility with the 1.5 API.</span>
<a name="l02471"></a>02471 <span class="comment"> * @since New in 1.5.</span>
<a name="l02472"></a>02472 <span class="comment"> */</span>
<a name="l02473"></a>02473 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02474"></a>02474 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02475"></a>02475 <a class="code" href="group__Log.html#ga51b2d03e1d9effca849bd2739187a01a" title="Similar to svn_client_log5(), but takes explicit start and end parameters instead of an array of revi...">svn_client_log4</a>(<span class="keyword">const</span> apr_array_header_t *targets,
<a name="l02476"></a>02476                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02477"></a>02477                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start,
<a name="l02478"></a>02478                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end,
<a name="l02479"></a>02479                 <span class="keywordtype">int</span> limit,
<a name="l02480"></a>02480                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> discover_changed_paths,
<a name="l02481"></a>02481                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> strict_node_history,
<a name="l02482"></a>02482                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> include_merged_revisions,
<a name="l02483"></a>02483                 <span class="keyword">const</span> apr_array_header_t *revprops,
<a name="l02484"></a>02484                 <a class="code" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb" title="The callback invoked by log message loopers, such as svn_ra_plugin_t.get_log() and svn_repos_get_logs...">svn_log_entry_receiver_t</a> receiver,
<a name="l02485"></a>02485                 <span class="keywordtype">void</span> *receiver_baton,
<a name="l02486"></a>02486                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02487"></a>02487                 apr_pool_t *pool);
<a name="l02488"></a>02488 <span class="comment"></span>
<a name="l02489"></a>02489 <span class="comment">/**</span>
<a name="l02490"></a>02490 <span class="comment"> * Similar to svn_client_log4(), but using #svn_log_message_receiver_t</span>
<a name="l02491"></a>02491 <span class="comment"> * instead of #svn_log_entry_receiver_t.  Also, @a</span>
<a name="l02492"></a>02492 <span class="comment"> * include_merged_revisions is set to @c FALSE and @a revprops is</span>
<a name="l02493"></a>02493 <span class="comment"> * svn:author, svn:date, and svn:log.</span>
<a name="l02494"></a>02494 <span class="comment"> *</span>
<a name="l02495"></a>02495 <span class="comment"> * @deprecated Provided for compatibility with the 1.4 API.</span>
<a name="l02496"></a>02496 <span class="comment"> * @since New in 1.4.</span>
<a name="l02497"></a>02497 <span class="comment"> */</span>
<a name="l02498"></a>02498 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02499"></a>02499 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02500"></a>02500 <a class="code" href="group__Log.html#ga5c5f1d9e6c64298972bfa9c356fbc7aa" title="Similar to svn_client_log4(), but using svn_log_message_receiver_t instead of svn_log_entry_receiver_...">svn_client_log3</a>(<span class="keyword">const</span> apr_array_header_t *targets,
<a name="l02501"></a>02501                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02502"></a>02502                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start,
<a name="l02503"></a>02503                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end,
<a name="l02504"></a>02504                 <span class="keywordtype">int</span> limit,
<a name="l02505"></a>02505                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> discover_changed_paths,
<a name="l02506"></a>02506                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> strict_node_history,
<a name="l02507"></a>02507                 <a class="code" href="svn__types_8h.html#a6aa9147b67a7778294a52399de5c0b33" title="Similar to svn_log_entry_receiver_t, except this uses separate parameters for each part of the log en...">svn_log_message_receiver_t</a> receiver,
<a name="l02508"></a>02508                 <span class="keywordtype">void</span> *receiver_baton,
<a name="l02509"></a>02509                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02510"></a>02510                 apr_pool_t *pool);
<a name="l02511"></a>02511 
<a name="l02512"></a>02512 <span class="comment"></span>
<a name="l02513"></a>02513 <span class="comment">/**</span>
<a name="l02514"></a>02514 <span class="comment"> * Similar to svn_client_log3(), but with the @c kind field of</span>
<a name="l02515"></a>02515 <span class="comment"> * @a peg_revision set to #svn_opt_revision_unspecified.</span>
<a name="l02516"></a>02516 <span class="comment"> *</span>
<a name="l02517"></a>02517 <span class="comment"> * @deprecated Provided for compatibility with the 1.3 API.</span>
<a name="l02518"></a>02518 <span class="comment"> * @since New in 1.2.</span>
<a name="l02519"></a>02519 <span class="comment"> */</span>
<a name="l02520"></a>02520 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02521"></a>02521 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02522"></a>02522 <a class="code" href="group__Log.html#ga0c53313b5ec1070f6655bb45e94d9d71" title="Similar to svn_client_log3(), but with the kind field of peg_revision set to svn_opt_revision_unspeci...">svn_client_log2</a>(<span class="keyword">const</span> apr_array_header_t *targets,
<a name="l02523"></a>02523                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start,
<a name="l02524"></a>02524                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end,
<a name="l02525"></a>02525                 <span class="keywordtype">int</span> limit,
<a name="l02526"></a>02526                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> discover_changed_paths,
<a name="l02527"></a>02527                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> strict_node_history,
<a name="l02528"></a>02528                 <a class="code" href="svn__types_8h.html#a6aa9147b67a7778294a52399de5c0b33" title="Similar to svn_log_entry_receiver_t, except this uses separate parameters for each part of the log en...">svn_log_message_receiver_t</a> receiver,
<a name="l02529"></a>02529                 <span class="keywordtype">void</span> *receiver_baton,
<a name="l02530"></a>02530                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02531"></a>02531                 apr_pool_t *pool);
<a name="l02532"></a>02532 
<a name="l02533"></a>02533 <span class="comment"></span>
<a name="l02534"></a>02534 <span class="comment">/**</span>
<a name="l02535"></a>02535 <span class="comment"> * Similar to svn_client_log2(), but with @a limit set to 0, and the</span>
<a name="l02536"></a>02536 <span class="comment"> * following special case:</span>
<a name="l02537"></a>02537 <span class="comment"> *</span>
<a name="l02538"></a>02538 <span class="comment"> * Special case for repositories at revision 0:</span>
<a name="l02539"></a>02539 <span class="comment"> *</span>
<a name="l02540"></a>02540 <span class="comment"> * If @a start-&gt;kind is #svn_opt_revision_head, and @a end-&gt;kind is</span>
<a name="l02541"></a>02541 <span class="comment"> * #svn_opt_revision_number &amp;&amp; @a end-&gt;number is @c 1, then handle an</span>
<a name="l02542"></a>02542 <span class="comment"> * empty (no revisions) repository specially: instead of erroring</span>
<a name="l02543"></a>02543 <span class="comment"> * because requested revision 1 when the highest revision is 0, just</span>
<a name="l02544"></a>02544 <span class="comment"> * invoke @a receiver on revision 0, passing @c NULL for changed paths and</span>
<a name="l02545"></a>02545 <span class="comment"> * empty strings for the author and date.  This is because that</span>
<a name="l02546"></a>02546 <span class="comment"> * particular combination of @a start and @a end usually indicates the</span>
<a name="l02547"></a>02547 <span class="comment"> * common case of log invocation -- the user wants to see all log</span>
<a name="l02548"></a>02548 <span class="comment"> * messages from youngest to oldest, where the oldest commit is</span>
<a name="l02549"></a>02549 <span class="comment"> * revision 1.  That works fine, except when there are no commits in</span>
<a name="l02550"></a>02550 <span class="comment"> * the repository, hence this special case.</span>
<a name="l02551"></a>02551 <span class="comment"> *</span>
<a name="l02552"></a>02552 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l02553"></a>02553 <span class="comment"> */</span>
<a name="l02554"></a>02554 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02555"></a>02555 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02556"></a>02556 <a class="code" href="group__Log.html#ga43d8607236ca1bd5c2d9b41acfb62b7e" title="Similar to svn_client_log2(), but with limit set to 0, and the following special case:">svn_client_log</a>(<span class="keyword">const</span> apr_array_header_t *targets,
<a name="l02557"></a>02557                <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start,
<a name="l02558"></a>02558                <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end,
<a name="l02559"></a>02559                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> discover_changed_paths,
<a name="l02560"></a>02560                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> strict_node_history,
<a name="l02561"></a>02561                <a class="code" href="svn__types_8h.html#a6aa9147b67a7778294a52399de5c0b33" title="Similar to svn_log_entry_receiver_t, except this uses separate parameters for each part of the log en...">svn_log_message_receiver_t</a> receiver,
<a name="l02562"></a>02562                <span class="keywordtype">void</span> *receiver_baton,
<a name="l02563"></a>02563                <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02564"></a>02564                apr_pool_t *pool);
<a name="l02565"></a>02565 <span class="comment"></span>
<a name="l02566"></a>02566 <span class="comment">/** @} */</span>
<a name="l02567"></a>02567 <span class="comment"></span>
<a name="l02568"></a>02568 <span class="comment">/**</span>
<a name="l02569"></a>02569 <span class="comment"> * @defgroup Blame Show modification information about lines in a file.</span>
<a name="l02570"></a>02570 <span class="comment"> *</span>
<a name="l02571"></a>02571 <span class="comment"> * @{</span>
<a name="l02572"></a>02572 <span class="comment"> */</span>
<a name="l02573"></a>02573 <span class="comment"></span>
<a name="l02574"></a>02574 <span class="comment">/**</span>
<a name="l02575"></a>02575 <span class="comment"> * Invoke @a receiver with @a receiver_baton on each line-blame item</span>
<a name="l02576"></a>02576 <span class="comment"> * associated with revision @a end of @a path_or_url, using @a start</span>
<a name="l02577"></a>02577 <span class="comment"> * as the default source of all blame.  @a peg_revision indicates in</span>
<a name="l02578"></a>02578 <span class="comment"> * which revision @a path_or_url is valid.  If @a peg_revision-&gt;kind</span>
<a name="l02579"></a>02579 <span class="comment"> * is #svn_opt_revision_unspecified, then it defaults to</span>
<a name="l02580"></a>02580 <span class="comment"> * #svn_opt_revision_head for URLs or #svn_opt_revision_working for</span>
<a name="l02581"></a>02581 <span class="comment"> * WC targets.</span>
<a name="l02582"></a>02582 <span class="comment"> *</span>
<a name="l02583"></a>02583 <span class="comment"> * If @a start-&gt;kind or @a end-&gt;kind is #svn_opt_revision_unspecified,</span>
<a name="l02584"></a>02584 <span class="comment"> * return the error #SVN_ERR_CLIENT_BAD_REVISION.  If either are</span>
<a name="l02585"></a>02585 <span class="comment"> * #svn_opt_revision_working, return the error</span>
<a name="l02586"></a>02586 <span class="comment"> * #SVN_ERR_UNSUPPORTED_FEATURE.  If any of the revisions of @a</span>
<a name="l02587"></a>02587 <span class="comment"> * path_or_url have a binary mime-type, return the error</span>
<a name="l02588"></a>02588 <span class="comment"> * #SVN_ERR_CLIENT_IS_BINARY_FILE, unless @a ignore_mime_type is TRUE,</span>
<a name="l02589"></a>02589 <span class="comment"> * in which case blame information will be generated regardless of the</span>
<a name="l02590"></a>02590 <span class="comment"> * MIME types of the revisions.</span>
<a name="l02591"></a>02591 <span class="comment"> *</span>
<a name="l02592"></a>02592 <span class="comment"> * Use @a diff_options to determine how to compare different revisions of the</span>
<a name="l02593"></a>02593 <span class="comment"> * target.</span>
<a name="l02594"></a>02594 <span class="comment"> *</span>
<a name="l02595"></a>02595 <span class="comment"> * If @a include_merged_revisions is TRUE, also return data based upon</span>
<a name="l02596"></a>02596 <span class="comment"> * revisions which have been merged to @a path_or_url.</span>
<a name="l02597"></a>02597 <span class="comment"> *</span>
<a name="l02598"></a>02598 <span class="comment"> * Use @a pool for any temporary allocation.</span>
<a name="l02599"></a>02599 <span class="comment"> *</span>
<a name="l02600"></a>02600 <span class="comment"> * @since New in 1.7.</span>
<a name="l02601"></a>02601 <span class="comment"> */</span>
<a name="l02602"></a>02602 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02603"></a>02603 <a class="code" href="group__Blame.html#ga054157300b3b057c01154195d25298fc" title="Invoke receiver with receiver_baton on each line-blame item associated with revision end of path_or_u...">svn_client_blame5</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l02604"></a>02604                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02605"></a>02605                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start,
<a name="l02606"></a>02606                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end,
<a name="l02607"></a>02607                   <span class="keyword">const</span> <a class="code" href="structsvn__diff__file__options__t.html" title="Options to control the behaviour of the file diff routines.">svn_diff_file_options_t</a> *diff_options,
<a name="l02608"></a>02608                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_mime_type,
<a name="l02609"></a>02609                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> include_merged_revisions,
<a name="l02610"></a>02610                   <a class="code" href="group__clnt__blame.html#gad09bd6cc9210114056b4a2d6b81f2b7a" title="Callback type used by svn_client_blame5() to notify the caller that line line_no of the blamed file w...">svn_client_blame_receiver3_t</a> receiver,
<a name="l02611"></a>02611                   <span class="keywordtype">void</span> *receiver_baton,
<a name="l02612"></a>02612                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02613"></a>02613                   apr_pool_t *pool);
<a name="l02614"></a>02614 
<a name="l02615"></a>02615 <span class="comment"></span>
<a name="l02616"></a>02616 <span class="comment">/**</span>
<a name="l02617"></a>02617 <span class="comment"> * Similar to svn_client_blame5(), but with #svn_client_blame_receiver3_t</span>
<a name="l02618"></a>02618 <span class="comment"> * as the receiver.</span>
<a name="l02619"></a>02619 <span class="comment"> *</span>
<a name="l02620"></a>02620 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l02621"></a>02621 <span class="comment"> *</span>
<a name="l02622"></a>02622 <span class="comment"> * @since New in 1.5.</span>
<a name="l02623"></a>02623 <span class="comment"> */</span>
<a name="l02624"></a>02624 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02625"></a>02625 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02626"></a>02626 <a class="code" href="group__Blame.html#ga093f616eeded3d45fa43d2e938d3b42d" title="Similar to svn_client_blame5(), but with svn_client_blame_receiver3_t as the receiver.">svn_client_blame4</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l02627"></a>02627                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02628"></a>02628                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start,
<a name="l02629"></a>02629                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end,
<a name="l02630"></a>02630                   <span class="keyword">const</span> <a class="code" href="structsvn__diff__file__options__t.html" title="Options to control the behaviour of the file diff routines.">svn_diff_file_options_t</a> *diff_options,
<a name="l02631"></a>02631                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_mime_type,
<a name="l02632"></a>02632                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> include_merged_revisions,
<a name="l02633"></a>02633                   <a class="code" href="group__clnt__blame.html#gae286c859f92c68d7fa0b91452a67a7d5" title="Similar to svn_client_blame_receiver3_t, but with separate author and date revision properties instea...">svn_client_blame_receiver2_t</a> receiver,
<a name="l02634"></a>02634                   <span class="keywordtype">void</span> *receiver_baton,
<a name="l02635"></a>02635                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02636"></a>02636                   apr_pool_t *pool);
<a name="l02637"></a>02637 <span class="comment"></span>
<a name="l02638"></a>02638 <span class="comment">/**</span>
<a name="l02639"></a>02639 <span class="comment"> * Similar to svn_client_blame4(), but with @a include_merged_revisions set</span>
<a name="l02640"></a>02640 <span class="comment"> * to FALSE, and using a #svn_client_blame_receiver2_t as the receiver.</span>
<a name="l02641"></a>02641 <span class="comment"> *</span>
<a name="l02642"></a>02642 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.4 API.</span>
<a name="l02643"></a>02643 <span class="comment"> *</span>
<a name="l02644"></a>02644 <span class="comment"> * @since New in 1.4.</span>
<a name="l02645"></a>02645 <span class="comment"> */</span>
<a name="l02646"></a>02646 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02647"></a>02647 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02648"></a>02648 <a class="code" href="group__Blame.html#ga35c528a46109a3b37e023ed3dff047e8" title="Similar to svn_client_blame4(), but with include_merged_revisions set to FALSE, and using a svn_clien...">svn_client_blame3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l02649"></a>02649                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02650"></a>02650                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start,
<a name="l02651"></a>02651                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end,
<a name="l02652"></a>02652                   <span class="keyword">const</span> <a class="code" href="structsvn__diff__file__options__t.html" title="Options to control the behaviour of the file diff routines.">svn_diff_file_options_t</a> *diff_options,
<a name="l02653"></a>02653                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_mime_type,
<a name="l02654"></a>02654                   <a class="code" href="group__clnt__blame.html#ga6e49c82c6c0be02792b0df2f4a9f067c" title="Similar to svn_client_blame_receiver2_t, but without merged_revision, merged_author, merged_date, or merged_path members.">svn_client_blame_receiver_t</a> receiver,
<a name="l02655"></a>02655                   <span class="keywordtype">void</span> *receiver_baton,
<a name="l02656"></a>02656                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02657"></a>02657                   apr_pool_t *pool);
<a name="l02658"></a>02658 <span class="comment"></span>
<a name="l02659"></a>02659 <span class="comment">/**</span>
<a name="l02660"></a>02660 <span class="comment"> * Similar to svn_client_blame3(), but with @a diff_options set to</span>
<a name="l02661"></a>02661 <span class="comment"> * default options as returned by svn_diff_file_options_parse() and</span>
<a name="l02662"></a>02662 <span class="comment"> * @a ignore_mime_type set to FALSE.</span>
<a name="l02663"></a>02663 <span class="comment"> *</span>
<a name="l02664"></a>02664 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.3 API.</span>
<a name="l02665"></a>02665 <span class="comment"> *</span>
<a name="l02666"></a>02666 <span class="comment"> * @since New in 1.2.</span>
<a name="l02667"></a>02667 <span class="comment"> */</span>
<a name="l02668"></a>02668 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02669"></a>02669 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02670"></a>02670 <a class="code" href="group__Blame.html#ga8b31a220457428a518e265f9851f260a" title="Similar to svn_client_blame3(), but with diff_options set to default options as returned by svn_diff_...">svn_client_blame2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l02671"></a>02671                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02672"></a>02672                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start,
<a name="l02673"></a>02673                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end,
<a name="l02674"></a>02674                   <a class="code" href="group__clnt__blame.html#ga6e49c82c6c0be02792b0df2f4a9f067c" title="Similar to svn_client_blame_receiver2_t, but without merged_revision, merged_author, merged_date, or merged_path members.">svn_client_blame_receiver_t</a> receiver,
<a name="l02675"></a>02675                   <span class="keywordtype">void</span> *receiver_baton,
<a name="l02676"></a>02676                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02677"></a>02677                   apr_pool_t *pool);
<a name="l02678"></a>02678 <span class="comment"></span>
<a name="l02679"></a>02679 <span class="comment">/**</span>
<a name="l02680"></a>02680 <span class="comment"> * Similar to svn_client_blame2() except that @a peg_revision is always</span>
<a name="l02681"></a>02681 <span class="comment"> * the same as @a end.</span>
<a name="l02682"></a>02682 <span class="comment"> *</span>
<a name="l02683"></a>02683 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l02684"></a>02684 <span class="comment"> */</span>
<a name="l02685"></a>02685 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02686"></a>02686 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02687"></a>02687 <a class="code" href="group__Blame.html#gabb4b461fc5699326a7d9684fb9cd5664" title="Similar to svn_client_blame2() except that peg_revision is always the same as end.">svn_client_blame</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l02688"></a>02688                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start,
<a name="l02689"></a>02689                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end,
<a name="l02690"></a>02690                  <a class="code" href="group__clnt__blame.html#ga6e49c82c6c0be02792b0df2f4a9f067c" title="Similar to svn_client_blame_receiver2_t, but without merged_revision, merged_author, merged_date, or merged_path members.">svn_client_blame_receiver_t</a> receiver,
<a name="l02691"></a>02691                  <span class="keywordtype">void</span> *receiver_baton,
<a name="l02692"></a>02692                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02693"></a>02693                  apr_pool_t *pool);
<a name="l02694"></a>02694 <span class="comment"></span>
<a name="l02695"></a>02695 <span class="comment">/** @} */</span>
<a name="l02696"></a>02696 <span class="comment"></span>
<a name="l02697"></a>02697 <span class="comment">/**</span>
<a name="l02698"></a>02698 <span class="comment"> * @defgroup Diff Generate differences between paths.</span>
<a name="l02699"></a>02699 <span class="comment"> *</span>
<a name="l02700"></a>02700 <span class="comment"> * @{</span>
<a name="l02701"></a>02701 <span class="comment"> */</span>
<a name="l02702"></a>02702 <span class="comment"></span>
<a name="l02703"></a>02703 <span class="comment">/**</span>
<a name="l02704"></a>02704 <span class="comment"> * Produce diff output which describes the delta between</span>
<a name="l02705"></a>02705 <span class="comment"> * @a path1/@a revision1 and @a path2/@a revision2.  Print the output</span>
<a name="l02706"></a>02706 <span class="comment"> * of the diff to @a outfile, and any errors to @a errfile.  @a path1</span>
<a name="l02707"></a>02707 <span class="comment"> * and @a path2 can be either working-copy paths or URLs.</span>
<a name="l02708"></a>02708 <span class="comment"> *</span>
<a name="l02709"></a>02709 <span class="comment"> * If @a relative_to_dir is not @c NULL, the @a original_path and</span>
<a name="l02710"></a>02710 <span class="comment"> * @a modified_path will have the @a relative_to_dir stripped from the</span>
<a name="l02711"></a>02711 <span class="comment"> * front of the respective paths.  If @a relative_to_dir is @c NULL,</span>
<a name="l02712"></a>02712 <span class="comment"> * paths will not be modified.  If @a relative_to_dir is not</span>
<a name="l02713"></a>02713 <span class="comment"> * @c NULL but @a relative_to_dir is not a parent path of the target,</span>
<a name="l02714"></a>02714 <span class="comment"> * an error is returned. Finally, if @a relative_to_dir is a URL, an</span>
<a name="l02715"></a>02715 <span class="comment"> * error will be returned.</span>
<a name="l02716"></a>02716 <span class="comment"> *</span>
<a name="l02717"></a>02717 <span class="comment"> * If either @a revision1 or @a revision2 has an `unspecified&#39; or</span>
<a name="l02718"></a>02718 <span class="comment"> * unrecognized `kind&#39;, return #SVN_ERR_CLIENT_BAD_REVISION.</span>
<a name="l02719"></a>02719 <span class="comment"> *</span>
<a name="l02720"></a>02720 <span class="comment"> * @a path1 and @a path2 must both represent the same node kind -- that</span>
<a name="l02721"></a>02721 <span class="comment"> * is, if @a path1 is a directory, @a path2 must also be, and if @a path1</span>
<a name="l02722"></a>02722 <span class="comment"> * is a file, @a path2 must also be.</span>
<a name="l02723"></a>02723 <span class="comment"> *</span>
<a name="l02724"></a>02724 <span class="comment"> * If @a depth is #svn_depth_infinity, diff fully recursively.</span>
<a name="l02725"></a>02725 <span class="comment"> * Else if it is #svn_depth_immediates, diff the named paths and</span>
<a name="l02726"></a>02726 <span class="comment"> * their file children (if any), and diff properties of</span>
<a name="l02727"></a>02727 <span class="comment"> * subdirectories, but do not descend further into the subdirectories.</span>
<a name="l02728"></a>02728 <span class="comment"> * Else if #svn_depth_files, behave as if for #svn_depth_immediates</span>
<a name="l02729"></a>02729 <span class="comment"> * except don&#39;t diff properties of subdirectories.  If</span>
<a name="l02730"></a>02730 <span class="comment"> * #svn_depth_empty, diff exactly the named paths but nothing</span>
<a name="l02731"></a>02731 <span class="comment"> * underneath them.</span>
<a name="l02732"></a>02732 <span class="comment"> *</span>
<a name="l02733"></a>02733 <span class="comment"> * Use @a ignore_ancestry to control whether or not items being</span>
<a name="l02734"></a>02734 <span class="comment"> * diffed will be checked for relatedness first.  Unrelated items</span>
<a name="l02735"></a>02735 <span class="comment"> * are typically transmitted to the editor as a deletion of one thing</span>
<a name="l02736"></a>02736 <span class="comment"> * and the addition of another, but if this flag is TRUE, unrelated</span>
<a name="l02737"></a>02737 <span class="comment"> * items will be diffed as if they were related.</span>
<a name="l02738"></a>02738 <span class="comment"> *</span>
<a name="l02739"></a>02739 <span class="comment"> * If @a no_diff_deleted is TRUE, then no diff output will be</span>
<a name="l02740"></a>02740 <span class="comment"> * generated on deleted files.</span>
<a name="l02741"></a>02741 <span class="comment"> *</span>
<a name="l02742"></a>02742 <span class="comment"> * If @a show_copies_as_adds is TRUE, then copied files will not be diffed</span>
<a name="l02743"></a>02743 <span class="comment"> * against their copyfrom source, and will appear in the diff output</span>
<a name="l02744"></a>02744 <span class="comment"> * in their entirety, as if they were newly added.</span>
<a name="l02745"></a>02745 <span class="comment"> *</span>
<a name="l02746"></a>02746 <span class="comment"> * If @a use_git_diff_format is TRUE, then the git&#39;s extended diff format</span>
<a name="l02747"></a>02747 <span class="comment"> * will be used.</span>
<a name="l02748"></a>02748 <span class="comment"> * ### Do we need to say more about the format? A reference perhaps?</span>
<a name="l02749"></a>02749 <span class="comment"> *</span>
<a name="l02750"></a>02750 <span class="comment"> * Generated headers are encoded using @a header_encoding.</span>
<a name="l02751"></a>02751 <span class="comment"> *</span>
<a name="l02752"></a>02752 <span class="comment"> * Diff output will not be generated for binary files, unless @a</span>
<a name="l02753"></a>02753 <span class="comment"> * ignore_content_type is TRUE, in which case diffs will be shown</span>
<a name="l02754"></a>02754 <span class="comment"> * regardless of the content types.</span>
<a name="l02755"></a>02755 <span class="comment"> *</span>
<a name="l02756"></a>02756 <span class="comment"> * @a diff_options (an array of &lt;tt&gt;const char *&lt;/tt&gt;) is used to pass</span>
<a name="l02757"></a>02757 <span class="comment"> * additional command line options to the diff processes invoked to compare</span>
<a name="l02758"></a>02758 <span class="comment"> * files. @a diff_options is allowed to be @c NULL, in which case a value</span>
<a name="l02759"></a>02759 <span class="comment"> * for this option might still be obtained from the Subversion configuration</span>
<a name="l02760"></a>02760 <span class="comment"> * file via client context @a ctx.</span>
<a name="l02761"></a>02761 <span class="comment"> *</span>
<a name="l02762"></a>02762 <span class="comment"> * The authentication baton cached in @a ctx is used to communicate with</span>
<a name="l02763"></a>02763 <span class="comment"> * the repository.</span>
<a name="l02764"></a>02764 <span class="comment"> *</span>
<a name="l02765"></a>02765 <span class="comment"> * @a changelists is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l02766"></a>02766 <span class="comment"> * names, used as a restrictive filter on items whose differences are</span>
<a name="l02767"></a>02767 <span class="comment"> * reported; that is, don&#39;t generate diffs about any item unless</span>
<a name="l02768"></a>02768 <span class="comment"> * it&#39;s a member of one of those changelists.  If @a changelists is</span>
<a name="l02769"></a>02769 <span class="comment"> * empty (or altogether @c NULL), no changelist filtering occurs.</span>
<a name="l02770"></a>02770 <span class="comment"> *</span>
<a name="l02771"></a>02771 <span class="comment"> * @note Changelist filtering only applies to diffs in which at least</span>
<a name="l02772"></a>02772 <span class="comment"> * one side of the diff represents working copy data.</span>
<a name="l02773"></a>02773 <span class="comment"> *</span>
<a name="l02774"></a>02774 <span class="comment"> * @note @a header_encoding doesn&#39;t affect headers generated by external</span>
<a name="l02775"></a>02775 <span class="comment"> * diff programs.</span>
<a name="l02776"></a>02776 <span class="comment"> *</span>
<a name="l02777"></a>02777 <span class="comment"> * @note @a relative_to_dir doesn&#39;t affect the path index generated by</span>
<a name="l02778"></a>02778 <span class="comment"> * external diff programs.</span>
<a name="l02779"></a>02779 <span class="comment"> *</span>
<a name="l02780"></a>02780 <span class="comment"> * @since New in 1.7.</span>
<a name="l02781"></a>02781 <span class="comment"> */</span>
<a name="l02782"></a>02782 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02783"></a>02783 <a class="code" href="group__Diff.html#gacfc38f2cca3bad2287400e7cd10c4f1c" title="Produce diff output which describes the delta between path1/revision1 and path2/revision2. ">svn_client_diff5</a>(<span class="keyword">const</span> apr_array_header_t *diff_options,
<a name="l02784"></a>02784                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path1,
<a name="l02785"></a>02785                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l02786"></a>02786                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path2,
<a name="l02787"></a>02787                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l02788"></a>02788                  <span class="keyword">const</span> <span class="keywordtype">char</span> *relative_to_dir,
<a name="l02789"></a>02789                  <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l02790"></a>02790                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l02791"></a>02791                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_diff_deleted,
<a name="l02792"></a>02792                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> show_copies_as_adds,
<a name="l02793"></a>02793                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_content_type,
<a name="l02794"></a>02794                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_git_diff_format,
<a name="l02795"></a>02795                  <span class="keyword">const</span> <span class="keywordtype">char</span> *header_encoding,
<a name="l02796"></a>02796                  apr_file_t *outfile,
<a name="l02797"></a>02797                  apr_file_t *errfile,
<a name="l02798"></a>02798                  <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l02799"></a>02799                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02800"></a>02800                  apr_pool_t *pool);
<a name="l02801"></a>02801 <span class="comment"></span>
<a name="l02802"></a>02802 <span class="comment">/**</span>
<a name="l02803"></a>02803 <span class="comment"> * Similar to svn_client_diff5(), but with @a show_copies_as_adds set to</span>
<a name="l02804"></a>02804 <span class="comment"> * @c FALSE and @a use_git_diff_format set to @c FALSE.</span>
<a name="l02805"></a>02805 <span class="comment"> *</span>
<a name="l02806"></a>02806 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02807"></a>02807 <span class="comment"> * @since New in 1.5.</span>
<a name="l02808"></a>02808 <span class="comment"> */</span>
<a name="l02809"></a>02809 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02810"></a>02810 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02811"></a>02811 <a class="code" href="group__Diff.html#gab6d98080d85b7240eb5b7a62e54364d9" title="Similar to svn_client_diff5(), but with show_copies_as_adds set to FALSE and use_git_diff_format set ...">svn_client_diff4</a>(<span class="keyword">const</span> apr_array_header_t *diff_options,
<a name="l02812"></a>02812                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path1,
<a name="l02813"></a>02813                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l02814"></a>02814                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path2,
<a name="l02815"></a>02815                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l02816"></a>02816                  <span class="keyword">const</span> <span class="keywordtype">char</span> *relative_to_dir,
<a name="l02817"></a>02817                  <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l02818"></a>02818                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l02819"></a>02819                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_diff_deleted,
<a name="l02820"></a>02820                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_content_type,
<a name="l02821"></a>02821                  <span class="keyword">const</span> <span class="keywordtype">char</span> *header_encoding,
<a name="l02822"></a>02822                  apr_file_t *outfile,
<a name="l02823"></a>02823                  apr_file_t *errfile,
<a name="l02824"></a>02824                  <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l02825"></a>02825                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02826"></a>02826                  apr_pool_t *pool);
<a name="l02827"></a>02827 <span class="comment"></span>
<a name="l02828"></a>02828 <span class="comment">/**</span>
<a name="l02829"></a>02829 <span class="comment"> * Similar to svn_client_diff4(), but with @a changelists passed as @c</span>
<a name="l02830"></a>02830 <span class="comment"> * NULL, and @a depth set according to @a recurse: if @a recurse is</span>
<a name="l02831"></a>02831 <span class="comment"> * TRUE, set @a depth to #svn_depth_infinity, if @a recurse is</span>
<a name="l02832"></a>02832 <span class="comment"> * FALSE, set @a depth to #svn_depth_empty.</span>
<a name="l02833"></a>02833 <span class="comment"> *</span>
<a name="l02834"></a>02834 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l02835"></a>02835 <span class="comment"> * @since New in 1.3.</span>
<a name="l02836"></a>02836 <span class="comment"> */</span>
<a name="l02837"></a>02837 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02838"></a>02838 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02839"></a>02839 <a class="code" href="group__Diff.html#ga577436800ecab2d841f87fb1237cc192" title="Similar to svn_client_diff4(), but with changelists passed as NULL, and depth set according to recurs...">svn_client_diff3</a>(<span class="keyword">const</span> apr_array_header_t *diff_options,
<a name="l02840"></a>02840                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path1,
<a name="l02841"></a>02841                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l02842"></a>02842                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path2,
<a name="l02843"></a>02843                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l02844"></a>02844                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l02845"></a>02845                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l02846"></a>02846                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_diff_deleted,
<a name="l02847"></a>02847                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_content_type,
<a name="l02848"></a>02848                  <span class="keyword">const</span> <span class="keywordtype">char</span> *header_encoding,
<a name="l02849"></a>02849                  apr_file_t *outfile,
<a name="l02850"></a>02850                  apr_file_t *errfile,
<a name="l02851"></a>02851                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02852"></a>02852                  apr_pool_t *pool);
<a name="l02853"></a>02853 
<a name="l02854"></a>02854 <span class="comment"></span>
<a name="l02855"></a>02855 <span class="comment">/**</span>
<a name="l02856"></a>02856 <span class="comment"> * Similar to svn_client_diff3(), but with @a header_encoding set to</span>
<a name="l02857"></a>02857 <span class="comment"> * @c APR_LOCALE_CHARSET.</span>
<a name="l02858"></a>02858 <span class="comment"> *</span>
<a name="l02859"></a>02859 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l02860"></a>02860 <span class="comment"> * @since New in 1.2.</span>
<a name="l02861"></a>02861 <span class="comment"> */</span>
<a name="l02862"></a>02862 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02863"></a>02863 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02864"></a>02864 <a class="code" href="group__Diff.html#gaf82b2cf5441afdd8287a44f2ee7b8fe8" title="Similar to svn_client_diff3(), but with header_encoding set to APR_LOCALE_CHARSET.">svn_client_diff2</a>(<span class="keyword">const</span> apr_array_header_t *diff_options,
<a name="l02865"></a>02865                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path1,
<a name="l02866"></a>02866                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l02867"></a>02867                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path2,
<a name="l02868"></a>02868                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l02869"></a>02869                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l02870"></a>02870                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l02871"></a>02871                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_diff_deleted,
<a name="l02872"></a>02872                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_content_type,
<a name="l02873"></a>02873                  apr_file_t *outfile,
<a name="l02874"></a>02874                  apr_file_t *errfile,
<a name="l02875"></a>02875                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02876"></a>02876                  apr_pool_t *pool);
<a name="l02877"></a>02877 <span class="comment"></span>
<a name="l02878"></a>02878 <span class="comment">/**</span>
<a name="l02879"></a>02879 <span class="comment"> * Similar to svn_client_diff2(), but with @a ignore_content_type</span>
<a name="l02880"></a>02880 <span class="comment"> * always set to FALSE.</span>
<a name="l02881"></a>02881 <span class="comment"> *</span>
<a name="l02882"></a>02882 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l02883"></a>02883 <span class="comment"> */</span>
<a name="l02884"></a>02884 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02885"></a>02885 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02886"></a>02886 <a class="code" href="group__Diff.html#ga6aff72544fdae31a12a3cb878c26a990" title="Similar to svn_client_diff2(), but with ignore_content_type always set to FALSE.">svn_client_diff</a>(<span class="keyword">const</span> apr_array_header_t *diff_options,
<a name="l02887"></a>02887                 <span class="keyword">const</span> <span class="keywordtype">char</span> *path1,
<a name="l02888"></a>02888                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l02889"></a>02889                 <span class="keyword">const</span> <span class="keywordtype">char</span> *path2,
<a name="l02890"></a>02890                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l02891"></a>02891                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l02892"></a>02892                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l02893"></a>02893                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_diff_deleted,
<a name="l02894"></a>02894                 apr_file_t *outfile,
<a name="l02895"></a>02895                 apr_file_t *errfile,
<a name="l02896"></a>02896                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02897"></a>02897                 apr_pool_t *pool);
<a name="l02898"></a>02898 <span class="comment"></span>
<a name="l02899"></a>02899 <span class="comment">/**</span>
<a name="l02900"></a>02900 <span class="comment"> * Produce diff output which describes the delta between the</span>
<a name="l02901"></a>02901 <span class="comment"> * filesystem object @a path in peg revision @a peg_revision, as it</span>
<a name="l02902"></a>02902 <span class="comment"> * changed between @a start_revision and @a end_revision.  @a path can</span>
<a name="l02903"></a>02903 <span class="comment"> * be either a working-copy path or URL.</span>
<a name="l02904"></a>02904 <span class="comment"> *</span>
<a name="l02905"></a>02905 <span class="comment"> * If @a peg_revision is #svn_opt_revision_unspecified, behave</span>
<a name="l02906"></a>02906 <span class="comment"> * identically to svn_client_diff5(), using @a path for both of that</span>
<a name="l02907"></a>02907 <span class="comment"> * function&#39;s @a path1 and @a path2 arguments.</span>
<a name="l02908"></a>02908 <span class="comment"> *</span>
<a name="l02909"></a>02909 <span class="comment"> * All other options are handled identically to svn_client_diff5().</span>
<a name="l02910"></a>02910 <span class="comment"> *</span>
<a name="l02911"></a>02911 <span class="comment"> * @since New in 1.7.</span>
<a name="l02912"></a>02912 <span class="comment"> */</span>
<a name="l02913"></a>02913 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02914"></a>02914 <a class="code" href="group__Diff.html#ga28728641779a5ce521a5c0c2d77553d4" title="Produce diff output which describes the delta between the filesystem object path in peg revision peg_...">svn_client_diff_peg5</a>(<span class="keyword">const</span> apr_array_header_t *diff_options,
<a name="l02915"></a>02915                      <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02916"></a>02916                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02917"></a>02917                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start_revision,
<a name="l02918"></a>02918                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end_revision,
<a name="l02919"></a>02919                      <span class="keyword">const</span> <span class="keywordtype">char</span> *relative_to_dir,
<a name="l02920"></a>02920                      <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l02921"></a>02921                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l02922"></a>02922                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_diff_deleted,
<a name="l02923"></a>02923                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> show_copies_as_adds,
<a name="l02924"></a>02924                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_content_type,
<a name="l02925"></a>02925                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_git_diff_format,
<a name="l02926"></a>02926                      <span class="keyword">const</span> <span class="keywordtype">char</span> *header_encoding,
<a name="l02927"></a>02927                      apr_file_t *outfile,
<a name="l02928"></a>02928                      apr_file_t *errfile,
<a name="l02929"></a>02929                      <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l02930"></a>02930                      <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02931"></a>02931                      apr_pool_t *pool);
<a name="l02932"></a>02932 <span class="comment"></span>
<a name="l02933"></a>02933 <span class="comment">/**</span>
<a name="l02934"></a>02934 <span class="comment"> * Similar to svn_client_diff_peg5(), but with @a show_copies_as_adds set to</span>
<a name="l02935"></a>02935 <span class="comment"> * @c FALSE and @a use_git_diff_format set to @c FALSE.</span>
<a name="l02936"></a>02936 <span class="comment"> *</span>
<a name="l02937"></a>02937 <span class="comment"> * @since New in 1.5.</span>
<a name="l02938"></a>02938 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02939"></a>02939 <span class="comment"> */</span>
<a name="l02940"></a>02940 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02941"></a>02941 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02942"></a>02942 <a class="code" href="group__Diff.html#ga4c84eb846c68740c0ae5ca91e486187c" title="Similar to svn_client_diff_peg5(), but with show_copies_as_adds set to FALSE and use_git_diff_format ...">svn_client_diff_peg4</a>(<span class="keyword">const</span> apr_array_header_t *diff_options,
<a name="l02943"></a>02943                      <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02944"></a>02944                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02945"></a>02945                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start_revision,
<a name="l02946"></a>02946                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end_revision,
<a name="l02947"></a>02947                      <span class="keyword">const</span> <span class="keywordtype">char</span> *relative_to_dir,
<a name="l02948"></a>02948                      <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l02949"></a>02949                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l02950"></a>02950                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_diff_deleted,
<a name="l02951"></a>02951                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_content_type,
<a name="l02952"></a>02952                      <span class="keyword">const</span> <span class="keywordtype">char</span> *header_encoding,
<a name="l02953"></a>02953                      apr_file_t *outfile,
<a name="l02954"></a>02954                      apr_file_t *errfile,
<a name="l02955"></a>02955                      <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l02956"></a>02956                      <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02957"></a>02957                      apr_pool_t *pool);
<a name="l02958"></a>02958 <span class="comment"></span>
<a name="l02959"></a>02959 <span class="comment">/**</span>
<a name="l02960"></a>02960 <span class="comment"> * Similar to svn_client_diff_peg4(), but with @a changelists passed</span>
<a name="l02961"></a>02961 <span class="comment"> * as @c NULL, and @a depth set according to @a recurse: if @a recurse</span>
<a name="l02962"></a>02962 <span class="comment"> * is TRUE, set @a depth to #svn_depth_infinity, if @a recurse is</span>
<a name="l02963"></a>02963 <span class="comment"> * FALSE, set @a depth to #svn_depth_files.</span>
<a name="l02964"></a>02964 <span class="comment"> *</span>
<a name="l02965"></a>02965 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l02966"></a>02966 <span class="comment"> * @since New in 1.3.</span>
<a name="l02967"></a>02967 <span class="comment"> */</span>
<a name="l02968"></a>02968 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02969"></a>02969 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02970"></a>02970 <a class="code" href="group__Diff.html#ga804245541ec5c4d6d0de98823a520406" title="Similar to svn_client_diff_peg4(), but with changelists passed as NULL, and depth set according to re...">svn_client_diff_peg3</a>(<span class="keyword">const</span> apr_array_header_t *diff_options,
<a name="l02971"></a>02971                      <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02972"></a>02972                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02973"></a>02973                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start_revision,
<a name="l02974"></a>02974                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end_revision,
<a name="l02975"></a>02975                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l02976"></a>02976                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l02977"></a>02977                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_diff_deleted,
<a name="l02978"></a>02978                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_content_type,
<a name="l02979"></a>02979                      <span class="keyword">const</span> <span class="keywordtype">char</span> *header_encoding,
<a name="l02980"></a>02980                      apr_file_t *outfile,
<a name="l02981"></a>02981                      apr_file_t *errfile,
<a name="l02982"></a>02982                      <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l02983"></a>02983                      apr_pool_t *pool);
<a name="l02984"></a>02984 <span class="comment"></span>
<a name="l02985"></a>02985 <span class="comment">/**</span>
<a name="l02986"></a>02986 <span class="comment"> * Similar to svn_client_diff_peg3(), but with @a header_encoding set to</span>
<a name="l02987"></a>02987 <span class="comment"> * @c APR_LOCALE_CHARSET.</span>
<a name="l02988"></a>02988 <span class="comment"> *</span>
<a name="l02989"></a>02989 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l02990"></a>02990 <span class="comment"> * @since New in 1.2.</span>
<a name="l02991"></a>02991 <span class="comment"> */</span>
<a name="l02992"></a>02992 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02993"></a>02993 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02994"></a>02994 <a class="code" href="group__Diff.html#gaf11de894d0fb0143310e99b4cb1b21e8" title="Similar to svn_client_diff_peg3(), but with header_encoding set to APR_LOCALE_CHARSET.">svn_client_diff_peg2</a>(<span class="keyword">const</span> apr_array_header_t *diff_options,
<a name="l02995"></a>02995                      <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02996"></a>02996                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l02997"></a>02997                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start_revision,
<a name="l02998"></a>02998                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end_revision,
<a name="l02999"></a>02999                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l03000"></a>03000                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03001"></a>03001                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_diff_deleted,
<a name="l03002"></a>03002                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_content_type,
<a name="l03003"></a>03003                      apr_file_t *outfile,
<a name="l03004"></a>03004                      apr_file_t *errfile,
<a name="l03005"></a>03005                      <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03006"></a>03006                      apr_pool_t *pool);
<a name="l03007"></a>03007 <span class="comment"></span>
<a name="l03008"></a>03008 <span class="comment">/**</span>
<a name="l03009"></a>03009 <span class="comment"> * Similar to svn_client_diff_peg2(), but with @a ignore_content_type</span>
<a name="l03010"></a>03010 <span class="comment"> * always set to FALSE.</span>
<a name="l03011"></a>03011 <span class="comment"> *</span>
<a name="l03012"></a>03012 <span class="comment"> * @since New in 1.1.</span>
<a name="l03013"></a>03013 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l03014"></a>03014 <span class="comment"> */</span>
<a name="l03015"></a>03015 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03016"></a>03016 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03017"></a>03017 <a class="code" href="group__Diff.html#ga7778ed98279c01b7da197ef7e6fbae32" title="Similar to svn_client_diff_peg2(), but with ignore_content_type always set to FALSE.">svn_client_diff_peg</a>(<span class="keyword">const</span> apr_array_header_t *diff_options,
<a name="l03018"></a>03018                     <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03019"></a>03019                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03020"></a>03020                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start_revision,
<a name="l03021"></a>03021                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end_revision,
<a name="l03022"></a>03022                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l03023"></a>03023                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03024"></a>03024                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_diff_deleted,
<a name="l03025"></a>03025                     apr_file_t *outfile,
<a name="l03026"></a>03026                     apr_file_t *errfile,
<a name="l03027"></a>03027                     <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03028"></a>03028                     apr_pool_t *pool);
<a name="l03029"></a>03029 <span class="comment"></span>
<a name="l03030"></a>03030 <span class="comment">/**</span>
<a name="l03031"></a>03031 <span class="comment"> * Produce a diff summary which lists the changed items between</span>
<a name="l03032"></a>03032 <span class="comment"> * @a path1/@a revision1 and @a path2/@a revision2 without creating text</span>
<a name="l03033"></a>03033 <span class="comment"> * deltas. @a path1 and @a path2 can be either working-copy paths or URLs.</span>
<a name="l03034"></a>03034 <span class="comment"> *</span>
<a name="l03035"></a>03035 <span class="comment"> * The function may report false positives if @a ignore_ancestry is false,</span>
<a name="l03036"></a>03036 <span class="comment"> * since a file might have been modified between two revisions, but still</span>
<a name="l03037"></a>03037 <span class="comment"> * have the same contents.</span>
<a name="l03038"></a>03038 <span class="comment"> *</span>
<a name="l03039"></a>03039 <span class="comment"> * Calls @a summarize_func with @a summarize_baton for each difference</span>
<a name="l03040"></a>03040 <span class="comment"> * with a #svn_client_diff_summarize_t structure describing the difference.</span>
<a name="l03041"></a>03041 <span class="comment"> *</span>
<a name="l03042"></a>03042 <span class="comment"> * See svn_client_diff5() for a description of the other parameters.</span>
<a name="l03043"></a>03043 <span class="comment"> *</span>
<a name="l03044"></a>03044 <span class="comment"> * @since New in 1.5.</span>
<a name="l03045"></a>03045 <span class="comment"> */</span>
<a name="l03046"></a>03046 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03047"></a>03047 <a class="code" href="group__Diff.html#gaf2f4bb488747131309cce8ce9159a0ce" title="Produce a diff summary which lists the changed items between path1/revision1 and path2/revision2 with...">svn_client_diff_summarize2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path1,
<a name="l03048"></a>03048                            <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l03049"></a>03049                            <span class="keyword">const</span> <span class="keywordtype">char</span> *path2,
<a name="l03050"></a>03050                            <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l03051"></a>03051                            <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03052"></a>03052                            <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03053"></a>03053                            <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l03054"></a>03054                            <a class="code" href="group__clnt__diff.html#gaf9a4030e5c1c4d914e2f513fa1bd5f58" title="A callback used in svn_client_diff_summarize2() and svn_client_diff_summarize_peg2() for reporting a ...">svn_client_diff_summarize_func_t</a> summarize_func,
<a name="l03055"></a>03055                            <span class="keywordtype">void</span> *summarize_baton,
<a name="l03056"></a>03056                            <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03057"></a>03057                            apr_pool_t *pool);
<a name="l03058"></a>03058 <span class="comment"></span>
<a name="l03059"></a>03059 <span class="comment">/**</span>
<a name="l03060"></a>03060 <span class="comment"> * Similar to svn_client_diff_summarize2(), but with @a changelists</span>
<a name="l03061"></a>03061 <span class="comment"> * passed as @c NULL, and @a depth set according to @a recurse: if @a</span>
<a name="l03062"></a>03062 <span class="comment"> * recurse is TRUE, set @a depth to #svn_depth_infinity, if @a</span>
<a name="l03063"></a>03063 <span class="comment"> * recurse is FALSE, set @a depth to #svn_depth_files.</span>
<a name="l03064"></a>03064 <span class="comment"> *</span>
<a name="l03065"></a>03065 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l03066"></a>03066 <span class="comment"> *</span>
<a name="l03067"></a>03067 <span class="comment"> * @since New in 1.4.</span>
<a name="l03068"></a>03068 <span class="comment"> */</span>
<a name="l03069"></a>03069 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03070"></a>03070 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03071"></a>03071 <a class="code" href="group__Diff.html#ga67b584b503a81df3d269597940a77dd4" title="Similar to svn_client_diff_summarize2(), but with changelists passed as NULL, and depth set according...">svn_client_diff_summarize</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path1,
<a name="l03072"></a>03072                           <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l03073"></a>03073                           <span class="keyword">const</span> <span class="keywordtype">char</span> *path2,
<a name="l03074"></a>03074                           <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l03075"></a>03075                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l03076"></a>03076                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03077"></a>03077                           <a class="code" href="group__clnt__diff.html#gaf9a4030e5c1c4d914e2f513fa1bd5f58" title="A callback used in svn_client_diff_summarize2() and svn_client_diff_summarize_peg2() for reporting a ...">svn_client_diff_summarize_func_t</a> summarize_func,
<a name="l03078"></a>03078                           <span class="keywordtype">void</span> *summarize_baton,
<a name="l03079"></a>03079                           <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03080"></a>03080                           apr_pool_t *pool);
<a name="l03081"></a>03081 <span class="comment"></span>
<a name="l03082"></a>03082 <span class="comment">/**</span>
<a name="l03083"></a>03083 <span class="comment"> * Produce a diff summary which lists the changed items between the</span>
<a name="l03084"></a>03084 <span class="comment"> * filesystem object @a path in peg revision @a peg_revision, as it</span>
<a name="l03085"></a>03085 <span class="comment"> * changed between @a start_revision and @a end_revision. @a path can</span>
<a name="l03086"></a>03086 <span class="comment"> * be either a working-copy path or URL.</span>
<a name="l03087"></a>03087 <span class="comment"> *</span>
<a name="l03088"></a>03088 <span class="comment"> * If @a peg_revision is #svn_opt_revision_unspecified, behave</span>
<a name="l03089"></a>03089 <span class="comment"> * identically to svn_client_diff_summarize2(), using @a path for both</span>
<a name="l03090"></a>03090 <span class="comment"> * of that function&#39;s @a path1 and @a path2 arguments.</span>
<a name="l03091"></a>03091 <span class="comment"> *</span>
<a name="l03092"></a>03092 <span class="comment"> * The function may report false positives if @a ignore_ancestry is false,</span>
<a name="l03093"></a>03093 <span class="comment"> * as described in the documentation for svn_client_diff_summarize2().</span>
<a name="l03094"></a>03094 <span class="comment"> *</span>
<a name="l03095"></a>03095 <span class="comment"> * Call @a summarize_func with @a summarize_baton for each difference</span>
<a name="l03096"></a>03096 <span class="comment"> * with a #svn_client_diff_summarize_t structure describing the difference.</span>
<a name="l03097"></a>03097 <span class="comment"> *</span>
<a name="l03098"></a>03098 <span class="comment"> * See svn_client_diff_peg5() for a description of the other parameters.</span>
<a name="l03099"></a>03099 <span class="comment"> *</span>
<a name="l03100"></a>03100 <span class="comment"> * @since New in 1.5.</span>
<a name="l03101"></a>03101 <span class="comment"> */</span>
<a name="l03102"></a>03102 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03103"></a>03103 <a class="code" href="group__Diff.html#gac939eeda1fb9c0fd6da152989ccf504b" title="Produce a diff summary which lists the changed items between the filesystem object path in peg revisi...">svn_client_diff_summarize_peg2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03104"></a>03104                                <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03105"></a>03105                                <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start_revision,
<a name="l03106"></a>03106                                <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end_revision,
<a name="l03107"></a>03107                                <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03108"></a>03108                                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03109"></a>03109                                <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l03110"></a>03110                                <a class="code" href="group__clnt__diff.html#gaf9a4030e5c1c4d914e2f513fa1bd5f58" title="A callback used in svn_client_diff_summarize2() and svn_client_diff_summarize_peg2() for reporting a ...">svn_client_diff_summarize_func_t</a> summarize_func,
<a name="l03111"></a>03111                                <span class="keywordtype">void</span> *summarize_baton,
<a name="l03112"></a>03112                                <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03113"></a>03113                                apr_pool_t *pool);
<a name="l03114"></a>03114 <span class="comment"></span>
<a name="l03115"></a>03115 <span class="comment">/**</span>
<a name="l03116"></a>03116 <span class="comment"> * Similar to svn_client_diff_summarize_peg2(), but with @a</span>
<a name="l03117"></a>03117 <span class="comment"> * changelists passed as @c NULL, and @a depth set according to @a</span>
<a name="l03118"></a>03118 <span class="comment"> * recurse: if @a recurse is TRUE, set @a depth to</span>
<a name="l03119"></a>03119 <span class="comment"> * #svn_depth_infinity, if @a recurse is FALSE, set @a depth to</span>
<a name="l03120"></a>03120 <span class="comment"> * #svn_depth_files.</span>
<a name="l03121"></a>03121 <span class="comment"> *</span>
<a name="l03122"></a>03122 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l03123"></a>03123 <span class="comment"> *</span>
<a name="l03124"></a>03124 <span class="comment"> * @since New in 1.4.</span>
<a name="l03125"></a>03125 <span class="comment"> */</span>
<a name="l03126"></a>03126 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03127"></a>03127 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03128"></a>03128 <a class="code" href="group__Diff.html#ga00407f7dd25eb0ac7737e598b1f85c2a" title="Similar to svn_client_diff_summarize_peg2(), but with changelists passed as NULL, and depth set accor...">svn_client_diff_summarize_peg</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03129"></a>03129                               <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03130"></a>03130                               <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *start_revision,
<a name="l03131"></a>03131                               <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *end_revision,
<a name="l03132"></a>03132                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l03133"></a>03133                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03134"></a>03134                               <a class="code" href="group__clnt__diff.html#gaf9a4030e5c1c4d914e2f513fa1bd5f58" title="A callback used in svn_client_diff_summarize2() and svn_client_diff_summarize_peg2() for reporting a ...">svn_client_diff_summarize_func_t</a> summarize_func,
<a name="l03135"></a>03135                               <span class="keywordtype">void</span> *summarize_baton,
<a name="l03136"></a>03136                               <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03137"></a>03137                               apr_pool_t *pool);
<a name="l03138"></a>03138 <span class="comment"></span>
<a name="l03139"></a>03139 <span class="comment">/** @} */</span>
<a name="l03140"></a>03140 <span class="comment"></span>
<a name="l03141"></a>03141 <span class="comment">/**</span>
<a name="l03142"></a>03142 <span class="comment"> * @defgroup Merge Merge changes between branches.</span>
<a name="l03143"></a>03143 <span class="comment"> *</span>
<a name="l03144"></a>03144 <span class="comment"> * @{</span>
<a name="l03145"></a>03145 <span class="comment"> */</span>
<a name="l03146"></a>03146 <span class="comment"></span>
<a name="l03147"></a>03147 <span class="comment">/** Merge changes from @a source1/@a revision1 to @a source2/@a revision2 into</span>
<a name="l03148"></a>03148 <span class="comment"> * the working-copy path @a target_wcpath.</span>
<a name="l03149"></a>03149 <span class="comment"> *</span>
<a name="l03150"></a>03150 <span class="comment"> * @a source1 and @a source2 are either URLs that refer to entries in the</span>
<a name="l03151"></a>03151 <span class="comment"> * repository, or paths to entries in the working copy.</span>
<a name="l03152"></a>03152 <span class="comment"> *</span>
<a name="l03153"></a>03153 <span class="comment"> * By &quot;merging&quot;, we mean:  apply file differences using</span>
<a name="l03154"></a>03154 <span class="comment"> * svn_wc_merge(), and schedule additions &amp; deletions when appropriate.</span>
<a name="l03155"></a>03155 <span class="comment"> *</span>
<a name="l03156"></a>03156 <span class="comment"> * @a source1 and @a source2 must both represent the same node kind -- that</span>
<a name="l03157"></a>03157 <span class="comment"> * is, if @a source1 is a directory, @a source2 must also be, and if @a source1</span>
<a name="l03158"></a>03158 <span class="comment"> * is a file, @a source2 must also be.</span>
<a name="l03159"></a>03159 <span class="comment"> *</span>
<a name="l03160"></a>03160 <span class="comment"> * If either @a revision1 or @a revision2 has an `unspecified&#39; or</span>
<a name="l03161"></a>03161 <span class="comment"> * unrecognized `kind&#39;, return #SVN_ERR_CLIENT_BAD_REVISION.</span>
<a name="l03162"></a>03162 <span class="comment"> *</span>
<a name="l03163"></a>03163 <span class="comment"> * If @a depth is #svn_depth_infinity, merge fully recursively.</span>
<a name="l03164"></a>03164 <span class="comment"> * Else if #svn_depth_immediates, merge changes at most to files</span>
<a name="l03165"></a>03165 <span class="comment"> * that are immediate children of @a target_wcpath and to directory</span>
<a name="l03166"></a>03166 <span class="comment"> * properties of @a target_wcpath and its immediate subdirectory children.</span>
<a name="l03167"></a>03167 <span class="comment"> * Else if #svn_depth_files, merge at most to immediate file</span>
<a name="l03168"></a>03168 <span class="comment"> * children of @a target_wcpath and to @a target_wcpath itself.</span>
<a name="l03169"></a>03169 <span class="comment"> * Else if #svn_depth_empty, apply changes only to @a target_wcpath</span>
<a name="l03170"></a>03170 <span class="comment"> * (i.e., directory property changes only)</span>
<a name="l03171"></a>03171 <span class="comment"> *</span>
<a name="l03172"></a>03172 <span class="comment"> * If @a depth is #svn_depth_unknown, use the depth of @a target_wcpath.</span>
<a name="l03173"></a>03173 <span class="comment"> *</span>
<a name="l03174"></a>03174 <span class="comment"> * Use @a ignore_ancestry to control whether or not items being</span>
<a name="l03175"></a>03175 <span class="comment"> * diffed will be checked for relatedness first.  Unrelated items</span>
<a name="l03176"></a>03176 <span class="comment"> * are typically transmitted to the editor as a deletion of one thing</span>
<a name="l03177"></a>03177 <span class="comment"> * and the addition of another, but if this flag is TRUE, unrelated</span>
<a name="l03178"></a>03178 <span class="comment"> * items will be diffed as if they were related.</span>
<a name="l03179"></a>03179 <span class="comment"> *</span>
<a name="l03180"></a>03180 <span class="comment"> * If @a force is false and the merge involves deleting a file whose</span>
<a name="l03181"></a>03181 <span class="comment"> * content differs from the source-left version, or a locally modified</span>
<a name="l03182"></a>03182 <span class="comment"> * directory, or an unversioned item, then the operation will fail.  If</span>
<a name="l03183"></a>03183 <span class="comment"> * @a force is true then all such items will be deleted.</span>
<a name="l03184"></a>03184 <span class="comment"> *</span>
<a name="l03185"></a>03185 <span class="comment"> * @a merge_options (an array of &lt;tt&gt;const char *&lt;/tt&gt;), if non-NULL,</span>
<a name="l03186"></a>03186 <span class="comment"> * is used to pass additional command line arguments to the merge</span>
<a name="l03187"></a>03187 <span class="comment"> * processes (internal or external).  @see</span>
<a name="l03188"></a>03188 <span class="comment"> * svn_diff_file_options_parse().</span>
<a name="l03189"></a>03189 <span class="comment"> *</span>
<a name="l03190"></a>03190 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, then call @a ctx-&gt;notify_func2 with @a</span>
<a name="l03191"></a>03191 <span class="comment"> * ctx-&gt;notify_baton2 once for each merged target, passing the target&#39;s local</span>
<a name="l03192"></a>03192 <span class="comment"> * path.</span>
<a name="l03193"></a>03193 <span class="comment"> *</span>
<a name="l03194"></a>03194 <span class="comment"> * If @a record_only is TRUE, the merge is performed, but is limited only to</span>
<a name="l03195"></a>03195 <span class="comment"> * mergeinfo property changes on existing paths in @a target_wcpath.</span>
<a name="l03196"></a>03196 <span class="comment"> *</span>
<a name="l03197"></a>03197 <span class="comment"> * If @a dry_run is TRUE, the merge is carried out, and full notification</span>
<a name="l03198"></a>03198 <span class="comment"> * feedback is provided, but the working copy is not modified.</span>
<a name="l03199"></a>03199 <span class="comment"> *</span>
<a name="l03200"></a>03200 <span class="comment"> * If allow_mixed_rev is @c FALSE, and @a merge_target is a mixed-revision</span>
<a name="l03201"></a>03201 <span class="comment"> * working copy, raise @c SVN_ERR_CLIENT_MERGE_UPDATE_REQUIRED.</span>
<a name="l03202"></a>03202 <span class="comment"> * Because users rarely intend to merge into mixed-revision working copies,</span>
<a name="l03203"></a>03203 <span class="comment"> * it is recommended to set this parameter to FALSE by default unless the</span>
<a name="l03204"></a>03204 <span class="comment"> * user has explicitly requested a merge into a mixed-revision working copy.</span>
<a name="l03205"></a>03205 <span class="comment"> *</span>
<a name="l03206"></a>03206 <span class="comment"> * The authentication baton cached in @a ctx is used to communicate with the</span>
<a name="l03207"></a>03207 <span class="comment"> * repository.</span>
<a name="l03208"></a>03208 <span class="comment"> *</span>
<a name="l03209"></a>03209 <span class="comment"> * @since New in 1.7.</span>
<a name="l03210"></a>03210 <span class="comment"> */</span>
<a name="l03211"></a>03211 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03212"></a>03212 <a class="code" href="group__Merge.html#ga1da524323431a0aec5837ab02bc43fe3" title="Merge changes from source1/revision1 to source2/revision2 into the working-copy path target_wcpath...">svn_client_merge4</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *source1,
<a name="l03213"></a>03213                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l03214"></a>03214                   <span class="keyword">const</span> <span class="keywordtype">char</span> *source2,
<a name="l03215"></a>03215                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l03216"></a>03216                   <span class="keyword">const</span> <span class="keywordtype">char</span> *target_wcpath,
<a name="l03217"></a>03217                   <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03218"></a>03218                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03219"></a>03219                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l03220"></a>03220                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> record_only,
<a name="l03221"></a>03221                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l03222"></a>03222                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_mixed_rev,
<a name="l03223"></a>03223                   <span class="keyword">const</span> apr_array_header_t *merge_options,
<a name="l03224"></a>03224                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03225"></a>03225                   apr_pool_t *pool);
<a name="l03226"></a>03226 <span class="comment"></span>
<a name="l03227"></a>03227 <span class="comment">/**</span>
<a name="l03228"></a>03228 <span class="comment"> * Similar to svn_client_merge4(), but with @a allow_mixed_rev set to</span>
<a name="l03229"></a>03229 <span class="comment"> * @c TRUE.</span>
<a name="l03230"></a>03230 <span class="comment"> *</span>
<a name="l03231"></a>03231 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03232"></a>03232 <span class="comment"> *</span>
<a name="l03233"></a>03233 <span class="comment"> * @since New in 1.5.</span>
<a name="l03234"></a>03234 <span class="comment"> */</span>
<a name="l03235"></a>03235 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03236"></a>03236 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03237"></a>03237 <a class="code" href="group__Merge.html#ga5acd0a13c8c9d608ff1fd5df1f2e30f1" title="Similar to svn_client_merge4(), but with allow_mixed_rev set to TRUE.">svn_client_merge3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *source1,
<a name="l03238"></a>03238                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l03239"></a>03239                   <span class="keyword">const</span> <span class="keywordtype">char</span> *source2,
<a name="l03240"></a>03240                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l03241"></a>03241                   <span class="keyword">const</span> <span class="keywordtype">char</span> *target_wcpath,
<a name="l03242"></a>03242                   <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03243"></a>03243                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03244"></a>03244                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l03245"></a>03245                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> record_only,
<a name="l03246"></a>03246                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l03247"></a>03247                   <span class="keyword">const</span> apr_array_header_t *merge_options,
<a name="l03248"></a>03248                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03249"></a>03249                   apr_pool_t *pool);
<a name="l03250"></a>03250 <span class="comment"></span>
<a name="l03251"></a>03251 <span class="comment">/**</span>
<a name="l03252"></a>03252 <span class="comment"> * Similar to svn_client_merge3(), but with @a record_only set to @c</span>
<a name="l03253"></a>03253 <span class="comment"> * FALSE, and @a depth set according to @a recurse: if @a recurse is</span>
<a name="l03254"></a>03254 <span class="comment"> * TRUE, set @a depth to #svn_depth_infinity, if @a recurse is</span>
<a name="l03255"></a>03255 <span class="comment"> * FALSE, set @a depth to #svn_depth_files.</span>
<a name="l03256"></a>03256 <span class="comment"> *</span>
<a name="l03257"></a>03257 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l03258"></a>03258 <span class="comment"> *</span>
<a name="l03259"></a>03259 <span class="comment"> * @since New in 1.4.</span>
<a name="l03260"></a>03260 <span class="comment"> */</span>
<a name="l03261"></a>03261 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03262"></a>03262 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03263"></a>03263 <a class="code" href="group__Merge.html#gac4e8f005eb32546d489f412a21361c9a" title="Similar to svn_client_merge3(), but with record_only set to FALSE, and depth set according to recurse...">svn_client_merge2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *source1,
<a name="l03264"></a>03264                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l03265"></a>03265                   <span class="keyword">const</span> <span class="keywordtype">char</span> *source2,
<a name="l03266"></a>03266                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l03267"></a>03267                   <span class="keyword">const</span> <span class="keywordtype">char</span> *target_wcpath,
<a name="l03268"></a>03268                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l03269"></a>03269                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03270"></a>03270                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l03271"></a>03271                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l03272"></a>03272                   <span class="keyword">const</span> apr_array_header_t *merge_options,
<a name="l03273"></a>03273                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03274"></a>03274                   apr_pool_t *pool);
<a name="l03275"></a>03275 
<a name="l03276"></a>03276 <span class="comment"></span>
<a name="l03277"></a>03277 <span class="comment">/**</span>
<a name="l03278"></a>03278 <span class="comment"> * Similar to svn_client_merge2(), but with @a merge_options set to NULL.</span>
<a name="l03279"></a>03279 <span class="comment"> *</span>
<a name="l03280"></a>03280 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.3 API.</span>
<a name="l03281"></a>03281 <span class="comment"> */</span>
<a name="l03282"></a>03282 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03283"></a>03283 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03284"></a>03284 <a class="code" href="group__Merge.html#gabe2333311fbf2f4a76dcb5d043d13a1f" title="Similar to svn_client_merge2(), but with merge_options set to NULL.">svn_client_merge</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *source1,
<a name="l03285"></a>03285                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l03286"></a>03286                  <span class="keyword">const</span> <span class="keywordtype">char</span> *source2,
<a name="l03287"></a>03287                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l03288"></a>03288                  <span class="keyword">const</span> <span class="keywordtype">char</span> *target_wcpath,
<a name="l03289"></a>03289                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l03290"></a>03290                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03291"></a>03291                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l03292"></a>03292                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l03293"></a>03293                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03294"></a>03294                  apr_pool_t *pool);
<a name="l03295"></a>03295 
<a name="l03296"></a>03296 
<a name="l03297"></a>03297 <span class="comment"></span>
<a name="l03298"></a>03298 <span class="comment">/**</span>
<a name="l03299"></a>03299 <span class="comment"> * Perform a reintegration merge of @a source at @a peg_revision</span>
<a name="l03300"></a>03300 <span class="comment"> * into @a target_wcpath.</span>
<a name="l03301"></a>03301 <span class="comment"> * @a target_wcpath must be a single-revision, #svn_depth_infinity,</span>
<a name="l03302"></a>03302 <span class="comment"> * pristine, unswitched working copy -- in other words, it must</span>
<a name="l03303"></a>03303 <span class="comment"> * reflect a single revision tree, the &quot;target&quot;.  The mergeinfo on @a</span>
<a name="l03304"></a>03304 <span class="comment"> * source must reflect that all of the target has been merged into it.</span>
<a name="l03305"></a>03305 <span class="comment"> * Then this behaves like a merge with svn_client_merge3() from the</span>
<a name="l03306"></a>03306 <span class="comment"> * target&#39;s URL to the source.</span>
<a name="l03307"></a>03307 <span class="comment"> *</span>
<a name="l03308"></a>03308 <span class="comment"> * All other options are handled identically to svn_client_merge3().</span>
<a name="l03309"></a>03309 <span class="comment"> * The depth of the merge is always #svn_depth_infinity.</span>
<a name="l03310"></a>03310 <span class="comment"> *</span>
<a name="l03311"></a>03311 <span class="comment"> * @since New in 1.5.</span>
<a name="l03312"></a>03312 <span class="comment"> */</span>
<a name="l03313"></a>03313 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03314"></a>03314 <a class="code" href="group__Merge.html#gac8791af39c490be7eff250929a68fb41" title="Perform a reintegration merge of source at peg_revision into target_wcpath.">svn_client_merge_reintegrate</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *source,
<a name="l03315"></a>03315                              <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03316"></a>03316                              <span class="keyword">const</span> <span class="keywordtype">char</span> *target_wcpath,
<a name="l03317"></a>03317                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l03318"></a>03318                              <span class="keyword">const</span> apr_array_header_t *merge_options,
<a name="l03319"></a>03319                              <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03320"></a>03320                              apr_pool_t *pool);
<a name="l03321"></a>03321 <span class="comment"></span>
<a name="l03322"></a>03322 <span class="comment">/**</span>
<a name="l03323"></a>03323 <span class="comment"> * Merge the changes between the filesystem object @a source in peg</span>
<a name="l03324"></a>03324 <span class="comment"> * revision @a peg_revision, as it changed between the ranges described</span>
<a name="l03325"></a>03325 <span class="comment"> * in @a ranges_to_merge.</span>
<a name="l03326"></a>03326 <span class="comment"> *</span>
<a name="l03327"></a>03327 <span class="comment"> * @a ranges_to_merge is an array of &lt;tt&gt;svn_opt_revision_range_t</span>
<a name="l03328"></a>03328 <span class="comment"> * *&lt;/tt&gt; ranges.  These ranges may describe additive and/or</span>
<a name="l03329"></a>03329 <span class="comment"> * subtractive merge ranges, they may overlap fully or partially,</span>
<a name="l03330"></a>03330 <span class="comment"> * and/or they may partially or fully negate each other.  This</span>
<a name="l03331"></a>03331 <span class="comment"> * rangelist is not required to be sorted.  If any revision in the</span>
<a name="l03332"></a>03332 <span class="comment"> * list of provided ranges has an `unspecified&#39; or unrecognized</span>
<a name="l03333"></a>03333 <span class="comment"> * `kind&#39;, return #SVN_ERR_CLIENT_BAD_REVISION.</span>
<a name="l03334"></a>03334 <span class="comment"> *</span>
<a name="l03335"></a>03335 <span class="comment"> * All other options are handled identically to svn_client_merge4().</span>
<a name="l03336"></a>03336 <span class="comment"> *</span>
<a name="l03337"></a>03337 <span class="comment"> * @since New in 1.7.</span>
<a name="l03338"></a>03338 <span class="comment"> */</span>
<a name="l03339"></a>03339 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03340"></a>03340 <a class="code" href="group__Merge.html#ga9f9185aaade1a1c029b378b9bd6c12f9" title="Merge the changes between the filesystem object source in peg revision peg_revision, as it changed between the ranges described in ranges_to_merge.">svn_client_merge_peg4</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *source,
<a name="l03341"></a>03341                       <span class="keyword">const</span> apr_array_header_t *ranges_to_merge,
<a name="l03342"></a>03342                       <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03343"></a>03343                       <span class="keyword">const</span> <span class="keywordtype">char</span> *target_wcpath,
<a name="l03344"></a>03344                       <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03345"></a>03345                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03346"></a>03346                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l03347"></a>03347                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> record_only,
<a name="l03348"></a>03348                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l03349"></a>03349                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_mixed_rev,
<a name="l03350"></a>03350                       <span class="keyword">const</span> apr_array_header_t *merge_options,
<a name="l03351"></a>03351                       <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03352"></a>03352                       apr_pool_t *pool);
<a name="l03353"></a>03353 <span class="comment"></span>
<a name="l03354"></a>03354 <span class="comment">/**</span>
<a name="l03355"></a>03355 <span class="comment"> * Similar to svn_client_merge_peg4(), but with @a allow_mixed_rev set to</span>
<a name="l03356"></a>03356 <span class="comment"> * @c TRUE.</span>
<a name="l03357"></a>03357 <span class="comment"> *</span>
<a name="l03358"></a>03358 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03359"></a>03359 <span class="comment"> *</span>
<a name="l03360"></a>03360 <span class="comment"> * @since New in 1.5.</span>
<a name="l03361"></a>03361 <span class="comment"> */</span>
<a name="l03362"></a>03362 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03363"></a>03363 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03364"></a>03364 <a class="code" href="group__Merge.html#ga12005bd5f73bafa3ee56349ec7cf3716" title="Similar to svn_client_merge_peg4(), but with allow_mixed_rev set to TRUE.">svn_client_merge_peg3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *source,
<a name="l03365"></a>03365                       <span class="keyword">const</span> apr_array_header_t *ranges_to_merge,
<a name="l03366"></a>03366                       <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03367"></a>03367                       <span class="keyword">const</span> <span class="keywordtype">char</span> *target_wcpath,
<a name="l03368"></a>03368                       <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03369"></a>03369                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03370"></a>03370                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l03371"></a>03371                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> record_only,
<a name="l03372"></a>03372                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l03373"></a>03373                       <span class="keyword">const</span> apr_array_header_t *merge_options,
<a name="l03374"></a>03374                       <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03375"></a>03375                       apr_pool_t *pool);
<a name="l03376"></a>03376 <span class="comment"></span>
<a name="l03377"></a>03377 <span class="comment">/**</span>
<a name="l03378"></a>03378 <span class="comment"> * Similar to svn_client_merge_peg3(), but with @a record_only set to</span>
<a name="l03379"></a>03379 <span class="comment"> * @c FALSE, and @a depth set according to @a recurse: if @a recurse</span>
<a name="l03380"></a>03380 <span class="comment"> * is TRUE, set @a depth to #svn_depth_infinity, if @a recurse is</span>
<a name="l03381"></a>03381 <span class="comment"> * FALSE, set @a depth to #svn_depth_files.</span>
<a name="l03382"></a>03382 <span class="comment"> *</span>
<a name="l03383"></a>03383 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.4 API.</span>
<a name="l03384"></a>03384 <span class="comment"> *</span>
<a name="l03385"></a>03385 <span class="comment"> * @since New in 1.4.</span>
<a name="l03386"></a>03386 <span class="comment"> */</span>
<a name="l03387"></a>03387 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03388"></a>03388 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03389"></a>03389 <a class="code" href="group__Merge.html#gadbb47dae0b3e6e0ae27aad5509840f04" title="Similar to svn_client_merge_peg3(), but with record_only set to FALSE, and depth set according to rec...">svn_client_merge_peg2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *source,
<a name="l03390"></a>03390                       <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l03391"></a>03391                       <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l03392"></a>03392                       <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03393"></a>03393                       <span class="keyword">const</span> <span class="keywordtype">char</span> *target_wcpath,
<a name="l03394"></a>03394                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l03395"></a>03395                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03396"></a>03396                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l03397"></a>03397                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l03398"></a>03398                       <span class="keyword">const</span> apr_array_header_t *merge_options,
<a name="l03399"></a>03399                       <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03400"></a>03400                       apr_pool_t *pool);
<a name="l03401"></a>03401 <span class="comment"></span>
<a name="l03402"></a>03402 <span class="comment">/**</span>
<a name="l03403"></a>03403 <span class="comment"> * Similar to svn_client_merge_peg2(), but with @a merge_options set to</span>
<a name="l03404"></a>03404 <span class="comment"> * NULL.</span>
<a name="l03405"></a>03405 <span class="comment"> *</span>
<a name="l03406"></a>03406 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.3 API.</span>
<a name="l03407"></a>03407 <span class="comment"> *</span>
<a name="l03408"></a>03408 <span class="comment"> * @since New in 1.1.</span>
<a name="l03409"></a>03409 <span class="comment"> */</span>
<a name="l03410"></a>03410 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03411"></a>03411 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03412"></a>03412 <a class="code" href="group__Merge.html#gab3b7ffa4842894088a311d69bf4f39b8" title="Similar to svn_client_merge_peg2(), but with merge_options set to NULL.">svn_client_merge_peg</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *source,
<a name="l03413"></a>03413                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision1,
<a name="l03414"></a>03414                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision2,
<a name="l03415"></a>03415                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03416"></a>03416                      <span class="keyword">const</span> <span class="keywordtype">char</span> *target_wcpath,
<a name="l03417"></a>03417                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l03418"></a>03418                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l03419"></a>03419                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l03420"></a>03420                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l03421"></a>03421                      <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03422"></a>03422                      apr_pool_t *pool);
<a name="l03423"></a>03423 
<a name="l03424"></a>03424 <span class="comment"></span>
<a name="l03425"></a>03425 <span class="comment">/** Set @a suggestions to an ordered array of @c const char *</span>
<a name="l03426"></a>03426 <span class="comment"> * potential merge sources (expressed as full repository URLs) for @a</span>
<a name="l03427"></a>03427 <span class="comment"> * path_or_url at @a peg_revision.  @a path_or_url is a working copy</span>
<a name="l03428"></a>03428 <span class="comment"> * path or repository URL.  @a ctx is a context used for</span>
<a name="l03429"></a>03429 <span class="comment"> * authentication in the repository case.  Use @a pool for all</span>
<a name="l03430"></a>03430 <span class="comment"> * allocations.</span>
<a name="l03431"></a>03431 <span class="comment"> *</span>
<a name="l03432"></a>03432 <span class="comment"> * @since New in 1.5.</span>
<a name="l03433"></a>03433 <span class="comment"> */</span>
<a name="l03434"></a>03434 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03435"></a>03435 <a class="code" href="group__Merge.html#ga05713f5c424fd4a2f20a09447075b048" title="Set suggestions to an ordered array of const char * potential merge sources (expressed as full reposi...">svn_client_suggest_merge_sources</a>(apr_array_header_t **suggestions,
<a name="l03436"></a>03436                                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l03437"></a>03437                                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03438"></a>03438                                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03439"></a>03439                                  apr_pool_t *pool);
<a name="l03440"></a>03440 
<a name="l03441"></a>03441 <span class="comment"></span>
<a name="l03442"></a>03442 <span class="comment">/**</span>
<a name="l03443"></a>03443 <span class="comment"> * Set @a *mergeinfo to a hash mapping &lt;tt&gt;const char *&lt;/tt&gt; merge</span>
<a name="l03444"></a>03444 <span class="comment"> * source URLs to &lt;tt&gt;apr_array_header_t *&lt;/tt&gt; rangelists (arrays of</span>
<a name="l03445"></a>03445 <span class="comment"> * &lt;tt&gt;svn_merge_range_t *&lt;/tt&gt; ranges) describing the ranges which</span>
<a name="l03446"></a>03446 <span class="comment"> * have been merged into @a path_or_url as of @a peg_revision, per</span>
<a name="l03447"></a>03447 <span class="comment"> * @a path_or_url&#39;s explicit mergeinfo or inherited mergeinfo if no</span>
<a name="l03448"></a>03448 <span class="comment"> * explicit mergeinfo if found.  If no explicit or inherited mergeinfo</span>
<a name="l03449"></a>03449 <span class="comment"> * is found, then set @a *mergeinfo to NULL.</span>
<a name="l03450"></a>03450 <span class="comment"> *</span>
<a name="l03451"></a>03451 <span class="comment"> * Use @a pool for all necessary allocations.</span>
<a name="l03452"></a>03452 <span class="comment"> *</span>
<a name="l03453"></a>03453 <span class="comment"> * If the server doesn&#39;t support retrieval of mergeinfo (which will</span>
<a name="l03454"></a>03454 <span class="comment"> * never happen for file:// URLs), return an</span>
<a name="l03455"></a>03455 <span class="comment"> * #SVN_ERR_UNSUPPORTED_FEATURE error.</span>
<a name="l03456"></a>03456 <span class="comment"> *</span>
<a name="l03457"></a>03457 <span class="comment"> * @note Unlike most APIs which deal with mergeinfo, this one returns</span>
<a name="l03458"></a>03458 <span class="comment"> * data where the keys of the hash are absolute repository URLs rather</span>
<a name="l03459"></a>03459 <span class="comment"> * than repository filesystem paths.</span>
<a name="l03460"></a>03460 <span class="comment"> *</span>
<a name="l03461"></a>03461 <span class="comment"> * @since New in 1.5.</span>
<a name="l03462"></a>03462 <span class="comment"> */</span>
<a name="l03463"></a>03463 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03464"></a>03464 <a class="code" href="group__Merge.html#gac53de23a6617aeba3a30844171fa3439" title="Set *mergeinfo to a hash mapping const char * merge source URLs to apr_array_header_t * rangelists (a...">svn_client_mergeinfo_get_merged</a>(apr_hash_t **mergeinfo,
<a name="l03465"></a>03465                                 <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l03466"></a>03466                                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03467"></a>03467                                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03468"></a>03468                                 apr_pool_t *pool);
<a name="l03469"></a>03469 
<a name="l03470"></a>03470 <span class="comment"></span>
<a name="l03471"></a>03471 <span class="comment">/**</span>
<a name="l03472"></a>03472 <span class="comment"> * If @a finding_merged is TRUE, then drive log entry callbacks</span>
<a name="l03473"></a>03473 <span class="comment"> * @a receiver / @a receiver_baton with the revisions merged from</span>
<a name="l03474"></a>03474 <span class="comment"> * @a merge_source_path_or_url (as of @a src_peg_revision) into</span>
<a name="l03475"></a>03475 <span class="comment"> * @a path_or_url (as of @a peg_revision).  If @a finding_merged is FALSE</span>
<a name="l03476"></a>03476 <span class="comment"> * then find the revisions eligible for merging.</span>
<a name="l03477"></a>03477 <span class="comment"> *</span>
<a name="l03478"></a>03478 <span class="comment"> * If @a depth is #svn_depth_empty consider only the explicit or</span>
<a name="l03479"></a>03479 <span class="comment"> * inherited mergeinfo on @a path_or_url when calculating merged revisions</span>
<a name="l03480"></a>03480 <span class="comment"> * from @a merge_source_path_or_url.  If @a depth is #svn_depth_infinity</span>
<a name="l03481"></a>03481 <span class="comment"> * then also consider the explicit subtree mergeinfo under @a path_or_url.</span>
<a name="l03482"></a>03482 <span class="comment"> * If a depth other than #svn_depth_empty or #svn_depth_infinity is</span>
<a name="l03483"></a>03483 <span class="comment"> * requested then return a #SVN_ERR_UNSUPPORTED_FEATURE error.</span>
<a name="l03484"></a>03484 <span class="comment"> *</span>
<a name="l03485"></a>03485 <span class="comment"> * @a discover_changed_paths and @a revprops are the same as for</span>
<a name="l03486"></a>03486 <span class="comment"> * svn_client_log5().  Use @a scratch_pool for all temporary allocations.</span>
<a name="l03487"></a>03487 <span class="comment"> *</span>
<a name="l03488"></a>03488 <span class="comment"> * @a ctx is a context used for authentication.</span>
<a name="l03489"></a>03489 <span class="comment"> *</span>
<a name="l03490"></a>03490 <span class="comment"> * If the server doesn&#39;t support retrieval of mergeinfo, return an</span>
<a name="l03491"></a>03491 <span class="comment"> * #SVN_ERR_UNSUPPORTED_FEATURE error.</span>
<a name="l03492"></a>03492 <span class="comment"> *</span>
<a name="l03493"></a>03493 <span class="comment"> * @since New in 1.7.</span>
<a name="l03494"></a>03494 <span class="comment"> */</span>
<a name="l03495"></a>03495 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03496"></a>03496 <a class="code" href="group__Merge.html#ga32a42723031754fd41d88688bea2f38b" title="If finding_merged is TRUE, then drive log entry callbacks receiver / receiver_baton with the revision...">svn_client_mergeinfo_log</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> finding_merged,
<a name="l03497"></a>03497                          <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l03498"></a>03498                          <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03499"></a>03499                          <span class="keyword">const</span> <span class="keywordtype">char</span> *merge_source_path_or_url,
<a name="l03500"></a>03500                          <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *src_peg_revision,
<a name="l03501"></a>03501                          <a class="code" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb" title="The callback invoked by log message loopers, such as svn_ra_plugin_t.get_log() and svn_repos_get_logs...">svn_log_entry_receiver_t</a> receiver,
<a name="l03502"></a>03502                          <span class="keywordtype">void</span> *receiver_baton,
<a name="l03503"></a>03503                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> discover_changed_paths,
<a name="l03504"></a>03504                          <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03505"></a>03505                          <span class="keyword">const</span> apr_array_header_t *revprops,
<a name="l03506"></a>03506                          <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03507"></a>03507                          apr_pool_t *scratch_pool);
<a name="l03508"></a>03508 <span class="comment"></span>
<a name="l03509"></a>03509 <span class="comment">/**</span>
<a name="l03510"></a>03510 <span class="comment"> * Similar to svn_client_mergeinfo_log(), but finds only merged revisions</span>
<a name="l03511"></a>03511 <span class="comment"> * and always operates at @a depth #svn_depth_empty.</span>
<a name="l03512"></a>03512 <span class="comment"> *</span>
<a name="l03513"></a>03513 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API. Use</span>
<a name="l03514"></a>03514 <span class="comment"> * svn_client_mergeinfo_log() instead.</span>
<a name="l03515"></a>03515 <span class="comment"> * @since New in 1.5.</span>
<a name="l03516"></a>03516 <span class="comment"> */</span>
<a name="l03517"></a>03517 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03518"></a>03518 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03519"></a>03519 <a class="code" href="group__Merge.html#ga5490a793f43eaaa306d645d5b1b3bdaa" title="Similar to svn_client_mergeinfo_log(), but finds only merged revisions and always operates at depth s...">svn_client_mergeinfo_log_merged</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l03520"></a>03520                                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03521"></a>03521                                 <span class="keyword">const</span> <span class="keywordtype">char</span> *merge_source_path_or_url,
<a name="l03522"></a>03522                                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *src_peg_revision,
<a name="l03523"></a>03523                                 <a class="code" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb" title="The callback invoked by log message loopers, such as svn_ra_plugin_t.get_log() and svn_repos_get_logs...">svn_log_entry_receiver_t</a> receiver,
<a name="l03524"></a>03524                                 <span class="keywordtype">void</span> *receiver_baton,
<a name="l03525"></a>03525                                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> discover_changed_paths,
<a name="l03526"></a>03526                                 <span class="keyword">const</span> apr_array_header_t *revprops,
<a name="l03527"></a>03527                                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03528"></a>03528                                 apr_pool_t *pool);
<a name="l03529"></a>03529 <span class="comment"></span>
<a name="l03530"></a>03530 <span class="comment">/**</span>
<a name="l03531"></a>03531 <span class="comment"> * Similar to svn_client_mergeinfo_log(), but finds only eligible revisions</span>
<a name="l03532"></a>03532 <span class="comment"> * and always operates at @a depth #svn_depth_empty.</span>
<a name="l03533"></a>03533 <span class="comment"> *</span>
<a name="l03534"></a>03534 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API. Use</span>
<a name="l03535"></a>03535 <span class="comment"> * svn_client_mergeinfo_log() instead.</span>
<a name="l03536"></a>03536 <span class="comment"> * @since New in 1.5.</span>
<a name="l03537"></a>03537 <span class="comment"> */</span>
<a name="l03538"></a>03538 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03539"></a>03539 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03540"></a>03540 <a class="code" href="group__Merge.html#ga1ebab9ce5d36348a5765b594bdaa73cd" title="Similar to svn_client_mergeinfo_log(), but finds only eligible revisions and always operates at depth...">svn_client_mergeinfo_log_eligible</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l03541"></a>03541                                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l03542"></a>03542                                   <span class="keyword">const</span> <span class="keywordtype">char</span> *merge_source_path_or_url,
<a name="l03543"></a>03543                                   <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *src_peg_revision,
<a name="l03544"></a>03544                                   <a class="code" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb" title="The callback invoked by log message loopers, such as svn_ra_plugin_t.get_log() and svn_repos_get_logs...">svn_log_entry_receiver_t</a> receiver,
<a name="l03545"></a>03545                                   <span class="keywordtype">void</span> *receiver_baton,
<a name="l03546"></a>03546                                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> discover_changed_paths,
<a name="l03547"></a>03547                                   <span class="keyword">const</span> apr_array_header_t *revprops,
<a name="l03548"></a>03548                                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03549"></a>03549                                   apr_pool_t *pool);
<a name="l03550"></a>03550 <span class="comment"></span>
<a name="l03551"></a>03551 <span class="comment">/** @} */</span>
<a name="l03552"></a>03552 <span class="comment"></span>
<a name="l03553"></a>03553 <span class="comment">/**</span>
<a name="l03554"></a>03554 <span class="comment"> * @defgroup Cleanup Cleanup an abnormally terminated working copy.</span>
<a name="l03555"></a>03555 <span class="comment"> *</span>
<a name="l03556"></a>03556 <span class="comment"> * @{</span>
<a name="l03557"></a>03557 <span class="comment"> */</span>
<a name="l03558"></a>03558 <span class="comment"></span>
<a name="l03559"></a>03559 <span class="comment">/** Recursively cleanup a working copy directory @a dir, finishing any</span>
<a name="l03560"></a>03560 <span class="comment"> * incomplete operations, removing lockfiles, etc.</span>
<a name="l03561"></a>03561 <span class="comment"> *</span>
<a name="l03562"></a>03562 <span class="comment"> * If @a ctx-&gt;cancel_func is non-NULL, invoke it with @a</span>
<a name="l03563"></a>03563 <span class="comment"> * ctx-&gt;cancel_baton at various points during the operation.  If it</span>
<a name="l03564"></a>03564 <span class="comment"> * returns an error (typically #SVN_ERR_CANCELLED), return that error</span>
<a name="l03565"></a>03565 <span class="comment"> * immediately.</span>
<a name="l03566"></a>03566 <span class="comment"> *</span>
<a name="l03567"></a>03567 <span class="comment"> * Use @a scratch_pool for any temporary allocations.</span>
<a name="l03568"></a>03568 <span class="comment"> */</span>
<a name="l03569"></a>03569 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03570"></a>03570 <a class="code" href="group__Cleanup.html#ga419c90520839a549fc907266a1f5eaf7" title="Recursively cleanup a working copy directory dir, finishing any incomplete operations, removing lockfiles, etc.">svn_client_cleanup</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *dir,
<a name="l03571"></a>03571                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03572"></a>03572                    apr_pool_t *scratch_pool);
<a name="l03573"></a>03573 
<a name="l03574"></a>03574 <span class="comment"></span>
<a name="l03575"></a>03575 <span class="comment">/** @} */</span>
<a name="l03576"></a>03576 <span class="comment"></span>
<a name="l03577"></a>03577 <span class="comment">/**</span>
<a name="l03578"></a>03578 <span class="comment"> * @defgroup Upgrade Upgrade a working copy.</span>
<a name="l03579"></a>03579 <span class="comment"> *</span>
<a name="l03580"></a>03580 <span class="comment"> * @{</span>
<a name="l03581"></a>03581 <span class="comment"> */</span>
<a name="l03582"></a>03582 <span class="comment"></span>
<a name="l03583"></a>03583 <span class="comment">/** Recursively upgrade a working copy from any older format to the current</span>
<a name="l03584"></a>03584 <span class="comment"> * WC metadata storage format.  @a wcroot_dir is the path to the WC root.</span>
<a name="l03585"></a>03585 <span class="comment"> *</span>
<a name="l03586"></a>03586 <span class="comment"> * Use @a scratch_pool for any temporary allocations.</span>
<a name="l03587"></a>03587 <span class="comment"> *</span>
<a name="l03588"></a>03588 <span class="comment"> * @since New in 1.7.</span>
<a name="l03589"></a>03589 <span class="comment"> */</span>
<a name="l03590"></a>03590 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03591"></a>03591 <a class="code" href="group__Upgrade.html#gafe43da9653c8414c98570cdc0e8bec88" title="Recursively upgrade a working copy from any older format to the current WC metadata storage format...">svn_client_upgrade</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *wcroot_dir,
<a name="l03592"></a>03592                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03593"></a>03593                    apr_pool_t *scratch_pool);
<a name="l03594"></a>03594 
<a name="l03595"></a>03595 <span class="comment"></span>
<a name="l03596"></a>03596 <span class="comment">/** @} */</span>
<a name="l03597"></a>03597 <span class="comment"></span>
<a name="l03598"></a>03598 <span class="comment">/**</span>
<a name="l03599"></a>03599 <span class="comment"> * @defgroup Relocate Switch a working copy to a different repository.</span>
<a name="l03600"></a>03600 <span class="comment"> *</span>
<a name="l03601"></a>03601 <span class="comment"> * @{</span>
<a name="l03602"></a>03602 <span class="comment"> */</span>
<a name="l03603"></a>03603 <span class="comment"></span>
<a name="l03604"></a>03604 <span class="comment">/**</span>
<a name="l03605"></a>03605 <span class="comment"> * Recursively modify a working copy rooted at @a wcroot_dir, changing</span>
<a name="l03606"></a>03606 <span class="comment"> * any repository URLs that begin with @a from_prefix to begin with @a</span>
<a name="l03607"></a>03607 <span class="comment"> * to_prefix instead.</span>
<a name="l03608"></a>03608 <span class="comment"> *</span>
<a name="l03609"></a>03609 <span class="comment"> * @param wcroot_dir Working copy root directory</span>
<a name="l03610"></a>03610 <span class="comment"> * @param from_prefix Original URL</span>
<a name="l03611"></a>03611 <span class="comment"> * @param to_prefix New URL</span>
<a name="l03612"></a>03612 <span class="comment"> * @param ignore_externals If not set, recurse into external working</span>
<a name="l03613"></a>03613 <span class="comment"> *        copies after relocating the primary working copy</span>
<a name="l03614"></a>03614 <span class="comment"> * @param ctx svn_client_ctx_t</span>
<a name="l03615"></a>03615 <span class="comment"> * @param pool The pool from which to perform memory allocations</span>
<a name="l03616"></a>03616 <span class="comment"> *</span>
<a name="l03617"></a>03617 <span class="comment"> * @since New in 1.7</span>
<a name="l03618"></a>03618 <span class="comment"> */</span>
<a name="l03619"></a>03619 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03620"></a>03620 <a class="code" href="group__Relocate.html#ga886706d3ec8b438079adee61e53fe1b8" title="Recursively modify a working copy rooted at wcroot_dir, changing any repository URLs that begin with ...">svn_client_relocate2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *wcroot_dir,
<a name="l03621"></a>03621                      <span class="keyword">const</span> <span class="keywordtype">char</span> *from_prefix,
<a name="l03622"></a>03622                      <span class="keyword">const</span> <span class="keywordtype">char</span> *to_prefix,
<a name="l03623"></a>03623                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l03624"></a>03624                      <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03625"></a>03625                      apr_pool_t *pool);
<a name="l03626"></a>03626 <span class="comment"></span>
<a name="l03627"></a>03627 <span class="comment">/**</span>
<a name="l03628"></a>03628 <span class="comment"> * Similar to svn_client_relocate2(), but with @a ignore_externals</span>
<a name="l03629"></a>03629 <span class="comment"> * always TRUE.</span>
<a name="l03630"></a>03630 <span class="comment"> *</span>
<a name="l03631"></a>03631 <span class="comment"> * @note As of the 1.7 API, @a dir is required to be a working copy</span>
<a name="l03632"></a>03632 <span class="comment"> * root directory, and @a recurse is required to be TRUE.</span>
<a name="l03633"></a>03633 <span class="comment"> *</span>
<a name="l03634"></a>03634 <span class="comment"> * @deprecated Provided for limited backwards compatibility with the</span>
<a name="l03635"></a>03635 <span class="comment"> * 1.6 API.</span>
<a name="l03636"></a>03636 <span class="comment"> */</span>
<a name="l03637"></a>03637 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03638"></a>03638 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03639"></a>03639 <a class="code" href="group__Relocate.html#ga3ec4319683b7352d0caef2e7ea19177f" title="Similar to svn_client_relocate2(), but with ignore_externals always TRUE.">svn_client_relocate</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *dir,
<a name="l03640"></a>03640                     <span class="keyword">const</span> <span class="keywordtype">char</span> *from_prefix,
<a name="l03641"></a>03641                     <span class="keyword">const</span> <span class="keywordtype">char</span> *to_prefix,
<a name="l03642"></a>03642                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l03643"></a>03643                     <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03644"></a>03644                     apr_pool_t *pool);
<a name="l03645"></a>03645 <span class="comment"></span>
<a name="l03646"></a>03646 <span class="comment">/** @} */</span>
<a name="l03647"></a>03647 <span class="comment"></span>
<a name="l03648"></a>03648 <span class="comment">/**</span>
<a name="l03649"></a>03649 <span class="comment"> * @defgroup Revert Remove local changes in a repository.</span>
<a name="l03650"></a>03650 <span class="comment"> *</span>
<a name="l03651"></a>03651 <span class="comment"> * @{</span>
<a name="l03652"></a>03652 <span class="comment"> */</span>
<a name="l03653"></a>03653 <span class="comment"></span>
<a name="l03654"></a>03654 <span class="comment">/**</span>
<a name="l03655"></a>03655 <span class="comment"> * Restore the pristine version of a working copy @a paths,</span>
<a name="l03656"></a>03656 <span class="comment"> * effectively undoing any local mods.  For each path in @a paths,</span>
<a name="l03657"></a>03657 <span class="comment"> * revert it if it is a file.  Else if it is a directory, revert</span>
<a name="l03658"></a>03658 <span class="comment"> * according to @a depth:</span>
<a name="l03659"></a>03659 <span class="comment"> *</span>
<a name="l03660"></a>03660 <span class="comment"> * If @a depth is #svn_depth_empty, revert just the properties on</span>
<a name="l03661"></a>03661 <span class="comment"> * the directory; else if #svn_depth_files, revert the properties</span>
<a name="l03662"></a>03662 <span class="comment"> * and any files immediately under the directory; else if</span>
<a name="l03663"></a>03663 <span class="comment"> * #svn_depth_immediates, revert all of the preceding plus</span>
<a name="l03664"></a>03664 <span class="comment"> * properties on immediate subdirectories; else if #svn_depth_infinity,</span>
<a name="l03665"></a>03665 <span class="comment"> * revert path and everything under it fully recursively.</span>
<a name="l03666"></a>03666 <span class="comment"> *</span>
<a name="l03667"></a>03667 <span class="comment"> * @a changelists is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l03668"></a>03668 <span class="comment"> * names, used as a restrictive filter on items reverted; that is,</span>
<a name="l03669"></a>03669 <span class="comment"> * don&#39;t revert any item unless it&#39;s a member of one of those</span>
<a name="l03670"></a>03670 <span class="comment"> * changelists.  If @a changelists is empty (or altogether @c NULL),</span>
<a name="l03671"></a>03671 <span class="comment"> * no changelist filtering occurs.</span>
<a name="l03672"></a>03672 <span class="comment"> *</span>
<a name="l03673"></a>03673 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, then for each item reverted,</span>
<a name="l03674"></a>03674 <span class="comment"> * call @a ctx-&gt;notify_func2 with @a ctx-&gt;notify_baton2 and the path of</span>
<a name="l03675"></a>03675 <span class="comment"> * the reverted item.</span>
<a name="l03676"></a>03676 <span class="comment"> *</span>
<a name="l03677"></a>03677 <span class="comment"> * If an item specified for reversion is not under version control,</span>
<a name="l03678"></a>03678 <span class="comment"> * then do not error, just invoke @a ctx-&gt;notify_func2 with @a</span>
<a name="l03679"></a>03679 <span class="comment"> * ctx-&gt;notify_baton2, using notification code #svn_wc_notify_skip.</span>
<a name="l03680"></a>03680 <span class="comment"> *</span>
<a name="l03681"></a>03681 <span class="comment"> * @since New in 1.5.</span>
<a name="l03682"></a>03682 <span class="comment"> */</span>
<a name="l03683"></a>03683 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03684"></a>03684 <a class="code" href="group__Revert.html#gacb44f78571979944837d1ad9967bec5e" title="Restore the pristine version of a working copy paths, effectively undoing any local mods...">svn_client_revert2</a>(<span class="keyword">const</span> apr_array_header_t *paths,
<a name="l03685"></a>03685                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03686"></a>03686                    <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l03687"></a>03687                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03688"></a>03688                    apr_pool_t *pool);
<a name="l03689"></a>03689 
<a name="l03690"></a>03690 <span class="comment"></span>
<a name="l03691"></a>03691 <span class="comment">/**</span>
<a name="l03692"></a>03692 <span class="comment"> * Similar to svn_client_revert2(), but with @a changelists passed as</span>
<a name="l03693"></a>03693 <span class="comment"> * @c NULL, and @a depth set according to @a recurse: if @a recurse is</span>
<a name="l03694"></a>03694 <span class="comment"> * TRUE, @a depth is #svn_depth_infinity, else if @a recurse is</span>
<a name="l03695"></a>03695 <span class="comment"> * FALSE, @a depth is #svn_depth_empty.</span>
<a name="l03696"></a>03696 <span class="comment"> *</span>
<a name="l03697"></a>03697 <span class="comment"> * @note Most APIs map @a recurse==FALSE to @a depth==svn_depth_files;</span>
<a name="l03698"></a>03698 <span class="comment"> * revert is deliberately different.</span>
<a name="l03699"></a>03699 <span class="comment"> *</span>
<a name="l03700"></a>03700 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.0 API.</span>
<a name="l03701"></a>03701 <span class="comment"> */</span>
<a name="l03702"></a>03702 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03703"></a>03703 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03704"></a>03704 <a class="code" href="group__Revert.html#ga3ce77a577680d7cb1e0ae386acbdbd41" title="Similar to svn_client_revert2(), but with changelists passed as NULL, and depth set according to recu...">svn_client_revert</a>(<span class="keyword">const</span> apr_array_header_t *paths,
<a name="l03705"></a>03705                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recursive,
<a name="l03706"></a>03706                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03707"></a>03707                   apr_pool_t *pool);
<a name="l03708"></a>03708 
<a name="l03709"></a>03709 <span class="comment"></span>
<a name="l03710"></a>03710 <span class="comment">/** @} */</span>
<a name="l03711"></a>03711 <span class="comment"></span>
<a name="l03712"></a>03712 <span class="comment">/**</span>
<a name="l03713"></a>03713 <span class="comment"> * @defgroup Resolved Mark conflicted paths as resolved.</span>
<a name="l03714"></a>03714 <span class="comment"> *</span>
<a name="l03715"></a>03715 <span class="comment"> * @{</span>
<a name="l03716"></a>03716 <span class="comment"> */</span>
<a name="l03717"></a>03717 <span class="comment"></span>
<a name="l03718"></a>03718 <span class="comment">/**</span>
<a name="l03719"></a>03719 <span class="comment"> * Similar to svn_client_resolve(), but without automatic conflict</span>
<a name="l03720"></a>03720 <span class="comment"> * resolution support.</span>
<a name="l03721"></a>03721 <span class="comment"> *</span>
<a name="l03722"></a>03722 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l03723"></a>03723 <span class="comment"> * Use svn_client_resolve() with @a conflict_choice == @c</span>
<a name="l03724"></a>03724 <span class="comment"> * svn_wc_conflict_choose_merged instead.</span>
<a name="l03725"></a>03725 <span class="comment"> */</span>
<a name="l03726"></a>03726 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03727"></a>03727 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03728"></a>03728 <a class="code" href="group__Resolved.html#ga2f31ebd03ac76dfe8472bce5dbb526a2" title="Similar to svn_client_resolve(), but without automatic conflict resolution support.">svn_client_resolved</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03729"></a>03729                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recursive,
<a name="l03730"></a>03730                     <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03731"></a>03731                     apr_pool_t *pool);
<a name="l03732"></a>03732 <span class="comment"></span>
<a name="l03733"></a>03733 <span class="comment">/** Perform automatic conflict resolution on a working copy @a path.</span>
<a name="l03734"></a>03734 <span class="comment"> *</span>
<a name="l03735"></a>03735 <span class="comment"> * If @a depth is #svn_depth_empty, act only on @a path; if</span>
<a name="l03736"></a>03736 <span class="comment"> * #svn_depth_files, resolve @a path and its conflicted file</span>
<a name="l03737"></a>03737 <span class="comment"> * children (if any); if #svn_depth_immediates, resolve @a path and</span>
<a name="l03738"></a>03738 <span class="comment"> * all its immediate conflicted children (both files and directories,</span>
<a name="l03739"></a>03739 <span class="comment"> * if any); if #svn_depth_infinity, resolve @a path and every</span>
<a name="l03740"></a>03740 <span class="comment"> * conflicted file or directory anywhere beneath it.</span>
<a name="l03741"></a>03741 <span class="comment"> * Note that this operation will try to lock the parent directory of</span>
<a name="l03742"></a>03742 <span class="comment"> * @a path in order to be able to resolve tree-conflicts on @a path.</span>
<a name="l03743"></a>03743 <span class="comment"> *</span>
<a name="l03744"></a>03744 <span class="comment"> * If @a conflict_choice is #svn_wc_conflict_choose_base, resolve the</span>
<a name="l03745"></a>03745 <span class="comment"> * conflict with the old file contents; if</span>
<a name="l03746"></a>03746 <span class="comment"> * #svn_wc_conflict_choose_mine_full, use the original working contents;</span>
<a name="l03747"></a>03747 <span class="comment"> * if #svn_wc_conflict_choose_theirs_full, the new contents; and if</span>
<a name="l03748"></a>03748 <span class="comment"> * #svn_wc_conflict_choose_merged, don&#39;t change the contents at all,</span>
<a name="l03749"></a>03749 <span class="comment"> * just remove the conflict status, which is the pre-1.5 behavior.</span>
<a name="l03750"></a>03750 <span class="comment"> *</span>
<a name="l03751"></a>03751 <span class="comment"> * #svn_wc_conflict_choose_theirs_conflict and</span>
<a name="l03752"></a>03752 <span class="comment"> * #svn_wc_conflict_choose_mine_conflict are not legal for binary</span>
<a name="l03753"></a>03753 <span class="comment"> * files or properties.</span>
<a name="l03754"></a>03754 <span class="comment"> *</span>
<a name="l03755"></a>03755 <span class="comment"> * If @a path is not in a state of conflict to begin with, do nothing.</span>
<a name="l03756"></a>03756 <span class="comment"> * If @a path&#39;s conflict state is removed and @a ctx-&gt;notify_func2 is non-NULL,</span>
<a name="l03757"></a>03757 <span class="comment"> * call @a ctx-&gt;notify_func2 with @a ctx-&gt;notify_baton2 and @a path.</span>
<a name="l03758"></a>03758 <span class="comment"> *</span>
<a name="l03759"></a>03759 <span class="comment"> * @since New in 1.5.</span>
<a name="l03760"></a>03760 <span class="comment"> */</span>
<a name="l03761"></a>03761 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03762"></a>03762 <a class="code" href="group__Resolved.html#ga0c42aefd75d40afb27e26a5e4b7216a9" title="Perform automatic conflict resolution on a working copy path.">svn_client_resolve</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03763"></a>03763                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03764"></a>03764                    <a class="code" href="group__svn__wc__conflict.html#ga040e000024033dd2721a4ddce5561431" title="The way in which the conflict callback chooses a course of action.">svn_wc_conflict_choice_t</a> conflict_choice,
<a name="l03765"></a>03765                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03766"></a>03766                    apr_pool_t *pool);
<a name="l03767"></a>03767 
<a name="l03768"></a>03768 <span class="comment"></span>
<a name="l03769"></a>03769 <span class="comment">/** @} */</span>
<a name="l03770"></a>03770 <span class="comment"></span>
<a name="l03771"></a>03771 <span class="comment">/**</span>
<a name="l03772"></a>03772 <span class="comment"> * @defgroup Copy Copy paths in the working copy and repository.</span>
<a name="l03773"></a>03773 <span class="comment"> *</span>
<a name="l03774"></a>03774 <span class="comment"> * @{</span>
<a name="l03775"></a>03775 <span class="comment"> */</span>
<a name="l03776"></a>03776 <span class="comment"></span>
<a name="l03777"></a>03777 <span class="comment">/**</span>
<a name="l03778"></a>03778 <span class="comment"> * A structure which describes the source of a copy operation--its path,</span>
<a name="l03779"></a>03779 <span class="comment"> * revision, and peg revision.</span>
<a name="l03780"></a>03780 <span class="comment"> *</span>
<a name="l03781"></a>03781 <span class="comment"> * @since New in 1.5.</span>
<a name="l03782"></a>03782 <span class="comment"> */</span>
<a name="l03783"></a><a class="code" href="structsvn__client__copy__source__t.html">03783</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__client__copy__source__t.html" title="A structure which describes the source of a copy operation--its path, revision, and peg revision...">svn_client_copy_source_t</a>
<a name="l03784"></a>03784 {<span class="comment"></span>
<a name="l03785"></a>03785 <span class="comment">    /** The source path or URL. */</span>
<a name="l03786"></a><a class="code" href="structsvn__client__copy__source__t.html#a7210baecfb23a23d212fe67d4d9a4c31">03786</a>     <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__copy__source__t.html#a7210baecfb23a23d212fe67d4d9a4c31" title="The source path or URL.">path</a>;
<a name="l03787"></a>03787 <span class="comment"></span>
<a name="l03788"></a>03788 <span class="comment">    /** The source operational revision. */</span>
<a name="l03789"></a><a class="code" href="structsvn__client__copy__source__t.html#ac6d54449868e8c906055407f43cda242">03789</a>     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *<a class="code" href="structsvn__client__copy__source__t.html#ac6d54449868e8c906055407f43cda242" title="The source operational revision.">revision</a>;
<a name="l03790"></a>03790 <span class="comment"></span>
<a name="l03791"></a>03791 <span class="comment">    /** The source peg revision. */</span>
<a name="l03792"></a><a class="code" href="structsvn__client__copy__source__t.html#ab0b8bfe5e056a9ae84a5806754195c08">03792</a>     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *<a class="code" href="structsvn__client__copy__source__t.html#ab0b8bfe5e056a9ae84a5806754195c08" title="The source peg revision.">peg_revision</a>;
<a name="l03793"></a>03793 } <a class="code" href="group__Copy.html#gaa067e41b102ad38370b08147c9ab3f58" title="A structure which describes the source of a copy operation--its path, revision, and peg revision...">svn_client_copy_source_t</a>;
<a name="l03794"></a>03794 <span class="comment"></span>
<a name="l03795"></a>03795 <span class="comment">/** Copy each @a src in @a sources to @a dst_path.</span>
<a name="l03796"></a>03796 <span class="comment"> *</span>
<a name="l03797"></a>03797 <span class="comment"> * If multiple @a sources are given, @a dst_path must be a directory,</span>
<a name="l03798"></a>03798 <span class="comment"> * and @a sources will be copied as children of @a dst_path.</span>
<a name="l03799"></a>03799 <span class="comment"> *</span>
<a name="l03800"></a>03800 <span class="comment"> * @a sources must be an array of elements of type</span>
<a name="l03801"></a>03801 <span class="comment"> * &lt;tt&gt;svn_client_copy_source_t *&lt;/tt&gt;.</span>
<a name="l03802"></a>03802 <span class="comment"> *</span>
<a name="l03803"></a>03803 <span class="comment"> * Each @a src in @a sources must be files or directories under version control,</span>
<a name="l03804"></a>03804 <span class="comment"> * or URLs of a versioned item in the repository.  If @a sources has multiple</span>
<a name="l03805"></a>03805 <span class="comment"> * items, the @a src members must be all repository URLs or all working copy</span>
<a name="l03806"></a>03806 <span class="comment"> * paths.</span>
<a name="l03807"></a>03807 <span class="comment"> *</span>
<a name="l03808"></a>03808 <span class="comment"> * The parent of @a dst_path must already exist.</span>
<a name="l03809"></a>03809 <span class="comment"> *</span>
<a name="l03810"></a>03810 <span class="comment"> * If @a sources has only one item, attempt to copy it to @a dst_path.  If</span>
<a name="l03811"></a>03811 <span class="comment"> * @a copy_as_child is TRUE and @a dst_path already exists, attempt to copy the</span>
<a name="l03812"></a>03812 <span class="comment"> * item as a child of @a dst_path.  If @a copy_as_child is FALSE and</span>
<a name="l03813"></a>03813 <span class="comment"> * @a dst_path already exists, fail with #SVN_ERR_ENTRY_EXISTS if @a dst_path</span>
<a name="l03814"></a>03814 <span class="comment"> * is a working copy path and #SVN_ERR_FS_ALREADY_EXISTS if @a dst_path is a</span>
<a name="l03815"></a>03815 <span class="comment"> * URL.</span>
<a name="l03816"></a>03816 <span class="comment"> *</span>
<a name="l03817"></a>03817 <span class="comment"> * If @a sources has multiple items, and @a copy_as_child is TRUE, all</span>
<a name="l03818"></a>03818 <span class="comment"> * @a sources are copied as children of @a dst_path.  If any child of</span>
<a name="l03819"></a>03819 <span class="comment"> * @a dst_path already exists with the same name any item in @a sources,</span>
<a name="l03820"></a>03820 <span class="comment"> * fail with #SVN_ERR_ENTRY_EXISTS if @a dst_path is a working copy path and</span>
<a name="l03821"></a>03821 <span class="comment"> * #SVN_ERR_FS_ALREADY_EXISTS if @a dst_path is a URL.</span>
<a name="l03822"></a>03822 <span class="comment"> *</span>
<a name="l03823"></a>03823 <span class="comment"> * If @a sources has multiple items, and @a copy_as_child is FALSE, fail</span>
<a name="l03824"></a>03824 <span class="comment"> * with #SVN_ERR_CLIENT_MULTIPLE_SOURCES_DISALLOWED.</span>
<a name="l03825"></a>03825 <span class="comment"> *</span>
<a name="l03826"></a>03826 <span class="comment"> * If @a dst_path is a URL, use the authentication baton</span>
<a name="l03827"></a>03827 <span class="comment"> * in @a ctx and @a ctx-&gt;log_msg_func3/@a ctx-&gt;log_msg_baton3 to immediately</span>
<a name="l03828"></a>03828 <span class="comment"> * attempt to commit the copy action in the repository.</span>
<a name="l03829"></a>03829 <span class="comment"> *</span>
<a name="l03830"></a>03830 <span class="comment"> * If @a dst_path is not a URL, then this is just a variant of</span>
<a name="l03831"></a>03831 <span class="comment"> * svn_client_add(), where the @a sources are scheduled for addition</span>
<a name="l03832"></a>03832 <span class="comment"> * as copies.  No changes will happen to the repository until a commit occurs.</span>
<a name="l03833"></a>03833 <span class="comment"> * This scheduling can be removed with svn_client_revert2().</span>
<a name="l03834"></a>03834 <span class="comment"> *</span>
<a name="l03835"></a>03835 <span class="comment"> * If @a make_parents is TRUE, create any non-existent parent directories</span>
<a name="l03836"></a>03836 <span class="comment"> * also.</span>
<a name="l03837"></a>03837 <span class="comment"> *</span>
<a name="l03838"></a>03838 <span class="comment"> * If @a ignore_externals is set, don&#39;t process externals definitions</span>
<a name="l03839"></a>03839 <span class="comment"> * as part of this operation.</span>
<a name="l03840"></a>03840 <span class="comment"> *</span>
<a name="l03841"></a>03841 <span class="comment"> * If non-NULL, @a revprop_table is a hash table holding additional,</span>
<a name="l03842"></a>03842 <span class="comment"> * custom revision properties (&lt;tt&gt;const char *&lt;/tt&gt; names mapped to</span>
<a name="l03843"></a>03843 <span class="comment"> * &lt;tt&gt;svn_string_t *&lt;/tt&gt; values) to be set on the new revision in</span>
<a name="l03844"></a>03844 <span class="comment"> * the event that this is a committing operation.  This table cannot</span>
<a name="l03845"></a>03845 <span class="comment"> * contain any standard Subversion properties.</span>
<a name="l03846"></a>03846 <span class="comment"> *</span>
<a name="l03847"></a>03847 <span class="comment"> * @a ctx-&gt;log_msg_func3/@a ctx-&gt;log_msg_baton3 are a callback/baton combo</span>
<a name="l03848"></a>03848 <span class="comment"> * that this function can use to query for a commit log message when one is</span>
<a name="l03849"></a>03849 <span class="comment"> * needed.</span>
<a name="l03850"></a>03850 <span class="comment"> *</span>
<a name="l03851"></a>03851 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, invoke it with @a ctx-&gt;notify_baton2</span>
<a name="l03852"></a>03852 <span class="comment"> * for each item added at the new location, passing the new, relative path of</span>
<a name="l03853"></a>03853 <span class="comment"> * the added item.</span>
<a name="l03854"></a>03854 <span class="comment"> *</span>
<a name="l03855"></a>03855 <span class="comment"> * If @a commit_callback is non-NULL, then for each successful commit, call</span>
<a name="l03856"></a>03856 <span class="comment"> * @a commit_callback with @a commit_baton and a #svn_commit_info_t for</span>
<a name="l03857"></a>03857 <span class="comment"> * the commit.</span>
<a name="l03858"></a>03858 <span class="comment"> *</span>
<a name="l03859"></a>03859 <span class="comment"> * @since New in 1.7.</span>
<a name="l03860"></a>03860 <span class="comment"> */</span>
<a name="l03861"></a>03861 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03862"></a>03862 <a class="code" href="group__Copy.html#ga1b62b8af4a2cccbbf8f2047a8bde3cd3" title="Copy each src in sources to dst_path.">svn_client_copy6</a>(<span class="keyword">const</span> apr_array_header_t *sources,
<a name="l03863"></a>03863                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l03864"></a>03864                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> copy_as_child,
<a name="l03865"></a>03865                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> make_parents,
<a name="l03866"></a>03866                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l03867"></a>03867                  <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l03868"></a>03868                  <a class="code" href="svn__types_8h.html#a5aca95325ba984f70a316d7d9966e1df" title="Callback function type for commits.">svn_commit_callback2_t</a> commit_callback,
<a name="l03869"></a>03869                  <span class="keywordtype">void</span> *commit_baton,
<a name="l03870"></a>03870                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03871"></a>03871                  apr_pool_t *pool);
<a name="l03872"></a>03872 <span class="comment"></span>
<a name="l03873"></a>03873 <span class="comment">/**</span>
<a name="l03874"></a>03874 <span class="comment"> * Similar to svn_client_copy6(), but returns the commit info in</span>
<a name="l03875"></a>03875 <span class="comment"> * @a *commit_info_p rather than through a callback function.</span>
<a name="l03876"></a>03876 <span class="comment"> *</span>
<a name="l03877"></a>03877 <span class="comment"> * @since New in 1.6.</span>
<a name="l03878"></a>03878 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03879"></a>03879 <span class="comment"> */</span>
<a name="l03880"></a>03880 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03881"></a>03881 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03882"></a>03882 <a class="code" href="group__Copy.html#ga904af220df009d705f60b3160712f87c" title="Similar to svn_client_copy6(), but returns the commit info in *commit_info_p rather than through a ca...">svn_client_copy5</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l03883"></a>03883                  <span class="keyword">const</span> apr_array_header_t *sources,
<a name="l03884"></a>03884                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l03885"></a>03885                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> copy_as_child,
<a name="l03886"></a>03886                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> make_parents,
<a name="l03887"></a>03887                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l03888"></a>03888                  <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l03889"></a>03889                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03890"></a>03890                  apr_pool_t *pool);
<a name="l03891"></a>03891 <span class="comment"></span>
<a name="l03892"></a>03892 <span class="comment">/**</span>
<a name="l03893"></a>03893 <span class="comment"> * Similar to svn_client_copy5(), with @a ignore_externals set to @c FALSE.</span>
<a name="l03894"></a>03894 <span class="comment"> *</span>
<a name="l03895"></a>03895 <span class="comment"> * @since New in 1.5.</span>
<a name="l03896"></a>03896 <span class="comment"> *</span>
<a name="l03897"></a>03897 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l03898"></a>03898 <span class="comment"> */</span>
<a name="l03899"></a>03899 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03900"></a>03900 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03901"></a>03901 <a class="code" href="group__Copy.html#gafa708c6949147aab7ff78864ac2ff2a5" title="Similar to svn_client_copy5(), with ignore_externals set to FALSE.">svn_client_copy4</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l03902"></a>03902                  <span class="keyword">const</span> apr_array_header_t *sources,
<a name="l03903"></a>03903                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l03904"></a>03904                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> copy_as_child,
<a name="l03905"></a>03905                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> make_parents,
<a name="l03906"></a>03906                  <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l03907"></a>03907                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03908"></a>03908                  apr_pool_t *pool);
<a name="l03909"></a>03909 <span class="comment"></span>
<a name="l03910"></a>03910 <span class="comment">/**</span>
<a name="l03911"></a>03911 <span class="comment"> * Similar to svn_client_copy4(), with only one @a src_path, @a</span>
<a name="l03912"></a>03912 <span class="comment"> * copy_as_child set to @c FALSE, @a revprop_table passed as NULL, and</span>
<a name="l03913"></a>03913 <span class="comment"> * @a make_parents set to @c FALSE.  Also, use @a src_revision as both</span>
<a name="l03914"></a>03914 <span class="comment"> * the operational and peg revision.</span>
<a name="l03915"></a>03915 <span class="comment"> *</span>
<a name="l03916"></a>03916 <span class="comment"> * @since New in 1.4.</span>
<a name="l03917"></a>03917 <span class="comment"> *</span>
<a name="l03918"></a>03918 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l03919"></a>03919 <span class="comment"> */</span>
<a name="l03920"></a>03920 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03921"></a>03921 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03922"></a>03922 <a class="code" href="group__Copy.html#ga5d0e80a35a463c860fd9061b01266380" title="Similar to svn_client_copy4(), with only one src_path, copy_as_child set to FALSE, revprop_table passed as NULL, and make_parents set to FALSE.">svn_client_copy3</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l03923"></a>03923                  <span class="keyword">const</span> <span class="keywordtype">char</span> *src_path,
<a name="l03924"></a>03924                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *src_revision,
<a name="l03925"></a>03925                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l03926"></a>03926                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03927"></a>03927                  apr_pool_t *pool);
<a name="l03928"></a>03928 
<a name="l03929"></a>03929 <span class="comment"></span>
<a name="l03930"></a>03930 <span class="comment">/**</span>
<a name="l03931"></a>03931 <span class="comment"> * Similar to svn_client_copy3(), with the difference that if @a dst_path</span>
<a name="l03932"></a>03932 <span class="comment"> * already exists and is a directory, copy the item into that directory,</span>
<a name="l03933"></a>03933 <span class="comment"> * keeping its name (the last component of @a src_path).</span>
<a name="l03934"></a>03934 <span class="comment"> *</span>
<a name="l03935"></a>03935 <span class="comment"> * @since New in 1.3.</span>
<a name="l03936"></a>03936 <span class="comment"> *</span>
<a name="l03937"></a>03937 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l03938"></a>03938 <span class="comment"> */</span>
<a name="l03939"></a>03939 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03940"></a>03940 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03941"></a>03941 <a class="code" href="group__Copy.html#gae311e701f73ae4e8aea3ac399290d425" title="Similar to svn_client_copy3(), with the difference that if dst_path already exists and is a directory...">svn_client_copy2</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l03942"></a>03942                  <span class="keyword">const</span> <span class="keywordtype">char</span> *src_path,
<a name="l03943"></a>03943                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *src_revision,
<a name="l03944"></a>03944                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l03945"></a>03945                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03946"></a>03946                  apr_pool_t *pool);
<a name="l03947"></a>03947 
<a name="l03948"></a>03948 <span class="comment"></span>
<a name="l03949"></a>03949 <span class="comment">/**</span>
<a name="l03950"></a>03950 <span class="comment"> * Similar to svn_client_copy2(), but uses #svn_client_commit_info_t</span>
<a name="l03951"></a>03951 <span class="comment"> * for @a commit_info_p.</span>
<a name="l03952"></a>03952 <span class="comment"> *</span>
<a name="l03953"></a>03953 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l03954"></a>03954 <span class="comment"> */</span>
<a name="l03955"></a>03955 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03956"></a>03956 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03957"></a>03957 <a class="code" href="group__Copy.html#ga97c9cd1d8f7323a3bcb43135a484ff8c" title="Similar to svn_client_copy2(), but uses svn_client_commit_info_t for commit_info_p.">svn_client_copy</a>(<a class="code" href="structsvn__client__commit__info__t.html" title="Information about commits passed back to client from this module.">svn_client_commit_info_t</a> **commit_info_p,
<a name="l03958"></a>03958                 <span class="keyword">const</span> <span class="keywordtype">char</span> *src_path,
<a name="l03959"></a>03959                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *src_revision,
<a name="l03960"></a>03960                 <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l03961"></a>03961                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l03962"></a>03962                 apr_pool_t *pool);
<a name="l03963"></a>03963 
<a name="l03964"></a>03964 <span class="comment"></span>
<a name="l03965"></a>03965 <span class="comment">/** @} */</span>
<a name="l03966"></a>03966 <span class="comment"></span>
<a name="l03967"></a>03967 <span class="comment">/**</span>
<a name="l03968"></a>03968 <span class="comment"> * @defgroup Move Move paths in the working copy or repository.</span>
<a name="l03969"></a>03969 <span class="comment"> *</span>
<a name="l03970"></a>03970 <span class="comment"> * @{</span>
<a name="l03971"></a>03971 <span class="comment"> */</span>
<a name="l03972"></a>03972 <span class="comment"></span>
<a name="l03973"></a>03973 <span class="comment">/**</span>
<a name="l03974"></a>03974 <span class="comment"> * Move @a src_paths to @a dst_path.</span>
<a name="l03975"></a>03975 <span class="comment"> *</span>
<a name="l03976"></a>03976 <span class="comment"> * @a src_paths must be files or directories under version control, or</span>
<a name="l03977"></a>03977 <span class="comment"> * URLs of versioned items in the repository.  All @a src_paths must be of</span>
<a name="l03978"></a>03978 <span class="comment"> * the same type.  If multiple @a src_paths are given, @a dst_path must be</span>
<a name="l03979"></a>03979 <span class="comment"> * a directory and @a src_paths will be moved as children of @a dst_path.</span>
<a name="l03980"></a>03980 <span class="comment"> *</span>
<a name="l03981"></a>03981 <span class="comment"> * If @a src_paths are repository URLs:</span>
<a name="l03982"></a>03982 <span class="comment"> *</span>
<a name="l03983"></a>03983 <span class="comment"> *   - @a dst_path must also be a repository URL.</span>
<a name="l03984"></a>03984 <span class="comment"> *</span>
<a name="l03985"></a>03985 <span class="comment"> *   - The authentication baton in @a ctx and @a ctx-&gt;log_msg_func/@a</span>
<a name="l03986"></a>03986 <span class="comment"> *     ctx-&gt;log_msg_baton are used to commit the move.</span>
<a name="l03987"></a>03987 <span class="comment"> *</span>
<a name="l03988"></a>03988 <span class="comment"> *   - The move operation will be immediately committed.</span>
<a name="l03989"></a>03989 <span class="comment"> *</span>
<a name="l03990"></a>03990 <span class="comment"> * If @a src_paths are working copy paths:</span>
<a name="l03991"></a>03991 <span class="comment"> *</span>
<a name="l03992"></a>03992 <span class="comment"> *   - @a dst_path must also be a working copy path.</span>
<a name="l03993"></a>03993 <span class="comment"> *</span>
<a name="l03994"></a>03994 <span class="comment"> *   - @a ctx-&gt;log_msg_func3 and @a ctx-&gt;log_msg_baton3 are ignored.</span>
<a name="l03995"></a>03995 <span class="comment"> *</span>
<a name="l03996"></a>03996 <span class="comment"> *   - This is a scheduling operation.  No changes will happen to the</span>
<a name="l03997"></a>03997 <span class="comment"> *     repository until a commit occurs.  This scheduling can be removed</span>
<a name="l03998"></a>03998 <span class="comment"> *     with svn_client_revert2().  If one of @a src_paths is a file it is</span>
<a name="l03999"></a>03999 <span class="comment"> *     removed from the working copy immediately.  If one of @a src_path</span>
<a name="l04000"></a>04000 <span class="comment"> *     is a directory it will remain in the working copy but all the files,</span>
<a name="l04001"></a>04001 <span class="comment"> *     and unversioned items, it contains will be removed.</span>
<a name="l04002"></a>04002 <span class="comment"> *</span>
<a name="l04003"></a>04003 <span class="comment"> * The parent of @a dst_path must already exist.</span>
<a name="l04004"></a>04004 <span class="comment"> *</span>
<a name="l04005"></a>04005 <span class="comment"> * If @a src_paths has only one item, attempt to move it to @a dst_path.  If</span>
<a name="l04006"></a>04006 <span class="comment"> * @a move_as_child is TRUE and @a dst_path already exists, attempt to move the</span>
<a name="l04007"></a>04007 <span class="comment"> * item as a child of @a dst_path.  If @a move_as_child is FALSE and</span>
<a name="l04008"></a>04008 <span class="comment"> * @a dst_path already exists, fail with #SVN_ERR_ENTRY_EXISTS if @a dst_path</span>
<a name="l04009"></a>04009 <span class="comment"> * is a working copy path and #SVN_ERR_FS_ALREADY_EXISTS if @a dst_path is a</span>
<a name="l04010"></a>04010 <span class="comment"> * URL.</span>
<a name="l04011"></a>04011 <span class="comment"> *</span>
<a name="l04012"></a>04012 <span class="comment"> * If @a src_paths has multiple items, and @a move_as_child is TRUE, all</span>
<a name="l04013"></a>04013 <span class="comment"> * @a src_paths are moved as children of @a dst_path.  If any child of</span>
<a name="l04014"></a>04014 <span class="comment"> * @a dst_path already exists with the same name any item in @a src_paths,</span>
<a name="l04015"></a>04015 <span class="comment"> * fail with #SVN_ERR_ENTRY_EXISTS if @a dst_path is a working copy path and</span>
<a name="l04016"></a>04016 <span class="comment"> * #SVN_ERR_FS_ALREADY_EXISTS if @a dst_path is a URL.</span>
<a name="l04017"></a>04017 <span class="comment"> *</span>
<a name="l04018"></a>04018 <span class="comment"> * If @a src_paths has multiple items, and @a move_as_child is FALSE, fail</span>
<a name="l04019"></a>04019 <span class="comment"> * with #SVN_ERR_CLIENT_MULTIPLE_SOURCES_DISALLOWED.</span>
<a name="l04020"></a>04020 <span class="comment"> *</span>
<a name="l04021"></a>04021 <span class="comment"> * If @a make_parents is TRUE, create any non-existent parent directories</span>
<a name="l04022"></a>04022 <span class="comment"> * also.</span>
<a name="l04023"></a>04023 <span class="comment"> *</span>
<a name="l04024"></a>04024 <span class="comment"> * If non-NULL, @a revprop_table is a hash table holding additional,</span>
<a name="l04025"></a>04025 <span class="comment"> * custom revision properties (&lt;tt&gt;const char *&lt;/tt&gt; names mapped to</span>
<a name="l04026"></a>04026 <span class="comment"> * &lt;tt&gt;svn_string_t *&lt;/tt&gt; values) to be set on the new revision in</span>
<a name="l04027"></a>04027 <span class="comment"> * the event that this is a committing operation.  This table cannot</span>
<a name="l04028"></a>04028 <span class="comment"> * contain any standard Subversion properties.</span>
<a name="l04029"></a>04029 <span class="comment"> *</span>
<a name="l04030"></a>04030 <span class="comment"> * @a ctx-&gt;log_msg_func3/@a ctx-&gt;log_msg_baton3 are a callback/baton combo that</span>
<a name="l04031"></a>04031 <span class="comment"> * this function can use to query for a commit log message when one is needed.</span>
<a name="l04032"></a>04032 <span class="comment"> *</span>
<a name="l04033"></a>04033 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, then for each item moved, call</span>
<a name="l04034"></a>04034 <span class="comment"> * @a ctx-&gt;notify_func2 with the @a ctx-&gt;notify_baton2 twice, once to indicate</span>
<a name="l04035"></a>04035 <span class="comment"> * the deletion of the moved thing, and once to indicate the addition of</span>
<a name="l04036"></a>04036 <span class="comment"> * the new location of the thing.</span>
<a name="l04037"></a>04037 <span class="comment"> *</span>
<a name="l04038"></a>04038 <span class="comment"> * ### Is this really true?  What about svn_wc_notify_commit_replaced()? ###</span>
<a name="l04039"></a>04039 <span class="comment"> *</span>
<a name="l04040"></a>04040 <span class="comment"> * If @a commit_callback is non-NULL, then for each successful commit, call</span>
<a name="l04041"></a>04041 <span class="comment"> * @a commit_callback with @a commit_baton and a #svn_commit_info_t for</span>
<a name="l04042"></a>04042 <span class="comment"> * the commit.</span>
<a name="l04043"></a>04043 <span class="comment"> *</span>
<a name="l04044"></a>04044 <span class="comment"> * @since New in 1.7.</span>
<a name="l04045"></a>04045 <span class="comment"> */</span>
<a name="l04046"></a>04046 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04047"></a>04047 <a class="code" href="group__Move.html#ga8855ac8eb554aa86e15674671a3f682b" title="Move src_paths to dst_path.">svn_client_move6</a>(<span class="keyword">const</span> apr_array_header_t *src_paths,
<a name="l04048"></a>04048                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l04049"></a>04049                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> move_as_child,
<a name="l04050"></a>04050                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> make_parents,
<a name="l04051"></a>04051                  <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l04052"></a>04052                  <a class="code" href="svn__types_8h.html#a5aca95325ba984f70a316d7d9966e1df" title="Callback function type for commits.">svn_commit_callback2_t</a> commit_callback,
<a name="l04053"></a>04053                  <span class="keywordtype">void</span> *commit_baton,
<a name="l04054"></a>04054                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04055"></a>04055                  apr_pool_t *pool);
<a name="l04056"></a>04056 <span class="comment"></span>
<a name="l04057"></a>04057 <span class="comment">/**</span>
<a name="l04058"></a>04058 <span class="comment"> * Similar to svn_client_move6(), but returns the commit info in</span>
<a name="l04059"></a>04059 <span class="comment"> * @a *commit_info_p rather than through a callback function.</span>
<a name="l04060"></a>04060 <span class="comment"> *</span>
<a name="l04061"></a>04061 <span class="comment"> * A WC-to-WC move will include any modified and/or unversioned children.</span>
<a name="l04062"></a>04062 <span class="comment"> * @a force is ignored.</span>
<a name="l04063"></a>04063 <span class="comment"> *</span>
<a name="l04064"></a>04064 <span class="comment"> * @since New in 1.5.</span>
<a name="l04065"></a>04065 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l04066"></a>04066 <span class="comment"> */</span>
<a name="l04067"></a>04067 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04068"></a>04068 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04069"></a>04069 <a class="code" href="group__Move.html#gaa2b67c7e74c74c4a3f94c256e775a00c" title="Similar to svn_client_move6(), but returns the commit info in *commit_info_p rather than through a ca...">svn_client_move5</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l04070"></a>04070                  <span class="keyword">const</span> apr_array_header_t *src_paths,
<a name="l04071"></a>04071                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l04072"></a>04072                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l04073"></a>04073                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> move_as_child,
<a name="l04074"></a>04074                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> make_parents,
<a name="l04075"></a>04075                  <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l04076"></a>04076                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04077"></a>04077                  apr_pool_t *pool);
<a name="l04078"></a>04078 <span class="comment"></span>
<a name="l04079"></a>04079 <span class="comment">/**</span>
<a name="l04080"></a>04080 <span class="comment"> * Similar to svn_client_move5(), with only one @a src_path, @a</span>
<a name="l04081"></a>04081 <span class="comment"> * move_as_child set to @c FALSE, @a revprop_table passed as NULL, and</span>
<a name="l04082"></a>04082 <span class="comment"> * @a make_parents set to @c FALSE.</span>
<a name="l04083"></a>04083 <span class="comment"> *</span>
<a name="l04084"></a>04084 <span class="comment"> * Note: The behaviour of @a force changed in 1.5 (r860885 and r861421), when</span>
<a name="l04085"></a>04085 <span class="comment"> * the &#39;move&#39; semantics were improved to just move the source including any</span>
<a name="l04086"></a>04086 <span class="comment"> * modified and/or unversioned items in it.  Before that, @a force</span>
<a name="l04087"></a>04087 <span class="comment"> * controlled what happened to such items, but now @a force is ignored.</span>
<a name="l04088"></a>04088 <span class="comment"> *</span>
<a name="l04089"></a>04089 <span class="comment"> * @since New in 1.4.</span>
<a name="l04090"></a>04090 <span class="comment"> *</span>
<a name="l04091"></a>04091 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l04092"></a>04092 <span class="comment"> */</span>
<a name="l04093"></a>04093 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04094"></a>04094 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04095"></a>04095 <a class="code" href="group__Move.html#ga915cc521582ab6b6de420685de3cde44" title="Similar to svn_client_move5(), with only one src_path, move_as_child set to FALSE, revprop_table passed as NULL, and make_parents set to FALSE.">svn_client_move4</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l04096"></a>04096                  <span class="keyword">const</span> <span class="keywordtype">char</span> *src_path,
<a name="l04097"></a>04097                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l04098"></a>04098                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l04099"></a>04099                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04100"></a>04100                  apr_pool_t *pool);
<a name="l04101"></a>04101 <span class="comment"></span>
<a name="l04102"></a>04102 <span class="comment">/**</span>
<a name="l04103"></a>04103 <span class="comment"> * Similar to svn_client_move4(), with the difference that if @a dst_path</span>
<a name="l04104"></a>04104 <span class="comment"> * already exists and is a directory, move the item into that directory,</span>
<a name="l04105"></a>04105 <span class="comment"> * keeping its name (the last component of @a src_path).</span>
<a name="l04106"></a>04106 <span class="comment"> *</span>
<a name="l04107"></a>04107 <span class="comment"> * @since New in 1.3.</span>
<a name="l04108"></a>04108 <span class="comment"> *</span>
<a name="l04109"></a>04109 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l04110"></a>04110 <span class="comment"> */</span>
<a name="l04111"></a>04111 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04112"></a>04112 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04113"></a>04113 <a class="code" href="group__Move.html#gaf86b96b12a80f09e3cebb6bdd263715d" title="Similar to svn_client_move4(), with the difference that if dst_path already exists and is a directory...">svn_client_move3</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l04114"></a>04114                  <span class="keyword">const</span> <span class="keywordtype">char</span> *src_path,
<a name="l04115"></a>04115                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l04116"></a>04116                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l04117"></a>04117                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04118"></a>04118                  apr_pool_t *pool);
<a name="l04119"></a>04119 <span class="comment"></span>
<a name="l04120"></a>04120 <span class="comment">/**</span>
<a name="l04121"></a>04121 <span class="comment"> * Similar to svn_client_move3(), but uses #svn_client_commit_info_t</span>
<a name="l04122"></a>04122 <span class="comment"> * for @a commit_info_p.</span>
<a name="l04123"></a>04123 <span class="comment"> *</span>
<a name="l04124"></a>04124 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l04125"></a>04125 <span class="comment"> *</span>
<a name="l04126"></a>04126 <span class="comment"> * @since New in 1.2.</span>
<a name="l04127"></a>04127 <span class="comment"> */</span>
<a name="l04128"></a>04128 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04129"></a>04129 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04130"></a>04130 <a class="code" href="group__Move.html#ga6efd89282d57b3ea23a97db0bfc7547a" title="Similar to svn_client_move3(), but uses svn_client_commit_info_t for commit_info_p.">svn_client_move2</a>(<a class="code" href="structsvn__client__commit__info__t.html" title="Information about commits passed back to client from this module.">svn_client_commit_info_t</a> **commit_info_p,
<a name="l04131"></a>04131                  <span class="keyword">const</span> <span class="keywordtype">char</span> *src_path,
<a name="l04132"></a>04132                  <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l04133"></a>04133                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l04134"></a>04134                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04135"></a>04135                  apr_pool_t *pool);
<a name="l04136"></a>04136 <span class="comment"></span>
<a name="l04137"></a>04137 <span class="comment">/**</span>
<a name="l04138"></a>04138 <span class="comment"> * Similar to svn_client_move2(), but an extra argument @a src_revision</span>
<a name="l04139"></a>04139 <span class="comment"> * must be passed.  This has no effect, but must be of kind</span>
<a name="l04140"></a>04140 <span class="comment"> * #svn_opt_revision_unspecified or #svn_opt_revision_head,</span>
<a name="l04141"></a>04141 <span class="comment"> * otherwise error #SVN_ERR_UNSUPPORTED_FEATURE is returned.</span>
<a name="l04142"></a>04142 <span class="comment"> *</span>
<a name="l04143"></a>04143 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04144"></a>04144 <span class="comment"> */</span>
<a name="l04145"></a>04145 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04146"></a>04146 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04147"></a>04147 <a class="code" href="group__Move.html#ga06ccc215d30491e64da3c2cd1625a45f" title="Similar to svn_client_move2(), but an extra argument src_revision must be passed.">svn_client_move</a>(<a class="code" href="structsvn__client__commit__info__t.html" title="Information about commits passed back to client from this module.">svn_client_commit_info_t</a> **commit_info_p,
<a name="l04148"></a>04148                 <span class="keyword">const</span> <span class="keywordtype">char</span> *src_path,
<a name="l04149"></a>04149                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *src_revision,
<a name="l04150"></a>04150                 <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l04151"></a>04151                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l04152"></a>04152                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04153"></a>04153                 apr_pool_t *pool);
<a name="l04154"></a>04154 <span class="comment"></span>
<a name="l04155"></a>04155 <span class="comment">/** @} */</span>
<a name="l04156"></a>04156 
<a name="l04157"></a>04157 <span class="comment"></span>
<a name="l04158"></a>04158 <span class="comment">/** Properties</span>
<a name="l04159"></a>04159 <span class="comment"> *</span>
<a name="l04160"></a>04160 <span class="comment"> * Note that certain svn-controlled properties must always have their</span>
<a name="l04161"></a>04161 <span class="comment"> * values set and stored in UTF8 with LF line endings.  When</span>
<a name="l04162"></a>04162 <span class="comment"> * retrieving these properties, callers must convert the values back</span>
<a name="l04163"></a>04163 <span class="comment"> * to native locale and native line-endings before displaying them to</span>
<a name="l04164"></a>04164 <span class="comment"> * the user.  For help with this task, see</span>
<a name="l04165"></a>04165 <span class="comment"> * svn_prop_needs_translation(), svn_subst_translate_string(),  and</span>
<a name="l04166"></a>04166 <span class="comment"> * svn_subst_detranslate_string().</span>
<a name="l04167"></a>04167 <span class="comment"> *</span>
<a name="l04168"></a>04168 <span class="comment"> * @defgroup svn_client_prop_funcs Property functions</span>
<a name="l04169"></a>04169 <span class="comment"> * @{</span>
<a name="l04170"></a>04170 <span class="comment"> */</span>
<a name="l04171"></a>04171 
<a name="l04172"></a>04172 <span class="comment"></span>
<a name="l04173"></a>04173 <span class="comment">/**</span>
<a name="l04174"></a>04174 <span class="comment"> * Set @a propname to @a propval on @a url.  A @a propval of @c NULL will</span>
<a name="l04175"></a>04175 <span class="comment"> * delete the property.</span>
<a name="l04176"></a>04176 <span class="comment"> *</span>
<a name="l04177"></a>04177 <span class="comment"> * Immediately attempt to commit the property change in the repository,</span>
<a name="l04178"></a>04178 <span class="comment"> * using the authentication baton in @a ctx and @a</span>
<a name="l04179"></a>04179 <span class="comment"> * ctx-&gt;log_msg_func3/@a ctx-&gt;log_msg_baton3.</span>
<a name="l04180"></a>04180 <span class="comment"> *</span>
<a name="l04181"></a>04181 <span class="comment"> * If the property has changed on @a url since revision</span>
<a name="l04182"></a>04182 <span class="comment"> * @a base_revision_for_url (which must not be #SVN_INVALID_REVNUM), no</span>
<a name="l04183"></a>04183 <span class="comment"> * change will be made and an error will be returned.</span>
<a name="l04184"></a>04184 <span class="comment"> *</span>
<a name="l04185"></a>04185 <span class="comment"> * If non-NULL, @a revprop_table is a hash table holding additional,</span>
<a name="l04186"></a>04186 <span class="comment"> * custom revision properties (&lt;tt&gt;const char *&lt;/tt&gt; names mapped to</span>
<a name="l04187"></a>04187 <span class="comment"> * &lt;tt&gt;svn_string_t *&lt;/tt&gt; values) to be set on the new revision.  This</span>
<a name="l04188"></a>04188 <span class="comment"> * table cannot contain any standard Subversion properties.</span>
<a name="l04189"></a>04189 <span class="comment"> *</span>
<a name="l04190"></a>04190 <span class="comment"> * If @a commit_callback is non-NULL, then call @a commit_callback with</span>
<a name="l04191"></a>04191 <span class="comment"> * @a commit_baton and a #svn_commit_info_t for the commit.</span>
<a name="l04192"></a>04192 <span class="comment"> *</span>
<a name="l04193"></a>04193 <span class="comment"> * If @a propname is an svn-controlled property (i.e. prefixed with</span>
<a name="l04194"></a>04194 <span class="comment"> * #SVN_PROP_PREFIX), then the caller is responsible for ensuring that</span>
<a name="l04195"></a>04195 <span class="comment"> * the value is UTF8-encoded and uses LF line-endings.</span>
<a name="l04196"></a>04196 <span class="comment"> *</span>
<a name="l04197"></a>04197 <span class="comment"> * If @a skip_checks is TRUE, do no validity checking.  But if @a</span>
<a name="l04198"></a>04198 <span class="comment"> * skip_checks is FALSE, and @a propname is not a valid property for @a</span>
<a name="l04199"></a>04199 <span class="comment"> * url, return an error, either #SVN_ERR_ILLEGAL_TARGET (if the property is</span>
<a name="l04200"></a>04200 <span class="comment"> * not appropriate for @a url), or * #SVN_ERR_BAD_MIME_TYPE (if @a propname</span>
<a name="l04201"></a>04201 <span class="comment"> * is &quot;svn:mime-type&quot;, but @a propval is not a valid mime-type).</span>
<a name="l04202"></a>04202 <span class="comment"> *</span>
<a name="l04203"></a>04203 <span class="comment"> * Use @a scratch_pool for all memory allocation.</span>
<a name="l04204"></a>04204 <span class="comment"> *</span>
<a name="l04205"></a>04205 <span class="comment"> * @since New in 1.7.</span>
<a name="l04206"></a>04206 <span class="comment"> */</span>
<a name="l04207"></a>04207 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04208"></a>04208 <a class="code" href="group__svn__client__prop__funcs.html#ga57cb30d1861ea88b22673bffa989de59" title="Set propname to propval on url.">svn_client_propset_remote</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04209"></a>04209                           <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *propval,
<a name="l04210"></a>04210                           <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l04211"></a>04211                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> skip_checks,
<a name="l04212"></a>04212                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> base_revision_for_url,
<a name="l04213"></a>04213                           <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l04214"></a>04214                           <a class="code" href="svn__types_8h.html#a5aca95325ba984f70a316d7d9966e1df" title="Callback function type for commits.">svn_commit_callback2_t</a> commit_callback,
<a name="l04215"></a>04215                           <span class="keywordtype">void</span> *commit_baton,
<a name="l04216"></a>04216                           <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04217"></a>04217                           apr_pool_t *scratch_pool);
<a name="l04218"></a>04218 <span class="comment"></span>
<a name="l04219"></a>04219 <span class="comment">/**</span>
<a name="l04220"></a>04220 <span class="comment"> * Set @a propname to @a propval on each (const char *) target in @a</span>
<a name="l04221"></a>04221 <span class="comment"> * targets.  The targets must be all working copy paths.  A @a propval</span>
<a name="l04222"></a>04222 <span class="comment"> * of @c NULL will delete the property.</span>
<a name="l04223"></a>04223 <span class="comment"> *</span>
<a name="l04224"></a>04224 <span class="comment"> * If @a depth is #svn_depth_empty, set the property on each member of</span>
<a name="l04225"></a>04225 <span class="comment"> * @a targets only; if #svn_depth_files, set it on @a targets and their</span>
<a name="l04226"></a>04226 <span class="comment"> * file children (if any); if #svn_depth_immediates, on @a targets and all</span>
<a name="l04227"></a>04227 <span class="comment"> * of their immediate children (both files and directories); if</span>
<a name="l04228"></a>04228 <span class="comment"> * #svn_depth_infinity, on @a targets and everything beneath them.</span>
<a name="l04229"></a>04229 <span class="comment"> *</span>
<a name="l04230"></a>04230 <span class="comment"> * @a changelists is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l04231"></a>04231 <span class="comment"> * names, used as a restrictive filter on items whose properties are</span>
<a name="l04232"></a>04232 <span class="comment"> * set; that is, don&#39;t set properties on any item unless it&#39;s a member</span>
<a name="l04233"></a>04233 <span class="comment"> * of one of those changelists.  If @a changelists is empty (or</span>
<a name="l04234"></a>04234 <span class="comment"> * altogether @c NULL), no changelist filtering occurs.</span>
<a name="l04235"></a>04235 <span class="comment"> *</span>
<a name="l04236"></a>04236 <span class="comment"> * If @a propname is an svn-controlled property (i.e. prefixed with</span>
<a name="l04237"></a>04237 <span class="comment"> * #SVN_PROP_PREFIX), then the caller is responsible for ensuring that</span>
<a name="l04238"></a>04238 <span class="comment"> * the value is UTF8-encoded and uses LF line-endings.</span>
<a name="l04239"></a>04239 <span class="comment"> *</span>
<a name="l04240"></a>04240 <span class="comment"> * If @a skip_checks is TRUE, do no validity checking.  But if @a</span>
<a name="l04241"></a>04241 <span class="comment"> * skip_checks is FALSE, and @a propname is not a valid property for @a</span>
<a name="l04242"></a>04242 <span class="comment"> * targets, return an error, either #SVN_ERR_ILLEGAL_TARGET (if the</span>
<a name="l04243"></a>04243 <span class="comment"> * property is not appropriate for @a targets), or</span>
<a name="l04244"></a>04244 <span class="comment"> * #SVN_ERR_BAD_MIME_TYPE (if @a propname is &quot;svn:mime-type&quot;, but @a</span>
<a name="l04245"></a>04245 <span class="comment"> * propval is not a valid mime-type).</span>
<a name="l04246"></a>04246 <span class="comment"> *</span>
<a name="l04247"></a>04247 <span class="comment"> * If @a ctx-&gt;cancel_func is non-NULL, invoke it passing @a</span>
<a name="l04248"></a>04248 <span class="comment"> * ctx-&gt;cancel_baton at various places during the operation.</span>
<a name="l04249"></a>04249 <span class="comment"> *</span>
<a name="l04250"></a>04250 <span class="comment"> * Use @a scratch_pool for all memory allocation.</span>
<a name="l04251"></a>04251 <span class="comment"> *</span>
<a name="l04252"></a>04252 <span class="comment"> * @since New in 1.7.</span>
<a name="l04253"></a>04253 <span class="comment"> */</span>
<a name="l04254"></a>04254 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04255"></a>04255 <a class="code" href="group__svn__client__prop__funcs.html#gaa302c36e754ac213fa01d52d28d55d68" title="Set propname to propval on each (const char *) target in targets.">svn_client_propset_local</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04256"></a>04256                          <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *propval,
<a name="l04257"></a>04257                          <span class="keyword">const</span> apr_array_header_t *targets,
<a name="l04258"></a>04258                          <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04259"></a>04259                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> skip_checks,
<a name="l04260"></a>04260                          <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l04261"></a>04261                          <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04262"></a>04262                          apr_pool_t *scratch_pool);
<a name="l04263"></a>04263 <span class="comment"></span>
<a name="l04264"></a>04264 <span class="comment">/**</span>
<a name="l04265"></a>04265 <span class="comment"> * An amalgamation of svn_client_propset_local() and</span>
<a name="l04266"></a>04266 <span class="comment"> * svn_client_propset_remote() that takes only a single target, and</span>
<a name="l04267"></a>04267 <span class="comment"> * returns the commit info in @a *commit_info_p rather than through a</span>
<a name="l04268"></a>04268 <span class="comment"> * callback function.</span>
<a name="l04269"></a>04269 <span class="comment"> *</span>
<a name="l04270"></a>04270 <span class="comment"> * @since New in 1.5.</span>
<a name="l04271"></a>04271 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l04272"></a>04272 <span class="comment"> */</span>
<a name="l04273"></a>04273 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04274"></a>04274 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04275"></a>04275 <a class="code" href="group__svn__client__prop__funcs.html#gaff2980dca147ebda1200d46cfdf0caf7" title="An amalgamation of svn_client_propset_local() and svn_client_propset_remote() that takes only a singl...">svn_client_propset3</a>(<a class="code" href="structsvn__commit__info__t.html" title="All information about a commit.">svn_commit_info_t</a> **commit_info_p,
<a name="l04276"></a>04276                     <span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04277"></a>04277                     <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *propval,
<a name="l04278"></a>04278                     <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04279"></a>04279                     <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04280"></a>04280                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> skip_checks,
<a name="l04281"></a>04281                     <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> base_revision_for_url,
<a name="l04282"></a>04282                     <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l04283"></a>04283                     <span class="keyword">const</span> apr_hash_t *revprop_table,
<a name="l04284"></a>04284                     <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04285"></a>04285                     apr_pool_t *pool);
<a name="l04286"></a>04286 <span class="comment"></span>
<a name="l04287"></a>04287 <span class="comment">/**</span>
<a name="l04288"></a>04288 <span class="comment"> * Like svn_client_propset3(), but with @a base_revision_for_url</span>
<a name="l04289"></a>04289 <span class="comment"> * always #SVN_INVALID_REVNUM; @a commit_info_p always @c NULL; @a</span>
<a name="l04290"></a>04290 <span class="comment"> * changelists always @c NULL; @a revprop_table always @c NULL; and @a</span>
<a name="l04291"></a>04291 <span class="comment"> * depth set according to @a recurse: if @a recurse is TRUE, @a depth</span>
<a name="l04292"></a>04292 <span class="comment"> * is #svn_depth_infinity, else #svn_depth_empty.</span>
<a name="l04293"></a>04293 <span class="comment"> *</span>
<a name="l04294"></a>04294 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l04295"></a>04295 <span class="comment"> */</span>
<a name="l04296"></a>04296 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04297"></a>04297 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04298"></a>04298 <a class="code" href="group__svn__client__prop__funcs.html#gadd0b4a944d26837e5d46d29d53070858" title="Like svn_client_propset3(), but with base_revision_for_url always SVN_INVALID_REVNUM; commit_info_p a...">svn_client_propset2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04299"></a>04299                     <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *propval,
<a name="l04300"></a>04300                     <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04301"></a>04301                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04302"></a>04302                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> skip_checks,
<a name="l04303"></a>04303                     <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04304"></a>04304                     apr_pool_t *pool);
<a name="l04305"></a>04305 <span class="comment"></span>
<a name="l04306"></a>04306 <span class="comment">/**</span>
<a name="l04307"></a>04307 <span class="comment"> * Like svn_client_propset2(), but with @a skip_checks always FALSE and a</span>
<a name="l04308"></a>04308 <span class="comment"> * newly created @a ctx.</span>
<a name="l04309"></a>04309 <span class="comment"> *</span>
<a name="l04310"></a>04310 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04311"></a>04311 <span class="comment"> */</span>
<a name="l04312"></a>04312 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04313"></a>04313 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04314"></a>04314 <a class="code" href="group__svn__client__prop__funcs.html#ga28943f472c40df43209815e2033fe414" title="Like svn_client_propset2(), but with skip_checks always FALSE and a newly created ctx...">svn_client_propset</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04315"></a>04315                    <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *propval,
<a name="l04316"></a>04316                    <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04317"></a>04317                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04318"></a>04318                    apr_pool_t *pool);
<a name="l04319"></a>04319 <span class="comment"></span>
<a name="l04320"></a>04320 <span class="comment">/** Set @a propname to @a propval on revision @a revision in the repository</span>
<a name="l04321"></a>04321 <span class="comment"> * represented by @a URL.  Use the authentication baton in @a ctx for</span>
<a name="l04322"></a>04322 <span class="comment"> * authentication, and @a pool for all memory allocation.  Return the actual</span>
<a name="l04323"></a>04323 <span class="comment"> * rev affected in @a *set_rev.  A @a propval of @c NULL will delete the</span>
<a name="l04324"></a>04324 <span class="comment"> * property.</span>
<a name="l04325"></a>04325 <span class="comment"> *</span>
<a name="l04326"></a>04326 <span class="comment"> * If @a original_propval is non-NULL, then just before setting the</span>
<a name="l04327"></a>04327 <span class="comment"> * new value, check that the old value matches @a original_propval;</span>
<a name="l04328"></a>04328 <span class="comment"> * if they do not match, return the error #SVN_ERR_RA_OUT_OF_DATE.</span>
<a name="l04329"></a>04329 <span class="comment"> * This is to help clients support interactive editing of revprops:</span>
<a name="l04330"></a>04330 <span class="comment"> * without this check, the window during which the property may change</span>
<a name="l04331"></a>04331 <span class="comment"> * underneath the user is as wide as the amount of time the user</span>
<a name="l04332"></a>04332 <span class="comment"> * spends editing the property.  With this check, the window is</span>
<a name="l04333"></a>04333 <span class="comment"> * reduced to a small, constant amount of time right before we set the</span>
<a name="l04334"></a>04334 <span class="comment"> * new value.  (To check that an old value is still non-existent, set</span>
<a name="l04335"></a>04335 <span class="comment"> * @a original_propval-&gt;data to NULL, and @a original_propval-&gt;len is</span>
<a name="l04336"></a>04336 <span class="comment"> * ignored.)</span>
<a name="l04337"></a>04337 <span class="comment"> * If the server advertises #SVN_RA_CAPABILITY_ATOMIC_REVPROPS, the</span>
<a name="l04338"></a>04338 <span class="comment"> * check of @a original_propval is done atomically.</span>
<a name="l04339"></a>04339 <span class="comment"> *</span>
<a name="l04340"></a>04340 <span class="comment"> * Note: the representation of &quot;property is not set&quot; in @a</span>
<a name="l04341"></a>04341 <span class="comment"> * original_propval differs from the representation in other APIs</span>
<a name="l04342"></a>04342 <span class="comment"> * (such as svn_fs_change_rev_prop2() and svn_ra_change_rev_prop2()).</span>
<a name="l04343"></a>04343 <span class="comment"> *</span>
<a name="l04344"></a>04344 <span class="comment"> * If @a force is TRUE, allow newlines in the author property.</span>
<a name="l04345"></a>04345 <span class="comment"> *</span>
<a name="l04346"></a>04346 <span class="comment"> * If @a propname is an svn-controlled property (i.e. prefixed with</span>
<a name="l04347"></a>04347 <span class="comment"> * #SVN_PROP_PREFIX), then the caller is responsible for ensuring that</span>
<a name="l04348"></a>04348 <span class="comment"> * the value UTF8-encoded and uses LF line-endings.</span>
<a name="l04349"></a>04349 <span class="comment"> *</span>
<a name="l04350"></a>04350 <span class="comment"> * Note that unlike its cousin svn_client_propset3(), this routine</span>
<a name="l04351"></a>04351 <span class="comment"> * doesn&#39;t affect the working copy at all;  it&#39;s a pure network</span>
<a name="l04352"></a>04352 <span class="comment"> * operation that changes an *unversioned* property attached to a</span>
<a name="l04353"></a>04353 <span class="comment"> * revision.  This can be used to tweak log messages, dates, authors,</span>
<a name="l04354"></a>04354 <span class="comment"> * and the like.  Be careful:  it&#39;s a lossy operation.</span>
<a name="l04355"></a>04355 <span class="comment"></span>
<a name="l04356"></a>04356 <span class="comment"> * @a ctx-&gt;notify_func2 and @a ctx-&gt;notify_baton2 are the notification</span>
<a name="l04357"></a>04357 <span class="comment"> * functions and baton which are called upon successful setting of the</span>
<a name="l04358"></a>04358 <span class="comment"> * property.</span>
<a name="l04359"></a>04359 <span class="comment"> *</span>
<a name="l04360"></a>04360 <span class="comment"> * Also note that unless the administrator creates a</span>
<a name="l04361"></a>04361 <span class="comment"> * pre-revprop-change hook in the repository, this feature will fail.</span>
<a name="l04362"></a>04362 <span class="comment"> *</span>
<a name="l04363"></a>04363 <span class="comment"> * @since New in 1.6.</span>
<a name="l04364"></a>04364 <span class="comment"> */</span>
<a name="l04365"></a>04365 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04366"></a>04366 <a class="code" href="group__svn__client__prop__funcs.html#ga5ec6d39fdcc1e040950717ac1598037f" title="Set propname to propval on revision revision in the repository represented by URL.">svn_client_revprop_set2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04367"></a>04367                         <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *propval,
<a name="l04368"></a>04368                         <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *original_propval,
<a name="l04369"></a>04369                         <span class="keyword">const</span> <span class="keywordtype">char</span> *URL,
<a name="l04370"></a>04370                         <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04371"></a>04371                         <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *set_rev,
<a name="l04372"></a>04372                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l04373"></a>04373                         <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04374"></a>04374                         apr_pool_t *pool);
<a name="l04375"></a>04375 <span class="comment"></span>
<a name="l04376"></a>04376 <span class="comment">/**</span>
<a name="l04377"></a>04377 <span class="comment"> * Similar to svn_client_revprop_set2(), but with @a original_propval</span>
<a name="l04378"></a>04378 <span class="comment"> * always @c NULL.</span>
<a name="l04379"></a>04379 <span class="comment"> *</span>
<a name="l04380"></a>04380 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l04381"></a>04381 <span class="comment"> */</span>
<a name="l04382"></a>04382 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04383"></a>04383 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04384"></a>04384 <a class="code" href="group__svn__client__prop__funcs.html#ga624f20be1fad7998df4f179845d79518" title="Similar to svn_client_revprop_set2(), but with original_propval always NULL.">svn_client_revprop_set</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04385"></a>04385                        <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *propval,
<a name="l04386"></a>04386                        <span class="keyword">const</span> <span class="keywordtype">char</span> *URL,
<a name="l04387"></a>04387                        <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04388"></a>04388                        <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *set_rev,
<a name="l04389"></a>04389                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l04390"></a>04390                        <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04391"></a>04391                        apr_pool_t *pool);
<a name="l04392"></a>04392 <span class="comment"></span>
<a name="l04393"></a>04393 <span class="comment">/**</span>
<a name="l04394"></a>04394 <span class="comment"> * Set @a *props to a hash table whose keys are absolute paths or URLs</span>
<a name="l04395"></a>04395 <span class="comment"> * of items on which property @a propname is set, and whose values are</span>
<a name="l04396"></a>04396 <span class="comment"> * `#svn_string_t *&#39; representing the property value for @a propname</span>
<a name="l04397"></a>04397 <span class="comment"> * at that path.</span>
<a name="l04398"></a>04398 <span class="comment"> *</span>
<a name="l04399"></a>04399 <span class="comment"> * Allocate @a *props, its keys, and its values in @a pool, use</span>
<a name="l04400"></a>04400 <span class="comment"> * @a scratch_pool for temporary allocations.</span>
<a name="l04401"></a>04401 <span class="comment"> *</span>
<a name="l04402"></a>04402 <span class="comment"> * Don&#39;t store any path, not even @a target, if it does not have a</span>
<a name="l04403"></a>04403 <span class="comment"> * property named @a propname.</span>
<a name="l04404"></a>04404 <span class="comment"> *</span>
<a name="l04405"></a>04405 <span class="comment"> * If @a revision-&gt;kind is #svn_opt_revision_unspecified, then: get</span>
<a name="l04406"></a>04406 <span class="comment"> * properties from the working copy if @a target is a working copy</span>
<a name="l04407"></a>04407 <span class="comment"> * path, or from the repository head if @a target is a URL.  Else get</span>
<a name="l04408"></a>04408 <span class="comment"> * the properties as of @a revision.  The actual node revision</span>
<a name="l04409"></a>04409 <span class="comment"> * selected is determined by the path as it exists in @a peg_revision.</span>
<a name="l04410"></a>04410 <span class="comment"> * If @a peg_revision-&gt;kind is #svn_opt_revision_unspecified, then</span>
<a name="l04411"></a>04411 <span class="comment"> * it defaults to #svn_opt_revision_head for URLs or</span>
<a name="l04412"></a>04412 <span class="comment"> * #svn_opt_revision_working for WC targets.  Use the authentication</span>
<a name="l04413"></a>04413 <span class="comment"> * baton in @a ctx for authentication if contacting the repository.</span>
<a name="l04414"></a>04414 <span class="comment"> * If @a actual_revnum is not @c NULL, the actual revision number used</span>
<a name="l04415"></a>04415 <span class="comment"> * for the fetch is stored in @a *actual_revnum.</span>
<a name="l04416"></a>04416 <span class="comment"> *</span>
<a name="l04417"></a>04417 <span class="comment"> * If @a depth is #svn_depth_empty, fetch the property from</span>
<a name="l04418"></a>04418 <span class="comment"> * @a target only; if #svn_depth_files, fetch from @a target and its</span>
<a name="l04419"></a>04419 <span class="comment"> * file children (if any); if #svn_depth_immediates, from @a target</span>
<a name="l04420"></a>04420 <span class="comment"> * and all of its immediate children (both files and directories); if</span>
<a name="l04421"></a>04421 <span class="comment"> * #svn_depth_infinity, from @a target and everything beneath it.</span>
<a name="l04422"></a>04422 <span class="comment"> *</span>
<a name="l04423"></a>04423 <span class="comment"> * @a changelists is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l04424"></a>04424 <span class="comment"> * names, used as a restrictive filter on items whose properties are</span>
<a name="l04425"></a>04425 <span class="comment"> * gotten; that is, don&#39;t get @a propname on any item unless it&#39;s a member</span>
<a name="l04426"></a>04426 <span class="comment"> * of one of those changelists.  If @a changelists is empty (or</span>
<a name="l04427"></a>04427 <span class="comment"> * altogether @c NULL), no changelist filtering occurs.</span>
<a name="l04428"></a>04428 <span class="comment"> *</span>
<a name="l04429"></a>04429 <span class="comment"> * If error, don&#39;t touch @a *props, otherwise @a *props is a hash table</span>
<a name="l04430"></a>04430 <span class="comment"> * even if empty.</span>
<a name="l04431"></a>04431 <span class="comment"> *</span>
<a name="l04432"></a>04432 <span class="comment"> * This function returns SVN_ERR_UNVERSIONED_RESOURCE when it is called on</span>
<a name="l04433"></a>04433 <span class="comment"> * unversioned nodes.</span>
<a name="l04434"></a>04434 <span class="comment"> *</span>
<a name="l04435"></a>04435 <span class="comment"> * @since New in 1.7.</span>
<a name="l04436"></a>04436 <span class="comment"> */</span>
<a name="l04437"></a>04437 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04438"></a>04438 <a class="code" href="group__svn__client__prop__funcs.html#gab2cac73fb91180924232f0b755a85a3f" title="Set *props to a hash table whose keys are absolute paths or URLs of items on which property propname ...">svn_client_propget4</a>(apr_hash_t **props,
<a name="l04439"></a>04439                     <span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04440"></a>04440                     <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04441"></a>04441                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04442"></a>04442                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04443"></a>04443                     <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *actual_revnum,
<a name="l04444"></a>04444                     <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04445"></a>04445                     <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l04446"></a>04446                     <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04447"></a>04447                     apr_pool_t *result_pool,
<a name="l04448"></a>04448                     apr_pool_t *scratch_pool);
<a name="l04449"></a>04449 <span class="comment"></span>
<a name="l04450"></a>04450 <span class="comment">/**</span>
<a name="l04451"></a>04451 <span class="comment"> * Similar to svn_client_propget4(), but with the following change to the</span>
<a name="l04452"></a>04452 <span class="comment"> * output hash keys:  keys are `&lt;tt&gt;char *&lt;/tt&gt;&#39; paths, prefixed by</span>
<a name="l04453"></a>04453 <span class="comment"> * @a target, which is a working copy path or a URL.</span>
<a name="l04454"></a>04454 <span class="comment"> *</span>
<a name="l04455"></a>04455 <span class="comment"> * This function returns SVN_ERR_ENTRY_NOT_FOUND where svn_client_propget4</span>
<a name="l04456"></a>04456 <span class="comment"> * would return SVN_ERR_UNVERSIONED_RESOURCE.</span>
<a name="l04457"></a>04457 <span class="comment"> *</span>
<a name="l04458"></a>04458 <span class="comment"> * @since New in 1.5.</span>
<a name="l04459"></a>04459 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l04460"></a>04460 <span class="comment"> */</span>
<a name="l04461"></a>04461 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04462"></a>04462 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04463"></a>04463 <a class="code" href="group__svn__client__prop__funcs.html#ga308f521360d91e87e6d1f0621363e260" title="Similar to svn_client_propget4(), but with the following change to the output hash keys: keys are `ch...">svn_client_propget3</a>(apr_hash_t **props,
<a name="l04464"></a>04464                     <span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04465"></a>04465                     <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04466"></a>04466                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04467"></a>04467                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04468"></a>04468                     <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *actual_revnum,
<a name="l04469"></a>04469                     <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04470"></a>04470                     <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l04471"></a>04471                     <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04472"></a>04472                     apr_pool_t *pool);
<a name="l04473"></a>04473 <span class="comment"></span>
<a name="l04474"></a>04474 <span class="comment">/**</span>
<a name="l04475"></a>04475 <span class="comment"> * Similar to svn_client_propget3(), except that @a actual_revnum and</span>
<a name="l04476"></a>04476 <span class="comment"> * @a changelists are always @c NULL, and @a depth is set according to</span>
<a name="l04477"></a>04477 <span class="comment"> * @a recurse: if @a recurse is TRUE, then @a depth is</span>
<a name="l04478"></a>04478 <span class="comment"> * #svn_depth_infinity, else #svn_depth_empty.</span>
<a name="l04479"></a>04479 <span class="comment"> *</span>
<a name="l04480"></a>04480 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l04481"></a>04481 <span class="comment"> */</span>
<a name="l04482"></a>04482 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04483"></a>04483 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04484"></a>04484 <a class="code" href="group__svn__client__prop__funcs.html#gac4e012d04b8ac4b7637b01733c8dabaf" title="Similar to svn_client_propget3(), except that actual_revnum and changelists are always NULL...">svn_client_propget2</a>(apr_hash_t **props,
<a name="l04485"></a>04485                     <span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04486"></a>04486                     <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04487"></a>04487                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04488"></a>04488                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04489"></a>04489                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04490"></a>04490                     <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04491"></a>04491                     apr_pool_t *pool);
<a name="l04492"></a>04492 <span class="comment"></span>
<a name="l04493"></a>04493 <span class="comment">/**</span>
<a name="l04494"></a>04494 <span class="comment"> * Similar to svn_client_propget2(), except that @a peg_revision is</span>
<a name="l04495"></a>04495 <span class="comment"> * always the same as @a revision.</span>
<a name="l04496"></a>04496 <span class="comment"> *</span>
<a name="l04497"></a>04497 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04498"></a>04498 <span class="comment"> */</span>
<a name="l04499"></a>04499 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04500"></a>04500 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04501"></a>04501 <a class="code" href="group__svn__client__prop__funcs.html#ga221d812c03943439d6df7bc110d123aa" title="Similar to svn_client_propget2(), except that peg_revision is always the same as revision.">svn_client_propget</a>(apr_hash_t **props,
<a name="l04502"></a>04502                    <span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04503"></a>04503                    <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04504"></a>04504                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04505"></a>04505                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04506"></a>04506                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04507"></a>04507                    apr_pool_t *pool);
<a name="l04508"></a>04508 <span class="comment"></span>
<a name="l04509"></a>04509 <span class="comment">/** Set @a *propval to the value of @a propname on revision @a revision</span>
<a name="l04510"></a>04510 <span class="comment"> * in the repository represented by @a URL.  Use the authentication baton</span>
<a name="l04511"></a>04511 <span class="comment"> * in @a ctx for authentication, and @a pool for all memory allocation.</span>
<a name="l04512"></a>04512 <span class="comment"> * Return the actual rev queried in @a *set_rev.</span>
<a name="l04513"></a>04513 <span class="comment"> *</span>
<a name="l04514"></a>04514 <span class="comment"> * Note that unlike its cousin svn_client_propget(), this routine</span>
<a name="l04515"></a>04515 <span class="comment"> * doesn&#39;t affect the working copy at all; it&#39;s a pure network</span>
<a name="l04516"></a>04516 <span class="comment"> * operation that queries an *unversioned* property attached to a</span>
<a name="l04517"></a>04517 <span class="comment"> * revision.  This can query log messages, dates, authors, and the</span>
<a name="l04518"></a>04518 <span class="comment"> * like.</span>
<a name="l04519"></a>04519 <span class="comment"> */</span>
<a name="l04520"></a>04520 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04521"></a>04521 <a class="code" href="group__svn__client__prop__funcs.html#gae4b4f748cb82eaa41f865ba4a2766840" title="Set *propval to the value of propname on revision revision in the repository represented by URL...">svn_client_revprop_get</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l04522"></a>04522                        <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> **propval,
<a name="l04523"></a>04523                        <span class="keyword">const</span> <span class="keywordtype">char</span> *URL,
<a name="l04524"></a>04524                        <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04525"></a>04525                        <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *set_rev,
<a name="l04526"></a>04526                        <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04527"></a>04527                        apr_pool_t *pool);
<a name="l04528"></a>04528 <span class="comment"></span>
<a name="l04529"></a>04529 <span class="comment">/**</span>
<a name="l04530"></a>04530 <span class="comment"> * Invoke @a receiver with @a receiver_baton to return the regular properties</span>
<a name="l04531"></a>04531 <span class="comment"> * of @a target, a URL or working copy path.  @a receiver will be called</span>
<a name="l04532"></a>04532 <span class="comment"> * for each path encountered.</span>
<a name="l04533"></a>04533 <span class="comment"> *</span>
<a name="l04534"></a>04534 <span class="comment"> * If @a revision-&gt;kind is #svn_opt_revision_unspecified, then get</span>
<a name="l04535"></a>04535 <span class="comment"> * properties from the working copy, if @a target is a working copy</span>
<a name="l04536"></a>04536 <span class="comment"> * path, or from the repository head if @a target is a URL.  Else get</span>
<a name="l04537"></a>04537 <span class="comment"> * the properties as of @a revision.  The actual node revision</span>
<a name="l04538"></a>04538 <span class="comment"> * selected is determined by the path as it exists in @a peg_revision.</span>
<a name="l04539"></a>04539 <span class="comment"> * If @a peg_revision-&gt;kind is #svn_opt_revision_unspecified, then it</span>
<a name="l04540"></a>04540 <span class="comment"> * defaults to #svn_opt_revision_head for URLs or</span>
<a name="l04541"></a>04541 <span class="comment"> * #svn_opt_revision_working for WC targets.  Use the authentication</span>
<a name="l04542"></a>04542 <span class="comment"> * baton cached in @a ctx for authentication if contacting the</span>
<a name="l04543"></a>04543 <span class="comment"> * repository.</span>
<a name="l04544"></a>04544 <span class="comment"> *</span>
<a name="l04545"></a>04545 <span class="comment"> * If @a depth is #svn_depth_empty, list only the properties of</span>
<a name="l04546"></a>04546 <span class="comment"> * @a target itself.  If @a depth is #svn_depth_files, and</span>
<a name="l04547"></a>04547 <span class="comment"> * @a target is a directory, list the properties of @a target</span>
<a name="l04548"></a>04548 <span class="comment"> * and its file entries.  If #svn_depth_immediates, list the properties</span>
<a name="l04549"></a>04549 <span class="comment"> * of its immediate file and directory entries.  If #svn_depth_infinity,</span>
<a name="l04550"></a>04550 <span class="comment"> * list the properties of its file entries and recurse (with</span>
<a name="l04551"></a>04551 <span class="comment"> * #svn_depth_infinity) on directory entries.  #svn_depth_unknown is</span>
<a name="l04552"></a>04552 <span class="comment"> * equivalent to #svn_depth_empty.  All other values produce undefined</span>
<a name="l04553"></a>04553 <span class="comment"> * results.</span>
<a name="l04554"></a>04554 <span class="comment"> *</span>
<a name="l04555"></a>04555 <span class="comment"> * @a changelists is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l04556"></a>04556 <span class="comment"> * names, used as a restrictive filter on items whose properties are</span>
<a name="l04557"></a>04557 <span class="comment"> * listed; that is, don&#39;t list properties on any item unless it&#39;s a member</span>
<a name="l04558"></a>04558 <span class="comment"> * of one of those changelists.  If @a changelists is empty (or</span>
<a name="l04559"></a>04559 <span class="comment"> * altogether @c NULL), no changelist filtering occurs.</span>
<a name="l04560"></a>04560 <span class="comment"> *</span>
<a name="l04561"></a>04561 <span class="comment"> * If @a target is not found, return the error #SVN_ERR_ENTRY_NOT_FOUND.</span>
<a name="l04562"></a>04562 <span class="comment"> *</span>
<a name="l04563"></a>04563 <span class="comment"> * @since New in 1.5.</span>
<a name="l04564"></a>04564 <span class="comment"> */</span>
<a name="l04565"></a>04565 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04566"></a>04566 <a class="code" href="group__svn__client__prop__funcs.html#ga6a7566fa1adf53579caf96c584b419ff" title="Invoke receiver with receiver_baton to return the regular properties of target, a URL or working copy...">svn_client_proplist3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04567"></a>04567                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04568"></a>04568                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04569"></a>04569                      <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04570"></a>04570                      <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l04571"></a>04571                      <a class="code" href="group__clnt__commit.html#ga880d237c32626991c259e6fbced459d2" title="The callback invoked by svn_client_proplist3().">svn_proplist_receiver_t</a> receiver,
<a name="l04572"></a>04572                      <span class="keywordtype">void</span> *receiver_baton,
<a name="l04573"></a>04573                      <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04574"></a>04574                      apr_pool_t *pool);
<a name="l04575"></a>04575 <span class="comment"></span>
<a name="l04576"></a>04576 <span class="comment">/**</span>
<a name="l04577"></a>04577 <span class="comment"> * Similar to svn_client_proplist3(), except the properties are</span>
<a name="l04578"></a>04578 <span class="comment"> * returned as an array of #svn_client_proplist_item_t * structures</span>
<a name="l04579"></a>04579 <span class="comment"> * instead of by invoking the receiver function, there&#39;s no support</span>
<a name="l04580"></a>04580 <span class="comment"> * for @a changelists filtering, and @a recurse is used instead of a</span>
<a name="l04581"></a>04581 <span class="comment"> * #svn_depth_t parameter (FALSE corresponds to #svn_depth_empty,</span>
<a name="l04582"></a>04582 <span class="comment"> * and TRUE to #svn_depth_infinity).</span>
<a name="l04583"></a>04583 <span class="comment"> *</span>
<a name="l04584"></a>04584 <span class="comment"> * @since New in 1.2.</span>
<a name="l04585"></a>04585 <span class="comment"> *</span>
<a name="l04586"></a>04586 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l04587"></a>04587 <span class="comment"> */</span>
<a name="l04588"></a>04588 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04589"></a>04589 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04590"></a>04590 <a class="code" href="group__svn__client__prop__funcs.html#ga0c3fdcb55aead8324bea9bd29bdac8d4" title="Similar to svn_client_proplist3(), except the properties are returned as an array of svn_client_propl...">svn_client_proplist2</a>(apr_array_header_t **props,
<a name="l04591"></a>04591                      <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04592"></a>04592                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04593"></a>04593                      <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04594"></a>04594                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04595"></a>04595                      <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04596"></a>04596                      apr_pool_t *pool);
<a name="l04597"></a>04597 <span class="comment"></span>
<a name="l04598"></a>04598 <span class="comment">/**</span>
<a name="l04599"></a>04599 <span class="comment"> * Similar to svn_client_proplist2(), except that @a peg_revision is</span>
<a name="l04600"></a>04600 <span class="comment"> * always the same as @a revision.</span>
<a name="l04601"></a>04601 <span class="comment"> *</span>
<a name="l04602"></a>04602 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04603"></a>04603 <span class="comment"> */</span>
<a name="l04604"></a>04604 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04605"></a>04605 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04606"></a>04606 <a class="code" href="group__svn__client__prop__funcs.html#ga8c2d55caecf446513125697ff99ebb0b" title="Similar to svn_client_proplist2(), except that peg_revision is always the same as revision...">svn_client_proplist</a>(apr_array_header_t **props,
<a name="l04607"></a>04607                     <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04608"></a>04608                     <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04609"></a>04609                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04610"></a>04610                     <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04611"></a>04611                     apr_pool_t *pool);
<a name="l04612"></a>04612 <span class="comment"></span>
<a name="l04613"></a>04613 <span class="comment">/** Set @a *props to a hash of the revision props attached to @a revision in</span>
<a name="l04614"></a>04614 <span class="comment"> * the repository represented by @a URL.  Use the authentication baton cached</span>
<a name="l04615"></a>04615 <span class="comment"> * in @a ctx for authentication, and @a pool for all memory allocation.</span>
<a name="l04616"></a>04616 <span class="comment"> * Return the actual rev queried in @a *set_rev.</span>
<a name="l04617"></a>04617 <span class="comment"> *</span>
<a name="l04618"></a>04618 <span class="comment"> * The allocated hash maps (&lt;tt&gt;const char *&lt;/tt&gt;) property names to</span>
<a name="l04619"></a>04619 <span class="comment"> * (#svn_string_t *) property values.</span>
<a name="l04620"></a>04620 <span class="comment"> *</span>
<a name="l04621"></a>04621 <span class="comment"> * Note that unlike its cousin svn_client_proplist(), this routine</span>
<a name="l04622"></a>04622 <span class="comment"> * doesn&#39;t read a working copy at all; it&#39;s a pure network operation</span>
<a name="l04623"></a>04623 <span class="comment"> * that reads *unversioned* properties attached to a revision.</span>
<a name="l04624"></a>04624 <span class="comment"> */</span>
<a name="l04625"></a>04625 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04626"></a>04626 <a class="code" href="group__svn__client__prop__funcs.html#ga654187dc1ed77b326c11a8856a5315bd" title="Set *props to a hash of the revision props attached to revision in the repository represented by URL...">svn_client_revprop_list</a>(apr_hash_t **props,
<a name="l04627"></a>04627                         <span class="keyword">const</span> <span class="keywordtype">char</span> *URL,
<a name="l04628"></a>04628                         <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04629"></a>04629                         <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *set_rev,
<a name="l04630"></a>04630                         <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04631"></a>04631                         apr_pool_t *pool);<span class="comment"></span>
<a name="l04632"></a>04632 <span class="comment">/** @} */</span>
<a name="l04633"></a>04633 
<a name="l04634"></a>04634 <span class="comment"></span>
<a name="l04635"></a>04635 <span class="comment">/**</span>
<a name="l04636"></a>04636 <span class="comment"> * @defgroup Export Export a tree from version control.</span>
<a name="l04637"></a>04637 <span class="comment"> *</span>
<a name="l04638"></a>04638 <span class="comment"> * @{</span>
<a name="l04639"></a>04639 <span class="comment"> */</span>
<a name="l04640"></a>04640 <span class="comment"></span>
<a name="l04641"></a>04641 <span class="comment">/**</span>
<a name="l04642"></a>04642 <span class="comment"> * Export the contents of either a subversion repository or a</span>
<a name="l04643"></a>04643 <span class="comment"> * subversion working copy into a &#39;clean&#39; directory (meaning a</span>
<a name="l04644"></a>04644 <span class="comment"> * directory with no administrative directories).  If @a result_rev</span>
<a name="l04645"></a>04645 <span class="comment"> * is not @c NULL and the path being exported is a repository URL, set</span>
<a name="l04646"></a>04646 <span class="comment"> * @a *result_rev to the value of the revision actually exported (set</span>
<a name="l04647"></a>04647 <span class="comment"> * it to #SVN_INVALID_REVNUM for local exports).</span>
<a name="l04648"></a>04648 <span class="comment"> *</span>
<a name="l04649"></a>04649 <span class="comment"> * @a from_path_or_url is either the path the working copy on disk, or</span>
<a name="l04650"></a>04650 <span class="comment"> * a URL to the repository you wish to export.</span>
<a name="l04651"></a>04651 <span class="comment"> *</span>
<a name="l04652"></a>04652 <span class="comment"> * When exporting a directory, @a to_path is the path to the directory</span>
<a name="l04653"></a>04653 <span class="comment"> * where you wish to create the exported tree; when exporting a file, it</span>
<a name="l04654"></a>04654 <span class="comment"> * is the path of the file that will be created.  If @a to_path is the</span>
<a name="l04655"></a>04655 <span class="comment"> * empty path, then the basename of the export file/directory in the repository</span>
<a name="l04656"></a>04656 <span class="comment"> * will be used.  If @a to_path represents an existing directory, and a</span>
<a name="l04657"></a>04657 <span class="comment"> * file is being exported, then a file with the that basename will be</span>
<a name="l04658"></a>04658 <span class="comment"> * created under that directory (as with &#39;copy&#39; operations).</span>
<a name="l04659"></a>04659 <span class="comment"> *</span>
<a name="l04660"></a>04660 <span class="comment"> * @a peg_revision is the revision where the path is first looked up</span>
<a name="l04661"></a>04661 <span class="comment"> * when exporting from a repository.  If @a peg_revision-&gt;kind is</span>
<a name="l04662"></a>04662 <span class="comment"> * #svn_opt_revision_unspecified, then it defaults to #svn_opt_revision_head</span>
<a name="l04663"></a>04663 <span class="comment"> * for URLs or #svn_opt_revision_working for WC targets.</span>
<a name="l04664"></a>04664 <span class="comment"> *</span>
<a name="l04665"></a>04665 <span class="comment"> * @a revision is the revision that should be exported, which is only used</span>
<a name="l04666"></a>04666 <span class="comment"> * when exporting from a repository.</span>
<a name="l04667"></a>04667 <span class="comment"> *</span>
<a name="l04668"></a>04668 <span class="comment"> * @a peg_revision and @a revision must not be @c NULL.</span>
<a name="l04669"></a>04669 <span class="comment"> *</span>
<a name="l04670"></a>04670 <span class="comment"> * @a ctx-&gt;notify_func2 and @a ctx-&gt;notify_baton2 are the notification</span>
<a name="l04671"></a>04671 <span class="comment"> * functions and baton which are passed to svn_client_checkout() when</span>
<a name="l04672"></a>04672 <span class="comment"> * exporting from a repository.</span>
<a name="l04673"></a>04673 <span class="comment"> *</span>
<a name="l04674"></a>04674 <span class="comment"> * @a ctx is a context used for authentication in the repository case.</span>
<a name="l04675"></a>04675 <span class="comment"> *</span>
<a name="l04676"></a>04676 <span class="comment"> * @a overwrite if TRUE will cause the export to overwrite files or</span>
<a name="l04677"></a>04677 <span class="comment"> * directories.</span>
<a name="l04678"></a>04678 <span class="comment"> *</span>
<a name="l04679"></a>04679 <span class="comment"> * If @a ignore_externals is set, don&#39;t process externals definitions</span>
<a name="l04680"></a>04680 <span class="comment"> * as part of this operation.</span>
<a name="l04681"></a>04681 <span class="comment"> *</span>
<a name="l04682"></a>04682 <span class="comment"> * If @a ignore_keywords is set, don&#39;t expand keywords as part of this</span>
<a name="l04683"></a>04683 <span class="comment"> * operation.</span>
<a name="l04684"></a>04684 <span class="comment"> *</span>
<a name="l04685"></a>04685 <span class="comment"> * @a native_eol allows you to override the standard eol marker on the</span>
<a name="l04686"></a>04686 <span class="comment"> * platform you are running on.  Can be either &quot;LF&quot;, &quot;CR&quot; or &quot;CRLF&quot; or</span>
<a name="l04687"></a>04687 <span class="comment"> * NULL.  If NULL will use the standard eol marker.  Any other value</span>
<a name="l04688"></a>04688 <span class="comment"> * will cause the #SVN_ERR_IO_UNKNOWN_EOL error to be returned.</span>
<a name="l04689"></a>04689 <span class="comment"> *</span>
<a name="l04690"></a>04690 <span class="comment"> * If @a depth is #svn_depth_infinity, export fully recursively.  Else</span>
<a name="l04691"></a>04691 <span class="comment"> * if it is #svn_depth_immediates, export @a from_path_or_url and its</span>
<a name="l04692"></a>04692 <span class="comment"> * immediate children (if any), but with subdirectories empty and at</span>
<a name="l04693"></a>04693 <span class="comment"> * #svn_depth_empty.  Else if #svn_depth_files, export @a</span>
<a name="l04694"></a>04694 <span class="comment"> * from_path_or_url and its immediate file children (if any) only.  If</span>
<a name="l04695"></a>04695 <span class="comment"> * @a depth is #svn_depth_empty, then export exactly @a</span>
<a name="l04696"></a>04696 <span class="comment"> * from_path_or_url and none of its children.</span>
<a name="l04697"></a>04697 <span class="comment"> *</span>
<a name="l04698"></a>04698 <span class="comment"> * All allocations are done in @a pool.</span>
<a name="l04699"></a>04699 <span class="comment"> *</span>
<a name="l04700"></a>04700 <span class="comment"> * @since New in 1.7.</span>
<a name="l04701"></a>04701 <span class="comment"> */</span>
<a name="l04702"></a>04702 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04703"></a>04703 <a class="code" href="group__Export.html#ga012408fea426f8bc283890fdad6f0b1c" title="Export the contents of either a subversion repository or a subversion working copy into a &#39;clean&#39; dir...">svn_client_export5</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l04704"></a>04704                    <span class="keyword">const</span> <span class="keywordtype">char</span> *from_path_or_url,
<a name="l04705"></a>04705                    <span class="keyword">const</span> <span class="keywordtype">char</span> *to_path,
<a name="l04706"></a>04706                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04707"></a>04707                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04708"></a>04708                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> overwrite,
<a name="l04709"></a>04709                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l04710"></a>04710                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_keywords,
<a name="l04711"></a>04711                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04712"></a>04712                    <span class="keyword">const</span> <span class="keywordtype">char</span> *native_eol,
<a name="l04713"></a>04713                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04714"></a>04714                    apr_pool_t *pool);
<a name="l04715"></a>04715 <span class="comment"></span>
<a name="l04716"></a>04716 <span class="comment">/**</span>
<a name="l04717"></a>04717 <span class="comment"> * Similar to svn_client_export5(), but with @a ignore_keywords set</span>
<a name="l04718"></a>04718 <span class="comment"> * to FALSE.</span>
<a name="l04719"></a>04719 <span class="comment"> *</span>
<a name="l04720"></a>04720 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l04721"></a>04721 <span class="comment"> * @since New in 1.5.</span>
<a name="l04722"></a>04722 <span class="comment"> */</span>
<a name="l04723"></a>04723 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04724"></a>04724 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04725"></a>04725 <a class="code" href="group__Export.html#ga857c66dd608c477aa958a3676bc62635" title="Similar to svn_client_export5(), but with ignore_keywords set to FALSE.">svn_client_export4</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l04726"></a>04726                    <span class="keyword">const</span> <span class="keywordtype">char</span> *from_path_or_url,
<a name="l04727"></a>04727                    <span class="keyword">const</span> <span class="keywordtype">char</span> *to_path,
<a name="l04728"></a>04728                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04729"></a>04729                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04730"></a>04730                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> overwrite,
<a name="l04731"></a>04731                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l04732"></a>04732                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04733"></a>04733                    <span class="keyword">const</span> <span class="keywordtype">char</span> *native_eol,
<a name="l04734"></a>04734                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04735"></a>04735                    apr_pool_t *pool);
<a name="l04736"></a>04736 
<a name="l04737"></a>04737 <span class="comment"></span>
<a name="l04738"></a>04738 <span class="comment">/**</span>
<a name="l04739"></a>04739 <span class="comment"> * Similar to svn_client_export4(), but with @a depth set according to</span>
<a name="l04740"></a>04740 <span class="comment"> * @a recurse: if @a recurse is TRUE, set @a depth to</span>
<a name="l04741"></a>04741 <span class="comment"> * #svn_depth_infinity, if @a recurse is FALSE, set @a depth to</span>
<a name="l04742"></a>04742 <span class="comment"> * #svn_depth_files.</span>
<a name="l04743"></a>04743 <span class="comment"> *</span>
<a name="l04744"></a>04744 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l04745"></a>04745 <span class="comment"> *</span>
<a name="l04746"></a>04746 <span class="comment"> * @since New in 1.2.</span>
<a name="l04747"></a>04747 <span class="comment"> */</span>
<a name="l04748"></a>04748 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04749"></a>04749 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04750"></a>04750 <a class="code" href="group__Export.html#gab108048745bd5af45de9b7ab821340cb" title="Similar to svn_client_export4(), but with depth set according to recurse: if recurse is TRUE...">svn_client_export3</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l04751"></a>04751                    <span class="keyword">const</span> <span class="keywordtype">char</span> *from_path_or_url,
<a name="l04752"></a>04752                    <span class="keyword">const</span> <span class="keywordtype">char</span> *to_path,
<a name="l04753"></a>04753                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04754"></a>04754                    <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04755"></a>04755                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> overwrite,
<a name="l04756"></a>04756                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_externals,
<a name="l04757"></a>04757                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04758"></a>04758                    <span class="keyword">const</span> <span class="keywordtype">char</span> *native_eol,
<a name="l04759"></a>04759                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04760"></a>04760                    apr_pool_t *pool);
<a name="l04761"></a>04761 
<a name="l04762"></a>04762 <span class="comment"></span>
<a name="l04763"></a>04763 <span class="comment">/**</span>
<a name="l04764"></a>04764 <span class="comment"> * Similar to svn_client_export3(), but with @a peg_revision</span>
<a name="l04765"></a>04765 <span class="comment"> * always set to #svn_opt_revision_unspecified, @a overwrite set to</span>
<a name="l04766"></a>04766 <span class="comment"> * the value of @a force, @a ignore_externals always FALSE, and</span>
<a name="l04767"></a>04767 <span class="comment"> * @a recurse always TRUE.</span>
<a name="l04768"></a>04768 <span class="comment"> *</span>
<a name="l04769"></a>04769 <span class="comment"> * @since New in 1.1.</span>
<a name="l04770"></a>04770 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04771"></a>04771 <span class="comment"> */</span>
<a name="l04772"></a>04772 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04773"></a>04773 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04774"></a>04774 <a class="code" href="group__Export.html#ga2f0d4a7e4aa898959dfd1827cec164bc" title="Similar to svn_client_export3(), but with peg_revision always set to svn_opt_revision_unspecified, overwrite set to the value of force, ignore_externals always FALSE, and recurse always TRUE.">svn_client_export2</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l04775"></a>04775                    <span class="keyword">const</span> <span class="keywordtype">char</span> *from_path_or_url,
<a name="l04776"></a>04776                    <span class="keyword">const</span> <span class="keywordtype">char</span> *to_path,
<a name="l04777"></a>04777                    <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04778"></a>04778                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l04779"></a>04779                    <span class="keyword">const</span> <span class="keywordtype">char</span> *native_eol,
<a name="l04780"></a>04780                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04781"></a>04781                    apr_pool_t *pool);
<a name="l04782"></a>04782 
<a name="l04783"></a>04783 <span class="comment"></span>
<a name="l04784"></a>04784 <span class="comment">/**</span>
<a name="l04785"></a>04785 <span class="comment"> * Similar to svn_client_export2(), but with @a native_eol always set</span>
<a name="l04786"></a>04786 <span class="comment"> * to NULL.</span>
<a name="l04787"></a>04787 <span class="comment"> *</span>
<a name="l04788"></a>04788 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.0 API.</span>
<a name="l04789"></a>04789 <span class="comment"> */</span>
<a name="l04790"></a>04790 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04791"></a>04791 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04792"></a>04792 <a class="code" href="group__Export.html#ga076874f47094cd1928f17d899a8b76bc" title="Similar to svn_client_export2(), but with native_eol always set to NULL.">svn_client_export</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *result_rev,
<a name="l04793"></a>04793                   <span class="keyword">const</span> <span class="keywordtype">char</span> *from_path_or_url,
<a name="l04794"></a>04794                   <span class="keyword">const</span> <span class="keywordtype">char</span> *to_path,
<a name="l04795"></a>04795                   <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04796"></a>04796                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force,
<a name="l04797"></a>04797                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04798"></a>04798                   apr_pool_t *pool);
<a name="l04799"></a>04799 <span class="comment"></span>
<a name="l04800"></a>04800 <span class="comment">/** @} */</span>
<a name="l04801"></a>04801 <span class="comment"></span>
<a name="l04802"></a>04802 <span class="comment">/**</span>
<a name="l04803"></a>04803 <span class="comment"> * @defgroup List List / ls</span>
<a name="l04804"></a>04804 <span class="comment"> *</span>
<a name="l04805"></a>04805 <span class="comment"> * @{</span>
<a name="l04806"></a>04806 <span class="comment"> */</span>
<a name="l04807"></a>04807 <span class="comment"></span>
<a name="l04808"></a>04808 <span class="comment">/** The type of function invoked by svn_client_list2() to report the details</span>
<a name="l04809"></a>04809 <span class="comment"> * of each directory entry being listed.</span>
<a name="l04810"></a>04810 <span class="comment"> *</span>
<a name="l04811"></a>04811 <span class="comment"> * @a baton is the baton that was passed to the caller.  @a path is the</span>
<a name="l04812"></a>04812 <span class="comment"> * entry&#39;s path relative to @a abs_path; it is the empty path when reporting</span>
<a name="l04813"></a>04813 <span class="comment"> * the top node of the list operation.  @a dirent contains some or all of</span>
<a name="l04814"></a>04814 <span class="comment"> * the directory entry&#39;s details, as determined by the caller.  @a lock is</span>
<a name="l04815"></a>04815 <span class="comment"> * the entry&#39;s lock, if it is locked and if lock information is being</span>
<a name="l04816"></a>04816 <span class="comment"> * reported by the caller; otherwise @a lock is NULL.  @a abs_path is the</span>
<a name="l04817"></a>04817 <span class="comment"> * repository path of the top node of the list operation; it is relative to</span>
<a name="l04818"></a>04818 <span class="comment"> * the repository root and begins with &quot;/&quot;.  @a pool may be used for</span>
<a name="l04819"></a>04819 <span class="comment"> * temporary allocations.</span>
<a name="l04820"></a>04820 <span class="comment"> *</span>
<a name="l04821"></a>04821 <span class="comment"> * @since New in 1.4.</span>
<a name="l04822"></a>04822 <span class="comment"> */</span>
<a name="l04823"></a><a class="code" href="group__List.html#gad34331c2f22f8b5ee906c4abff0866d0">04823</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_list_func_t)(<span class="keywordtype">void</span> *baton,
<a name="l04824"></a>04824                                                <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04825"></a>04825                                                <span class="keyword">const</span> <a class="code" href="structsvn__dirent__t.html" title="A general subversion directory entry.">svn_dirent_t</a> *dirent,
<a name="l04826"></a>04826                                                <span class="keyword">const</span> <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *lock,
<a name="l04827"></a>04827                                                <span class="keyword">const</span> <span class="keywordtype">char</span> *abs_path,
<a name="l04828"></a>04828                                                apr_pool_t *pool);
<a name="l04829"></a>04829 <span class="comment"></span>
<a name="l04830"></a>04830 <span class="comment">/**</span>
<a name="l04831"></a>04831 <span class="comment"> * Report the directory entry, and possibly children, for @a</span>
<a name="l04832"></a>04832 <span class="comment"> * path_or_url at @a revision.  The actual node revision selected is</span>
<a name="l04833"></a>04833 <span class="comment"> * determined by the path as it exists in @a peg_revision.  If @a</span>
<a name="l04834"></a>04834 <span class="comment"> * peg_revision-&gt;kind is #svn_opt_revision_unspecified, then it defaults</span>
<a name="l04835"></a>04835 <span class="comment"> * to #svn_opt_revision_head for URLs or #svn_opt_revision_working</span>
<a name="l04836"></a>04836 <span class="comment"> * for WC targets.</span>
<a name="l04837"></a>04837 <span class="comment"> *</span>
<a name="l04838"></a>04838 <span class="comment"> * Report directory entries by invoking @a list_func/@a baton with @a path</span>
<a name="l04839"></a>04839 <span class="comment"> * relative to @a path_or_url.  The dirent for @a path_or_url is reported</span>
<a name="l04840"></a>04840 <span class="comment"> * using an empty @a path.  If @a path_or_url is a directory, also report</span>
<a name="l04841"></a>04841 <span class="comment"> * its children.  If @a path_or_url is non-existent, return</span>
<a name="l04842"></a>04842 <span class="comment"> * #SVN_ERR_FS_NOT_FOUND.</span>
<a name="l04843"></a>04843 <span class="comment"> *</span>
<a name="l04844"></a>04844 <span class="comment"> * If @a fetch_locks is TRUE, include locks when reporting directory entries.</span>
<a name="l04845"></a>04845 <span class="comment"> *</span>
<a name="l04846"></a>04846 <span class="comment"> * Use @a pool for temporary allocations.</span>
<a name="l04847"></a>04847 <span class="comment"> *</span>
<a name="l04848"></a>04848 <span class="comment"> * Use authentication baton cached in @a ctx to authenticate against the</span>
<a name="l04849"></a>04849 <span class="comment"> * repository.</span>
<a name="l04850"></a>04850 <span class="comment"> *</span>
<a name="l04851"></a>04851 <span class="comment"> * If @a depth is #svn_depth_empty, list just @a path_or_url itself.</span>
<a name="l04852"></a>04852 <span class="comment"> * If @a depth is #svn_depth_files, list @a path_or_url and its file</span>
<a name="l04853"></a>04853 <span class="comment"> * entries.  If #svn_depth_immediates, list its immediate file and</span>
<a name="l04854"></a>04854 <span class="comment"> * directory entries.  If #svn_depth_infinity, list file entries and</span>
<a name="l04855"></a>04855 <span class="comment"> * recurse (with #svn_depth_infinity) on directory entries.</span>
<a name="l04856"></a>04856 <span class="comment"> *</span>
<a name="l04857"></a>04857 <span class="comment"> * @a dirent_fields controls which fields in the #svn_dirent_t&#39;s are</span>
<a name="l04858"></a>04858 <span class="comment"> * filled in.  To have them totally filled in use #SVN_DIRENT_ALL,</span>
<a name="l04859"></a>04859 <span class="comment"> * otherwise simply bitwise OR together the combination of @c SVN_DIRENT_</span>
<a name="l04860"></a>04860 <span class="comment"> * fields you care about.</span>
<a name="l04861"></a>04861 <span class="comment"> *</span>
<a name="l04862"></a>04862 <span class="comment"> * @since New in 1.5.</span>
<a name="l04863"></a>04863 <span class="comment"> */</span>
<a name="l04864"></a>04864 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04865"></a>04865 <a class="code" href="group__List.html#ga3ac4238fdc4d135798fdcce31bff829a" title="Report the directory entry, and possibly children, for path_or_url at revision.">svn_client_list2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l04866"></a>04866                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04867"></a>04867                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04868"></a>04868                  <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04869"></a>04869                  apr_uint32_t dirent_fields,
<a name="l04870"></a>04870                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> fetch_locks,
<a name="l04871"></a>04871                  <a class="code" href="group__List.html#gad34331c2f22f8b5ee906c4abff0866d0" title="The type of function invoked by svn_client_list2() to report the details of each directory entry bein...">svn_client_list_func_t</a> list_func,
<a name="l04872"></a>04872                  <span class="keywordtype">void</span> *baton,
<a name="l04873"></a>04873                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04874"></a>04874                  apr_pool_t *pool);
<a name="l04875"></a>04875 <span class="comment"></span>
<a name="l04876"></a>04876 <span class="comment">/**</span>
<a name="l04877"></a>04877 <span class="comment"> * Similar to svn_client_list2(), but with @a recurse instead of @a depth.</span>
<a name="l04878"></a>04878 <span class="comment"> * If @a recurse is TRUE, pass #svn_depth_files for @a depth; else</span>
<a name="l04879"></a>04879 <span class="comment"> * pass #svn_depth_infinity.</span>
<a name="l04880"></a>04880 <span class="comment"> *</span>
<a name="l04881"></a>04881 <span class="comment"> * @since New in 1.4.</span>
<a name="l04882"></a>04882 <span class="comment"> *</span>
<a name="l04883"></a>04883 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l04884"></a>04884 <span class="comment"> */</span>
<a name="l04885"></a>04885 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04886"></a>04886 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04887"></a>04887 <a class="code" href="group__List.html#gafc3fe75c71359bd9e15e7ab3b1bd8b4a" title="Similar to svn_client_list2(), but with recurse instead of depth.">svn_client_list</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l04888"></a>04888                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04889"></a>04889                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04890"></a>04890                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04891"></a>04891                 apr_uint32_t dirent_fields,
<a name="l04892"></a>04892                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> fetch_locks,
<a name="l04893"></a>04893                 <a class="code" href="group__List.html#gad34331c2f22f8b5ee906c4abff0866d0" title="The type of function invoked by svn_client_list2() to report the details of each directory entry bein...">svn_client_list_func_t</a> list_func,
<a name="l04894"></a>04894                 <span class="keywordtype">void</span> *baton,
<a name="l04895"></a>04895                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04896"></a>04896                 apr_pool_t *pool);
<a name="l04897"></a>04897 <span class="comment"></span>
<a name="l04898"></a>04898 <span class="comment">/**</span>
<a name="l04899"></a>04899 <span class="comment"> * Same as svn_client_list(), but always passes #SVN_DIRENT_ALL for</span>
<a name="l04900"></a>04900 <span class="comment"> * the @a dirent_fields argument and returns all information in two</span>
<a name="l04901"></a>04901 <span class="comment"> * hash tables instead of invoking a callback.</span>
<a name="l04902"></a>04902 <span class="comment"> *</span>
<a name="l04903"></a>04903 <span class="comment"> * Set @a *dirents to a newly allocated hash of directory entries.</span>
<a name="l04904"></a>04904 <span class="comment"> * The @a dirents hash maps entry names (&lt;tt&gt;const char *&lt;/tt&gt;) to</span>
<a name="l04905"></a>04905 <span class="comment"> * #svn_dirent_t *&#39;s.</span>
<a name="l04906"></a>04906 <span class="comment"> *</span>
<a name="l04907"></a>04907 <span class="comment"> * If @a locks is not @c NULL, set @a *locks to a hash table mapping</span>
<a name="l04908"></a>04908 <span class="comment"> * entry names (&lt;tt&gt;const char *&lt;/tt&gt;) to #svn_lock_t *&#39;s.</span>
<a name="l04909"></a>04909 <span class="comment"> *</span>
<a name="l04910"></a>04910 <span class="comment"> * @since New in 1.3.</span>
<a name="l04911"></a>04911 <span class="comment"> *</span>
<a name="l04912"></a>04912 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.3 API.</span>
<a name="l04913"></a>04913 <span class="comment"> * Use svn_client_list2() instead.</span>
<a name="l04914"></a>04914 <span class="comment"> */</span>
<a name="l04915"></a>04915 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04916"></a>04916 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04917"></a>04917 <a class="code" href="group__List.html#ga6456f1be321b613a683fcefe3ea7dacd" title="Same as svn_client_list(), but always passes SVN_DIRENT_ALL for the dirent_fields argument and return...">svn_client_ls3</a>(apr_hash_t **dirents,
<a name="l04918"></a>04918                apr_hash_t **locks,
<a name="l04919"></a>04919                <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l04920"></a>04920                <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04921"></a>04921                <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04922"></a>04922                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04923"></a>04923                <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04924"></a>04924                apr_pool_t *pool);
<a name="l04925"></a>04925 <span class="comment"></span>
<a name="l04926"></a>04926 <span class="comment">/**</span>
<a name="l04927"></a>04927 <span class="comment"> * Same as svn_client_ls3(), but without the ability to get locks.</span>
<a name="l04928"></a>04928 <span class="comment"> *</span>
<a name="l04929"></a>04929 <span class="comment"> * @since New in 1.2.</span>
<a name="l04930"></a>04930 <span class="comment"> *</span>
<a name="l04931"></a>04931 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l04932"></a>04932 <span class="comment"> * Use svn_client_list2() instead.</span>
<a name="l04933"></a>04933 <span class="comment"> */</span>
<a name="l04934"></a>04934 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04935"></a>04935 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04936"></a>04936 <a class="code" href="group__List.html#gab034858ab9da2e9726890b301960d6dd" title="Same as svn_client_ls3(), but without the ability to get locks.">svn_client_ls2</a>(apr_hash_t **dirents,
<a name="l04937"></a>04937                <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l04938"></a>04938                <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04939"></a>04939                <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04940"></a>04940                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04941"></a>04941                <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04942"></a>04942                apr_pool_t *pool);
<a name="l04943"></a>04943 <span class="comment"></span>
<a name="l04944"></a>04944 <span class="comment">/**</span>
<a name="l04945"></a>04945 <span class="comment"> * Similar to svn_client_ls2() except that @a peg_revision is always</span>
<a name="l04946"></a>04946 <span class="comment"> * the same as @a revision.</span>
<a name="l04947"></a>04947 <span class="comment"> *</span>
<a name="l04948"></a>04948 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04949"></a>04949 <span class="comment"> * Use svn_client_list2() instead.</span>
<a name="l04950"></a>04950 <span class="comment"> */</span>
<a name="l04951"></a>04951 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04952"></a>04952 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04953"></a>04953 <a class="code" href="group__List.html#ga3e19fea4a3f30290845a246c801c9989" title="Similar to svn_client_ls2() except that peg_revision is always the same as revision.">svn_client_ls</a>(apr_hash_t **dirents,
<a name="l04954"></a>04954               <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l04955"></a>04955               <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l04956"></a>04956               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04957"></a>04957               <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l04958"></a>04958               apr_pool_t *pool);
<a name="l04959"></a>04959 
<a name="l04960"></a>04960 <span class="comment"></span>
<a name="l04961"></a>04961 <span class="comment">/** @} */</span>
<a name="l04962"></a>04962 <span class="comment"></span>
<a name="l04963"></a>04963 <span class="comment">/**</span>
<a name="l04964"></a>04964 <span class="comment"> * @defgroup Cat View the contents of a file in the repository.</span>
<a name="l04965"></a>04965 <span class="comment"> *</span>
<a name="l04966"></a>04966 <span class="comment"> * @{</span>
<a name="l04967"></a>04967 <span class="comment"> */</span>
<a name="l04968"></a>04968 <span class="comment"></span>
<a name="l04969"></a>04969 <span class="comment">/**</span>
<a name="l04970"></a>04970 <span class="comment"> * Output the content of a file.</span>
<a name="l04971"></a>04971 <span class="comment"> *</span>
<a name="l04972"></a>04972 <span class="comment"> * @param[in] out           The stream to which the content will be written.</span>
<a name="l04973"></a>04973 <span class="comment"> * @param[in] path_or_url   The path or URL of the file.</span>
<a name="l04974"></a>04974 <span class="comment"> * @param[in] peg_revision  The peg revision.</span>
<a name="l04975"></a>04975 <span class="comment"> * @param[in] revision  The operative revision.</span>
<a name="l04976"></a>04976 <span class="comment"> * @param[in] ctx   The standard client context, used for possible</span>
<a name="l04977"></a>04977 <span class="comment"> *                  authentication.</span>
<a name="l04978"></a>04978 <span class="comment"> * @param[in] pool  Used for any temporary allocation.</span>
<a name="l04979"></a>04979 <span class="comment"> *</span>
<a name="l04980"></a>04980 <span class="comment"> * @todo Add an expansion/translation flag?</span>
<a name="l04981"></a>04981 <span class="comment"> *</span>
<a name="l04982"></a>04982 <span class="comment"> * @return A pointer to an #svn_error_t of the type (this list is not</span>
<a name="l04983"></a>04983 <span class="comment"> *         exhaustive): &lt;br&gt;</span>
<a name="l04984"></a>04984 <span class="comment"> *         An unspecified error if @a revision is of kind</span>
<a name="l04985"></a>04985 <span class="comment"> *         #svn_opt_revision_previous (or some other kind that requires</span>
<a name="l04986"></a>04986 <span class="comment"> *         a local path), because the desired revision cannot be</span>
<a name="l04987"></a>04987 <span class="comment"> *         determined. &lt;br&gt;</span>
<a name="l04988"></a>04988 <span class="comment"> *         If no error occurred, return #SVN_NO_ERROR.</span>
<a name="l04989"></a>04989 <span class="comment"> *</span>
<a name="l04990"></a>04990 <span class="comment"> * @since New in 1.2.</span>
<a name="l04991"></a>04991 <span class="comment"> *</span>
<a name="l04992"></a>04992 <span class="comment"> * @see #svn_client_ctx_t &lt;br&gt; @ref clnt_revisions for</span>
<a name="l04993"></a>04993 <span class="comment"> *      a discussion of operative and peg revisions.</span>
<a name="l04994"></a>04994 <span class="comment"> */</span>
<a name="l04995"></a>04995 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04996"></a>04996 <a class="code" href="group__Cat.html#ga6bd671377a03f0f3c0ead8867c3ec756" title="Output the content of a file.">svn_client_cat2</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> *out,
<a name="l04997"></a>04997                 <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l04998"></a>04998                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l04999"></a>04999                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l05000"></a>05000                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05001"></a>05001                 apr_pool_t *pool);
<a name="l05002"></a>05002 
<a name="l05003"></a>05003 <span class="comment"></span>
<a name="l05004"></a>05004 <span class="comment">/**</span>
<a name="l05005"></a>05005 <span class="comment"> * Similar to svn_client_cat2() except that the peg revision is always</span>
<a name="l05006"></a>05006 <span class="comment"> * the same as @a revision.</span>
<a name="l05007"></a>05007 <span class="comment"> *</span>
<a name="l05008"></a>05008 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l05009"></a>05009 <span class="comment"> */</span>
<a name="l05010"></a>05010 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05011"></a>05011 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05012"></a>05012 <a class="code" href="group__Cat.html#gabb2c1e32cee3b382397c4ed00b5f17a7" title="Similar to svn_client_cat2() except that the peg revision is always the same as revision.">svn_client_cat</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> *out,
<a name="l05013"></a>05013                <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l05014"></a>05014                <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l05015"></a>05015                <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05016"></a>05016                apr_pool_t *pool);
<a name="l05017"></a>05017 <span class="comment"></span>
<a name="l05018"></a>05018 <span class="comment">/** @} end group: cat */</span>
<a name="l05019"></a>05019 
<a name="l05020"></a>05020 
<a name="l05021"></a>05021 <span class="comment"></span>
<a name="l05022"></a>05022 <span class="comment">/** Changelist commands</span>
<a name="l05023"></a>05023 <span class="comment"> *</span>
<a name="l05024"></a>05024 <span class="comment"> * @defgroup svn_client_changelist_funcs Client Changelist Functions</span>
<a name="l05025"></a>05025 <span class="comment"> * @{</span>
<a name="l05026"></a>05026 <span class="comment"> */</span>
<a name="l05027"></a>05027 <span class="comment"></span>
<a name="l05028"></a>05028 <span class="comment">/** Implementation note:</span>
<a name="l05029"></a>05029 <span class="comment"> *</span>
<a name="l05030"></a>05030 <span class="comment"> *  For now, changelists are implemented by scattering the</span>
<a name="l05031"></a>05031 <span class="comment"> *  associations across multiple .svn/entries files in a working copy.</span>
<a name="l05032"></a>05032 <span class="comment"> *  However, this client API was written so that we have the option of</span>
<a name="l05033"></a>05033 <span class="comment"> *  changing the underlying implementation -- we may someday want to</span>
<a name="l05034"></a>05034 <span class="comment"> *  store changelist definitions in a centralized database.</span>
<a name="l05035"></a>05035 <span class="comment"> */</span>
<a name="l05036"></a>05036 <span class="comment"></span>
<a name="l05037"></a>05037 <span class="comment">/**</span>
<a name="l05038"></a>05038 <span class="comment"> * Add each path in @a paths (recursing to @a depth as necessary) to</span>
<a name="l05039"></a>05039 <span class="comment"> * @a changelist.  If a path is already a member of another</span>
<a name="l05040"></a>05040 <span class="comment"> * changelist, then remove it from the other changelist and add it to</span>
<a name="l05041"></a>05041 <span class="comment"> * @a changelist.  (For now, a path cannot belong to two changelists</span>
<a name="l05042"></a>05042 <span class="comment"> * at once.)</span>
<a name="l05043"></a>05043 <span class="comment"> *</span>
<a name="l05044"></a>05044 <span class="comment"> * @a changelists is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l05045"></a>05045 <span class="comment"> * names, used as a restrictive filter on items whose changelist</span>
<a name="l05046"></a>05046 <span class="comment"> * assignments are adjusted; that is, don&#39;t tweak the changeset of any</span>
<a name="l05047"></a>05047 <span class="comment"> * item unless it&#39;s currently a member of one of those changelists.</span>
<a name="l05048"></a>05048 <span class="comment"> * If @a changelists is empty (or altogether @c NULL), no changelist</span>
<a name="l05049"></a>05049 <span class="comment"> * filtering occurs.</span>
<a name="l05050"></a>05050 <span class="comment"> *</span>
<a name="l05051"></a>05051 <span class="comment"> * @note This metadata is purely a client-side &quot;bookkeeping&quot;</span>
<a name="l05052"></a>05052 <span class="comment"> * convenience, and is entirely managed by the working copy.</span>
<a name="l05053"></a>05053 <span class="comment"> *</span>
<a name="l05054"></a>05054 <span class="comment"> * @since New in 1.5.</span>
<a name="l05055"></a>05055 <span class="comment"> */</span>
<a name="l05056"></a>05056 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05057"></a>05057 <a class="code" href="group__svn__client__changelist__funcs.html#gabb59ec24aaf8e0efe15d37e58839d0ea" title="Implementation note:">svn_client_add_to_changelist</a>(<span class="keyword">const</span> apr_array_header_t *paths,
<a name="l05058"></a>05058                              <span class="keyword">const</span> <span class="keywordtype">char</span> *changelist,
<a name="l05059"></a>05059                              <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05060"></a>05060                              <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l05061"></a>05061                              <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05062"></a>05062                              apr_pool_t *pool);
<a name="l05063"></a>05063 <span class="comment"></span>
<a name="l05064"></a>05064 <span class="comment">/**</span>
<a name="l05065"></a>05065 <span class="comment"> * Remove each path in @a paths (recursing to @a depth as necessary)</span>
<a name="l05066"></a>05066 <span class="comment"> * from changelists to which they are currently assigned.</span>
<a name="l05067"></a>05067 <span class="comment"> *</span>
<a name="l05068"></a>05068 <span class="comment"> * @a changelists is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l05069"></a>05069 <span class="comment"> * names, used as a restrictive filter on items whose changelist</span>
<a name="l05070"></a>05070 <span class="comment"> * assignments are removed; that is, don&#39;t remove from a changeset any</span>
<a name="l05071"></a>05071 <span class="comment"> * item unless it&#39;s currently a member of one of those changelists.</span>
<a name="l05072"></a>05072 <span class="comment"> * If @a changelists is empty (or altogether @c NULL), all changelist</span>
<a name="l05073"></a>05073 <span class="comment"> * assignments in and under each path in @a paths (to @a depth) will</span>
<a name="l05074"></a>05074 <span class="comment"> * be removed.</span>
<a name="l05075"></a>05075 <span class="comment"> *</span>
<a name="l05076"></a>05076 <span class="comment"> * @note This metadata is purely a client-side &quot;bookkeeping&quot;</span>
<a name="l05077"></a>05077 <span class="comment"> * convenience, and is entirely managed by the working copy.</span>
<a name="l05078"></a>05078 <span class="comment"> *</span>
<a name="l05079"></a>05079 <span class="comment"> * @since New in 1.5.</span>
<a name="l05080"></a>05080 <span class="comment"> */</span>
<a name="l05081"></a>05081 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05082"></a>05082 <a class="code" href="group__svn__client__changelist__funcs.html#gaade2b6ac67faced5c022c42b7be5b683" title="Remove each path in paths (recursing to depth as necessary) from changelists to which they are curren...">svn_client_remove_from_changelists</a>(<span class="keyword">const</span> apr_array_header_t *paths,
<a name="l05083"></a>05083                                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05084"></a>05084                                    <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l05085"></a>05085                                    <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05086"></a>05086                                    apr_pool_t *pool);
<a name="l05087"></a>05087 
<a name="l05088"></a>05088 <span class="comment"></span>
<a name="l05089"></a>05089 <span class="comment">/**</span>
<a name="l05090"></a>05090 <span class="comment"> * Beginning at @a path, crawl to @a depth to discover every path in</span>
<a name="l05091"></a>05091 <span class="comment"> * or under @a path which belongs to one of the changelists in @a</span>
<a name="l05092"></a>05092 <span class="comment"> * changelists (an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist names).</span>
<a name="l05093"></a>05093 <span class="comment"> * If @a changelists is @c NULL, discover paths with any changelist.</span>
<a name="l05094"></a>05094 <span class="comment"> * Call @a callback_func (with @a callback_baton) each time a</span>
<a name="l05095"></a>05095 <span class="comment"> * changelist-having path is discovered.</span>
<a name="l05096"></a>05096 <span class="comment"> *</span>
<a name="l05097"></a>05097 <span class="comment"> * If @a ctx-&gt;cancel_func is not @c NULL, invoke it passing @a</span>
<a name="l05098"></a>05098 <span class="comment"> * ctx-&gt;cancel_baton during the recursive walk.</span>
<a name="l05099"></a>05099 <span class="comment"> *</span>
<a name="l05100"></a>05100 <span class="comment"> * @since New in 1.5.</span>
<a name="l05101"></a>05101 <span class="comment"> */</span>
<a name="l05102"></a>05102 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05103"></a>05103 <a class="code" href="group__svn__client__changelist__funcs.html#gabfbb2f162cd296e4360fa3276523bc01" title="Beginning at path, crawl to depth to discover every path in or under path which belongs to one of the...">svn_client_get_changelists</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05104"></a>05104                            <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l05105"></a>05105                            <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05106"></a>05106                            <a class="code" href="group__svn__wc.html#gaae18ec52a5dadbfa1f56a67cd70c0bfc" title="The callback type used by svn_client_get_changelists().">svn_changelist_receiver_t</a> callback_func,
<a name="l05107"></a>05107                            <span class="keywordtype">void</span> *callback_baton,
<a name="l05108"></a>05108                            <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05109"></a>05109                            apr_pool_t *pool);
<a name="l05110"></a>05110 <span class="comment"></span>
<a name="l05111"></a>05111 <span class="comment">/** @} */</span>
<a name="l05112"></a>05112 
<a name="l05113"></a>05113 
<a name="l05114"></a>05114 <span class="comment"></span>
<a name="l05115"></a>05115 <span class="comment">/** Locking commands</span>
<a name="l05116"></a>05116 <span class="comment"> *</span>
<a name="l05117"></a>05117 <span class="comment"> * @defgroup svn_client_locking_funcs Client Locking Functions</span>
<a name="l05118"></a>05118 <span class="comment"> * @{</span>
<a name="l05119"></a>05119 <span class="comment"> */</span>
<a name="l05120"></a>05120 <span class="comment"></span>
<a name="l05121"></a>05121 <span class="comment">/**</span>
<a name="l05122"></a>05122 <span class="comment"> * Lock @a targets in the repository.  @a targets is an array of</span>
<a name="l05123"></a>05123 <span class="comment"> * &lt;tt&gt;const char *&lt;/tt&gt; paths - either all working copy paths or URLs.  All</span>
<a name="l05124"></a>05124 <span class="comment"> * @a targets must be in the same repository.</span>
<a name="l05125"></a>05125 <span class="comment"> *</span>
<a name="l05126"></a>05126 <span class="comment"> * If a target is already locked in the repository, no lock will be</span>
<a name="l05127"></a>05127 <span class="comment"> * acquired unless @a steal_lock is TRUE, in which case the locks are</span>
<a name="l05128"></a>05128 <span class="comment"> * stolen.  @a comment, if non-NULL, is an xml-escapable description</span>
<a name="l05129"></a>05129 <span class="comment"> * stored with each lock in the repository.  Each acquired lock will</span>
<a name="l05130"></a>05130 <span class="comment"> * be stored in the working copy if the targets are WC paths.</span>
<a name="l05131"></a>05131 <span class="comment"> *</span>
<a name="l05132"></a>05132 <span class="comment"> * For each target @a ctx-&gt;notify_func2/notify_baton2 will be used to indicate</span>
<a name="l05133"></a>05133 <span class="comment"> * whether it was locked.  An action of #svn_wc_notify_locked</span>
<a name="l05134"></a>05134 <span class="comment"> * means that the path was locked.  If the path was not locked because</span>
<a name="l05135"></a>05135 <span class="comment"> * it was out of date or there was already a lock in the repository,</span>
<a name="l05136"></a>05136 <span class="comment"> * the notification function will be called with</span>
<a name="l05137"></a>05137 <span class="comment"> * #svn_wc_notify_failed_lock, and the error passed in the notification</span>
<a name="l05138"></a>05138 <span class="comment"> * structure.</span>
<a name="l05139"></a>05139 <span class="comment"> *</span>
<a name="l05140"></a>05140 <span class="comment"> * Use @a pool for temporary allocations.</span>
<a name="l05141"></a>05141 <span class="comment"> *</span>
<a name="l05142"></a>05142 <span class="comment"> * @since New in 1.2.</span>
<a name="l05143"></a>05143 <span class="comment"> */</span>
<a name="l05144"></a>05144 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05145"></a>05145 <a class="code" href="group__svn__client__locking__funcs.html#gad679aa233e3e5151ba93fa756b9729f4" title="Lock targets in the repository.">svn_client_lock</a>(<span class="keyword">const</span> apr_array_header_t *targets,
<a name="l05146"></a>05146                 <span class="keyword">const</span> <span class="keywordtype">char</span> *comment,
<a name="l05147"></a>05147                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> steal_lock,
<a name="l05148"></a>05148                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05149"></a>05149                 apr_pool_t *pool);
<a name="l05150"></a>05150 <span class="comment"></span>
<a name="l05151"></a>05151 <span class="comment">/**</span>
<a name="l05152"></a>05152 <span class="comment"> * Unlock @a targets in the repository.  @a targets is an array of</span>
<a name="l05153"></a>05153 <span class="comment"> * &lt;tt&gt;const char *&lt;/tt&gt; paths - either all working copy paths or all URLs.</span>
<a name="l05154"></a>05154 <span class="comment"> * All @a targets must be in the same repository.</span>
<a name="l05155"></a>05155 <span class="comment"> *</span>
<a name="l05156"></a>05156 <span class="comment"> * If the targets are WC paths, and @a break_lock is FALSE, the working</span>
<a name="l05157"></a>05157 <span class="comment"> * copy must contain a locks for each target.</span>
<a name="l05158"></a>05158 <span class="comment"> * If this is not the case, or the working copy lock doesn&#39;t match the</span>
<a name="l05159"></a>05159 <span class="comment"> * lock token in the repository, an error will be signaled.</span>
<a name="l05160"></a>05160 <span class="comment"> *</span>
<a name="l05161"></a>05161 <span class="comment"> * If the targets are URLs, the locks may be broken even if @a break_lock</span>
<a name="l05162"></a>05162 <span class="comment"> * is FALSE, but only if the lock owner is the same as the</span>
<a name="l05163"></a>05163 <span class="comment"> * authenticated user.</span>
<a name="l05164"></a>05164 <span class="comment"> *</span>
<a name="l05165"></a>05165 <span class="comment"> * If @a break_lock is TRUE, the locks will be broken in the</span>
<a name="l05166"></a>05166 <span class="comment"> * repository.  In both cases, the locks, if any, will be removed from</span>
<a name="l05167"></a>05167 <span class="comment"> * the working copy if the targets are WC paths.</span>
<a name="l05168"></a>05168 <span class="comment"> *</span>
<a name="l05169"></a>05169 <span class="comment"> * The notification functions in @a ctx will be called for each</span>
<a name="l05170"></a>05170 <span class="comment"> * target.  If the target was successfully unlocked,</span>
<a name="l05171"></a>05171 <span class="comment"> * #svn_wc_notify_unlocked will be used.  Else, if the error is</span>
<a name="l05172"></a>05172 <span class="comment"> * directly related to unlocking the path (see</span>
<a name="l05173"></a>05173 <span class="comment"> * #SVN_ERR_IS_UNLOCK_ERROR), #svn_wc_notify_failed_unlock will be</span>
<a name="l05174"></a>05174 <span class="comment"> * used and the error will be passed in the notification structure.</span>
<a name="l05175"></a>05175 <span class="comment"></span>
<a name="l05176"></a>05176 <span class="comment"> * Use @a pool for temporary allocations.</span>
<a name="l05177"></a>05177 <span class="comment"> *</span>
<a name="l05178"></a>05178 <span class="comment"> * @since New in 1.2.</span>
<a name="l05179"></a>05179 <span class="comment"> */</span>
<a name="l05180"></a>05180 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05181"></a>05181 <a class="code" href="group__svn__client__locking__funcs.html#ga003ddadf4634bae7f64d060d0f2835b2" title="Unlock targets in the repository.">svn_client_unlock</a>(<span class="keyword">const</span> apr_array_header_t *targets,
<a name="l05182"></a>05182                   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> break_lock,
<a name="l05183"></a>05183                   <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05184"></a>05184                   apr_pool_t *pool);
<a name="l05185"></a>05185 <span class="comment"></span>
<a name="l05186"></a>05186 <span class="comment">/** @} */</span>
<a name="l05187"></a>05187 <span class="comment"></span>
<a name="l05188"></a>05188 <span class="comment">/**</span>
<a name="l05189"></a>05189 <span class="comment"> * @defgroup Info Show repository information about a working copy.</span>
<a name="l05190"></a>05190 <span class="comment"> *</span>
<a name="l05191"></a>05191 <span class="comment"> * @{</span>
<a name="l05192"></a>05192 <span class="comment"> */</span>
<a name="l05193"></a>05193 <span class="comment"></span>
<a name="l05194"></a>05194 <span class="comment">/** The size of the file is unknown.</span>
<a name="l05195"></a>05195 <span class="comment"> * Used as value in fields of type @c apr_size_t in #svn_info_t.</span>
<a name="l05196"></a>05196 <span class="comment"> *</span>
<a name="l05197"></a>05197 <span class="comment"> * @since New in 1.5</span>
<a name="l05198"></a>05198 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l05199"></a>05199 <span class="comment"> */</span>
<a name="l05200"></a><a class="code" href="group__Info.html#ga12636e3cc95723d77871236446f7f806">05200</a> <span class="preprocessor">#define SVN_INFO_SIZE_UNKNOWN ((apr_size_t) -1)</span>
<a name="l05201"></a>05201 <span class="preprocessor"></span><span class="comment"></span>
<a name="l05202"></a>05202 <span class="comment">/**</span>
<a name="l05203"></a>05203 <span class="comment"> * A structure which describes various system-generated metadata about</span>
<a name="l05204"></a>05204 <span class="comment"> * a working-copy path or URL.</span>
<a name="l05205"></a>05205 <span class="comment"> *</span>
<a name="l05206"></a>05206 <span class="comment"> * @note Fields may be added to the end of this structure in future</span>
<a name="l05207"></a>05207 <span class="comment"> * versions.  Therefore, users shouldn&#39;t allocate structures of this</span>
<a name="l05208"></a>05208 <span class="comment"> * type, to preserve binary compatibility.</span>
<a name="l05209"></a>05209 <span class="comment"> *</span>
<a name="l05210"></a>05210 <span class="comment"> * @since New in 1.2.</span>
<a name="l05211"></a>05211 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.  The new</span>
<a name="l05212"></a>05212 <span class="comment"> * API is #svn_client_info2_t.</span>
<a name="l05213"></a>05213 <span class="comment"> */</span>
<a name="l05214"></a><a class="code" href="structsvn__info__t.html">05214</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__info__t.html" title="A structure which describes various system-generated metadata about a working-copy path or URL...">svn_info_t</a>
<a name="l05215"></a>05215 {<span class="comment"></span>
<a name="l05216"></a>05216 <span class="comment">  /** Where the item lives in the repository. */</span>
<a name="l05217"></a><a class="code" href="structsvn__info__t.html#a158d8adf66fcbbdafabce1ee8c386619">05217</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__info__t.html#a158d8adf66fcbbdafabce1ee8c386619" title="Where the item lives in the repository.">URL</a>;
<a name="l05218"></a>05218 <span class="comment"></span>
<a name="l05219"></a>05219 <span class="comment">  /** The revision of the object.  If path_or_url is a working-copy</span>
<a name="l05220"></a>05220 <span class="comment">   * path, then this is its current working revnum.  If path_or_url</span>
<a name="l05221"></a>05221 <span class="comment">   * is a URL, then this is the repos revision that path_or_url lives in. */</span>
<a name="l05222"></a><a class="code" href="structsvn__info__t.html#a4f1c74c132ea73706010f2f7e5d9b3fd">05222</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__info__t.html#a4f1c74c132ea73706010f2f7e5d9b3fd" title="The revision of the object.">rev</a>;
<a name="l05223"></a>05223 <span class="comment"></span>
<a name="l05224"></a>05224 <span class="comment">  /** The node&#39;s kind. */</span>
<a name="l05225"></a><a class="code" href="structsvn__info__t.html#a08640fd1800a6b0a93ede2aa03c9090f">05225</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__info__t.html#a08640fd1800a6b0a93ede2aa03c9090f" title="The node&#39;s kind.">kind</a>;
<a name="l05226"></a>05226 <span class="comment"></span>
<a name="l05227"></a>05227 <span class="comment">  /** The root URL of the repository. */</span>
<a name="l05228"></a><a class="code" href="structsvn__info__t.html#a70310257dd4cc9e5086ffa6be0e4e73e">05228</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__info__t.html#a70310257dd4cc9e5086ffa6be0e4e73e" title="The root URL of the repository.">repos_root_URL</a>;
<a name="l05229"></a>05229 <span class="comment"></span>
<a name="l05230"></a>05230 <span class="comment">  /** The repository&#39;s UUID. */</span>
<a name="l05231"></a><a class="code" href="structsvn__info__t.html#a30040663266bc6e2409d1d3fb53fc479">05231</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__info__t.html#a30040663266bc6e2409d1d3fb53fc479" title="The repository&#39;s UUID.">repos_UUID</a>;
<a name="l05232"></a>05232 <span class="comment"></span>
<a name="l05233"></a>05233 <span class="comment">  /** The last revision in which this object changed. */</span>
<a name="l05234"></a><a class="code" href="structsvn__info__t.html#a6bf4e580c51007aba14aa309f29b97d3">05234</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__info__t.html#a6bf4e580c51007aba14aa309f29b97d3" title="The last revision in which this object changed.">last_changed_rev</a>;
<a name="l05235"></a>05235 <span class="comment"></span>
<a name="l05236"></a>05236 <span class="comment">  /** The date of the last_changed_rev. */</span>
<a name="l05237"></a><a class="code" href="structsvn__info__t.html#a71ac293016485c47a7c7b914a88f5633">05237</a>   apr_time_t <a class="code" href="structsvn__info__t.html#a71ac293016485c47a7c7b914a88f5633" title="The date of the last_changed_rev.">last_changed_date</a>;
<a name="l05238"></a>05238 <span class="comment"></span>
<a name="l05239"></a>05239 <span class="comment">  /** The author of the last_changed_rev. */</span>
<a name="l05240"></a><a class="code" href="structsvn__info__t.html#af976cfd4431179105246f9fc6bdaa231">05240</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__info__t.html#af976cfd4431179105246f9fc6bdaa231" title="The author of the last_changed_rev.">last_changed_author</a>;
<a name="l05241"></a>05241 <span class="comment"></span>
<a name="l05242"></a>05242 <span class="comment">  /** An exclusive lock, if present.  Could be either local or remote. */</span>
<a name="l05243"></a><a class="code" href="structsvn__info__t.html#ab4faf85b4cff67a5bf245d8c7a6979d1">05243</a>   <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *<a class="code" href="structsvn__info__t.html#ab4faf85b4cff67a5bf245d8c7a6979d1" title="An exclusive lock, if present.">lock</a>;
<a name="l05244"></a>05244 <span class="comment"></span>
<a name="l05245"></a>05245 <span class="comment">  /** Whether or not to ignore the next 10 wc-specific fields. */</span>
<a name="l05246"></a><a class="code" href="structsvn__info__t.html#aae55dc251c9eb78f3cd1a276f0de30e9">05246</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__info__t.html#aae55dc251c9eb78f3cd1a276f0de30e9" title="Whether or not to ignore the next 10 wc-specific fields.">has_wc_info</a>;
<a name="l05247"></a>05247 <span class="comment"></span>
<a name="l05248"></a>05248 <span class="comment">  /**</span>
<a name="l05249"></a>05249 <span class="comment">   * @name Working-copy path fields</span>
<a name="l05250"></a>05250 <span class="comment">   * These things only apply to a working-copy path.</span>
<a name="l05251"></a>05251 <span class="comment">   * See svn_wc_entry_t for explanations.</span>
<a name="l05252"></a>05252 <span class="comment">   * @{</span>
<a name="l05253"></a>05253 <span class="comment">   */</span>
<a name="l05254"></a>05254   <a class="code" href="group__svn__wc__entries.html#ga5b1b7ce549f51d19cb0c0af8d9416ae9" title="The schedule states an entry can be in.">svn_wc_schedule_t</a> schedule;
<a name="l05255"></a>05255   <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_url;
<a name="l05256"></a>05256   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_rev;
<a name="l05257"></a>05257   apr_time_t text_time;
<a name="l05258"></a>05258   apr_time_t prop_time;  <span class="comment">/* will always be 0 for svn 1.4 and later */</span>
<a name="l05259"></a>05259   <span class="keyword">const</span> <span class="keywordtype">char</span> *checksum;
<a name="l05260"></a>05260   <span class="keyword">const</span> <span class="keywordtype">char</span> *conflict_old;
<a name="l05261"></a>05261   <span class="keyword">const</span> <span class="keywordtype">char</span> *conflict_new;
<a name="l05262"></a>05262   <span class="keyword">const</span> <span class="keywordtype">char</span> *conflict_wrk;
<a name="l05263"></a>05263   <span class="keyword">const</span> <span class="keywordtype">char</span> *prejfile;<span class="comment"></span>
<a name="l05264"></a>05264 <span class="comment">  /** @since New in 1.5. */</span>
<a name="l05265"></a><a class="code" href="structsvn__info__t.html#ae6692b895dc88cd7690ffa6606b16bb1">05265</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__info__t.html#ae6692b895dc88cd7690ffa6606b16bb1">changelist</a>;<span class="comment"></span>
<a name="l05266"></a>05266 <span class="comment">  /** @since New in 1.5. */</span>
<a name="l05267"></a><a class="code" href="structsvn__info__t.html#ae68801e9b303f85dcc54a7d6a0649e90">05267</a>   <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> <a class="code" href="structsvn__info__t.html#ae68801e9b303f85dcc54a7d6a0649e90">depth</a>;
<a name="l05268"></a>05268 <span class="comment"></span>
<a name="l05269"></a>05269 <span class="comment">  /**</span>
<a name="l05270"></a>05270 <span class="comment">   * Similar to working_size64, but will be #SVN_INFO_SIZE_UNKNOWN when</span>
<a name="l05271"></a>05271 <span class="comment">   * its value would overflow apr_size_t (so when size &gt;= 4 GB - 1 byte).</span>
<a name="l05272"></a>05272 <span class="comment">   *</span>
<a name="l05273"></a>05273 <span class="comment">   * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l05274"></a>05274 <span class="comment">   */</span>
<a name="l05275"></a><a class="code" href="structsvn__info__t.html#aa7aeb9d7901df7b61f6f12677a6fdf45">05275</a>   apr_size_t <a class="code" href="structsvn__info__t.html#aa7aeb9d7901df7b61f6f12677a6fdf45" title="Similar to working_size64, but will be SVN_INFO_SIZE_UNKNOWN when its value would overflow apr_size_t...">working_size</a>;
<a name="l05276"></a>05276 <span class="comment"></span>
<a name="l05277"></a>05277 <span class="comment">  /** @} */</span>
<a name="l05278"></a>05278 <span class="comment"></span>
<a name="l05279"></a>05279 <span class="comment">  /**</span>
<a name="l05280"></a>05280 <span class="comment">   * Similar to size64, but size will be #SVN_INFO_SIZE_UNKNOWN when</span>
<a name="l05281"></a>05281 <span class="comment">   * its value would overflow apr_size_t (so when size &gt;= 4 GB - 1 byte).</span>
<a name="l05282"></a>05282 <span class="comment">   *</span>
<a name="l05283"></a>05283 <span class="comment">   * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l05284"></a>05284 <span class="comment">   */</span>
<a name="l05285"></a><a class="code" href="structsvn__info__t.html#a7f55a6c0da12b88347766367f0caaac3">05285</a>   apr_size_t <a class="code" href="structsvn__info__t.html#a7f55a6c0da12b88347766367f0caaac3" title="Similar to size64, but size will be SVN_INFO_SIZE_UNKNOWN when its value would overflow apr_size_t (s...">size</a>;
<a name="l05286"></a>05286 <span class="comment"></span>
<a name="l05287"></a>05287 <span class="comment">  /**</span>
<a name="l05288"></a>05288 <span class="comment">   * The size of the file in the repository (untranslated,</span>
<a name="l05289"></a>05289 <span class="comment">   * e.g. without adjustment of line endings and keyword</span>
<a name="l05290"></a>05290 <span class="comment">   * expansion). Only applicable for file -- not directory -- URLs.</span>
<a name="l05291"></a>05291 <span class="comment">   * For working copy paths, size64 will be #SVN_INVALID_FILESIZE.</span>
<a name="l05292"></a>05292 <span class="comment">   * @since New in 1.6.</span>
<a name="l05293"></a>05293 <span class="comment">   */</span>
<a name="l05294"></a><a class="code" href="structsvn__info__t.html#a3ec2efb6765eee4a37153e5423ee661d">05294</a>   <a class="code" href="svn__types_8h.html#a726e581898461c1d3e7dbdb16d99dad0" title="The size of a file in the Subversion FS.">svn_filesize_t</a> <a class="code" href="structsvn__info__t.html#a3ec2efb6765eee4a37153e5423ee661d" title="The size of the file in the repository (untranslated, e.g.">size64</a>;
<a name="l05295"></a>05295 <span class="comment"></span>
<a name="l05296"></a>05296 <span class="comment">  /**</span>
<a name="l05297"></a>05297 <span class="comment">   * The size of the file after being translated into its local</span>
<a name="l05298"></a>05298 <span class="comment">   * representation, or #SVN_INVALID_FILESIZE if unknown.</span>
<a name="l05299"></a>05299 <span class="comment">   * Not applicable for directories.</span>
<a name="l05300"></a>05300 <span class="comment">   * @since New in 1.6.</span>
<a name="l05301"></a>05301 <span class="comment">   * @name Working-copy path fields</span>
<a name="l05302"></a>05302 <span class="comment">   * @{</span>
<a name="l05303"></a>05303 <span class="comment">   */</span>
<a name="l05304"></a>05304   <a class="code" href="svn__types_8h.html#a726e581898461c1d3e7dbdb16d99dad0" title="The size of a file in the Subversion FS.">svn_filesize_t</a> working_size64;
<a name="l05305"></a>05305 <span class="comment"></span>
<a name="l05306"></a>05306 <span class="comment">  /**</span>
<a name="l05307"></a>05307 <span class="comment">   * Info on any tree conflict of which this node is a victim. Otherwise NULL.</span>
<a name="l05308"></a>05308 <span class="comment">   * @since New in 1.6.</span>
<a name="l05309"></a>05309 <span class="comment">   */</span>
<a name="l05310"></a><a class="code" href="structsvn__info__t.html#a39186ac5b5dadbc69b17c6cded6b02c3">05310</a>   <a class="code" href="structsvn__wc__conflict__description__t.html" title="Similar to svn_wc_conflict_description2_t, but with relative paths and adm_access batons...">svn_wc_conflict_description_t</a> *<a class="code" href="structsvn__info__t.html#a39186ac5b5dadbc69b17c6cded6b02c3" title="Info on any tree conflict of which this node is a victim.">tree_conflict</a>;
<a name="l05311"></a>05311 <span class="comment"></span>
<a name="l05312"></a>05312 <span class="comment">  /** @} */</span>
<a name="l05313"></a>05313 
<a name="l05314"></a>05314 } <a class="code" href="group__Info.html#ga062f3eeacd9dc109f0c792cfca51f45f" title="A structure which describes various system-generated metadata about a working-copy path or URL...">svn_info_t</a>;
<a name="l05315"></a>05315 
<a name="l05316"></a>05316 <span class="comment"></span>
<a name="l05317"></a>05317 <span class="comment">/**</span>
<a name="l05318"></a>05318 <span class="comment"> * The callback invoked by svn_client_info2().  Each invocation</span>
<a name="l05319"></a>05319 <span class="comment"> * describes @a path with the information present in @a info.  Note</span>
<a name="l05320"></a>05320 <span class="comment"> * that any fields within @a info may be NULL if information is</span>
<a name="l05321"></a>05321 <span class="comment"> * unavailable.  Use @a pool for all temporary allocation.</span>
<a name="l05322"></a>05322 <span class="comment"> *</span>
<a name="l05323"></a>05323 <span class="comment"> * @since New in 1.2.</span>
<a name="l05324"></a>05324 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.  The new</span>
<a name="l05325"></a>05325 <span class="comment"> * API is #svn_client_info_receiver2_t.</span>
<a name="l05326"></a>05326 <span class="comment"> */</span>
<a name="l05327"></a><a class="code" href="group__Info.html#gac719e0656d40ac8e24f6d6cc5adccbe3">05327</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_info_receiver_t)(
<a name="l05328"></a>05328   <span class="keywordtype">void</span> *baton,
<a name="l05329"></a>05329   <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05330"></a>05330   <span class="keyword">const</span> <a class="code" href="structsvn__info__t.html" title="A structure which describes various system-generated metadata about a working-copy path or URL...">svn_info_t</a> *info,
<a name="l05331"></a>05331   apr_pool_t *pool);
<a name="l05332"></a>05332 <span class="comment"></span>
<a name="l05333"></a>05333 <span class="comment">/**</span>
<a name="l05334"></a>05334 <span class="comment"> * Return a duplicate of @a info, allocated in @a pool. No part of the new</span>
<a name="l05335"></a>05335 <span class="comment"> * structure will be shared with @a info.</span>
<a name="l05336"></a>05336 <span class="comment"> *</span>
<a name="l05337"></a>05337 <span class="comment"> * @since New in 1.3.</span>
<a name="l05338"></a>05338 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.  The new</span>
<a name="l05339"></a>05339 <span class="comment"> * API is #svn_client_info2_dup().</span>
<a name="l05340"></a>05340 <span class="comment"> */</span>
<a name="l05341"></a>05341 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05342"></a>05342 <a class="code" href="structsvn__info__t.html" title="A structure which describes various system-generated metadata about a working-copy path or URL...">svn_info_t</a> *
<a name="l05343"></a>05343 <a class="code" href="group__Info.html#ga803b08c81d5033e04c3d5dc234066488" title="Return a duplicate of info, allocated in pool.">svn_info_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__info__t.html" title="A structure which describes various system-generated metadata about a working-copy path or URL...">svn_info_t</a> *info,
<a name="l05344"></a>05344              apr_pool_t *pool);
<a name="l05345"></a>05345 <span class="comment"></span>
<a name="l05346"></a>05346 <span class="comment">/**</span>
<a name="l05347"></a>05347 <span class="comment"> * A structure which describes various system-generated metadata about</span>
<a name="l05348"></a>05348 <span class="comment"> * a working-copy path or URL.</span>
<a name="l05349"></a>05349 <span class="comment"> *</span>
<a name="l05350"></a>05350 <span class="comment"> * @note Fields may be added to the end of this structure in future</span>
<a name="l05351"></a>05351 <span class="comment"> * versions.  Therefore, users shouldn&#39;t allocate structures of this</span>
<a name="l05352"></a>05352 <span class="comment"> * type, to preserve binary compatibility.</span>
<a name="l05353"></a>05353 <span class="comment"> *</span>
<a name="l05354"></a>05354 <span class="comment"> * @since New in 1.7.</span>
<a name="l05355"></a>05355 <span class="comment"> */</span>
<a name="l05356"></a><a class="code" href="structsvn__client__info2__t.html">05356</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__client__info2__t.html" title="A structure which describes various system-generated metadata about a working-copy path or URL...">svn_client_info2_t</a>
<a name="l05357"></a>05357 {<span class="comment"></span>
<a name="l05358"></a>05358 <span class="comment">  /** Where the item lives in the repository. */</span>
<a name="l05359"></a><a class="code" href="structsvn__client__info2__t.html#ab5f993b4da04e5640fe4e1602fe1eb04">05359</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__info2__t.html#ab5f993b4da04e5640fe4e1602fe1eb04" title="Where the item lives in the repository.">URL</a>;
<a name="l05360"></a>05360 <span class="comment"></span>
<a name="l05361"></a>05361 <span class="comment">  /** The revision of the object.  If the target is a working-copy</span>
<a name="l05362"></a>05362 <span class="comment">   * path, then this is its current working revnum.  If the target</span>
<a name="l05363"></a>05363 <span class="comment">   * is a URL, then this is the repos revision that it lives in. */</span>
<a name="l05364"></a><a class="code" href="structsvn__client__info2__t.html#ad92a54652f34c2f5ffef3a245ff5b8a1">05364</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__client__info2__t.html#ad92a54652f34c2f5ffef3a245ff5b8a1" title="The revision of the object.">rev</a>;
<a name="l05365"></a>05365 <span class="comment"></span>
<a name="l05366"></a>05366 <span class="comment">  /** The root URL of the repository. */</span>
<a name="l05367"></a><a class="code" href="structsvn__client__info2__t.html#af3f994103d5b32bf3878c0bad70b08c9">05367</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__info2__t.html#af3f994103d5b32bf3878c0bad70b08c9" title="The root URL of the repository.">repos_root_URL</a>;
<a name="l05368"></a>05368 <span class="comment"></span>
<a name="l05369"></a>05369 <span class="comment">  /** The repository&#39;s UUID. */</span>
<a name="l05370"></a><a class="code" href="structsvn__client__info2__t.html#a6f4e23523877b1382f27f43e947e3b25">05370</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__info2__t.html#a6f4e23523877b1382f27f43e947e3b25" title="The repository&#39;s UUID.">repos_UUID</a>;
<a name="l05371"></a>05371 <span class="comment"></span>
<a name="l05372"></a>05372 <span class="comment">  /** The node&#39;s kind. */</span>
<a name="l05373"></a><a class="code" href="structsvn__client__info2__t.html#affc1c8c2ae8d24f3e7679614c8d04f58">05373</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__client__info2__t.html#affc1c8c2ae8d24f3e7679614c8d04f58" title="The node&#39;s kind.">kind</a>;
<a name="l05374"></a>05374 <span class="comment"></span>
<a name="l05375"></a>05375 <span class="comment">  /** The size of the file in the repository (untranslated,</span>
<a name="l05376"></a>05376 <span class="comment">   * e.g. without adjustment of line endings and keyword</span>
<a name="l05377"></a>05377 <span class="comment">   * expansion). Only applicable for file -- not directory -- URLs.</span>
<a name="l05378"></a>05378 <span class="comment">   * For working copy paths, @a size will be #SVN_INVALID_FILESIZE. */</span>
<a name="l05379"></a><a class="code" href="structsvn__client__info2__t.html#a4d39d39d6fe671957b3f73451f8481a6">05379</a>   <a class="code" href="svn__types_8h.html#a726e581898461c1d3e7dbdb16d99dad0" title="The size of a file in the Subversion FS.">svn_filesize_t</a> <a class="code" href="structsvn__client__info2__t.html#a4d39d39d6fe671957b3f73451f8481a6" title="The size of the file in the repository (untranslated, e.g.">size</a>;
<a name="l05380"></a>05380 <span class="comment"></span>
<a name="l05381"></a>05381 <span class="comment">  /** The last revision in which this object changed. */</span>
<a name="l05382"></a><a class="code" href="structsvn__client__info2__t.html#a50a1f5dcc3c9ee53d618e838e074dd06">05382</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__client__info2__t.html#a50a1f5dcc3c9ee53d618e838e074dd06" title="The last revision in which this object changed.">last_changed_rev</a>;
<a name="l05383"></a>05383 <span class="comment"></span>
<a name="l05384"></a>05384 <span class="comment">  /** The date of the last_changed_rev. */</span>
<a name="l05385"></a><a class="code" href="structsvn__client__info2__t.html#a7b8cd4615a38fbcc918264bbe9c6a80e">05385</a>   apr_time_t <a class="code" href="structsvn__client__info2__t.html#a7b8cd4615a38fbcc918264bbe9c6a80e" title="The date of the last_changed_rev.">last_changed_date</a>;
<a name="l05386"></a>05386 <span class="comment"></span>
<a name="l05387"></a>05387 <span class="comment">  /** The author of the last_changed_rev. */</span>
<a name="l05388"></a><a class="code" href="structsvn__client__info2__t.html#a24e014478acd621aa3881d2249432b81">05388</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__client__info2__t.html#a24e014478acd621aa3881d2249432b81" title="The author of the last_changed_rev.">last_changed_author</a>;
<a name="l05389"></a>05389 <span class="comment"></span>
<a name="l05390"></a>05390 <span class="comment">  /** An exclusive lock, if present.  Could be either local or remote. */</span>
<a name="l05391"></a><a class="code" href="structsvn__client__info2__t.html#af353c2a8656facc1c1fd301481b4b383">05391</a>   <span class="keyword">const</span> <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *<a class="code" href="structsvn__client__info2__t.html#af353c2a8656facc1c1fd301481b4b383" title="An exclusive lock, if present.">lock</a>;
<a name="l05392"></a>05392 <span class="comment"></span>
<a name="l05393"></a>05393 <span class="comment">  /** Possible information about the working copy, NULL if not valid. */</span>
<a name="l05394"></a><a class="code" href="structsvn__client__info2__t.html#a184ba0ca23f20496999a359ff2b2676b">05394</a>   <span class="keyword">const</span> <a class="code" href="structsvn__wc__info__t.html" title="This struct contains information about a working copy node.">svn_wc_info_t</a> *<a class="code" href="structsvn__client__info2__t.html#a184ba0ca23f20496999a359ff2b2676b" title="Possible information about the working copy, NULL if not valid.">wc_info</a>;
<a name="l05395"></a>05395 
<a name="l05396"></a>05396 } <a class="code" href="group__Info.html#gad596445b254b9aa7204f7ba8557aad36" title="A structure which describes various system-generated metadata about a working-copy path or URL...">svn_client_info2_t</a>;
<a name="l05397"></a>05397 <span class="comment"></span>
<a name="l05398"></a>05398 <span class="comment">/**</span>
<a name="l05399"></a>05399 <span class="comment"> * Return a duplicate of @a info, allocated in @a pool. No part of the new</span>
<a name="l05400"></a>05400 <span class="comment"> * structure will be shared with @a info.</span>
<a name="l05401"></a>05401 <span class="comment"> *</span>
<a name="l05402"></a>05402 <span class="comment"> * @since New in 1.7.</span>
<a name="l05403"></a>05403 <span class="comment"> */</span>
<a name="l05404"></a>05404 <a class="code" href="structsvn__client__info2__t.html" title="A structure which describes various system-generated metadata about a working-copy path or URL...">svn_client_info2_t</a> *
<a name="l05405"></a>05405 <a class="code" href="group__Info.html#gaeced63388c876c9c6c58eb88f7adac4e" title="Return a duplicate of info, allocated in pool.">svn_client_info2_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__client__info2__t.html" title="A structure which describes various system-generated metadata about a working-copy path or URL...">svn_client_info2_t</a> *info,
<a name="l05406"></a>05406                      apr_pool_t *pool);
<a name="l05407"></a>05407 <span class="comment"></span>
<a name="l05408"></a>05408 <span class="comment">/**</span>
<a name="l05409"></a>05409 <span class="comment"> * The callback invoked by info retrievers.  Each invocation</span>
<a name="l05410"></a>05410 <span class="comment"> * describes @a abspath_or_url with the information present in @a info.</span>
<a name="l05411"></a>05411 <span class="comment"> * Use @a scratch_pool for all temporary allocation.</span>
<a name="l05412"></a>05412 <span class="comment"> *</span>
<a name="l05413"></a>05413 <span class="comment"> * @since New in 1.7.</span>
<a name="l05414"></a>05414 <span class="comment"> */</span>
<a name="l05415"></a><a class="code" href="group__Info.html#ga90bc708306153695e16471b469e73748">05415</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_info_receiver2_t)(
<a name="l05416"></a>05416                          <span class="keywordtype">void</span> *baton,
<a name="l05417"></a>05417                          <span class="keyword">const</span> <span class="keywordtype">char</span> *abspath_or_url,
<a name="l05418"></a>05418                          <span class="keyword">const</span> <a class="code" href="structsvn__client__info2__t.html" title="A structure which describes various system-generated metadata about a working-copy path or URL...">svn_client_info2_t</a> *info,
<a name="l05419"></a>05419                          apr_pool_t *scratch_pool);
<a name="l05420"></a>05420 <span class="comment"></span>
<a name="l05421"></a>05421 <span class="comment">/**</span>
<a name="l05422"></a>05422 <span class="comment"> * Invoke @a receiver with @a receiver_baton to return information</span>
<a name="l05423"></a>05423 <span class="comment"> * about @a abspath_or_url in @a revision.  The information returned is</span>
<a name="l05424"></a>05424 <span class="comment"> * system-generated metadata, not the sort of &quot;property&quot; metadata</span>
<a name="l05425"></a>05425 <span class="comment"> * created by users.  See #svn_client_info2_t.</span>
<a name="l05426"></a>05426 <span class="comment"> *</span>
<a name="l05427"></a>05427 <span class="comment"> * If both revision arguments are either #svn_opt_revision_unspecified</span>
<a name="l05428"></a>05428 <span class="comment"> * or @c NULL, then information will be pulled solely from the working copy;</span>
<a name="l05429"></a>05429 <span class="comment"> * no network connections will be made.</span>
<a name="l05430"></a>05430 <span class="comment"> *</span>
<a name="l05431"></a>05431 <span class="comment"> * Otherwise, information will be pulled from a repository.  The</span>
<a name="l05432"></a>05432 <span class="comment"> * actual node revision selected is determined by the @a abspath_or_url</span>
<a name="l05433"></a>05433 <span class="comment"> * as it exists in @a peg_revision.  If @a peg_revision-&gt;kind is</span>
<a name="l05434"></a>05434 <span class="comment"> * #svn_opt_revision_unspecified, then it defaults to</span>
<a name="l05435"></a>05435 <span class="comment"> * #svn_opt_revision_head for URLs or #svn_opt_revision_working for</span>
<a name="l05436"></a>05436 <span class="comment"> * WC targets.</span>
<a name="l05437"></a>05437 <span class="comment"> *</span>
<a name="l05438"></a>05438 <span class="comment"> * If @a abspath_or_url is not a local path, then if @a revision is of</span>
<a name="l05439"></a>05439 <span class="comment"> * kind #svn_opt_revision_previous (or some other kind that requires</span>
<a name="l05440"></a>05440 <span class="comment"> * a local path), an error will be returned, because the desired</span>
<a name="l05441"></a>05441 <span class="comment"> * revision cannot be determined.</span>
<a name="l05442"></a>05442 <span class="comment"> *</span>
<a name="l05443"></a>05443 <span class="comment"> * Use the authentication baton cached in @a ctx to authenticate</span>
<a name="l05444"></a>05444 <span class="comment"> * against the repository.</span>
<a name="l05445"></a>05445 <span class="comment"> *</span>
<a name="l05446"></a>05446 <span class="comment"> * If @a abspath_or_url is a file, just invoke @a receiver on it.  If it</span>
<a name="l05447"></a>05447 <span class="comment"> * is a directory, then descend according to @a depth.  If @a depth is</span>
<a name="l05448"></a>05448 <span class="comment"> * #svn_depth_empty, invoke @a receiver on @a abspath_or_url and</span>
<a name="l05449"></a>05449 <span class="comment"> * nothing else; if #svn_depth_files, on @a abspath_or_url and its</span>
<a name="l05450"></a>05450 <span class="comment"> * immediate file children; if #svn_depth_immediates, the preceding</span>
<a name="l05451"></a>05451 <span class="comment"> * plus on each immediate subdirectory; if #svn_depth_infinity, then</span>
<a name="l05452"></a>05452 <span class="comment"> * recurse fully, invoking @a receiver on @a abspath_or_url and</span>
<a name="l05453"></a>05453 <span class="comment"> * everything beneath it.</span>
<a name="l05454"></a>05454 <span class="comment"> *</span>
<a name="l05455"></a>05455 <span class="comment"> * If @a fetch_excluded is TRUE, also also send excluded nodes in the working</span>
<a name="l05456"></a>05456 <span class="comment"> * copy to @a receiver, otherwise these are skipped. If @a fetch_actual_only</span>
<a name="l05457"></a>05457 <span class="comment"> * is TRUE also send nodes that don&#39;t exist as versioned but are still</span>
<a name="l05458"></a>05458 <span class="comment"> * tree conflicted.</span>
<a name="l05459"></a>05459 <span class="comment"> *</span>
<a name="l05460"></a>05460 <span class="comment"> * @a changelists is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l05461"></a>05461 <span class="comment"> * names, used as a restrictive filter on items whose info is</span>
<a name="l05462"></a>05462 <span class="comment"> * reported; that is, don&#39;t report info about any item unless</span>
<a name="l05463"></a>05463 <span class="comment"> * it&#39;s a member of one of those changelists.  If @a changelists is</span>
<a name="l05464"></a>05464 <span class="comment"> * empty (or altogether @c NULL), no changelist filtering occurs.</span>
<a name="l05465"></a>05465 <span class="comment"> *</span>
<a name="l05466"></a>05466 <span class="comment"> * @since New in 1.7.</span>
<a name="l05467"></a>05467 <span class="comment"> */</span>
<a name="l05468"></a>05468 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05469"></a>05469 <a class="code" href="group__Info.html#ga40a40a3afb2a3c9da8511e545fd1246e" title="Invoke receiver with receiver_baton to return information about abspath_or_url in revision...">svn_client_info3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *abspath_or_url,
<a name="l05470"></a>05470                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l05471"></a>05471                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l05472"></a>05472                  <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05473"></a>05473                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> fetch_excluded,
<a name="l05474"></a>05474                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> fetch_actual_only,
<a name="l05475"></a>05475                  <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l05476"></a>05476                  <a class="code" href="group__Info.html#ga90bc708306153695e16471b469e73748" title="The callback invoked by info retrievers.">svn_client_info_receiver2_t</a> receiver,
<a name="l05477"></a>05477                  <span class="keywordtype">void</span> *receiver_baton,
<a name="l05478"></a>05478                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05479"></a>05479                  apr_pool_t *scratch_pool);
<a name="l05480"></a>05480 <span class="comment"></span>
<a name="l05481"></a>05481 <span class="comment">/** Similar to svn_client_info3, but uses an svn_info_receiver_t instead of</span>
<a name="l05482"></a>05482 <span class="comment"> * a #svn_client_info_receiver2_t, and @a path_or_url may be a relative path.</span>
<a name="l05483"></a>05483 <span class="comment"> *</span>
<a name="l05484"></a>05484 <span class="comment"> * @since New in 1.5.</span>
<a name="l05485"></a>05485 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l05486"></a>05486 <span class="comment"> */</span>
<a name="l05487"></a>05487 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05488"></a>05488 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05489"></a>05489 <a class="code" href="group__Info.html#ga32ad0592964eb4778b77f1b324db1721" title="Similar to svn_client_info3, but uses an svn_info_receiver_t instead of a svn_client_info_receiver2_t...">svn_client_info2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l05490"></a>05490                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l05491"></a>05491                  <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l05492"></a>05492                  <a class="code" href="group__Info.html#gac719e0656d40ac8e24f6d6cc5adccbe3" title="The callback invoked by svn_client_info2().">svn_info_receiver_t</a> receiver,
<a name="l05493"></a>05493                  <span class="keywordtype">void</span> *receiver_baton,
<a name="l05494"></a>05494                  <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05495"></a>05495                  <span class="keyword">const</span> apr_array_header_t *changelists,
<a name="l05496"></a>05496                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05497"></a>05497                  apr_pool_t *pool);
<a name="l05498"></a>05498 <span class="comment"></span>
<a name="l05499"></a>05499 <span class="comment">/**</span>
<a name="l05500"></a>05500 <span class="comment"> * Similar to svn_client_info2() but with @a changelists passed as @c</span>
<a name="l05501"></a>05501 <span class="comment"> * NULL, and @a depth set according to @a recurse: if @a recurse is</span>
<a name="l05502"></a>05502 <span class="comment"> * TRUE, @a depth is #svn_depth_infinity, else #svn_depth_empty.</span>
<a name="l05503"></a>05503 <span class="comment"> *</span>
<a name="l05504"></a>05504 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l05505"></a>05505 <span class="comment"> */</span>
<a name="l05506"></a>05506 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05507"></a>05507 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05508"></a>05508 <a class="code" href="group__Info.html#ga1553de3f015679f608e450692e91a9b9" title="Similar to svn_client_info2() but with changelists passed as NULL, and depth set according to recurse...">svn_client_info</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l05509"></a>05509                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *peg_revision,
<a name="l05510"></a>05510                 <span class="keyword">const</span> <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> *revision,
<a name="l05511"></a>05511                 <a class="code" href="group__Info.html#gac719e0656d40ac8e24f6d6cc5adccbe3" title="The callback invoked by svn_client_info2().">svn_info_receiver_t</a> receiver,
<a name="l05512"></a>05512                 <span class="keywordtype">void</span> *receiver_baton,
<a name="l05513"></a>05513                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05514"></a>05514                 <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05515"></a>05515                 apr_pool_t *pool);
<a name="l05516"></a>05516 <span class="comment"></span>
<a name="l05517"></a>05517 <span class="comment">/**</span>
<a name="l05518"></a>05518 <span class="comment"> * Set @a *wcroot_abspath to the local abspath of the root of the</span>
<a name="l05519"></a>05519 <span class="comment"> * working copy in which @a local_abspath resides.</span>
<a name="l05520"></a>05520 <span class="comment"> *</span>
<a name="l05521"></a>05521 <span class="comment"> * @since New in 1.7.</span>
<a name="l05522"></a>05522 <span class="comment"> */</span>
<a name="l05523"></a>05523 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05524"></a>05524 <a class="code" href="group__Info.html#ga0213a50f22675b62eeb3cd20930b5f1b" title="Set *wcroot_abspath to the local abspath of the root of the working copy in which local_abspath resid...">svn_client_get_wc_root</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **wcroot_abspath,
<a name="l05525"></a>05525                        <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l05526"></a>05526                        <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05527"></a>05527                        apr_pool_t *result_pool,
<a name="l05528"></a>05528                        apr_pool_t *scratch_pool);
<a name="l05529"></a>05529 <span class="comment"></span>
<a name="l05530"></a>05530 <span class="comment">/**</span>
<a name="l05531"></a>05531 <span class="comment"> * Set @a *min_revision and @a *max_revision to the lowest and highest</span>
<a name="l05532"></a>05532 <span class="comment"> * revision numbers found within @a local_abspath.  If @a committed is</span>
<a name="l05533"></a>05533 <span class="comment"> * TRUE, set @a *min_revision and @a *max_revision to the lowest and</span>
<a name="l05534"></a>05534 <span class="comment"> * highest comitted (i.e. &quot;last changed&quot;) revision numbers,</span>
<a name="l05535"></a>05535 <span class="comment"> * respectively.  NULL may be passed for either of @a min_revision and</span>
<a name="l05536"></a>05536 <span class="comment"> * @a max_revision to indicate the caller&#39;s lack of interest in the</span>
<a name="l05537"></a>05537 <span class="comment"> * value.  Use @a scratch_pool for temporary allocations.</span>
<a name="l05538"></a>05538 <span class="comment"> *</span>
<a name="l05539"></a>05539 <span class="comment"> * @since New in 1.7.</span>
<a name="l05540"></a>05540 <span class="comment"> */</span>
<a name="l05541"></a>05541 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05542"></a>05542 <a class="code" href="group__Info.html#ga3cab847973802fdbb09cf25d80f0c558" title="Set *min_revision and *max_revision to the lowest and highest revision numbers found within local_abs...">svn_client_min_max_revisions</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *min_revision,
<a name="l05543"></a>05543                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *max_revision,
<a name="l05544"></a>05544                              <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l05545"></a>05545                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> committed,
<a name="l05546"></a>05546                              <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05547"></a>05547                              apr_pool_t *scratch_pool);
<a name="l05548"></a>05548 <span class="comment"></span>
<a name="l05549"></a>05549 <span class="comment">/** @} */</span>
<a name="l05550"></a>05550 
<a name="l05551"></a>05551 <span class="comment"></span>
<a name="l05552"></a>05552 <span class="comment">/**</span>
<a name="l05553"></a>05553 <span class="comment"> * @defgroup Patch Apply a patch to the working copy</span>
<a name="l05554"></a>05554 <span class="comment"> *</span>
<a name="l05555"></a>05555 <span class="comment"> * @{</span>
<a name="l05556"></a>05556 <span class="comment"> */</span>
<a name="l05557"></a>05557 <span class="comment"></span>
<a name="l05558"></a>05558 <span class="comment">/**</span>
<a name="l05559"></a>05559 <span class="comment"> * The callback invoked by svn_client_patch() before attempting to patch</span>
<a name="l05560"></a>05560 <span class="comment"> * the target file at @a canon_path_from_patchfile (the path as parsed from</span>
<a name="l05561"></a>05561 <span class="comment"> * the patch file, but in canonicalized form). The callback can set</span>
<a name="l05562"></a>05562 <span class="comment"> * @a *filtered to @c TRUE to prevent the file from being patched, or else</span>
<a name="l05563"></a>05563 <span class="comment"> * must set it to @c FALSE.</span>
<a name="l05564"></a>05564 <span class="comment"> *</span>
<a name="l05565"></a>05565 <span class="comment"> * The callback is also provided with @a patch_abspath, the path of a</span>
<a name="l05566"></a>05566 <span class="comment"> * temporary file containing the patched result, and with @a reject_abspath,</span>
<a name="l05567"></a>05567 <span class="comment"> * the path to a temporary file containing the diff text of any hunks</span>
<a name="l05568"></a>05568 <span class="comment"> * which were rejected during patching.</span>
<a name="l05569"></a>05569 <span class="comment"> *</span>
<a name="l05570"></a>05570 <span class="comment"> * Because the callback is invoked before the patching attempt is made,</span>
<a name="l05571"></a>05571 <span class="comment"> * there is no guarantee that the target file will actually be patched</span>
<a name="l05572"></a>05572 <span class="comment"> * successfully. Client implementations must pay attention to notification</span>
<a name="l05573"></a>05573 <span class="comment"> * feedback provided by svn_client_patch() to find out which paths were</span>
<a name="l05574"></a>05574 <span class="comment"> * patched successfully.</span>
<a name="l05575"></a>05575 <span class="comment"> *</span>
<a name="l05576"></a>05576 <span class="comment"> * Note also that the files at @a patch_abspath and @a reject_abspath are</span>
<a name="l05577"></a>05577 <span class="comment"> * guaranteed to remain on disk after patching only if the</span>
<a name="l05578"></a>05578 <span class="comment"> * @a remove_tempfiles parameter for svn_client_patch() is @c FALSE.</span>
<a name="l05579"></a>05579 <span class="comment"> *</span>
<a name="l05580"></a>05580 <span class="comment"> * The const char * parameters may be allocated in @a scratch_pool which</span>
<a name="l05581"></a>05581 <span class="comment"> * will be cleared after each invocation.</span>
<a name="l05582"></a>05582 <span class="comment"> *</span>
<a name="l05583"></a>05583 <span class="comment"> * @since New in 1.7.</span>
<a name="l05584"></a>05584 <span class="comment"> */</span>
<a name="l05585"></a><a class="code" href="group__Patch.html#ga70d54e5f23780e96a6b4dc1c3359dafd">05585</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_client_patch_func_t)(
<a name="l05586"></a>05586   <span class="keywordtype">void</span> *baton,
<a name="l05587"></a>05587   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *filtered,
<a name="l05588"></a>05588   <span class="keyword">const</span> <span class="keywordtype">char</span> *canon_path_from_patchfile,
<a name="l05589"></a>05589   <span class="keyword">const</span> <span class="keywordtype">char</span> *patch_abspath,
<a name="l05590"></a>05590   <span class="keyword">const</span> <span class="keywordtype">char</span> *reject_abspath,
<a name="l05591"></a>05591   apr_pool_t *scratch_pool);
<a name="l05592"></a>05592 <span class="comment"></span>
<a name="l05593"></a>05593 <span class="comment">/**</span>
<a name="l05594"></a>05594 <span class="comment"> * Apply a unidiff patch that&#39;s located at absolute path</span>
<a name="l05595"></a>05595 <span class="comment"> * @a patch_abspath to the working copy directory at @a wc_dir_abspath.</span>
<a name="l05596"></a>05596 <span class="comment"> *</span>
<a name="l05597"></a>05597 <span class="comment"> * This function makes a best-effort attempt at applying the patch.</span>
<a name="l05598"></a>05598 <span class="comment"> * It might skip patch targets which cannot be patched (e.g. targets</span>
<a name="l05599"></a>05599 <span class="comment"> * that are outside of the working copy). It will also reject hunks</span>
<a name="l05600"></a>05600 <span class="comment"> * which cannot be applied to a target in case the hunk&#39;s context</span>
<a name="l05601"></a>05601 <span class="comment"> * does not match anywhere in the patch target.</span>
<a name="l05602"></a>05602 <span class="comment"> *</span>
<a name="l05603"></a>05603 <span class="comment"> * If @a dry_run is TRUE, the patching process is carried out, and full</span>
<a name="l05604"></a>05604 <span class="comment"> * notification feedback is provided, but the working copy is not modified.</span>
<a name="l05605"></a>05605 <span class="comment"> *</span>
<a name="l05606"></a>05606 <span class="comment"> * @a strip_count specifies how many leading path components should be</span>
<a name="l05607"></a>05607 <span class="comment"> * stripped from paths obtained from the patch. It is an error if a</span>
<a name="l05608"></a>05608 <span class="comment"> * negative strip count is passed.</span>
<a name="l05609"></a>05609 <span class="comment"> *</span>
<a name="l05610"></a>05610 <span class="comment"> * If @a reverse is @c TRUE, apply patches in reverse, deleting lines</span>
<a name="l05611"></a>05611 <span class="comment"> * the patch would add and adding lines the patch would delete.</span>
<a name="l05612"></a>05612 <span class="comment"> *</span>
<a name="l05613"></a>05613 <span class="comment"> * If @a ignore_whitespace is TRUE, allow patches to be applied if they</span>
<a name="l05614"></a>05614 <span class="comment"> * only differ from the target by whitespace.</span>
<a name="l05615"></a>05615 <span class="comment"> *</span>
<a name="l05616"></a>05616 <span class="comment"> * If @a remove_tempfiles is TRUE, lifetimes of temporary files created</span>
<a name="l05617"></a>05617 <span class="comment"> * during patching will be managed internally. Otherwise, the caller should</span>
<a name="l05618"></a>05618 <span class="comment"> * take ownership of these files, the names of which can be obtained by</span>
<a name="l05619"></a>05619 <span class="comment"> * passing a @a patch_func callback.</span>
<a name="l05620"></a>05620 <span class="comment"> *</span>
<a name="l05621"></a>05621 <span class="comment"> * If @a patch_func is non-NULL, invoke @a patch_func with @a patch_baton</span>
<a name="l05622"></a>05622 <span class="comment"> * for each patch target processed.</span>
<a name="l05623"></a>05623 <span class="comment"> *</span>
<a name="l05624"></a>05624 <span class="comment"> * If @a ctx-&gt;notify_func2 is non-NULL, invoke @a ctx-&gt;notify_func2 with</span>
<a name="l05625"></a>05625 <span class="comment"> * @a ctx-&gt;notify_baton2 as patching progresses.</span>
<a name="l05626"></a>05626 <span class="comment"> *</span>
<a name="l05627"></a>05627 <span class="comment"> * If @a ctx-&gt;cancel_func is non-NULL, invoke it passing @a</span>
<a name="l05628"></a>05628 <span class="comment"> * ctx-&gt;cancel_baton at various places during the operation.</span>
<a name="l05629"></a>05629 <span class="comment"> *</span>
<a name="l05630"></a>05630 <span class="comment"> * Use @a scratch_pool for temporary allocations.</span>
<a name="l05631"></a>05631 <span class="comment"> *</span>
<a name="l05632"></a>05632 <span class="comment"> * @since New in 1.7.</span>
<a name="l05633"></a>05633 <span class="comment"> */</span>
<a name="l05634"></a>05634 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05635"></a>05635 <a class="code" href="group__Patch.html#ga36d374f7c5d984cd93bba72a8a890ded" title="Apply a unidiff patch that&#39;s located at absolute path patch_abspath to the working copy directory at ...">svn_client_patch</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *patch_abspath,
<a name="l05636"></a>05636                  <span class="keyword">const</span> <span class="keywordtype">char</span> *wc_dir_abspath,
<a name="l05637"></a>05637                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l05638"></a>05638                  <span class="keywordtype">int</span> strip_count,
<a name="l05639"></a>05639                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> reverse,
<a name="l05640"></a>05640                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_whitespace,
<a name="l05641"></a>05641                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_tempfiles,
<a name="l05642"></a>05642                  <a class="code" href="group__Patch.html#ga70d54e5f23780e96a6b4dc1c3359dafd" title="The callback invoked by svn_client_patch() before attempting to patch the target file at canon_path_f...">svn_client_patch_func_t</a> patch_func,
<a name="l05643"></a>05643                  <span class="keywordtype">void</span> *patch_baton,
<a name="l05644"></a>05644                  <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05645"></a>05645                  apr_pool_t *scratch_pool);
<a name="l05646"></a>05646 <span class="comment"></span>
<a name="l05647"></a>05647 <span class="comment">/** @} */</span>
<a name="l05648"></a>05648 <span class="comment"></span>
<a name="l05649"></a>05649 <span class="comment">/** @} end group: Client working copy management */</span>
<a name="l05650"></a>05650 <span class="comment"></span>
<a name="l05651"></a>05651 <span class="comment">/**</span>
<a name="l05652"></a>05652 <span class="comment"> *</span>
<a name="l05653"></a>05653 <span class="comment"> * @defgroup clnt_sessions Client session related functions</span>
<a name="l05654"></a>05654 <span class="comment"> *</span>
<a name="l05655"></a>05655 <span class="comment"> * @{</span>
<a name="l05656"></a>05656 <span class="comment"> *</span>
<a name="l05657"></a>05657 <span class="comment"> */</span>
<a name="l05658"></a>05658 
<a name="l05659"></a>05659 
<a name="l05660"></a>05660 <span class="comment">/* Converting paths to URLs. */</span>
<a name="l05661"></a>05661 <span class="comment"></span>
<a name="l05662"></a>05662 <span class="comment">/** Set @a *url to the URL for @a path_or_url allocated in result_pool.</span>
<a name="l05663"></a>05663 <span class="comment"> *</span>
<a name="l05664"></a>05664 <span class="comment"> * If @a path_or_url is already a URL, set @a *url to @a path_or_url.</span>
<a name="l05665"></a>05665 <span class="comment"> *</span>
<a name="l05666"></a>05666 <span class="comment"> * If @a path_or_url is a versioned item, set @a *url to @a</span>
<a name="l05667"></a>05667 <span class="comment"> * path_or_url&#39;s entry URL.  If @a path_or_url is unversioned (has</span>
<a name="l05668"></a>05668 <span class="comment"> * no entry), set @a *url to NULL.</span>
<a name="l05669"></a>05669 <span class="comment"> *</span>
<a name="l05670"></a>05670 <span class="comment"> * Use @a ctx-&gt;wc_ctx to retrieve the information. Use</span>
<a name="l05671"></a>05671 <span class="comment"> ** @a scratch_pool for temporary allocations.</span>
<a name="l05672"></a>05672 <span class="comment"> *</span>
<a name="l05673"></a>05673 <span class="comment"> * @since New in 1.7.</span>
<a name="l05674"></a>05674 <span class="comment"> */</span>
<a name="l05675"></a>05675 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05676"></a>05676 <a class="code" href="group__clnt__sessions.html#ga076041ac16ff9f9f2ee4d1402b0385df" title="Set *url to the URL for path_or_url allocated in result_pool.">svn_client_url_from_path2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **url,
<a name="l05677"></a>05677                           <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l05678"></a>05678                           <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05679"></a>05679                           apr_pool_t *result_pool,
<a name="l05680"></a>05680                           apr_pool_t *scratch_pool);
<a name="l05681"></a>05681 <span class="comment"></span>
<a name="l05682"></a>05682 <span class="comment">/** Similar to svn_client_url_from_path2(), but without a context argument.</span>
<a name="l05683"></a>05683 <span class="comment"> *</span>
<a name="l05684"></a>05684 <span class="comment"> * @since New in 1.5.</span>
<a name="l05685"></a>05685 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l05686"></a>05686 <span class="comment"> */</span>
<a name="l05687"></a>05687 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05688"></a>05688 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05689"></a>05689 <a class="code" href="group__clnt__sessions.html#ga32b1f7f851452ec8ecc8c2d899de2b0e" title="Similar to svn_client_url_from_path2(), but without a context argument.">svn_client_url_from_path</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **url,
<a name="l05690"></a>05690                          <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l05691"></a>05691                          apr_pool_t *pool);
<a name="l05692"></a>05692 
<a name="l05693"></a>05693 <span class="comment"></span>
<a name="l05694"></a>05694 <span class="comment">/** Set @a *url to the repository root URL of the repository in which</span>
<a name="l05695"></a>05695 <span class="comment"> * @a path_or_url is versioned (or scheduled to be versioned),</span>
<a name="l05696"></a>05696 <span class="comment"> * allocated in @a pool.  @a ctx is required for possible repository</span>
<a name="l05697"></a>05697 <span class="comment"> * authentication.</span>
<a name="l05698"></a>05698 <span class="comment"> *</span>
<a name="l05699"></a>05699 <span class="comment"> * @since New in 1.5.</span>
<a name="l05700"></a>05700 <span class="comment"> */</span>
<a name="l05701"></a>05701 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05702"></a>05702 <a class="code" href="group__clnt__sessions.html#ga2b70eb45a57b92c0cd807b4122f8acfb" title="Set *url to the repository root URL of the repository in which path_or_url is versioned (or scheduled...">svn_client_root_url_from_path</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **url,
<a name="l05703"></a>05703                               <span class="keyword">const</span> <span class="keywordtype">char</span> *path_or_url,
<a name="l05704"></a>05704                               <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05705"></a>05705                               apr_pool_t *pool);
<a name="l05706"></a>05706 
<a name="l05707"></a>05707 
<a name="l05708"></a>05708 
<a name="l05709"></a>05709 <span class="comment">/* Fetching repository UUIDs. */</span>
<a name="l05710"></a>05710 <span class="comment"></span>
<a name="l05711"></a>05711 <span class="comment">/** Get repository @a uuid for @a url.</span>
<a name="l05712"></a>05712 <span class="comment"> *</span>
<a name="l05713"></a>05713 <span class="comment"> * Use a @a pool to open a temporary RA session to @a url, discover the</span>
<a name="l05714"></a>05714 <span class="comment"> * repository uuid, and free the session.  Return the uuid in @a uuid,</span>
<a name="l05715"></a>05715 <span class="comment"> * allocated in @a pool.  @a ctx is required for possible repository</span>
<a name="l05716"></a>05716 <span class="comment"> * authentication.</span>
<a name="l05717"></a>05717 <span class="comment"> */</span>
<a name="l05718"></a>05718 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05719"></a>05719 <a class="code" href="group__clnt__sessions.html#ga1c56e13b2ebe543a84155e5b1c73b364" title="Get repository uuid for url.">svn_client_uuid_from_url</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **uuid,
<a name="l05720"></a>05720                          <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l05721"></a>05721                          <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05722"></a>05722                          apr_pool_t *pool);
<a name="l05723"></a>05723 
<a name="l05724"></a>05724 <span class="comment"></span>
<a name="l05725"></a>05725 <span class="comment">/** Return the repository @a uuid for working-copy @a local_abspath,</span>
<a name="l05726"></a>05726 <span class="comment"> * allocated in @a result_pool.  Use @a ctx-&gt;wc_ctx to retrieve the</span>
<a name="l05727"></a>05727 <span class="comment"> * information.</span>
<a name="l05728"></a>05728 <span class="comment"> *</span>
<a name="l05729"></a>05729 <span class="comment"> * Use @a scratch_pool for temporary allocations.</span>
<a name="l05730"></a>05730 <span class="comment"> *</span>
<a name="l05731"></a>05731 <span class="comment"> * @since New in 1.7.</span>
<a name="l05732"></a>05732 <span class="comment"> */</span>
<a name="l05733"></a>05733 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05734"></a>05734 <a class="code" href="group__clnt__sessions.html#gad59d35d4fb248e39b28182d8b6ef694c" title="Return the repository uuid for working-copy local_abspath, allocated in result_pool.">svn_client_uuid_from_path2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **uuid,
<a name="l05735"></a>05735                            <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l05736"></a>05736                            <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05737"></a>05737                            apr_pool_t *result_pool,
<a name="l05738"></a>05738                            apr_pool_t *scratch_pool);
<a name="l05739"></a>05739 <span class="comment"></span>
<a name="l05740"></a>05740 <span class="comment">/** Similar to svn_client_uuid_from_path2(), but with a relative path and</span>
<a name="l05741"></a>05741 <span class="comment"> * an access baton.</span>
<a name="l05742"></a>05742 <span class="comment"> *</span>
<a name="l05743"></a>05743 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l05744"></a>05744 <span class="comment"> */</span>
<a name="l05745"></a>05745 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05746"></a>05746 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05747"></a>05747 <a class="code" href="group__clnt__sessions.html#gac6fb340ce6837b3287b7bf6f5ff75d2a" title="Similar to svn_client_uuid_from_path2(), but with a relative path and an access baton.">svn_client_uuid_from_path</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **uuid,
<a name="l05748"></a>05748                           <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05749"></a>05749                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05750"></a>05750                           <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05751"></a>05751                           apr_pool_t *pool);
<a name="l05752"></a>05752 
<a name="l05753"></a>05753 
<a name="l05754"></a>05754 <span class="comment">/* Opening RA sessions. */</span>
<a name="l05755"></a>05755 <span class="comment"></span>
<a name="l05756"></a>05756 <span class="comment">/** Open an RA session rooted at @a url, and return it in @a *session.</span>
<a name="l05757"></a>05757 <span class="comment"> *</span>
<a name="l05758"></a>05758 <span class="comment"> * Use the authentication baton stored in @a ctx for authentication.</span>
<a name="l05759"></a>05759 <span class="comment"> * @a *session is allocated in @a pool.</span>
<a name="l05760"></a>05760 <span class="comment"> *</span>
<a name="l05761"></a>05761 <span class="comment"> * @since New in 1.3.</span>
<a name="l05762"></a>05762 <span class="comment"> *</span>
<a name="l05763"></a>05763 <span class="comment"> * @note This function is similar to svn_ra_open3(), but the caller avoids</span>
<a name="l05764"></a>05764 <span class="comment"> * having to providing its own callback functions.</span>
<a name="l05765"></a>05765 <span class="comment"> */</span>
<a name="l05766"></a>05766 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05767"></a>05767 <a class="code" href="group__clnt__sessions.html#gab0ca49065b469625d1168896abdd34fc" title="Open an RA session rooted at url, and return it in *session.">svn_client_open_ra_session</a>(<a class="code" href="svn__ra_8h.html#ac3a7f3c8f2562ed346c2431c4c94f507" title="A repository access session.">svn_ra_session_t</a> **session,
<a name="l05768"></a>05768                            <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l05769"></a>05769                            <a class="code" href="structsvn__client__ctx__t.html" title="A client context structure, which holds client specific callbacks, batons, serves as a cache for conf...">svn_client_ctx_t</a> *ctx,
<a name="l05770"></a>05770                            apr_pool_t *pool);
<a name="l05771"></a>05771 
<a name="l05772"></a>05772 <span class="comment"></span>
<a name="l05773"></a>05773 <span class="comment">/** @} end group: Client session related functions */</span>
<a name="l05774"></a>05774 <span class="comment"></span>
<a name="l05775"></a>05775 <span class="comment">/** @} */</span>
<a name="l05776"></a>05776 
<a name="l05777"></a>05777 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l05778"></a>05778 <span class="preprocessor"></span>}
<a name="l05779"></a>05779 <span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span>
<a name="l05780"></a>05780 
<a name="l05781"></a>05781 <span class="preprocessor">#endif  </span><span class="comment">/* SVN_CLIENT_H */</span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Fri Dec 23 2011 09:20:35 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.5.1
</small></address>

</body>
</html>
