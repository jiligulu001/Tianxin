<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Subversion: svn_wc.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">svn_wc.h</div>  </div>
</div>
<div class="contents">
<a href="svn__wc_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**</span>
<a name="l00002"></a>00002 <span class="comment"> * @copyright</span>
<a name="l00003"></a>00003 <span class="comment"> * ====================================================================</span>
<a name="l00004"></a>00004 <span class="comment"> *    Licensed to the Apache Software Foundation (ASF) under one</span>
<a name="l00005"></a>00005 <span class="comment"> *    or more contributor license agreements.  See the NOTICE file</span>
<a name="l00006"></a>00006 <span class="comment"> *    distributed with this work for additional information</span>
<a name="l00007"></a>00007 <span class="comment"> *    regarding copyright ownership.  The ASF licenses this file</span>
<a name="l00008"></a>00008 <span class="comment"> *    to you under the Apache License, Version 2.0 (the</span>
<a name="l00009"></a>00009 <span class="comment"> *    &quot;License&quot;); you may not use this file except in compliance</span>
<a name="l00010"></a>00010 <span class="comment"> *    with the License.  You may obtain a copy of the License at</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00013"></a>00013 <span class="comment"> *</span>
<a name="l00014"></a>00014 <span class="comment"> *    Unless required by applicable law or agreed to in writing,</span>
<a name="l00015"></a>00015 <span class="comment"> *    software distributed under the License is distributed on an</span>
<a name="l00016"></a>00016 <span class="comment"> *    &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span>
<a name="l00017"></a>00017 <span class="comment"> *    KIND, either express or implied.  See the License for the</span>
<a name="l00018"></a>00018 <span class="comment"> *    specific language governing permissions and limitations</span>
<a name="l00019"></a>00019 <span class="comment"> *    under the License.</span>
<a name="l00020"></a>00020 <span class="comment"> * ====================================================================</span>
<a name="l00021"></a>00021 <span class="comment"> * @endcopyright</span>
<a name="l00022"></a>00022 <span class="comment"> *</span>
<a name="l00023"></a>00023 <span class="comment"> * @file svn_wc.h</span>
<a name="l00024"></a>00024 <span class="comment"> * @brief Subversion&#39;s working copy library</span>
<a name="l00025"></a>00025 <span class="comment"> *</span>
<a name="l00026"></a>00026 <span class="comment"> * Requires:</span>
<a name="l00027"></a>00027 <span class="comment"> *            - A working copy</span>
<a name="l00028"></a>00028 <span class="comment"> *</span>
<a name="l00029"></a>00029 <span class="comment"> * Provides:</span>
<a name="l00030"></a>00030 <span class="comment"> *            - Ability to manipulate working copy&#39;s versioned data.</span>
<a name="l00031"></a>00031 <span class="comment"> *            - Ability to manipulate working copy&#39;s administrative files.</span>
<a name="l00032"></a>00032 <span class="comment"> *</span>
<a name="l00033"></a>00033 <span class="comment"> * Used By:</span>
<a name="l00034"></a>00034 <span class="comment"> *            - Clients.</span>
<a name="l00035"></a>00035 <span class="comment"> *</span>
<a name="l00036"></a>00036 <span class="comment"> * Notes:</span>
<a name="l00037"></a>00037 <span class="comment"> *            The &#39;path&#39; parameters to most of the older functions can be</span>
<a name="l00038"></a>00038 <span class="comment"> *            absolute or relative (relative to current working</span>
<a name="l00039"></a>00039 <span class="comment"> *            directory).  If there are any cases where they are</span>
<a name="l00040"></a>00040 <span class="comment"> *            relative to the path associated with the</span>
<a name="l00041"></a>00041 <span class="comment"> *            &#39;svn_wc_adm_access_t *adm_access&#39; baton passed along with the</span>
<a name="l00042"></a>00042 <span class="comment"> *            path, those cases should be explicitly documented, and if they</span>
<a name="l00043"></a>00043 <span class="comment"> *            are not, please fix it. All new functions introduced since</span>
<a name="l00044"></a>00044 <span class="comment"> *            Subversion 1.7 require absolute paths, unless explicitly</span>
<a name="l00045"></a>00045 <span class="comment"> *            documented otherwise.</span>
<a name="l00046"></a>00046 <span class="comment"> *</span>
<a name="l00047"></a>00047 <span class="comment"> *            Starting with Subversion 1.7, several arguments are re-ordered</span>
<a name="l00048"></a>00048 <span class="comment"> *            to be more consistent through the api. The common ordering used</span>
<a name="l00049"></a>00049 <span class="comment"> *            is:</span>
<a name="l00050"></a>00050 <span class="comment"> *</span>
<a name="l00051"></a>00051 <span class="comment"> *            Firsts:</span>
<a name="l00052"></a>00052 <span class="comment"> *              - Output arguments</span>
<a name="l00053"></a>00053 <span class="comment"> *            Then:</span>
<a name="l00054"></a>00054 <span class="comment"> *              - Working copy context</span>
<a name="l00055"></a>00055 <span class="comment"> *              - Local abspath</span>
<a name="l00056"></a>00056 <span class="comment"> *            Followed by:</span>
<a name="l00057"></a>00057 <span class="comment"> *              - Function specific arguments</span>
<a name="l00058"></a>00058 <span class="comment"> *              - Specific callbacks with their batons</span>
<a name="l00059"></a>00059 <span class="comment"> *            Finally:</span>
<a name="l00060"></a>00060 <span class="comment"> *              - Generic callbacks (with baton) from directly functional to</span>
<a name="l00061"></a>00061 <span class="comment"> *                just observing:</span>
<a name="l00062"></a>00062 <span class="comment"> *                  - svn_wc_conflict_resolver_func2_t</span>
<a name="l00063"></a>00063 <span class="comment"> *                  - svn_wc_external_update_t</span>
<a name="l00064"></a>00064 <span class="comment"> *                  - svn_cancel_func_t</span>
<a name="l00065"></a>00065 <span class="comment"> *                  - svn_wc_notify_func2_t</span>
<a name="l00066"></a>00066 <span class="comment"> *              - Result pool</span>
<a name="l00067"></a>00067 <span class="comment"> *              - Scratch pool.</span>
<a name="l00068"></a>00068 <span class="comment"> */</span>
<a name="l00069"></a>00069 
<a name="l00070"></a>00070 <span class="preprocessor">#ifndef SVN_WC_H</span>
<a name="l00071"></a>00071 <span class="preprocessor"></span><span class="preprocessor">#define SVN_WC_H</span>
<a name="l00072"></a>00072 <span class="preprocessor"></span>
<a name="l00073"></a>00073 <span class="preprocessor">#include &lt;apr.h&gt;</span>
<a name="l00074"></a>00074 <span class="preprocessor">#include &lt;apr_pools.h&gt;</span>
<a name="l00075"></a>00075 <span class="preprocessor">#include &lt;apr_tables.h&gt;</span>
<a name="l00076"></a>00076 <span class="preprocessor">#include &lt;apr_hash.h&gt;</span>
<a name="l00077"></a>00077 <span class="preprocessor">#include &lt;apr_time.h&gt;</span>
<a name="l00078"></a>00078 <span class="preprocessor">#include &lt;apr_file_io.h&gt;</span>
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <span class="preprocessor">#include &quot;<a class="code" href="svn__types_8h.html" title="Subversion&#39;s data types.">svn_types.h</a>&quot;</span>
<a name="l00081"></a>00081 <span class="preprocessor">#include &quot;<a class="code" href="svn__string_8h.html" title="Counted-length strings for Subversion, plus some C string goodies.">svn_string.h</a>&quot;</span>
<a name="l00082"></a>00082 <span class="preprocessor">#include &quot;<a class="code" href="svn__checksum_8h.html" title="Subversion checksum routines.">svn_checksum.h</a>&quot;</span>
<a name="l00083"></a>00083 <span class="preprocessor">#include &quot;<a class="code" href="svn__io_8h.html" title="General file I/O for Subversion.">svn_io.h</a>&quot;</span>
<a name="l00084"></a>00084 <span class="preprocessor">#include &quot;<a class="code" href="svn__delta_8h.html" title="Delta-parsing.">svn_delta.h</a>&quot;</span>     <span class="comment">/* for svn_stream_t */</span>
<a name="l00085"></a>00085 <span class="preprocessor">#include &quot;<a class="code" href="svn__opt_8h.html" title="Option and argument parsing for Subversion command lines.">svn_opt.h</a>&quot;</span>
<a name="l00086"></a>00086 <span class="preprocessor">#include &quot;<a class="code" href="svn__ra_8h.html" title="Repository Access.">svn_ra.h</a>&quot;</span>        <span class="comment">/* for svn_ra_reporter_t type */</span>
<a name="l00087"></a>00087 
<a name="l00088"></a>00088 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00089"></a>00089 <span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {
<a name="l00090"></a>00090 <span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span>
<a name="l00091"></a>00091 
<a name="l00092"></a>00092 <span class="comment"></span>
<a name="l00093"></a>00093 <span class="comment">/**</span>
<a name="l00094"></a>00094 <span class="comment"> * Get libsvn_wc version information.</span>
<a name="l00095"></a>00095 <span class="comment"> *</span>
<a name="l00096"></a>00096 <span class="comment"> * @since New in 1.1.</span>
<a name="l00097"></a>00097 <span class="comment"> */</span>
<a name="l00098"></a>00098 <span class="keyword">const</span> <a class="code" href="structsvn__version__t.html" title="Version information.">svn_version_t</a> *
<a name="l00099"></a>00099 <a class="code" href="svn__wc_8h.html#a3b2bb9731cd460fde6ff6fdb6caf6db8" title="Get libsvn_wc version information.">svn_wc_version</a>(<span class="keywordtype">void</span>);
<a name="l00100"></a>00100 
<a name="l00101"></a>00101 <span class="comment"></span>
<a name="l00102"></a>00102 <span class="comment">/**</span>
<a name="l00103"></a>00103 <span class="comment"> * @defgroup svn_wc  Working copy management</span>
<a name="l00104"></a>00104 <span class="comment"> * @{</span>
<a name="l00105"></a>00105 <span class="comment"> */</span>
<a name="l00106"></a>00106 
<a name="l00107"></a>00107 <span class="comment"></span>
<a name="l00108"></a>00108 <span class="comment">/** Flags for use with svn_wc_translated_file2() and svn_wc_translated_stream().</span>
<a name="l00109"></a>00109 <span class="comment"> *</span>
<a name="l00110"></a>00110 <span class="comment"> * @defgroup translate_flags Translation flags</span>
<a name="l00111"></a>00111 <span class="comment"> * @{</span>
<a name="l00112"></a>00112 <span class="comment"> */</span>
<a name="l00113"></a>00113 <span class="comment"></span>
<a name="l00114"></a>00114 <span class="comment">  /** Translate from Normal Form.</span>
<a name="l00115"></a>00115 <span class="comment">   *</span>
<a name="l00116"></a>00116 <span class="comment">   * The working copy text bases and repository files are stored</span>
<a name="l00117"></a>00117 <span class="comment">   * in normal form.  Some files&#39; contents - or ever representation -</span>
<a name="l00118"></a>00118 <span class="comment">   * differs between the working copy and the normal form.  This flag</span>
<a name="l00119"></a>00119 <span class="comment">   * specifies to take the latter form as input and transform it</span>
<a name="l00120"></a>00120 <span class="comment">   * to the former.</span>
<a name="l00121"></a>00121 <span class="comment">   *</span>
<a name="l00122"></a>00122 <span class="comment">   * Either this flag or #SVN_WC_TRANSLATE_TO_NF should be specified,</span>
<a name="l00123"></a>00123 <span class="comment">   * but not both.</span>
<a name="l00124"></a>00124 <span class="comment">   */</span>
<a name="l00125"></a><a class="code" href="group__translate__flags.html#ga7881e471410f654892f27bf9f50645e1">00125</a> <span class="preprocessor">#define SVN_WC_TRANSLATE_FROM_NF                 0x00000000</span>
<a name="l00126"></a>00126 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00127"></a>00127 <span class="comment">  /** Translate to Normal Form.</span>
<a name="l00128"></a>00128 <span class="comment">   *</span>
<a name="l00129"></a>00129 <span class="comment">   * Either this flag or #SVN_WC_TRANSLATE_FROM_NF should be specified,</span>
<a name="l00130"></a>00130 <span class="comment">   * but not both.</span>
<a name="l00131"></a>00131 <span class="comment">   */</span>
<a name="l00132"></a><a class="code" href="group__translate__flags.html#ga6d05f37c6ac3cdc1193adcc5436b8594">00132</a> <span class="preprocessor">#define SVN_WC_TRANSLATE_TO_NF                   0x00000001</span>
<a name="l00133"></a>00133 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00134"></a>00134 <span class="comment">  /** Force repair of eol styles, making sure the output file consistently</span>
<a name="l00135"></a>00135 <span class="comment">   * contains the one eol style as specified by the svn:eol-style</span>
<a name="l00136"></a>00136 <span class="comment">   * property and the required translation direction.</span>
<a name="l00137"></a>00137 <span class="comment">   *</span>
<a name="l00138"></a>00138 <span class="comment">   */</span>
<a name="l00139"></a><a class="code" href="group__translate__flags.html#ga0be01177d905375e9e423cfdbf5874e5">00139</a> <span class="preprocessor">#define SVN_WC_TRANSLATE_FORCE_EOL_REPAIR        0x00000002</span>
<a name="l00140"></a>00140 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00141"></a>00141 <span class="comment">  /** Don&#39;t register a pool cleanup to delete the output file */</span>
<a name="l00142"></a><a class="code" href="group__translate__flags.html#gac8b009d78d620d77facadf4a6ee476a9">00142</a> <span class="preprocessor">#define SVN_WC_TRANSLATE_NO_OUTPUT_CLEANUP       0x00000004</span>
<a name="l00143"></a>00143 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00144"></a>00144 <span class="comment">  /** Guarantee a new file is created on successful return.</span>
<a name="l00145"></a>00145 <span class="comment">   * The default shortcuts translation by returning the path</span>
<a name="l00146"></a>00146 <span class="comment">   * of the untranslated file when no translation is required.</span>
<a name="l00147"></a>00147 <span class="comment">   */</span>
<a name="l00148"></a><a class="code" href="group__translate__flags.html#ga253163f1496166aa30951218d163f4ce">00148</a> <span class="preprocessor">#define SVN_WC_TRANSLATE_FORCE_COPY              0x00000008</span>
<a name="l00149"></a>00149 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00150"></a>00150 <span class="comment">  /** Use a non-wc-local tmp directory for creating output files,</span>
<a name="l00151"></a>00151 <span class="comment">   * instead of in the working copy admin tmp area which is the default.</span>
<a name="l00152"></a>00152 <span class="comment">   *</span>
<a name="l00153"></a>00153 <span class="comment">   * @since New in 1.4.</span>
<a name="l00154"></a>00154 <span class="comment">   */</span>
<a name="l00155"></a><a class="code" href="group__translate__flags.html#gad9ec95393ea0ecd6f30cfb2057acef2f">00155</a> <span class="preprocessor">#define SVN_WC_TRANSLATE_USE_GLOBAL_TMP          0x00000010</span>
<a name="l00156"></a>00156 <span class="preprocessor"></span><span class="comment"></span>
<a name="l00157"></a>00157 <span class="comment">/** @} */</span>
<a name="l00158"></a>00158 
<a name="l00159"></a>00159 <span class="comment"></span>
<a name="l00160"></a>00160 <span class="comment">/**</span>
<a name="l00161"></a>00161 <span class="comment"> * @defgroup svn_wc_context  Working copy context</span>
<a name="l00162"></a>00162 <span class="comment"> * @{</span>
<a name="l00163"></a>00163 <span class="comment"> */</span>
<a name="l00164"></a>00164 <span class="comment"></span>
<a name="l00165"></a>00165 <span class="comment">/** The context for all working copy interactions.</span>
<a name="l00166"></a>00166 <span class="comment"> *</span>
<a name="l00167"></a>00167 <span class="comment"> * This is the client-facing datastructure API consumers are required</span>
<a name="l00168"></a>00168 <span class="comment"> * to create and use when interacting with a working copy.  Multiple</span>
<a name="l00169"></a>00169 <span class="comment"> * contexts can be created for the same working copy simultaneously, within</span>
<a name="l00170"></a>00170 <span class="comment"> * the same process or different processes.  Context mutexing will be handled</span>
<a name="l00171"></a>00171 <span class="comment"> * internally by the working copy library.</span>
<a name="l00172"></a>00172 <span class="comment"> *</span>
<a name="l00173"></a>00173 <span class="comment"> * @note: #svn_wc_context_t should be passed by non-const pointer in all</span>
<a name="l00174"></a>00174 <span class="comment"> * APIs, even for read-only operations, as it contains mutable data (caching,</span>
<a name="l00175"></a>00175 <span class="comment"> * etc.).</span>
<a name="l00176"></a>00176 <span class="comment"> *</span>
<a name="l00177"></a>00177 <span class="comment"> * @since New in 1.7.</span>
<a name="l00178"></a>00178 <span class="comment"> */</span>
<a name="l00179"></a><a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae">00179</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a>;
<a name="l00180"></a>00180 <span class="comment"></span>
<a name="l00181"></a>00181 <span class="comment">/** Create a context for the working copy, and return it in @a *wc_ctx.  This</span>
<a name="l00182"></a>00182 <span class="comment"> * context is not associated with a particular working copy, but as operations</span>
<a name="l00183"></a>00183 <span class="comment"> * are performed, will load the appropriate working copy information.</span>
<a name="l00184"></a>00184 <span class="comment"> *</span>
<a name="l00185"></a>00185 <span class="comment"> * @a config should hold the various configuration options that may apply to</span>
<a name="l00186"></a>00186 <span class="comment"> * this context.  It should live at least as long as @a result_pool.  It may</span>
<a name="l00187"></a>00187 <span class="comment"> * be @c NULL.</span>
<a name="l00188"></a>00188 <span class="comment"> *</span>
<a name="l00189"></a>00189 <span class="comment"> * The context will be allocated in @a result_pool, and will use @a</span>
<a name="l00190"></a>00190 <span class="comment"> * result_pool for any internal allocations requiring the same longevity as</span>
<a name="l00191"></a>00191 <span class="comment"> * the context.  The context will be automatically destroyed, and its</span>
<a name="l00192"></a>00192 <span class="comment"> * resources released, when @a result_pool is cleared, or it may be manually</span>
<a name="l00193"></a>00193 <span class="comment"> * destroyed by invoking svn_wc_context_destroy().</span>
<a name="l00194"></a>00194 <span class="comment"> *</span>
<a name="l00195"></a>00195 <span class="comment"> * Use @a scratch_pool for temporary allocations.  It may be cleared</span>
<a name="l00196"></a>00196 <span class="comment"> * immediately upon returning from this function.</span>
<a name="l00197"></a>00197 <span class="comment"> *</span>
<a name="l00198"></a>00198 <span class="comment"> * @since New in 1.7.</span>
<a name="l00199"></a>00199 <span class="comment"> */</span>
<a name="l00200"></a>00200 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00201"></a>00201 <a class="code" href="group__svn__wc__context.html#ga6dd997e2ac144fd05d4056eb0bef1dd9" title="Create a context for the working copy, and return it in *wc_ctx.">svn_wc_context_create</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> **wc_ctx,
<a name="l00202"></a>00202                       <span class="keyword">const</span> <a class="code" href="svn__config_8h.html#aab78e7d9b95c9bcfe0bdf1d9f3212596" title="Opaque structure describing a set of configuration options.">svn_config_t</a> *config,
<a name="l00203"></a>00203                       apr_pool_t *result_pool,
<a name="l00204"></a>00204                       apr_pool_t *scratch_pool);
<a name="l00205"></a>00205 
<a name="l00206"></a>00206 <span class="comment"></span>
<a name="l00207"></a>00207 <span class="comment">/** Destroy the working copy context described by @a wc_ctx, releasing any</span>
<a name="l00208"></a>00208 <span class="comment"> * acquired resources.</span>
<a name="l00209"></a>00209 <span class="comment"> *</span>
<a name="l00210"></a>00210 <span class="comment"> * @since New in 1.7.</span>
<a name="l00211"></a>00211 <span class="comment"> */</span>
<a name="l00212"></a>00212 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00213"></a>00213 <a class="code" href="group__svn__wc__context.html#gaeb8bdc74b37d427e9e86821a4ca6e93a" title="Destroy the working copy context described by wc_ctx, releasing any acquired resources.">svn_wc_context_destroy</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx);
<a name="l00214"></a>00214 
<a name="l00215"></a>00215 <span class="comment"></span>
<a name="l00216"></a>00216 <span class="comment">/** @} */</span>
<a name="l00217"></a>00217 
<a name="l00218"></a>00218 <span class="comment"></span>
<a name="l00219"></a>00219 <span class="comment">/**</span>
<a name="l00220"></a>00220 <span class="comment"> * Locking/Opening/Closing using adm access batons.</span>
<a name="l00221"></a>00221 <span class="comment"> *</span>
<a name="l00222"></a>00222 <span class="comment"> * @defgroup svn_wc_adm_access Adm access batons (deprecated)</span>
<a name="l00223"></a>00223 <span class="comment"> * @{</span>
<a name="l00224"></a>00224 <span class="comment"> */</span>
<a name="l00225"></a>00225 <span class="comment"></span>
<a name="l00226"></a>00226 <span class="comment">/** Baton for access to a working copy administrative area.</span>
<a name="l00227"></a>00227 <span class="comment"> *</span>
<a name="l00228"></a>00228 <span class="comment"> * Access batons can be grouped into sets, by passing an existing open</span>
<a name="l00229"></a>00229 <span class="comment"> * baton when opening a new baton.  Given one baton in a set, other batons</span>
<a name="l00230"></a>00230 <span class="comment"> * may be retrieved.  This allows an entire hierarchy to be locked, and</span>
<a name="l00231"></a>00231 <span class="comment"> * then the set of batons can be passed around by passing a single baton.</span>
<a name="l00232"></a>00232 <span class="comment"> *</span>
<a name="l00233"></a>00233 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00234"></a>00234 <span class="comment"> *    New code should use a #svn_wc_context_t object to access the working</span>
<a name="l00235"></a>00235 <span class="comment"> *    copy.</span>
<a name="l00236"></a>00236 <span class="comment"> */</span>
<a name="l00237"></a><a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">00237</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a>;
<a name="l00238"></a>00238 
<a name="l00239"></a>00239 <span class="comment"></span>
<a name="l00240"></a>00240 <span class="comment">/**</span>
<a name="l00241"></a>00241 <span class="comment"> * Return, in @a *adm_access, a pointer to a new access baton for the working</span>
<a name="l00242"></a>00242 <span class="comment"> * copy administrative area associated with the directory @a path.  If</span>
<a name="l00243"></a>00243 <span class="comment"> * @a write_lock is TRUE the baton will include a write lock, otherwise the</span>
<a name="l00244"></a>00244 <span class="comment"> * baton can only be used for read access.  If @a path refers to a directory</span>
<a name="l00245"></a>00245 <span class="comment"> * that is already write locked then the error #SVN_ERR_WC_LOCKED will be</span>
<a name="l00246"></a>00246 <span class="comment"> * returned.  The error #SVN_ERR_WC_NOT_DIRECTORY will be returned if</span>
<a name="l00247"></a>00247 <span class="comment"> * @a path is not a versioned directory.</span>
<a name="l00248"></a>00248 <span class="comment"> *</span>
<a name="l00249"></a>00249 <span class="comment"> * If @a associated is an open access baton then @a adm_access will be added</span>
<a name="l00250"></a>00250 <span class="comment"> * to the set containing @a associated.  @a associated can be @c NULL, in</span>
<a name="l00251"></a>00251 <span class="comment"> * which case @a adm_access is the start of a new set.</span>
<a name="l00252"></a>00252 <span class="comment"> *</span>
<a name="l00253"></a>00253 <span class="comment"> * @a levels_to_lock specifies how far to lock.  Zero means just the specified</span>
<a name="l00254"></a>00254 <span class="comment"> * directory.  Any negative value means to lock the entire working copy</span>
<a name="l00255"></a>00255 <span class="comment"> * directory hierarchy under @a path.  A positive value indicates the number of</span>
<a name="l00256"></a>00256 <span class="comment"> * levels of directories to lock -- 1 means just immediate subdirectories, 2</span>
<a name="l00257"></a>00257 <span class="comment"> * means immediate subdirectories and their subdirectories, etc.  All the</span>
<a name="l00258"></a>00258 <span class="comment"> * access batons will become part of the set containing @a adm_access.  This</span>
<a name="l00259"></a>00259 <span class="comment"> * is an all-or-nothing option, if it is not possible to lock all the</span>
<a name="l00260"></a>00260 <span class="comment"> * requested directories then an error will be returned and @a adm_access will</span>
<a name="l00261"></a>00261 <span class="comment"> * be invalid, with the exception that subdirectories of @a path that are</span>
<a name="l00262"></a>00262 <span class="comment"> * missing from the physical filesystem will not be locked and will not cause</span>
<a name="l00263"></a>00263 <span class="comment"> * an error.  The error #SVN_ERR_WC_LOCKED will be returned if a</span>
<a name="l00264"></a>00264 <span class="comment"> * subdirectory of @a path is already write locked.</span>
<a name="l00265"></a>00265 <span class="comment"> *</span>
<a name="l00266"></a>00266 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton to determine</span>
<a name="l00267"></a>00267 <span class="comment"> * if the client has canceled the operation.</span>
<a name="l00268"></a>00268 <span class="comment"> *</span>
<a name="l00269"></a>00269 <span class="comment"> * @a pool will be used to allocate memory for the baton and any subsequently</span>
<a name="l00270"></a>00270 <span class="comment"> * cached items.  If @a adm_access has not been closed when the pool is</span>
<a name="l00271"></a>00271 <span class="comment"> * cleared, it will be closed automatically at that point, and removed from</span>
<a name="l00272"></a>00272 <span class="comment"> * its set.  A baton closed in this way will not remove physical locks from</span>
<a name="l00273"></a>00273 <span class="comment"> * the working copy if cleanup is required.</span>
<a name="l00274"></a>00274 <span class="comment"> *</span>
<a name="l00275"></a>00275 <span class="comment"> * The first baton in a set, with @a associated passed as @c NULL, must have</span>
<a name="l00276"></a>00276 <span class="comment"> * the longest lifetime of all the batons in the set.  This implies it must be</span>
<a name="l00277"></a>00277 <span class="comment"> * the root of the hierarchy.</span>
<a name="l00278"></a>00278 <span class="comment"> *</span>
<a name="l00279"></a>00279 <span class="comment"> * @since New in 1.2.</span>
<a name="l00280"></a>00280 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00281"></a>00281 <span class="comment"> *    Callers should use a #svn_wc_context_t object to access the working</span>
<a name="l00282"></a>00282 <span class="comment"> *    copy.</span>
<a name="l00283"></a>00283 <span class="comment"> */</span>
<a name="l00284"></a>00284 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00285"></a>00285 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00286"></a>00286 <a class="code" href="group__svn__wc__adm__access.html#gaddf0e029434ea0c11afca9aaec37989e" title="Return, in *adm_access, a pointer to a new access baton for the working copy administrative area asso...">svn_wc_adm_open3</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00287"></a>00287                  <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00288"></a>00288                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00289"></a>00289                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> write_lock,
<a name="l00290"></a>00290                  <span class="keywordtype">int</span> levels_to_lock,
<a name="l00291"></a>00291                  <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l00292"></a>00292                  <span class="keywordtype">void</span> *cancel_baton,
<a name="l00293"></a>00293                  apr_pool_t *pool);
<a name="l00294"></a>00294 <span class="comment"></span>
<a name="l00295"></a>00295 <span class="comment">/**</span>
<a name="l00296"></a>00296 <span class="comment"> * Similar to svn_wc_adm_open3(), but without cancellation support.</span>
<a name="l00297"></a>00297 <span class="comment"> *</span>
<a name="l00298"></a>00298 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l00299"></a>00299 <span class="comment"> */</span>
<a name="l00300"></a>00300 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00301"></a>00301 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00302"></a>00302 <a class="code" href="group__svn__wc__adm__access.html#ga118cf24d8f4dbd85c2fd377873489715" title="Similar to svn_wc_adm_open3(), but without cancellation support.">svn_wc_adm_open2</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00303"></a>00303                  <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00304"></a>00304                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00305"></a>00305                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> write_lock,
<a name="l00306"></a>00306                  <span class="keywordtype">int</span> levels_to_lock,
<a name="l00307"></a>00307                  apr_pool_t *pool);
<a name="l00308"></a>00308 <span class="comment"></span>
<a name="l00309"></a>00309 <span class="comment">/**</span>
<a name="l00310"></a>00310 <span class="comment"> * Similar to svn_wc_adm_open2(), but with @a tree_lock instead of</span>
<a name="l00311"></a>00311 <span class="comment"> * @a levels_to_lock.  @a levels_to_lock is set to -1 if @a tree_lock</span>
<a name="l00312"></a>00312 <span class="comment"> * is @c TRUE, else 0.</span>
<a name="l00313"></a>00313 <span class="comment"> *</span>
<a name="l00314"></a>00314 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.0 API.</span>
<a name="l00315"></a>00315 <span class="comment"> */</span>
<a name="l00316"></a>00316 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00317"></a>00317 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00318"></a>00318 <a class="code" href="group__svn__wc__adm__access.html#ga80292eb05f5147165bf64a5125318a43" title="Similar to svn_wc_adm_open2(), but with tree_lock instead of levels_to_lock.">svn_wc_adm_open</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00319"></a>00319                 <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00320"></a>00320                 <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00321"></a>00321                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> write_lock,
<a name="l00322"></a>00322                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> tree_lock,
<a name="l00323"></a>00323                 apr_pool_t *pool);
<a name="l00324"></a>00324 <span class="comment"></span>
<a name="l00325"></a>00325 <span class="comment">/**</span>
<a name="l00326"></a>00326 <span class="comment"> * Checks the working copy to determine the node type of @a path.  If</span>
<a name="l00327"></a>00327 <span class="comment"> * @a path is a versioned directory then the behaviour is like that of</span>
<a name="l00328"></a>00328 <span class="comment"> * svn_wc_adm_open3(), otherwise, if @a path is a file or does not</span>
<a name="l00329"></a>00329 <span class="comment"> * exist, then the behaviour is like that of svn_wc_adm_open3() with</span>
<a name="l00330"></a>00330 <span class="comment"> * @a path replaced by the parent directory of @a path.  If @a path is</span>
<a name="l00331"></a>00331 <span class="comment"> * an unversioned directory, the behaviour is also like that of</span>
<a name="l00332"></a>00332 <span class="comment"> * svn_wc_adm_open3() on the parent, except that if the open fails,</span>
<a name="l00333"></a>00333 <span class="comment"> * then the returned #SVN_ERR_WC_NOT_DIRECTORY error refers to @a path,</span>
<a name="l00334"></a>00334 <span class="comment"> * not to @a path&#39;s parent.</span>
<a name="l00335"></a>00335 <span class="comment"> *</span>
<a name="l00336"></a>00336 <span class="comment"> * @since New in 1.2.</span>
<a name="l00337"></a>00337 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00338"></a>00338 <span class="comment"> *    Callers should use a #svn_wc_context_t object to access the working</span>
<a name="l00339"></a>00339 <span class="comment"> *    copy.</span>
<a name="l00340"></a>00340 <span class="comment"> */</span>
<a name="l00341"></a>00341 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00342"></a>00342 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00343"></a>00343 <a class="code" href="group__svn__wc__adm__access.html#ga971e7caac7597c29fd0e8e7d5e29da78" title="Checks the working copy to determine the node type of path.">svn_wc_adm_probe_open3</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00344"></a>00344                        <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00345"></a>00345                        <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00346"></a>00346                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> write_lock,
<a name="l00347"></a>00347                        <span class="keywordtype">int</span> levels_to_lock,
<a name="l00348"></a>00348                        <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l00349"></a>00349                        <span class="keywordtype">void</span> *cancel_baton,
<a name="l00350"></a>00350                        apr_pool_t *pool);
<a name="l00351"></a>00351 <span class="comment"></span>
<a name="l00352"></a>00352 <span class="comment">/**</span>
<a name="l00353"></a>00353 <span class="comment"> * Similar to svn_wc_adm_probe_open3() without the cancel</span>
<a name="l00354"></a>00354 <span class="comment"> * functionality.</span>
<a name="l00355"></a>00355 <span class="comment"> *</span>
<a name="l00356"></a>00356 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l00357"></a>00357 <span class="comment"> */</span>
<a name="l00358"></a>00358 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00359"></a>00359 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00360"></a>00360 <a class="code" href="group__svn__wc__adm__access.html#ga0b354346d178c60dcb2c65c223f5b6b4" title="Similar to svn_wc_adm_probe_open3() without the cancel functionality.">svn_wc_adm_probe_open2</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00361"></a>00361                        <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00362"></a>00362                        <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00363"></a>00363                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> write_lock,
<a name="l00364"></a>00364                        <span class="keywordtype">int</span> levels_to_lock,
<a name="l00365"></a>00365                        apr_pool_t *pool);
<a name="l00366"></a>00366 <span class="comment"></span>
<a name="l00367"></a>00367 <span class="comment">/**</span>
<a name="l00368"></a>00368 <span class="comment"> * Similar to svn_wc_adm_probe_open2(), but with @a tree_lock instead of</span>
<a name="l00369"></a>00369 <span class="comment"> * @a levels_to_lock.  @a levels_to_lock is set to -1 if @a tree_lock</span>
<a name="l00370"></a>00370 <span class="comment"> * is @c TRUE, else 0.</span>
<a name="l00371"></a>00371 <span class="comment"> *</span>
<a name="l00372"></a>00372 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.0 API.</span>
<a name="l00373"></a>00373 <span class="comment"> */</span>
<a name="l00374"></a>00374 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00375"></a>00375 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00376"></a>00376 <a class="code" href="group__svn__wc__adm__access.html#ga8f6dc11fdaf7444b29eb04ca58a9ec06" title="Similar to svn_wc_adm_probe_open2(), but with tree_lock instead of levels_to_lock.">svn_wc_adm_probe_open</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00377"></a>00377                       <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00378"></a>00378                       <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00379"></a>00379                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> write_lock,
<a name="l00380"></a>00380                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> tree_lock,
<a name="l00381"></a>00381                       apr_pool_t *pool);
<a name="l00382"></a>00382 <span class="comment"></span>
<a name="l00383"></a>00383 <span class="comment">/**</span>
<a name="l00384"></a>00384 <span class="comment"> * Open access batons for @a path and return in @a *anchor_access and</span>
<a name="l00385"></a>00385 <span class="comment"> * @a *target the anchor and target required to drive an editor.  Return</span>
<a name="l00386"></a>00386 <span class="comment"> * in @a *target_access the access baton for the target, which may be the</span>
<a name="l00387"></a>00387 <span class="comment"> * same as @a *anchor_access (in which case @a *target is the empty</span>
<a name="l00388"></a>00388 <span class="comment"> * string, never NULL).  All the access batons will be in the</span>
<a name="l00389"></a>00389 <span class="comment"> * @a *anchor_access set.</span>
<a name="l00390"></a>00390 <span class="comment"> *</span>
<a name="l00391"></a>00391 <span class="comment"> * @a levels_to_lock determines the levels_to_lock used when opening</span>
<a name="l00392"></a>00392 <span class="comment"> * @a path if @a path is a versioned directory, @a levels_to_lock is</span>
<a name="l00393"></a>00393 <span class="comment"> * ignored otherwise.  If @a write_lock is @c TRUE the access batons</span>
<a name="l00394"></a>00394 <span class="comment"> * will hold write locks.</span>
<a name="l00395"></a>00395 <span class="comment"> *</span>
<a name="l00396"></a>00396 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton to determine</span>
<a name="l00397"></a>00397 <span class="comment"> * if the client has canceled the operation.</span>
<a name="l00398"></a>00398 <span class="comment"> *</span>
<a name="l00399"></a>00399 <span class="comment"> * This function is essentially a combination of svn_wc_adm_open3() and</span>
<a name="l00400"></a>00400 <span class="comment"> * svn_wc_get_actual_target(), with the emphasis on reducing physical IO.</span>
<a name="l00401"></a>00401 <span class="comment"> *</span>
<a name="l00402"></a>00402 <span class="comment"> * @since New in 1.2.</span>
<a name="l00403"></a>00403 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00404"></a>00404 <span class="comment"> *    Callers should use a #svn_wc_context_t object to access the working</span>
<a name="l00405"></a>00405 <span class="comment"> *    copy.</span>
<a name="l00406"></a>00406 <span class="comment"> */</span>
<a name="l00407"></a>00407 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00408"></a>00408 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00409"></a>00409 <a class="code" href="group__svn__wc__adm__access.html#ga815baadf43d3b81c1d24acfd77a80881" title="Open access batons for path and return in *anchor_access and *target the anchor and target required t...">svn_wc_adm_open_anchor</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **anchor_access,
<a name="l00410"></a>00410                        <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **target_access,
<a name="l00411"></a>00411                        <span class="keyword">const</span> <span class="keywordtype">char</span> **target,
<a name="l00412"></a>00412                        <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00413"></a>00413                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> write_lock,
<a name="l00414"></a>00414                        <span class="keywordtype">int</span> levels_to_lock,
<a name="l00415"></a>00415                        <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l00416"></a>00416                        <span class="keywordtype">void</span> *cancel_baton,
<a name="l00417"></a>00417                        apr_pool_t *pool);
<a name="l00418"></a>00418 <span class="comment"></span>
<a name="l00419"></a>00419 <span class="comment">/** Return, in @a *adm_access, a pointer to an existing access baton associated</span>
<a name="l00420"></a>00420 <span class="comment"> * with @a path.  @a path must be a directory that is locked as part of the</span>
<a name="l00421"></a>00421 <span class="comment"> * set containing the @a associated access baton.</span>
<a name="l00422"></a>00422 <span class="comment"> *</span>
<a name="l00423"></a>00423 <span class="comment"> * If the requested access baton is marked as missing in, or is simply</span>
<a name="l00424"></a>00424 <span class="comment"> * absent from, @a associated, return #SVN_ERR_WC_NOT_LOCKED.</span>
<a name="l00425"></a>00425 <span class="comment"> *</span>
<a name="l00426"></a>00426 <span class="comment"> * @a pool is used only for local processing, it is not used for the batons.</span>
<a name="l00427"></a>00427 <span class="comment"> *</span>
<a name="l00428"></a>00428 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00429"></a>00429 <span class="comment"> */</span>
<a name="l00430"></a>00430 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00431"></a>00431 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00432"></a>00432 <a class="code" href="group__svn__wc__adm__access.html#gafcb8ef7b4025bdff2c0fdf277bdadf09" title="Return, in *adm_access, a pointer to an existing access baton associated with path.">svn_wc_adm_retrieve</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00433"></a>00433                     <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00434"></a>00434                     <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00435"></a>00435                     apr_pool_t *pool);
<a name="l00436"></a>00436 <span class="comment"></span>
<a name="l00437"></a>00437 <span class="comment">/** Check the working copy to determine the node type of @a path.  If</span>
<a name="l00438"></a>00438 <span class="comment"> * @a path is a versioned directory then the behaviour is like that of</span>
<a name="l00439"></a>00439 <span class="comment"> * svn_wc_adm_retrieve(), otherwise, if @a path is a file, an unversioned</span>
<a name="l00440"></a>00440 <span class="comment"> * directory, or does not exist, then the behaviour is like that of</span>
<a name="l00441"></a>00441 <span class="comment"> * svn_wc_adm_retrieve() with @a path replaced by the parent directory of</span>
<a name="l00442"></a>00442 <span class="comment"> * @a path.</span>
<a name="l00443"></a>00443 <span class="comment"> *</span>
<a name="l00444"></a>00444 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00445"></a>00445 <span class="comment"> */</span>
<a name="l00446"></a>00446 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00447"></a>00447 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00448"></a>00448 <a class="code" href="group__svn__wc__adm__access.html#ga47b1104d8a1376cd9c8532a261805e6e" title="Check the working copy to determine the node type of path.">svn_wc_adm_probe_retrieve</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00449"></a>00449                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00450"></a>00450                           <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00451"></a>00451                           apr_pool_t *pool);
<a name="l00452"></a>00452 <span class="comment"></span>
<a name="l00453"></a>00453 <span class="comment">/**</span>
<a name="l00454"></a>00454 <span class="comment"> * Try various ways to obtain an access baton for @a path.</span>
<a name="l00455"></a>00455 <span class="comment"> *</span>
<a name="l00456"></a>00456 <span class="comment"> * First, try to obtain @a *adm_access via svn_wc_adm_probe_retrieve(),</span>
<a name="l00457"></a>00457 <span class="comment"> * but if this fails because @a associated can&#39;t give a baton for</span>
<a name="l00458"></a>00458 <span class="comment"> * @a path or @a path&#39;s parent, then try svn_wc_adm_probe_open3(),</span>
<a name="l00459"></a>00459 <span class="comment"> * this time passing @a write_lock and @a levels_to_lock.  If there is</span>
<a name="l00460"></a>00460 <span class="comment"> * still no access because @a path is not a versioned directory, then</span>
<a name="l00461"></a>00461 <span class="comment"> * just set @a *adm_access to NULL and return success.  But if it is</span>
<a name="l00462"></a>00462 <span class="comment"> * because @a path is locked, then return the error #SVN_ERR_WC_LOCKED,</span>
<a name="l00463"></a>00463 <span class="comment"> * and the effect on @a *adm_access is undefined.  (Or if the attempt</span>
<a name="l00464"></a>00464 <span class="comment"> * fails for any other reason, return the corresponding error, and the</span>
<a name="l00465"></a>00465 <span class="comment"> * effect on @a *adm_access is also undefined.)</span>
<a name="l00466"></a>00466 <span class="comment"> *</span>
<a name="l00467"></a>00467 <span class="comment"> * If svn_wc_adm_probe_open3() succeeds, then add @a *adm_access to</span>
<a name="l00468"></a>00468 <span class="comment"> * @a associated.</span>
<a name="l00469"></a>00469 <span class="comment"> *</span>
<a name="l00470"></a>00470 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton to determine</span>
<a name="l00471"></a>00471 <span class="comment"> * if the client has canceled the operation.</span>
<a name="l00472"></a>00472 <span class="comment"> *</span>
<a name="l00473"></a>00473 <span class="comment"> * Use @a pool only for local processing, not to allocate @a *adm_access.</span>
<a name="l00474"></a>00474 <span class="comment"> *</span>
<a name="l00475"></a>00475 <span class="comment"> * @since New in 1.2.</span>
<a name="l00476"></a>00476 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00477"></a>00477 <span class="comment"> */</span>
<a name="l00478"></a>00478 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00479"></a>00479 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00480"></a>00480 <a class="code" href="group__svn__wc__adm__access.html#ga94b2ca8feb1118f5c234ed2951e3ae73" title="Try various ways to obtain an access baton for path.">svn_wc_adm_probe_try3</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00481"></a>00481                       <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00482"></a>00482                       <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00483"></a>00483                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> write_lock,
<a name="l00484"></a>00484                       <span class="keywordtype">int</span> levels_to_lock,
<a name="l00485"></a>00485                       <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l00486"></a>00486                       <span class="keywordtype">void</span> *cancel_baton,
<a name="l00487"></a>00487                       apr_pool_t *pool);
<a name="l00488"></a>00488 <span class="comment"></span>
<a name="l00489"></a>00489 <span class="comment">/**</span>
<a name="l00490"></a>00490 <span class="comment"> * Similar to svn_wc_adm_probe_try3() without the cancel</span>
<a name="l00491"></a>00491 <span class="comment"> * functionality.</span>
<a name="l00492"></a>00492 <span class="comment"> *</span>
<a name="l00493"></a>00493 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l00494"></a>00494 <span class="comment"> */</span>
<a name="l00495"></a>00495 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00496"></a>00496 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00497"></a>00497 <a class="code" href="group__svn__wc__adm__access.html#ga631aca7597279d301659392f21ea00a8" title="Similar to svn_wc_adm_probe_try3() without the cancel functionality.">svn_wc_adm_probe_try2</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00498"></a>00498                       <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00499"></a>00499                       <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00500"></a>00500                       <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> write_lock,
<a name="l00501"></a>00501                       <span class="keywordtype">int</span> levels_to_lock,
<a name="l00502"></a>00502                       apr_pool_t *pool);
<a name="l00503"></a>00503 <span class="comment"></span>
<a name="l00504"></a>00504 <span class="comment">/**</span>
<a name="l00505"></a>00505 <span class="comment"> * Similar to svn_wc_adm_probe_try2(), but with @a tree_lock instead of</span>
<a name="l00506"></a>00506 <span class="comment"> * @a levels_to_lock.  @a levels_to_lock is set to -1 if @a tree_lock</span>
<a name="l00507"></a>00507 <span class="comment"> * is @c TRUE, else 0.</span>
<a name="l00508"></a>00508 <span class="comment"> *</span>
<a name="l00509"></a>00509 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.0 API.</span>
<a name="l00510"></a>00510 <span class="comment"> */</span>
<a name="l00511"></a>00511 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00512"></a>00512 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00513"></a>00513 <a class="code" href="group__svn__wc__adm__access.html#gae4d2de08de13ffc40789a2b2c3736d0a" title="Similar to svn_wc_adm_probe_try2(), but with tree_lock instead of levels_to_lock.">svn_wc_adm_probe_try</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> **adm_access,
<a name="l00514"></a>00514                      <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *associated,
<a name="l00515"></a>00515                      <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00516"></a>00516                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> write_lock,
<a name="l00517"></a>00517                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> tree_lock,
<a name="l00518"></a>00518                      apr_pool_t *pool);
<a name="l00519"></a>00519 
<a name="l00520"></a>00520 <span class="comment"></span>
<a name="l00521"></a>00521 <span class="comment">/** Give up the access baton @a adm_access, and its lock if any. This will</span>
<a name="l00522"></a>00522 <span class="comment"> * recursively close any batons in the same set that are direct</span>
<a name="l00523"></a>00523 <span class="comment"> * subdirectories of @a adm_access.  Any physical locks will be removed from</span>
<a name="l00524"></a>00524 <span class="comment"> * the working copy.  Lock removal is unconditional, there is no check to</span>
<a name="l00525"></a>00525 <span class="comment"> * determine if cleanup is required.</span>
<a name="l00526"></a>00526 <span class="comment"> *</span>
<a name="l00527"></a>00527 <span class="comment"> * Any temporary allocations are performed using @a scratch_pool.</span>
<a name="l00528"></a>00528 <span class="comment"> *</span>
<a name="l00529"></a>00529 <span class="comment"> * @since New in 1.6</span>
<a name="l00530"></a>00530 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00531"></a>00531 <span class="comment"> */</span>
<a name="l00532"></a>00532 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00533"></a>00533 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00534"></a>00534 <a class="code" href="group__svn__wc__adm__access.html#ga0e08699d39123ad0a10f25864ff18cc8" title="Give up the access baton adm_access, and its lock if any.">svn_wc_adm_close2</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l00535"></a>00535                   apr_pool_t *scratch_pool);
<a name="l00536"></a>00536 <span class="comment"></span>
<a name="l00537"></a>00537 <span class="comment">/**</span>
<a name="l00538"></a>00538 <span class="comment"> * Similar to svn_wc_adm_close2(), but with the internal pool of @a adm_access</span>
<a name="l00539"></a>00539 <span class="comment"> * used for temporary allocations.</span>
<a name="l00540"></a>00540 <span class="comment"> *</span>
<a name="l00541"></a>00541 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l00542"></a>00542 <span class="comment"> */</span>
<a name="l00543"></a>00543 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00544"></a>00544 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00545"></a>00545 <a class="code" href="group__svn__wc__adm__access.html#ga3d68fda6ceadb30d83c93d7ef67cf612" title="Similar to svn_wc_adm_close2(), but with the internal pool of adm_access used for temporary allocatio...">svn_wc_adm_close</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access);
<a name="l00546"></a>00546 <span class="comment"></span>
<a name="l00547"></a>00547 <span class="comment">/** Return the path used to open the access baton @a adm_access.</span>
<a name="l00548"></a>00548 <span class="comment"> *</span>
<a name="l00549"></a>00549 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00550"></a>00550 <span class="comment"> */</span>
<a name="l00551"></a>00551 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00552"></a>00552 <span class="keyword">const</span> <span class="keywordtype">char</span> *
<a name="l00553"></a>00553 <a class="code" href="group__svn__wc__adm__access.html#ga1ae775ef2795b1185f5045cba43220f9" title="Return the path used to open the access baton adm_access.">svn_wc_adm_access_path</a>(<span class="keyword">const</span> <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access);
<a name="l00554"></a>00554 <span class="comment"></span>
<a name="l00555"></a>00555 <span class="comment">/** Return the pool used by access baton @a adm_access.</span>
<a name="l00556"></a>00556 <span class="comment"> *</span>
<a name="l00557"></a>00557 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00558"></a>00558 <span class="comment"> */</span>
<a name="l00559"></a>00559 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00560"></a>00560 apr_pool_t *
<a name="l00561"></a>00561 <a class="code" href="group__svn__wc__adm__access.html#ga5b41cc9abfa8bc0b3c7ff6c93994dbd2" title="Return the pool used by access baton adm_access.">svn_wc_adm_access_pool</a>(<span class="keyword">const</span> <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access);
<a name="l00562"></a>00562 <span class="comment"></span>
<a name="l00563"></a>00563 <span class="comment">/** Return @c TRUE is the access baton @a adm_access has a write lock,</span>
<a name="l00564"></a>00564 <span class="comment"> * @c FALSE otherwise. Compared to svn_wc_locked() this is a cheap, fast</span>
<a name="l00565"></a>00565 <span class="comment"> * function that doesn&#39;t access the filesystem.</span>
<a name="l00566"></a>00566 <span class="comment"> *</span>
<a name="l00567"></a>00567 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00568"></a>00568 <span class="comment"> * New code should use svn_wc_locked2() instead.</span>
<a name="l00569"></a>00569 <span class="comment"> */</span>
<a name="l00570"></a>00570 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00571"></a>00571 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a>
<a name="l00572"></a>00572 <a class="code" href="group__svn__wc__adm__access.html#gad32ff3d5066d7997af0f7f91cb62eeb2" title="Return TRUE is the access baton adm_access has a write lock, FALSE otherwise.">svn_wc_adm_locked</a>(<span class="keyword">const</span> <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access);
<a name="l00573"></a>00573 <span class="comment"></span>
<a name="l00574"></a>00574 <span class="comment">/** @} */</span>
<a name="l00575"></a>00575 
<a name="l00576"></a>00576 <span class="comment"></span>
<a name="l00577"></a>00577 <span class="comment">/** Gets up to two booleans indicating whether a path is locked for</span>
<a name="l00578"></a>00578 <span class="comment"> * writing.</span>
<a name="l00579"></a>00579 <span class="comment"> *</span>
<a name="l00580"></a>00580 <span class="comment"> * @a locked_here is set to TRUE when a write lock on @a local_abspath</span>
<a name="l00581"></a>00581 <span class="comment"> * exists in @a wc_ctx. @a locked is set to TRUE when there is a</span>
<a name="l00582"></a>00582 <span class="comment"> * write_lock on @a local_abspath</span>
<a name="l00583"></a>00583 <span class="comment"> *</span>
<a name="l00584"></a>00584 <span class="comment"> * @a locked_here and/or @a locked can be NULL when you are not</span>
<a name="l00585"></a>00585 <span class="comment"> * interested in a specific value</span>
<a name="l00586"></a>00586 <span class="comment"> *</span>
<a name="l00587"></a>00587 <span class="comment"> * @since New in 1.7.</span>
<a name="l00588"></a>00588 <span class="comment"> */</span>
<a name="l00589"></a>00589 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00590"></a>00590 <a class="code" href="group__svn__wc.html#ga54914757b40d17e4c82604ac10eef3c7" title="Gets up to two booleans indicating whether a path is locked for writing.">svn_wc_locked2</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *locked_here,
<a name="l00591"></a>00591                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *locked,
<a name="l00592"></a>00592                <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l00593"></a>00593                <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l00594"></a>00594                apr_pool_t *scratch_pool);
<a name="l00595"></a>00595 <span class="comment"></span>
<a name="l00596"></a>00596 <span class="comment">/** Set @a *locked to non-zero if @a path is locked, else set it to zero.</span>
<a name="l00597"></a>00597 <span class="comment"> *</span>
<a name="l00598"></a>00598 <span class="comment"> * New code should use svn_wc_locked2() instead.</span>
<a name="l00599"></a>00599 <span class="comment"> *</span>
<a name="l00600"></a>00600 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00601"></a>00601 <span class="comment"> */</span>
<a name="l00602"></a>00602 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00603"></a>00603 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00604"></a>00604 <a class="code" href="group__svn__wc.html#ga8b66a2c9cc512699bc7e764f2ccd13b3" title="Set *locked to non-zero if path is locked, else set it to zero.">svn_wc_locked</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *locked,
<a name="l00605"></a>00605               <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l00606"></a>00606               apr_pool_t *pool);
<a name="l00607"></a>00607 
<a name="l00608"></a>00608 <span class="comment"></span>
<a name="l00609"></a>00609 <span class="comment">/**</span>
<a name="l00610"></a>00610 <span class="comment"> * @defgroup svn_wc_adm_dir_name Name of Subversion&#39;s admin dir</span>
<a name="l00611"></a>00611 <span class="comment"> * @{</span>
<a name="l00612"></a>00612 <span class="comment"> */</span>
<a name="l00613"></a>00613 <span class="comment"></span>
<a name="l00614"></a>00614 <span class="comment">/** The default name of the administrative subdirectory.</span>
<a name="l00615"></a>00615 <span class="comment"> *</span>
<a name="l00616"></a>00616 <span class="comment"> * Ideally, this would be completely private to wc internals (in fact,</span>
<a name="l00617"></a>00617 <span class="comment"> * it used to be that adm_subdir() in adm_files.c was the only function</span>
<a name="l00618"></a>00618 <span class="comment"> * who knew the adm subdir&#39;s name).  However, import wants to protect</span>
<a name="l00619"></a>00619 <span class="comment"> * against importing administrative subdirs, so now the name is a</span>
<a name="l00620"></a>00620 <span class="comment"> * matter of public record.</span>
<a name="l00621"></a>00621 <span class="comment"> *</span>
<a name="l00622"></a>00622 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l00623"></a>00623 <span class="comment"> */</span>
<a name="l00624"></a><a class="code" href="group__svn__wc__adm__dir__name.html#ga7e49218c791f4362df5b166162b3fc0c">00624</a> <span class="preprocessor">#define SVN_WC_ADM_DIR_NAME   &quot;.svn&quot;</span>
<a name="l00625"></a>00625 <span class="preprocessor"></span>
<a name="l00626"></a>00626 <span class="comment"></span>
<a name="l00627"></a>00627 <span class="comment">/**</span>
<a name="l00628"></a>00628 <span class="comment"> * Return @c TRUE if @a name is the name of the WC administrative</span>
<a name="l00629"></a>00629 <span class="comment"> * directory.  Use @a pool for any temporary allocations.  Only works</span>
<a name="l00630"></a>00630 <span class="comment"> * with base directory names, not paths or URIs.</span>
<a name="l00631"></a>00631 <span class="comment"> *</span>
<a name="l00632"></a>00632 <span class="comment"> * For compatibility, the default name (.svn) will always be treated</span>
<a name="l00633"></a>00633 <span class="comment"> * as an admin dir name, even if the working copy is actually using an</span>
<a name="l00634"></a>00634 <span class="comment"> * alternative name.</span>
<a name="l00635"></a>00635 <span class="comment"> *</span>
<a name="l00636"></a>00636 <span class="comment"> * @since New in 1.3.</span>
<a name="l00637"></a>00637 <span class="comment"> */</span>
<a name="l00638"></a>00638 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a>
<a name="l00639"></a>00639 <a class="code" href="group__svn__wc__adm__dir__name.html#gac5ebbaa87eaa6abacb698335dcc253ca" title="Return TRUE if name is the name of the WC administrative directory.">svn_wc_is_adm_dir</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *name, apr_pool_t *pool);
<a name="l00640"></a>00640 
<a name="l00641"></a>00641 <span class="comment"></span>
<a name="l00642"></a>00642 <span class="comment">/**</span>
<a name="l00643"></a>00643 <span class="comment"> * Return the name of the administrative directory.</span>
<a name="l00644"></a>00644 <span class="comment"> * Use @a pool for any temporary allocations.</span>
<a name="l00645"></a>00645 <span class="comment"> *</span>
<a name="l00646"></a>00646 <span class="comment"> * The returned pointer will refer to either a statically allocated</span>
<a name="l00647"></a>00647 <span class="comment"> * string, or to a string allocated in @a pool.</span>
<a name="l00648"></a>00648 <span class="comment"> *</span>
<a name="l00649"></a>00649 <span class="comment"> * @since New in 1.3.</span>
<a name="l00650"></a>00650 <span class="comment"> */</span>
<a name="l00651"></a>00651 <span class="keyword">const</span> <span class="keywordtype">char</span> *
<a name="l00652"></a>00652 <a class="code" href="group__svn__wc__adm__dir__name.html#gaa90606b1d49e2c341b1af6ddac12bba7" title="Return the name of the administrative directory.">svn_wc_get_adm_dir</a>(apr_pool_t *pool);
<a name="l00653"></a>00653 
<a name="l00654"></a>00654 <span class="comment"></span>
<a name="l00655"></a>00655 <span class="comment">/**</span>
<a name="l00656"></a>00656 <span class="comment"> * Use @a name for the administrative directory in the working copy.</span>
<a name="l00657"></a>00657 <span class="comment"> * Use @a pool for any temporary allocations.</span>
<a name="l00658"></a>00658 <span class="comment"> *</span>
<a name="l00659"></a>00659 <span class="comment"> * The list of valid names is limited.  Currently only &quot;.svn&quot; (the</span>
<a name="l00660"></a>00660 <span class="comment"> * default) and &quot;_svn&quot; are allowed.</span>
<a name="l00661"></a>00661 <span class="comment"> *</span>
<a name="l00662"></a>00662 <span class="comment"> * @note This function changes global (per-process) state and must be</span>
<a name="l00663"></a>00663 <span class="comment"> * called in a single-threaded context during the initialization of a</span>
<a name="l00664"></a>00664 <span class="comment"> * Subversion client.</span>
<a name="l00665"></a>00665 <span class="comment"> *</span>
<a name="l00666"></a>00666 <span class="comment"> * @since New in 1.3.</span>
<a name="l00667"></a>00667 <span class="comment"> */</span>
<a name="l00668"></a>00668 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00669"></a>00669 <a class="code" href="group__svn__wc__adm__dir__name.html#gab7d2c658e785e6473872a0a92e532dd0" title="Use name for the administrative directory in the working copy.">svn_wc_set_adm_dir</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *name,
<a name="l00670"></a>00670                    apr_pool_t *pool);
<a name="l00671"></a>00671 <span class="comment"></span>
<a name="l00672"></a>00672 <span class="comment">/** @} */</span>
<a name="l00673"></a>00673 
<a name="l00674"></a>00674 <span class="comment"></span>
<a name="l00675"></a>00675 <span class="comment">/**</span>
<a name="l00676"></a>00676 <span class="comment"> * @defgroup svn_wc_externals Externals</span>
<a name="l00677"></a>00677 <span class="comment"> * @{</span>
<a name="l00678"></a>00678 <span class="comment"> */</span>
<a name="l00679"></a>00679 <span class="comment"></span>
<a name="l00680"></a>00680 <span class="comment">/** Callback for external definitions updates</span>
<a name="l00681"></a>00681 <span class="comment"> *</span>
<a name="l00682"></a>00682 <span class="comment"> * @a local_abspath is the path on which the external definition was found.</span>
<a name="l00683"></a>00683 <span class="comment"> * @a old_val and @a new_val are the before and after values of the</span>
<a name="l00684"></a>00684 <span class="comment"> * SVN_PROP_EXTERNALS property.  @a depth is the ambient depth of the</span>
<a name="l00685"></a>00685 <span class="comment"> * working copy directory at @a local_abspath.</span>
<a name="l00686"></a>00686 <span class="comment"> *</span>
<a name="l00687"></a>00687 <span class="comment"> * @since New in 1.7. */</span>
<a name="l00688"></a><a class="code" href="group__svn__wc__externals.html#gaadc49094b6524a3fa3bd27cf91300eeb">00688</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_external_update_t)(<span class="keywordtype">void</span> *baton,
<a name="l00689"></a>00689                                                  <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l00690"></a>00690                                                  <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *old_val,
<a name="l00691"></a>00691                                                  <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *new_val,
<a name="l00692"></a>00692                                                  <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l00693"></a>00693                                                  apr_pool_t *scratch_pool);
<a name="l00694"></a>00694 <span class="comment"></span>
<a name="l00695"></a>00695 <span class="comment">/** Traversal information is information gathered by a working copy</span>
<a name="l00696"></a>00696 <span class="comment"> * crawl or update.  For example, the before and after values of the</span>
<a name="l00697"></a>00697 <span class="comment"> * svn:externals property are important after an update, and since</span>
<a name="l00698"></a>00698 <span class="comment"> * we&#39;re traversing the working tree anyway (a complete traversal</span>
<a name="l00699"></a>00699 <span class="comment"> * during the initial crawl, and a traversal of changed paths during</span>
<a name="l00700"></a>00700 <span class="comment"> * the checkout/update/switch), it makes sense to gather the</span>
<a name="l00701"></a>00701 <span class="comment"> * property&#39;s values then instead of making a second pass.</span>
<a name="l00702"></a>00702 <span class="comment"> *</span>
<a name="l00703"></a>00703 <span class="comment"> * New code should use the svn_wc_external_update_t callback instead.</span>
<a name="l00704"></a>00704 <span class="comment"> *</span>
<a name="l00705"></a>00705 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00706"></a>00706 <span class="comment"> */</span>
<a name="l00707"></a><a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf">00707</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a>;
<a name="l00708"></a>00708 
<a name="l00709"></a>00709 <span class="comment"></span>
<a name="l00710"></a>00710 <span class="comment">/** Return a new, empty traversal info object, allocated in @a pool.</span>
<a name="l00711"></a>00711 <span class="comment"> *</span>
<a name="l00712"></a>00712 <span class="comment"> * New code should use the svn_wc_external_update_t callback instead.</span>
<a name="l00713"></a>00713 <span class="comment"> *</span>
<a name="l00714"></a>00714 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00715"></a>00715 <span class="comment"> */</span>
<a name="l00716"></a>00716 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00717"></a>00717 <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *
<a name="l00718"></a>00718 <a class="code" href="group__svn__wc__externals.html#ga2fbe44c949d899dec6d1e0980c042ec6" title="Return a new, empty traversal info object, allocated in pool.">svn_wc_init_traversal_info</a>(apr_pool_t *pool);
<a name="l00719"></a>00719 <span class="comment"></span>
<a name="l00720"></a>00720 <span class="comment">/** Set @a *externals_old and @a *externals_new to hash tables representing</span>
<a name="l00721"></a>00721 <span class="comment"> * changes to values of the svn:externals property on directories</span>
<a name="l00722"></a>00722 <span class="comment"> * traversed by @a traversal_info.</span>
<a name="l00723"></a>00723 <span class="comment"> *</span>
<a name="l00724"></a>00724 <span class="comment"> * @a traversal_info is obtained from svn_wc_init_traversal_info(), but is</span>
<a name="l00725"></a>00725 <span class="comment"> * only useful after it has been passed through another function, such</span>
<a name="l00726"></a>00726 <span class="comment"> * as svn_wc_crawl_revisions(), svn_wc_get_update_editor(),</span>
<a name="l00727"></a>00727 <span class="comment"> * svn_wc_get_switch_editor(), etc.</span>
<a name="l00728"></a>00728 <span class="comment"> *</span>
<a name="l00729"></a>00729 <span class="comment"> * Each hash maps &lt;tt&gt;const char *&lt;/tt&gt; directory names onto</span>
<a name="l00730"></a>00730 <span class="comment"> * &lt;tt&gt;const char *&lt;/tt&gt; values of the externals property for that directory.</span>
<a name="l00731"></a>00731 <span class="comment"> * The dir names are full paths -- that is, anchor plus target, not target</span>
<a name="l00732"></a>00732 <span class="comment"> * alone. The values are not parsed, they are simply copied raw, and are</span>
<a name="l00733"></a>00733 <span class="comment"> * never NULL: directories that acquired or lost the property are</span>
<a name="l00734"></a>00734 <span class="comment"> * simply omitted from the appropriate table.  Directories whose value</span>
<a name="l00735"></a>00735 <span class="comment"> * of the property did not change show the same value in each hash.</span>
<a name="l00736"></a>00736 <span class="comment"> *</span>
<a name="l00737"></a>00737 <span class="comment"> * The hashes, keys, and values have the same lifetime as @a traversal_info.</span>
<a name="l00738"></a>00738 <span class="comment"> *</span>
<a name="l00739"></a>00739 <span class="comment"> * New code should use the svn_wc_external_update_t callback instead.</span>
<a name="l00740"></a>00740 <span class="comment"> *</span>
<a name="l00741"></a>00741 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00742"></a>00742 <span class="comment"> */</span>
<a name="l00743"></a>00743 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00744"></a>00744 <span class="keywordtype">void</span>
<a name="l00745"></a>00745 <a class="code" href="group__svn__wc__externals.html#ga80b77fcea8a3464b74fb113d05a785a9" title="Set *externals_old and *externals_new to hash tables representing changes to values of the svn:extern...">svn_wc_edited_externals</a>(apr_hash_t **externals_old,
<a name="l00746"></a>00746                         apr_hash_t **externals_new,
<a name="l00747"></a>00747                         <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *traversal_info);
<a name="l00748"></a>00748 
<a name="l00749"></a>00749 <span class="comment"></span>
<a name="l00750"></a>00750 <span class="comment">/** Set @a *depths to a hash table mapping &lt;tt&gt;const char *&lt;/tt&gt;</span>
<a name="l00751"></a>00751 <span class="comment"> * directory names (directories traversed by @a traversal_info) to</span>
<a name="l00752"></a>00752 <span class="comment"> * &lt;tt&gt;const char *&lt;/tt&gt; values (the depths of those directories, as</span>
<a name="l00753"></a>00753 <span class="comment"> * converted by svn_depth_to_word()).</span>
<a name="l00754"></a>00754 <span class="comment"> *</span>
<a name="l00755"></a>00755 <span class="comment"> * @a traversal_info is obtained from svn_wc_init_traversal_info(), but is</span>
<a name="l00756"></a>00756 <span class="comment"> * only useful after it has been passed through another function, such</span>
<a name="l00757"></a>00757 <span class="comment"> * as svn_wc_crawl_revisions(), svn_wc_get_update_editor(),</span>
<a name="l00758"></a>00758 <span class="comment"> * svn_wc_get_switch_editor(), etc.</span>
<a name="l00759"></a>00759 <span class="comment"> *</span>
<a name="l00760"></a>00760 <span class="comment"> * The dir names are full paths -- that is, anchor plus target, not target</span>
<a name="l00761"></a>00761 <span class="comment"> * alone.  The values are not allocated, they are static constant strings.</span>
<a name="l00762"></a>00762 <span class="comment"> * Although the values are never NULL, not all directories traversed</span>
<a name="l00763"></a>00763 <span class="comment"> * are necessarily listed.  For example, directories which did not</span>
<a name="l00764"></a>00764 <span class="comment"> * have an svn:externals property set or modified are not included.</span>
<a name="l00765"></a>00765 <span class="comment"> *</span>
<a name="l00766"></a>00766 <span class="comment"> * The hashes and keys have the same lifetime as @a traversal_info.</span>
<a name="l00767"></a>00767 <span class="comment"> *</span>
<a name="l00768"></a>00768 <span class="comment"> * New code should use the svn_wc_external_update_t callback instead.</span>
<a name="l00769"></a>00769 <span class="comment"> *</span>
<a name="l00770"></a>00770 <span class="comment"> * @since New in 1.5.</span>
<a name="l00771"></a>00771 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l00772"></a>00772 <span class="comment"> */</span>
<a name="l00773"></a>00773 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00774"></a>00774 <span class="keywordtype">void</span>
<a name="l00775"></a>00775 <a class="code" href="group__svn__wc__externals.html#gac94df934a5af2ba1f6728cd05309b57b" title="Set *depths to a hash table mapping const char * directory names (directories traversed by traversal_...">svn_wc_traversed_depths</a>(apr_hash_t **depths,
<a name="l00776"></a>00776                         <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *traversal_info);
<a name="l00777"></a>00777 
<a name="l00778"></a>00778 <span class="comment"></span>
<a name="l00779"></a>00779 <span class="comment">/** One external item.  This usually represents one line from an</span>
<a name="l00780"></a>00780 <span class="comment"> * svn:externals description but with the path and URL</span>
<a name="l00781"></a>00781 <span class="comment"> * canonicalized.</span>
<a name="l00782"></a>00782 <span class="comment"> *</span>
<a name="l00783"></a>00783 <span class="comment"> * In order to avoid backwards compatibility problems clients should use</span>
<a name="l00784"></a>00784 <span class="comment"> * svn_wc_external_item_create() to allocate and initialize this structure</span>
<a name="l00785"></a>00785 <span class="comment"> * instead of doing so themselves.</span>
<a name="l00786"></a>00786 <span class="comment"> *</span>
<a name="l00787"></a>00787 <span class="comment"> * @since New in 1.5.</span>
<a name="l00788"></a>00788 <span class="comment"> */</span>
<a name="l00789"></a><a class="code" href="structsvn__wc__external__item2__t.html">00789</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__external__item2__t.html" title="One external item.">svn_wc_external_item2_t</a>
<a name="l00790"></a>00790 {<span class="comment"></span>
<a name="l00791"></a>00791 <span class="comment">  /** The name of the subdirectory into which this external should be</span>
<a name="l00792"></a>00792 <span class="comment">      checked out.  This is relative to the parent directory that</span>
<a name="l00793"></a>00793 <span class="comment">      holds this external item.  (Note that these structs are often</span>
<a name="l00794"></a>00794 <span class="comment">      stored in hash tables with the target dirs as keys, so this</span>
<a name="l00795"></a>00795 <span class="comment">      field will often be redundant.) */</span>
<a name="l00796"></a><a class="code" href="structsvn__wc__external__item2__t.html#a81d47a03f28a61ec699871ce4a343b4a">00796</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__external__item2__t.html#a81d47a03f28a61ec699871ce4a343b4a" title="The name of the subdirectory into which this external should be checked out.">target_dir</a>;
<a name="l00797"></a>00797 <span class="comment"></span>
<a name="l00798"></a>00798 <span class="comment">  /** Where to check out from. */</span>
<a name="l00799"></a><a class="code" href="structsvn__wc__external__item2__t.html#a378889695ae374518c4f7852d418f054">00799</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__external__item2__t.html#a378889695ae374518c4f7852d418f054" title="Where to check out from.">url</a>;
<a name="l00800"></a>00800 <span class="comment"></span>
<a name="l00801"></a>00801 <span class="comment">  /** What revision to check out.  The only valid kinds for this are</span>
<a name="l00802"></a>00802 <span class="comment">      svn_opt_revision_number, svn_opt_revision_date, and</span>
<a name="l00803"></a>00803 <span class="comment">      svn_opt_revision_head. */</span>
<a name="l00804"></a><a class="code" href="structsvn__wc__external__item2__t.html#ab36674e913f261031b4c25f203d925ab">00804</a>   <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> <a class="code" href="structsvn__wc__external__item2__t.html#ab36674e913f261031b4c25f203d925ab" title="What revision to check out.">revision</a>;
<a name="l00805"></a>00805 <span class="comment"></span>
<a name="l00806"></a>00806 <span class="comment">  /** The peg revision to use when checking out.  The only valid kinds are</span>
<a name="l00807"></a>00807 <span class="comment">      svn_opt_revision_number, svn_opt_revision_date, and</span>
<a name="l00808"></a>00808 <span class="comment">      svn_opt_revision_head. */</span>
<a name="l00809"></a><a class="code" href="structsvn__wc__external__item2__t.html#a81a57c80f23c9fd7ba902d07e5e9e1d1">00809</a>   <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> <a class="code" href="structsvn__wc__external__item2__t.html#a81a57c80f23c9fd7ba902d07e5e9e1d1" title="The peg revision to use when checking out.">peg_revision</a>;
<a name="l00810"></a>00810 
<a name="l00811"></a>00811 } <a class="code" href="group__svn__wc__externals.html#ga65c834fde9ea0e7d45ebb540845dd9a3" title="One external item.">svn_wc_external_item2_t</a>;
<a name="l00812"></a>00812 <span class="comment"></span>
<a name="l00813"></a>00813 <span class="comment">/**</span>
<a name="l00814"></a>00814 <span class="comment"> * Initialize an external item.</span>
<a name="l00815"></a>00815 <span class="comment"> * Set @a *item to an external item object, allocated in @a pool.</span>
<a name="l00816"></a>00816 <span class="comment"> *</span>
<a name="l00817"></a>00817 <span class="comment"> * In order to avoid backwards compatibility problems, this function</span>
<a name="l00818"></a>00818 <span class="comment"> * is used to initialize and allocate the #svn_wc_external_item2_t</span>
<a name="l00819"></a>00819 <span class="comment"> * structure rather than doing so explicitly, as the size of this</span>
<a name="l00820"></a>00820 <span class="comment"> * structure may change in the future.</span>
<a name="l00821"></a>00821 <span class="comment"> *</span>
<a name="l00822"></a>00822 <span class="comment"> * The current implementation never returns error, but callers should</span>
<a name="l00823"></a>00823 <span class="comment"> * still check for error, for compatibility with future versions.</span>
<a name="l00824"></a>00824 <span class="comment"> *</span>
<a name="l00825"></a>00825 <span class="comment"> * @since New in 1.5.</span>
<a name="l00826"></a>00826 <span class="comment"> */</span>
<a name="l00827"></a>00827 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00828"></a>00828 <a class="code" href="group__svn__wc__externals.html#ga3bc707b160ec0a8d07920da7f342d8ee" title="Initialize an external item.">svn_wc_external_item_create</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__external__item2__t.html" title="One external item.">svn_wc_external_item2_t</a> **item,
<a name="l00829"></a>00829                             apr_pool_t *pool);
<a name="l00830"></a>00830 <span class="comment"></span>
<a name="l00831"></a>00831 <span class="comment">/**</span>
<a name="l00832"></a>00832 <span class="comment"> * Return a duplicate of @a item, allocated in @a pool.  No part of the new</span>
<a name="l00833"></a>00833 <span class="comment"> * item will be shared with @a item.</span>
<a name="l00834"></a>00834 <span class="comment"> *</span>
<a name="l00835"></a>00835 <span class="comment"> * @since New in 1.5.</span>
<a name="l00836"></a>00836 <span class="comment"> */</span>
<a name="l00837"></a>00837 <a class="code" href="structsvn__wc__external__item2__t.html" title="One external item.">svn_wc_external_item2_t</a> *
<a name="l00838"></a>00838 <a class="code" href="group__svn__wc__externals.html#ga6f568e858cec641dd2248d60c9b82523" title="Return a duplicate of item, allocated in pool.">svn_wc_external_item2_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__external__item2__t.html" title="One external item.">svn_wc_external_item2_t</a> *item,
<a name="l00839"></a>00839                           apr_pool_t *pool);
<a name="l00840"></a>00840 <span class="comment"></span>
<a name="l00841"></a>00841 <span class="comment">/**</span>
<a name="l00842"></a>00842 <span class="comment"> * One external item.  Similar to svn_wc_external_item2_t, except</span>
<a name="l00843"></a>00843 <span class="comment"> * @a revision is interpreted as both the operational revision and the</span>
<a name="l00844"></a>00844 <span class="comment"> * peg revision.</span>
<a name="l00845"></a>00845 <span class="comment"> *</span>
<a name="l00846"></a>00846 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l00847"></a>00847 <span class="comment"> */</span>
<a name="l00848"></a><a class="code" href="structsvn__wc__external__item__t.html">00848</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__external__item__t.html" title="One external item.">svn_wc_external_item_t</a>
<a name="l00849"></a>00849 {<span class="comment"></span>
<a name="l00850"></a>00850 <span class="comment">  /** Same as #svn_wc_external_item2_t.target_dir */</span>
<a name="l00851"></a><a class="code" href="structsvn__wc__external__item__t.html#af7bcec90e1af047b56b7178ae122aeec">00851</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__external__item__t.html#af7bcec90e1af047b56b7178ae122aeec" title="Same as svn_wc_external_item2_t.target_dir.">target_dir</a>;
<a name="l00852"></a>00852 <span class="comment"></span>
<a name="l00853"></a>00853 <span class="comment">  /** Same as #svn_wc_external_item2_t.url */</span>
<a name="l00854"></a><a class="code" href="structsvn__wc__external__item__t.html#a634228c950b5e14764511871d32f974f">00854</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__external__item__t.html#a634228c950b5e14764511871d32f974f" title="Same as svn_wc_external_item2_t.url.">url</a>;
<a name="l00855"></a>00855 <span class="comment"></span>
<a name="l00856"></a>00856 <span class="comment">  /** Same as #svn_wc_external_item2_t.revision */</span>
<a name="l00857"></a><a class="code" href="structsvn__wc__external__item__t.html#aaf3463d6dba99f7c0d2046a0ce700e40">00857</a>   <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> <a class="code" href="structsvn__wc__external__item__t.html#aaf3463d6dba99f7c0d2046a0ce700e40" title="Same as svn_wc_external_item2_t.revision.">revision</a>;
<a name="l00858"></a>00858 
<a name="l00859"></a>00859 } <a class="code" href="group__svn__wc__externals.html#gab306bb3e6f09fc6f57dd31551d5b7f51" title="One external item.">svn_wc_external_item_t</a>;
<a name="l00860"></a>00860 <span class="comment"></span>
<a name="l00861"></a>00861 <span class="comment">/**</span>
<a name="l00862"></a>00862 <span class="comment"> * Return a duplicate of @a item, allocated in @a pool.  No part of the new</span>
<a name="l00863"></a>00863 <span class="comment"> * item will be shared with @a item.</span>
<a name="l00864"></a>00864 <span class="comment"> *</span>
<a name="l00865"></a>00865 <span class="comment"> * @since New in 1.3.</span>
<a name="l00866"></a>00866 <span class="comment"> *</span>
<a name="l00867"></a>00867 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l00868"></a>00868 <span class="comment"> */</span>
<a name="l00869"></a>00869 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00870"></a>00870 <a class="code" href="structsvn__wc__external__item__t.html" title="One external item.">svn_wc_external_item_t</a> *
<a name="l00871"></a>00871 <a class="code" href="group__svn__wc__externals.html#ga974158abf3fd2025ff46206562329a7f" title="Return a duplicate of item, allocated in pool.">svn_wc_external_item_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__external__item__t.html" title="One external item.">svn_wc_external_item_t</a> *item,
<a name="l00872"></a>00872                          apr_pool_t *pool);
<a name="l00873"></a>00873 <span class="comment"></span>
<a name="l00874"></a>00874 <span class="comment">/**</span>
<a name="l00875"></a>00875 <span class="comment"> * If @a externals_p is non-NULL, set @a *externals_p to an array of</span>
<a name="l00876"></a>00876 <span class="comment"> * #svn_wc_external_item2_t * objects based on @a desc.</span>
<a name="l00877"></a>00877 <span class="comment"> *</span>
<a name="l00878"></a>00878 <span class="comment"> * If the format of @a desc is invalid, don&#39;t touch @a *externals_p and</span>
<a name="l00879"></a>00879 <span class="comment"> * return #SVN_ERR_CLIENT_INVALID_EXTERNALS_DESCRIPTION.  Thus, if</span>
<a name="l00880"></a>00880 <span class="comment"> * you just want to check the validity of an externals description,</span>
<a name="l00881"></a>00881 <span class="comment"> * and don&#39;t care about the parsed result, pass NULL for @a externals_p.</span>
<a name="l00882"></a>00882 <span class="comment"> *</span>
<a name="l00883"></a>00883 <span class="comment"> * The format of @a desc is the same as for values of the directory</span>
<a name="l00884"></a>00884 <span class="comment"> * property #SVN_PROP_EXTERNALS.  Look there for more details.</span>
<a name="l00885"></a>00885 <span class="comment"> *</span>
<a name="l00886"></a>00886 <span class="comment"> * If @a canonicalize_url is @c TRUE, canonicalize the @a url member</span>
<a name="l00887"></a>00887 <span class="comment"> * of those objects.  If the @a url member refers to an absolute URL,</span>
<a name="l00888"></a>00888 <span class="comment"> * it will be canonicalized as URL consistent with the way URLs are</span>
<a name="l00889"></a>00889 <span class="comment"> * canonicalized throughout the Subversion API.  If, however, the</span>
<a name="l00890"></a>00890 <span class="comment"> * @a url member makes use of the recognized (and proprietary)</span>
<a name="l00891"></a>00891 <span class="comment"> * relative URL syntax, &quot;canonicalization&quot; is a less easily-defined</span>
<a name="l00892"></a>00892 <span class="comment"> * concept which may even result in munging the relative URL syntax</span>
<a name="l00893"></a>00893 <span class="comment"> * beyond recognition.  You&#39;ve been warned.</span>
<a name="l00894"></a>00894 <span class="comment"> *</span>
<a name="l00895"></a>00895 <span class="comment"> * Allocate the table, keys, and values in @a pool.</span>
<a name="l00896"></a>00896 <span class="comment"> *</span>
<a name="l00897"></a>00897 <span class="comment"> * Use @a parent_directory only in constructing error strings.</span>
<a name="l00898"></a>00898 <span class="comment"> *</span>
<a name="l00899"></a>00899 <span class="comment"> * @since New in 1.5.</span>
<a name="l00900"></a>00900 <span class="comment"> */</span>
<a name="l00901"></a>00901 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00902"></a>00902 <a class="code" href="group__svn__wc__externals.html#ga967e69dba3bd70ecac6f5a9ab8328769" title="If externals_p is non-NULL, set *externals_p to an array of svn_wc_external_item2_t * objects based o...">svn_wc_parse_externals_description3</a>(apr_array_header_t **externals_p,
<a name="l00903"></a>00903                                     <span class="keyword">const</span> <span class="keywordtype">char</span> *parent_directory,
<a name="l00904"></a>00904                                     <span class="keyword">const</span> <span class="keywordtype">char</span> *desc,
<a name="l00905"></a>00905                                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> canonicalize_url,
<a name="l00906"></a>00906                                     apr_pool_t *pool);
<a name="l00907"></a>00907 <span class="comment"></span>
<a name="l00908"></a>00908 <span class="comment">/**</span>
<a name="l00909"></a>00909 <span class="comment"> * Similar to svn_wc_parse_externals_description3() with @a</span>
<a name="l00910"></a>00910 <span class="comment"> * canonicalize_url set to @c TRUE, but returns an array of</span>
<a name="l00911"></a>00911 <span class="comment"> * #svn_wc_external_item_t * objects instead of</span>
<a name="l00912"></a>00912 <span class="comment"> * #svn_wc_external_item2_t * objects</span>
<a name="l00913"></a>00913 <span class="comment"> *</span>
<a name="l00914"></a>00914 <span class="comment"> * @since New in 1.1.</span>
<a name="l00915"></a>00915 <span class="comment"> *</span>
<a name="l00916"></a>00916 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l00917"></a>00917 <span class="comment"> */</span>
<a name="l00918"></a>00918 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00919"></a>00919 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00920"></a>00920 <a class="code" href="group__svn__wc__externals.html#gac3f8fe2d2960cc59744ef51e4d532f09" title="Similar to svn_wc_parse_externals_description3() with canonicalize_url set to TRUE, but returns an array of svn_wc_external_item_t * objects instead of svn_wc_external_item2_t * objects.">svn_wc_parse_externals_description2</a>(apr_array_header_t **externals_p,
<a name="l00921"></a>00921                                     <span class="keyword">const</span> <span class="keywordtype">char</span> *parent_directory,
<a name="l00922"></a>00922                                     <span class="keyword">const</span> <span class="keywordtype">char</span> *desc,
<a name="l00923"></a>00923                                     apr_pool_t *pool);
<a name="l00924"></a>00924 <span class="comment"></span>
<a name="l00925"></a>00925 <span class="comment">/**</span>
<a name="l00926"></a>00926 <span class="comment"> * Similar to svn_wc_parse_externals_description2(), but returns the</span>
<a name="l00927"></a>00927 <span class="comment"> * parsed externals in a hash instead of an array.  This function</span>
<a name="l00928"></a>00928 <span class="comment"> * should not be used, as storing the externals in a hash causes their</span>
<a name="l00929"></a>00929 <span class="comment"> * order of evaluation to be not easily identifiable.</span>
<a name="l00930"></a>00930 <span class="comment"> *</span>
<a name="l00931"></a>00931 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.0 API.</span>
<a name="l00932"></a>00932 <span class="comment"> */</span>
<a name="l00933"></a>00933 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l00934"></a>00934 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l00935"></a>00935 <a class="code" href="group__svn__wc__externals.html#ga5ab8b16043f91809cf8731517d7033a2" title="Similar to svn_wc_parse_externals_description2(), but returns the parsed externals in a hash instead ...">svn_wc_parse_externals_description</a>(apr_hash_t **externals_p,
<a name="l00936"></a>00936                                    <span class="keyword">const</span> <span class="keywordtype">char</span> *parent_directory,
<a name="l00937"></a>00937                                    <span class="keyword">const</span> <span class="keywordtype">char</span> *desc,
<a name="l00938"></a>00938                                    apr_pool_t *pool);
<a name="l00939"></a>00939 <span class="comment"></span>
<a name="l00940"></a>00940 <span class="comment">/** @} */</span>
<a name="l00941"></a>00941 
<a name="l00942"></a>00942 <span class="comment"></span>
<a name="l00943"></a>00943 <span class="comment">/**</span>
<a name="l00944"></a>00944 <span class="comment"> * @defgroup svn_wc_notifications Notification callback handling</span>
<a name="l00945"></a>00945 <span class="comment"> * @{</span>
<a name="l00946"></a>00946 <span class="comment"> *</span>
<a name="l00947"></a>00947 <span class="comment"> * In many cases, the WC library will scan a working copy and make</span>
<a name="l00948"></a>00948 <span class="comment"> * changes. The caller usually wants to know when each of these changes</span>
<a name="l00949"></a>00949 <span class="comment"> * has been made, so that it can display some kind of notification to</span>
<a name="l00950"></a>00950 <span class="comment"> * the user.</span>
<a name="l00951"></a>00951 <span class="comment"> *</span>
<a name="l00952"></a>00952 <span class="comment"> * These notifications have a standard callback function type, which</span>
<a name="l00953"></a>00953 <span class="comment"> * takes the path of the file that was affected, and a caller-</span>
<a name="l00954"></a>00954 <span class="comment"> * supplied baton.</span>
<a name="l00955"></a>00955 <span class="comment"> *</span>
<a name="l00956"></a>00956 <span class="comment"> * @note The callback is a &#39;void&#39; return -- this is a simple</span>
<a name="l00957"></a>00957 <span class="comment"> * reporting mechanism, rather than an opportunity for the caller to</span>
<a name="l00958"></a>00958 <span class="comment"> * alter the operation of the WC library.</span>
<a name="l00959"></a>00959 <span class="comment"> *</span>
<a name="l00960"></a>00960 <span class="comment"> * @note Some of the actions are used across several</span>
<a name="l00961"></a>00961 <span class="comment"> * different Subversion commands.  For example, the update actions are</span>
<a name="l00962"></a>00962 <span class="comment"> * also used for checkouts, switches, and merges.</span>
<a name="l00963"></a>00963 <span class="comment"> */</span>
<a name="l00964"></a>00964 <span class="comment"></span>
<a name="l00965"></a>00965 <span class="comment">/** The type of action occurring. */</span>
<a name="l00966"></a><a class="code" href="group__svn__wc__notifications.html#ga816dd065327746637bb9af6322959dfb">00966</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__notifications.html#ga816dd065327746637bb9af6322959dfb" title="The type of action occurring.">svn_wc_notify_action_t</a>
<a name="l00967"></a>00967 {<span class="comment"></span>
<a name="l00968"></a>00968 <span class="comment">  /** Adding a path to revision control. */</span>
<a name="l00969"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbab07ee349aff12490fd6ab772652121dd">00969</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbab07ee349aff12490fd6ab772652121dd" title="Adding a path to revision control.">svn_wc_notify_add</a> = 0,
<a name="l00970"></a>00970 <span class="comment"></span>
<a name="l00971"></a>00971 <span class="comment">  /** Copying a versioned path. */</span>
<a name="l00972"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbad926b089f72fb6b5d21a93a79ee73312">00972</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbad926b089f72fb6b5d21a93a79ee73312" title="Copying a versioned path.">svn_wc_notify_copy</a>,
<a name="l00973"></a>00973 <span class="comment"></span>
<a name="l00974"></a>00974 <span class="comment">  /** Deleting a versioned path. */</span>
<a name="l00975"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbafda06e69ea6eb4d9854c2ad714ecc376">00975</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbafda06e69ea6eb4d9854c2ad714ecc376" title="Deleting a versioned path.">svn_wc_notify_delete</a>,
<a name="l00976"></a>00976 <span class="comment"></span>
<a name="l00977"></a>00977 <span class="comment">  /** Restoring a missing path from the pristine text-base. */</span>
<a name="l00978"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba48045025400c71dc96d77deb072ee708">00978</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba48045025400c71dc96d77deb072ee708" title="Restoring a missing path from the pristine text-base.">svn_wc_notify_restore</a>,
<a name="l00979"></a>00979 <span class="comment"></span>
<a name="l00980"></a>00980 <span class="comment">  /** Reverting a modified path. */</span>
<a name="l00981"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba407bbdd56a98e262df8bb3011a60b155">00981</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba407bbdd56a98e262df8bb3011a60b155" title="Reverting a modified path.">svn_wc_notify_revert</a>,
<a name="l00982"></a>00982 <span class="comment"></span>
<a name="l00983"></a>00983 <span class="comment">  /** A revert operation has failed. */</span>
<a name="l00984"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba2bcecaf2211f66bc614e3a8f78c670ae">00984</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba2bcecaf2211f66bc614e3a8f78c670ae" title="A revert operation has failed.">svn_wc_notify_failed_revert</a>,
<a name="l00985"></a>00985 <span class="comment"></span>
<a name="l00986"></a>00986 <span class="comment">  /** Resolving a conflict. */</span>
<a name="l00987"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba17c8db86901d427d0a89f1b941a83771">00987</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba17c8db86901d427d0a89f1b941a83771" title="Resolving a conflict.">svn_wc_notify_resolved</a>,
<a name="l00988"></a>00988 <span class="comment"></span>
<a name="l00989"></a>00989 <span class="comment">  /** Skipping a path. */</span>
<a name="l00990"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba4a209db49755539a389aa4cedef33288">00990</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba4a209db49755539a389aa4cedef33288" title="Skipping a path.">svn_wc_notify_skip</a>,
<a name="l00991"></a>00991 <span class="comment"></span>
<a name="l00992"></a>00992 <span class="comment">  /** Got a delete in an update. */</span>
<a name="l00993"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba38981690593bddc0a2316a0ffba5b6da">00993</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba38981690593bddc0a2316a0ffba5b6da" title="Got a delete in an update.">svn_wc_notify_update_delete</a>,
<a name="l00994"></a>00994 <span class="comment"></span>
<a name="l00995"></a>00995 <span class="comment">  /** Got an add in an update. */</span>
<a name="l00996"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba4ac1bd5edaeba95c5eedc131794d1417">00996</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba4ac1bd5edaeba95c5eedc131794d1417" title="Got an add in an update.">svn_wc_notify_update_add</a>,
<a name="l00997"></a>00997 <span class="comment"></span>
<a name="l00998"></a>00998 <span class="comment">  /** Got any other action in an update. */</span>
<a name="l00999"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba6bd0bed3729640f65be5ffcbb13ca7ba">00999</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba6bd0bed3729640f65be5ffcbb13ca7ba" title="Got any other action in an update.">svn_wc_notify_update_update</a>,
<a name="l01000"></a>01000 <span class="comment"></span>
<a name="l01001"></a>01001 <span class="comment">  /** The last notification in an update (including updates of externals). */</span>
<a name="l01002"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba5f3ac998b6a84b1c128b60d693bab81f">01002</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba5f3ac998b6a84b1c128b60d693bab81f" title="The last notification in an update (including updates of externals).">svn_wc_notify_update_completed</a>,
<a name="l01003"></a>01003 <span class="comment"></span>
<a name="l01004"></a>01004 <span class="comment">  /** Updating an external module. */</span>
<a name="l01005"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba6486c8e66204bb9b75c5ec0a6ae3b2d0">01005</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba6486c8e66204bb9b75c5ec0a6ae3b2d0" title="Updating an external module.">svn_wc_notify_update_external</a>,
<a name="l01006"></a>01006 <span class="comment"></span>
<a name="l01007"></a>01007 <span class="comment">  /** The last notification in a status (including status on externals). */</span>
<a name="l01008"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba8dbd8712289a9cd180135b2677077a82">01008</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba8dbd8712289a9cd180135b2677077a82" title="The last notification in a status (including status on externals).">svn_wc_notify_status_completed</a>,
<a name="l01009"></a>01009 <span class="comment"></span>
<a name="l01010"></a>01010 <span class="comment">  /** Running status on an external module. */</span>
<a name="l01011"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbab27ee18588b1cf527ed9fabeb35b7d9f">01011</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbab27ee18588b1cf527ed9fabeb35b7d9f" title="Running status on an external module.">svn_wc_notify_status_external</a>,
<a name="l01012"></a>01012 <span class="comment"></span>
<a name="l01013"></a>01013 <span class="comment">  /** Committing a modification. */</span>
<a name="l01014"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba420057b7bb510fb5aa0bdb9e66f0a539">01014</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba420057b7bb510fb5aa0bdb9e66f0a539" title="Committing a modification.">svn_wc_notify_commit_modified</a>,
<a name="l01015"></a>01015 <span class="comment"></span>
<a name="l01016"></a>01016 <span class="comment">  /** Committing an addition. */</span>
<a name="l01017"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba52b25ce9adc0069074e0a5c6c4f80281">01017</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba52b25ce9adc0069074e0a5c6c4f80281" title="Committing an addition.">svn_wc_notify_commit_added</a>,
<a name="l01018"></a>01018 <span class="comment"></span>
<a name="l01019"></a>01019 <span class="comment">  /** Committing a deletion. */</span>
<a name="l01020"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba2fc7c843717d4f09bb9aba9b072467a1">01020</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba2fc7c843717d4f09bb9aba9b072467a1" title="Committing a deletion.">svn_wc_notify_commit_deleted</a>,
<a name="l01021"></a>01021 <span class="comment"></span>
<a name="l01022"></a>01022 <span class="comment">  /** Committing a replacement. */</span>
<a name="l01023"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaadd71ad48113309b4602f102e97411a6">01023</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaadd71ad48113309b4602f102e97411a6" title="Committing a replacement.">svn_wc_notify_commit_replaced</a>,
<a name="l01024"></a>01024 <span class="comment"></span>
<a name="l01025"></a>01025 <span class="comment">  /** Transmitting post-fix text-delta data for a file. */</span>
<a name="l01026"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba849f0b67e4b6bb9a773a595af7c36a2d">01026</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba849f0b67e4b6bb9a773a595af7c36a2d" title="Transmitting post-fix text-delta data for a file.">svn_wc_notify_commit_postfix_txdelta</a>,
<a name="l01027"></a>01027 <span class="comment"></span>
<a name="l01028"></a>01028 <span class="comment">  /** Processed a single revision&#39;s blame. */</span>
<a name="l01029"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbad05a037aec1e1f838926761924b54d4e">01029</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbad05a037aec1e1f838926761924b54d4e" title="Processed a single revision&#39;s blame.">svn_wc_notify_blame_revision</a>,
<a name="l01030"></a>01030 <span class="comment"></span>
<a name="l01031"></a>01031 <span class="comment">  /** Locking a path. @since New in 1.2. */</span>
<a name="l01032"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbafe5e8fa294d1f45cd83f278c4e8c79c8">01032</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbafe5e8fa294d1f45cd83f278c4e8c79c8" title="Locking a path.">svn_wc_notify_locked</a>,
<a name="l01033"></a>01033 <span class="comment"></span>
<a name="l01034"></a>01034 <span class="comment">  /** Unlocking a path. @since New in 1.2. */</span>
<a name="l01035"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaa9e7777668a5f5b570bbc0ad039f0fc6">01035</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaa9e7777668a5f5b570bbc0ad039f0fc6" title="Unlocking a path.">svn_wc_notify_unlocked</a>,
<a name="l01036"></a>01036 <span class="comment"></span>
<a name="l01037"></a>01037 <span class="comment">  /** Failed to lock a path. @since New in 1.2. */</span>
<a name="l01038"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba9cab3e18698d83dacbf878050e5c0625">01038</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba9cab3e18698d83dacbf878050e5c0625" title="Failed to lock a path.">svn_wc_notify_failed_lock</a>,
<a name="l01039"></a>01039 <span class="comment"></span>
<a name="l01040"></a>01040 <span class="comment">  /** Failed to unlock a path. @since New in 1.2. */</span>
<a name="l01041"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba638003089806c936d51632b32cb49ec4">01041</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba638003089806c936d51632b32cb49ec4" title="Failed to unlock a path.">svn_wc_notify_failed_unlock</a>,
<a name="l01042"></a>01042 <span class="comment"></span>
<a name="l01043"></a>01043 <span class="comment">  /** Tried adding a path that already exists. @since New in 1.5. */</span>
<a name="l01044"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba05009848d7da166fe8a22a0132158531">01044</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba05009848d7da166fe8a22a0132158531" title="Tried adding a path that already exists.">svn_wc_notify_exists</a>,
<a name="l01045"></a>01045 <span class="comment"></span>
<a name="l01046"></a>01046 <span class="comment">  /** Changelist name set. @since New in 1.5. */</span>
<a name="l01047"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba563a2c5f0fca434557f1dfa65e5be531">01047</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba563a2c5f0fca434557f1dfa65e5be531" title="Changelist name set.">svn_wc_notify_changelist_set</a>,
<a name="l01048"></a>01048 <span class="comment"></span>
<a name="l01049"></a>01049 <span class="comment">  /** Changelist name cleared. @since New in 1.5. */</span>
<a name="l01050"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba891fc169afaad316a47369ff5aa13ac8">01050</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba891fc169afaad316a47369ff5aa13ac8" title="Changelist name cleared.">svn_wc_notify_changelist_clear</a>,
<a name="l01051"></a>01051 <span class="comment"></span>
<a name="l01052"></a>01052 <span class="comment">  /** Warn user that a path has moved from one changelist to another.</span>
<a name="l01053"></a>01053 <span class="comment">      @since New in 1.5.</span>
<a name="l01054"></a>01054 <span class="comment">      @deprecated As of 1.7, separate clear and set notifications are sent. */</span>
<a name="l01055"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba3fde1b346c9eb22bd003c16bd48bf612">01055</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba3fde1b346c9eb22bd003c16bd48bf612" title="Warn user that a path has moved from one changelist to another.">svn_wc_notify_changelist_moved</a>,
<a name="l01056"></a>01056 <span class="comment"></span>
<a name="l01057"></a>01057 <span class="comment">  /** A merge operation (to path) has begun.  See #svn_wc_notify_t.merge_range.</span>
<a name="l01058"></a>01058 <span class="comment">      @since New in 1.5. */</span>
<a name="l01059"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbae95d1b52cd304aa960531a43da865224">01059</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbae95d1b52cd304aa960531a43da865224" title="A merge operation (to path) has begun.">svn_wc_notify_merge_begin</a>,
<a name="l01060"></a>01060 <span class="comment"></span>
<a name="l01061"></a>01061 <span class="comment">  /** A merge operation (to path) from a foreign repository has begun.</span>
<a name="l01062"></a>01062 <span class="comment">      See #svn_wc_notify_t.merge_range.  @since New in 1.5. */</span>
<a name="l01063"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbac564514766106c0f270c0fd5dadda9ee">01063</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbac564514766106c0f270c0fd5dadda9ee" title="A merge operation (to path) from a foreign repository has begun.">svn_wc_notify_foreign_merge_begin</a>,
<a name="l01064"></a>01064 <span class="comment"></span>
<a name="l01065"></a>01065 <span class="comment">  /** Replace notification. @since New in 1.5. */</span>
<a name="l01066"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbacbbfd7554bc894c43d6ab1abdedd14fa">01066</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbacbbfd7554bc894c43d6ab1abdedd14fa" title="Replace notification.">svn_wc_notify_update_replace</a>,
<a name="l01067"></a>01067 <span class="comment"></span>
<a name="l01068"></a>01068 <span class="comment">  /** Property added. @since New in 1.6. */</span>
<a name="l01069"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba3623acd89d9f6a14fdd26d651c232c64">01069</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba3623acd89d9f6a14fdd26d651c232c64" title="Property added.">svn_wc_notify_property_added</a>,
<a name="l01070"></a>01070 <span class="comment"></span>
<a name="l01071"></a>01071 <span class="comment">  /** Property updated. @since New in 1.6. */</span>
<a name="l01072"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbae35590e24751392a35d1fbd33a19b4e1">01072</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbae35590e24751392a35d1fbd33a19b4e1" title="Property updated.">svn_wc_notify_property_modified</a>,
<a name="l01073"></a>01073 <span class="comment"></span>
<a name="l01074"></a>01074 <span class="comment">  /** Property deleted. @since New in 1.6. */</span>
<a name="l01075"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba269a1d293fb14bec9dac40d7a6b89e69">01075</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba269a1d293fb14bec9dac40d7a6b89e69" title="Property deleted.">svn_wc_notify_property_deleted</a>,
<a name="l01076"></a>01076 <span class="comment"></span>
<a name="l01077"></a>01077 <span class="comment">  /** Nonexistent property deleted. @since New in 1.6. */</span>
<a name="l01078"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaf9628d0506a3b3bb96e4a9bc6c6cd97e">01078</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaf9628d0506a3b3bb96e4a9bc6c6cd97e" title="Nonexistent property deleted.">svn_wc_notify_property_deleted_nonexistent</a>,
<a name="l01079"></a>01079 <span class="comment"></span>
<a name="l01080"></a>01080 <span class="comment">  /** Revprop set. @since New in 1.6. */</span>
<a name="l01081"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba91801ba816b3922b0b29d280ac811b1c">01081</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba91801ba816b3922b0b29d280ac811b1c" title="Revprop set.">svn_wc_notify_revprop_set</a>,
<a name="l01082"></a>01082 <span class="comment"></span>
<a name="l01083"></a>01083 <span class="comment">  /** Revprop deleted. @since New in 1.6. */</span>
<a name="l01084"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaa739b25de107b49d817d10df34ada11b">01084</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaa739b25de107b49d817d10df34ada11b" title="Revprop deleted.">svn_wc_notify_revprop_deleted</a>,
<a name="l01085"></a>01085 <span class="comment"></span>
<a name="l01086"></a>01086 <span class="comment">  /** The last notification in a merge. @since New in 1.6. */</span>
<a name="l01087"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbae599a0db078700be8f4f3267cfe5f3d2">01087</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbae599a0db078700be8f4f3267cfe5f3d2" title="The last notification in a merge.">svn_wc_notify_merge_completed</a>,
<a name="l01088"></a>01088 <span class="comment"></span>
<a name="l01089"></a>01089 <span class="comment">  /** The path is a tree-conflict victim of the intended action (*not*</span>
<a name="l01090"></a>01090 <span class="comment">   * a persistent tree-conflict from an earlier operation, but *this*</span>
<a name="l01091"></a>01091 <span class="comment">   * operation caused the tree-conflict). @since New in 1.6. */</span>
<a name="l01092"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba53d1f4883bfb152ba64b825e6ef480c8">01092</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba53d1f4883bfb152ba64b825e6ef480c8" title="The path is a tree-conflict victim of the intended action (*not* a persistent tree-conflict from an e...">svn_wc_notify_tree_conflict</a>,
<a name="l01093"></a>01093 <span class="comment"></span>
<a name="l01094"></a>01094 <span class="comment">  /** The path is a subdirectory referenced in an externals definition</span>
<a name="l01095"></a>01095 <span class="comment">   * which is unable to be operated on.  @since New in 1.6. */</span>
<a name="l01096"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbae88c7fc8caac16843f5d36cbe351a9b7">01096</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbae88c7fc8caac16843f5d36cbe351a9b7" title="The path is a subdirectory referenced in an externals definition which is unable to be operated on...">svn_wc_notify_failed_external</a>,
<a name="l01097"></a>01097 <span class="comment"></span>
<a name="l01098"></a>01098 <span class="comment">  /** Starting an update operation.  @since New in 1.7. */</span>
<a name="l01099"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba96c7a51535fe2dd293034087861d92db">01099</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba96c7a51535fe2dd293034087861d92db" title="Starting an update operation.">svn_wc_notify_update_started</a>,
<a name="l01100"></a>01100 <span class="comment"></span>
<a name="l01101"></a>01101 <span class="comment">  /** An update tried to add a file or directory at a path where</span>
<a name="l01102"></a>01102 <span class="comment">   * a separate working copy was found.  @since New in 1.7. */</span>
<a name="l01103"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaee4b70cb0e9ea9550096f97b2f778cbb">01103</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaee4b70cb0e9ea9550096f97b2f778cbb" title="An update tried to add a file or directory at a path where a separate working copy was found...">svn_wc_notify_update_skip_obstruction</a>,
<a name="l01104"></a>01104 <span class="comment"></span>
<a name="l01105"></a>01105 <span class="comment">  /** An explicit update tried to update a file or directory that</span>
<a name="l01106"></a>01106 <span class="comment">   * doesn&#39;t live in the repository and can&#39;t be brought in.</span>
<a name="l01107"></a>01107 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01108"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba39e48555e93992e8bcadb954948ad1ec">01108</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba39e48555e93992e8bcadb954948ad1ec" title="An explicit update tried to update a file or directory that doesn&#39;t live in the repository and can&#39;t ...">svn_wc_notify_update_skip_working_only</a>,
<a name="l01109"></a>01109 <span class="comment"></span>
<a name="l01110"></a>01110 <span class="comment">  /** An update tried to update a file or directory to which access could</span>
<a name="l01111"></a>01111 <span class="comment">   * not be obtained. @since New in 1.7. */</span>
<a name="l01112"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba34fe96f208e48f63f1147cfc52134129">01112</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba34fe96f208e48f63f1147cfc52134129" title="An update tried to update a file or directory to which access could not be obtained.">svn_wc_notify_update_skip_access_denied</a>,
<a name="l01113"></a>01113 <span class="comment"></span>
<a name="l01114"></a>01114 <span class="comment">  /** An update operation removed an external working copy.</span>
<a name="l01115"></a>01115 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01116"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba0aec1fc0c1b0a7b122d6d1fd7f9fa43f">01116</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba0aec1fc0c1b0a7b122d6d1fd7f9fa43f" title="An update operation removed an external working copy.">svn_wc_notify_update_external_removed</a>,
<a name="l01117"></a>01117 <span class="comment"></span>
<a name="l01118"></a>01118 <span class="comment">  /** A node below an existing node was added during update.</span>
<a name="l01119"></a>01119 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01120"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaa087abe29a5f0aaed9b080bbf1b82b8b">01120</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaa087abe29a5f0aaed9b080bbf1b82b8b" title="A node below an existing node was added during update.">svn_wc_notify_update_shadowed_add</a>,
<a name="l01121"></a>01121 <span class="comment"></span>
<a name="l01122"></a>01122 <span class="comment">  /** A node below an exising node was updated during update.</span>
<a name="l01123"></a>01123 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01124"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbae0a33aa3fb0e364f89cade9dd010d0e7">01124</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbae0a33aa3fb0e364f89cade9dd010d0e7" title="A node below an exising node was updated during update.">svn_wc_notify_update_shadowed_update</a>,
<a name="l01125"></a>01125 <span class="comment"></span>
<a name="l01126"></a>01126 <span class="comment">  /** A node below an existing node was deleted during update.</span>
<a name="l01127"></a>01127 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01128"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba8b3db63bb091e95337bd12ab5a500653">01128</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba8b3db63bb091e95337bd12ab5a500653" title="A node below an existing node was deleted during update.">svn_wc_notify_update_shadowed_delete</a>,
<a name="l01129"></a>01129 <span class="comment"></span>
<a name="l01130"></a>01130 <span class="comment">  /** The mergeinfo on path was updated.  @since New in 1.7. */</span>
<a name="l01131"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba14d76a7fa4ebb5c7a4551293fbdd81f0">01131</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba14d76a7fa4ebb5c7a4551293fbdd81f0" title="The mergeinfo on path was updated.">svn_wc_notify_merge_record_info</a>,
<a name="l01132"></a>01132 <span class="comment"></span>
<a name="l01133"></a>01133 <span class="comment">  /** An working copy directory was upgraded to the latest format</span>
<a name="l01134"></a>01134 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01135"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba0cf955ea28c2e9ba88b1c8e4716c9282">01135</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba0cf955ea28c2e9ba88b1c8e4716c9282" title="An working copy directory was upgraded to the latest format.">svn_wc_notify_upgraded_path</a>,
<a name="l01136"></a>01136 <span class="comment"></span>
<a name="l01137"></a>01137 <span class="comment">  /** Mergeinfo describing a merge was recorded.</span>
<a name="l01138"></a>01138 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01139"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba623760a59d56abffab3b055f02f7e052">01139</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba623760a59d56abffab3b055f02f7e052" title="Mergeinfo describing a merge was recorded.">svn_wc_notify_merge_record_info_begin</a>,
<a name="l01140"></a>01140 <span class="comment"></span>
<a name="l01141"></a>01141 <span class="comment">  /** Mergeinfo was removed due to elision.</span>
<a name="l01142"></a>01142 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01143"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba7821f3bd755f3a86a79427cc83424ffe">01143</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba7821f3bd755f3a86a79427cc83424ffe" title="Mergeinfo was removed due to elision.">svn_wc_notify_merge_elide_info</a>,
<a name="l01144"></a>01144 <span class="comment"></span>
<a name="l01145"></a>01145 <span class="comment">  /** A file in the working copy was patched.</span>
<a name="l01146"></a>01146 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01147"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba370525df9869adf456517c055a4dc9dd">01147</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba370525df9869adf456517c055a4dc9dd" title="A file in the working copy was patched.">svn_wc_notify_patch</a>,
<a name="l01148"></a>01148 <span class="comment"></span>
<a name="l01149"></a>01149 <span class="comment">  /** A hunk from a patch was applied.</span>
<a name="l01150"></a>01150 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01151"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbadcf22fdbaefbbec0701c034fb8c5610d">01151</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbadcf22fdbaefbbec0701c034fb8c5610d" title="A hunk from a patch was applied.">svn_wc_notify_patch_applied_hunk</a>,
<a name="l01152"></a>01152 <span class="comment"></span>
<a name="l01153"></a>01153 <span class="comment">  /** A hunk from a patch was rejected.</span>
<a name="l01154"></a>01154 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01155"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaf68abf140be478f073f67c14bdee88e7">01155</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaf68abf140be478f073f67c14bdee88e7" title="A hunk from a patch was rejected.">svn_wc_notify_patch_rejected_hunk</a>,
<a name="l01156"></a>01156 <span class="comment"></span>
<a name="l01157"></a>01157 <span class="comment">  /** A hunk from a patch was found to already be applied.</span>
<a name="l01158"></a>01158 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01159"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba82b560bcf2ecade9ad30fd619276bd1c">01159</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba82b560bcf2ecade9ad30fd619276bd1c" title="A hunk from a patch was found to already be applied.">svn_wc_notify_patch_hunk_already_applied</a>,
<a name="l01160"></a>01160 <span class="comment"></span>
<a name="l01161"></a>01161 <span class="comment">  /** Committing a non-overwriting copy (path is the target of the</span>
<a name="l01162"></a>01162 <span class="comment">   * copy, not the source).</span>
<a name="l01163"></a>01163 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01164"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba6cd170979a80951168cd682b48bb3753">01164</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba6cd170979a80951168cd682b48bb3753" title="Committing a non-overwriting copy (path is the target of the copy, not the source).">svn_wc_notify_commit_copied</a>,
<a name="l01165"></a>01165 <span class="comment"></span>
<a name="l01166"></a>01166 <span class="comment">  /** Committing an overwriting (replace) copy (path is the target of</span>
<a name="l01167"></a>01167 <span class="comment">   * the copy, not the source).</span>
<a name="l01168"></a>01168 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01169"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba4a36d7d687d672106f14c404284c1e90">01169</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba4a36d7d687d672106f14c404284c1e90" title="Committing an overwriting (replace) copy (path is the target of the copy, not the source)...">svn_wc_notify_commit_copied_replaced</a>,
<a name="l01170"></a>01170 <span class="comment"></span>
<a name="l01171"></a>01171 <span class="comment">  /** The server has instructed the client to follow a URL</span>
<a name="l01172"></a>01172 <span class="comment">   * redirection.</span>
<a name="l01173"></a>01173 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01174"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba44b07d57be9587af9c446af75d872c5b">01174</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba44b07d57be9587af9c446af75d872c5b" title="The server has instructed the client to follow a URL redirection.">svn_wc_notify_url_redirect</a>,
<a name="l01175"></a>01175 <span class="comment"></span>
<a name="l01176"></a>01176 <span class="comment">  /** The operation was attempted on a path which doesn&#39;t exist.</span>
<a name="l01177"></a>01177 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01178"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba3a2e4ada7813a3da9ec2516927ad962b">01178</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba3a2e4ada7813a3da9ec2516927ad962b" title="The operation was attempted on a path which doesn&#39;t exist.">svn_wc_notify_path_nonexistent</a>,
<a name="l01179"></a>01179 <span class="comment"></span>
<a name="l01180"></a>01180 <span class="comment">  /** Removing a path by excluding it.</span>
<a name="l01181"></a>01181 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01182"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba123da903489a3f5ccafb6c296b77b5f1">01182</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba123da903489a3f5ccafb6c296b77b5f1" title="Removing a path by excluding it.">svn_wc_notify_exclude</a>,
<a name="l01183"></a>01183 <span class="comment"></span>
<a name="l01184"></a>01184 <span class="comment">  /** Operation failed because the node remains in conflict</span>
<a name="l01185"></a>01185 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01186"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba622cb0658d035b8c9247c622496fa139">01186</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba622cb0658d035b8c9247c622496fa139" title="Operation failed because the node remains in conflict.">svn_wc_notify_failed_conflict</a>,
<a name="l01187"></a>01187 <span class="comment"></span>
<a name="l01188"></a>01188 <span class="comment">  /** Operation failed because an added node is missing</span>
<a name="l01189"></a>01189 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01190"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba91395c95d85847658f5593aad96c2659">01190</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba91395c95d85847658f5593aad96c2659" title="Operation failed because an added node is missing.">svn_wc_notify_failed_missing</a>,
<a name="l01191"></a>01191 <span class="comment"></span>
<a name="l01192"></a>01192 <span class="comment">  /** Operation failed because a node is out of date</span>
<a name="l01193"></a>01193 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01194"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba075fd2509918cc06be3f92e17a414ed8">01194</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba075fd2509918cc06be3f92e17a414ed8" title="Operation failed because a node is out of date.">svn_wc_notify_failed_out_of_date</a>,
<a name="l01195"></a>01195 <span class="comment"></span>
<a name="l01196"></a>01196 <span class="comment">  /** Operation failed because an added parent is not selected</span>
<a name="l01197"></a>01197 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01198"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba6219c4aed91923668f2b9d78fa15543e">01198</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba6219c4aed91923668f2b9d78fa15543e" title="Operation failed because an added parent is not selected.">svn_wc_notify_failed_no_parent</a>,
<a name="l01199"></a>01199 <span class="comment"></span>
<a name="l01200"></a>01200 <span class="comment">  /** Operation failed because a node is locked by another user and/or</span>
<a name="l01201"></a>01201 <span class="comment">   * working copy.  @since New in 1.7. */</span>
<a name="l01202"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaaa47265ccaa909e0a51f07830710d34b">01202</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfbaaa47265ccaa909e0a51f07830710d34b" title="Operation failed because a node is locked by another user and/or working copy.">svn_wc_notify_failed_locked</a>,
<a name="l01203"></a>01203 <span class="comment"></span>
<a name="l01204"></a>01204 <span class="comment">  /** Operation failed because the operation was forbidden by the server.</span>
<a name="l01205"></a>01205 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01206"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba7fc49dbf3686e6dd2731545d2d200fd2">01206</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba7fc49dbf3686e6dd2731545d2d200fd2" title="Operation failed because the operation was forbidden by the server.">svn_wc_notify_failed_forbidden_by_server</a>,
<a name="l01207"></a>01207 <span class="comment"></span>
<a name="l01208"></a>01208 <span class="comment">  /** The operation skipped the path because it was conflicted.</span>
<a name="l01209"></a>01209 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01210"></a><a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba8a9107626d15c7ca8858a43a07aa17f1">01210</a>   <a class="code" href="group__svn__wc__notifications.html#gga816dd065327746637bb9af6322959dfba8a9107626d15c7ca8858a43a07aa17f1" title="The operation skipped the path because it was conflicted.">svn_wc_notify_skip_conflicted</a>
<a name="l01211"></a>01211 
<a name="l01212"></a>01212 } <a class="code" href="group__svn__wc__notifications.html#ga816dd065327746637bb9af6322959dfb" title="The type of action occurring.">svn_wc_notify_action_t</a>;
<a name="l01213"></a>01213 
<a name="l01214"></a>01214 <span class="comment"></span>
<a name="l01215"></a>01215 <span class="comment">/** The type of notification that is occurring. */</span>
<a name="l01216"></a><a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543">01216</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a>
<a name="l01217"></a>01217 {
<a name="l01218"></a>01218   svn_wc_notify_state_inapplicable = 0,
<a name="l01219"></a>01219 <span class="comment"></span>
<a name="l01220"></a>01220 <span class="comment">  /** Notifier doesn&#39;t know or isn&#39;t saying. */</span>
<a name="l01221"></a><a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a62b31c3bfdff8fff8b059bfa988084c5">01221</a>   <a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a62b31c3bfdff8fff8b059bfa988084c5" title="Notifier doesn&#39;t know or isn&#39;t saying.">svn_wc_notify_state_unknown</a>,
<a name="l01222"></a>01222 <span class="comment"></span>
<a name="l01223"></a>01223 <span class="comment">  /** The state did not change. */</span>
<a name="l01224"></a><a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a80803b8b47c7966bc46a154caa122dcf">01224</a>   <a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a80803b8b47c7966bc46a154caa122dcf" title="The state did not change.">svn_wc_notify_state_unchanged</a>,
<a name="l01225"></a>01225 <span class="comment"></span>
<a name="l01226"></a>01226 <span class="comment">  /** The item wasn&#39;t present. */</span>
<a name="l01227"></a><a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a50f52431cdcd443a673508ba99f0cbcb">01227</a>   <a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a50f52431cdcd443a673508ba99f0cbcb" title="The item wasn&#39;t present.">svn_wc_notify_state_missing</a>,
<a name="l01228"></a>01228 <span class="comment"></span>
<a name="l01229"></a>01229 <span class="comment">  /** An unversioned item obstructed work. */</span>
<a name="l01230"></a><a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a1a41ae32c15dbc0b836ce867dcf05600">01230</a>   <a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a1a41ae32c15dbc0b836ce867dcf05600" title="An unversioned item obstructed work.">svn_wc_notify_state_obstructed</a>,
<a name="l01231"></a>01231 <span class="comment"></span>
<a name="l01232"></a>01232 <span class="comment">  /** Pristine state was modified. */</span>
<a name="l01233"></a><a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543acc957759a89faa7e778778524c1a36ee">01233</a>   <a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543acc957759a89faa7e778778524c1a36ee" title="Pristine state was modified.">svn_wc_notify_state_changed</a>,
<a name="l01234"></a>01234 <span class="comment"></span>
<a name="l01235"></a>01235 <span class="comment">  /** Modified state had mods merged in. */</span>
<a name="l01236"></a><a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a64c2ae2c9b8dd7a5534f674a6fde0cca">01236</a>   <a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a64c2ae2c9b8dd7a5534f674a6fde0cca" title="Modified state had mods merged in.">svn_wc_notify_state_merged</a>,
<a name="l01237"></a>01237 <span class="comment"></span>
<a name="l01238"></a>01238 <span class="comment">  /** Modified state got conflicting mods. */</span>
<a name="l01239"></a><a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a1fbb05a9d7ceae4e4f7d455d079e832c">01239</a>   <a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543a1fbb05a9d7ceae4e4f7d455d079e832c" title="Modified state got conflicting mods.">svn_wc_notify_state_conflicted</a>,
<a name="l01240"></a>01240 <span class="comment"></span>
<a name="l01241"></a>01241 <span class="comment">  /** The source to copy the file from is missing. */</span>
<a name="l01242"></a><a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543ac596c8bbba3c27bc41e5ae7d357f2b7a">01242</a>   <a class="code" href="group__svn__wc__notifications.html#gga86188fa68605f8c57b7849857b1e6543ac596c8bbba3c27bc41e5ae7d357f2b7a" title="The source to copy the file from is missing.">svn_wc_notify_state_source_missing</a>
<a name="l01243"></a>01243 
<a name="l01244"></a>01244 } <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a>;
<a name="l01245"></a>01245 <span class="comment"></span>
<a name="l01246"></a>01246 <span class="comment">/**</span>
<a name="l01247"></a>01247 <span class="comment"> * What happened to a lock during an operation.</span>
<a name="l01248"></a>01248 <span class="comment"> *</span>
<a name="l01249"></a>01249 <span class="comment"> * @since New in 1.2.</span>
<a name="l01250"></a>01250 <span class="comment"> */</span>
<a name="l01251"></a><a class="code" href="group__svn__wc__notifications.html#gac65b99bf7baf711fdc2d4afb8ddcaad9">01251</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__notifications.html#gac65b99bf7baf711fdc2d4afb8ddcaad9" title="What happened to a lock during an operation.">svn_wc_notify_lock_state_t</a>
<a name="l01252"></a>01252 {
<a name="l01253"></a>01253   svn_wc_notify_lock_state_inapplicable = 0,
<a name="l01254"></a>01254 
<a name="l01255"></a>01255   svn_wc_notify_lock_state_unknown,
<a name="l01256"></a>01256 <span class="comment"></span>
<a name="l01257"></a>01257 <span class="comment">  /** The lock wasn&#39;t changed. */</span>
<a name="l01258"></a><a class="code" href="group__svn__wc__notifications.html#ggac65b99bf7baf711fdc2d4afb8ddcaad9a5bb8485cc324f2828637b18113cdfb7d">01258</a>   <a class="code" href="group__svn__wc__notifications.html#ggac65b99bf7baf711fdc2d4afb8ddcaad9a5bb8485cc324f2828637b18113cdfb7d" title="The lock wasn&#39;t changed.">svn_wc_notify_lock_state_unchanged</a>,
<a name="l01259"></a>01259 <span class="comment"></span>
<a name="l01260"></a>01260 <span class="comment">  /** The item was locked. */</span>
<a name="l01261"></a><a class="code" href="group__svn__wc__notifications.html#ggac65b99bf7baf711fdc2d4afb8ddcaad9a4997a23f45464978dc9f536f2c617d2c">01261</a>   <a class="code" href="group__svn__wc__notifications.html#ggac65b99bf7baf711fdc2d4afb8ddcaad9a4997a23f45464978dc9f536f2c617d2c" title="The item was locked.">svn_wc_notify_lock_state_locked</a>,
<a name="l01262"></a>01262 <span class="comment"></span>
<a name="l01263"></a>01263 <span class="comment">  /** The item was unlocked. */</span>
<a name="l01264"></a><a class="code" href="group__svn__wc__notifications.html#ggac65b99bf7baf711fdc2d4afb8ddcaad9a00ff56751a0fc916d1b9518065d120a4">01264</a>   <a class="code" href="group__svn__wc__notifications.html#ggac65b99bf7baf711fdc2d4afb8ddcaad9a00ff56751a0fc916d1b9518065d120a4" title="The item was unlocked.">svn_wc_notify_lock_state_unlocked</a>
<a name="l01265"></a>01265 
<a name="l01266"></a>01266 } <a class="code" href="group__svn__wc__notifications.html#gac65b99bf7baf711fdc2d4afb8ddcaad9" title="What happened to a lock during an operation.">svn_wc_notify_lock_state_t</a>;
<a name="l01267"></a>01267 <span class="comment"></span>
<a name="l01268"></a>01268 <span class="comment">/**</span>
<a name="l01269"></a>01269 <span class="comment"> * Structure used in the #svn_wc_notify_func2_t function.</span>
<a name="l01270"></a>01270 <span class="comment"> *</span>
<a name="l01271"></a>01271 <span class="comment"> * @c kind, @c content_state, @c prop_state and @c lock_state are from</span>
<a name="l01272"></a>01272 <span class="comment"> * after @c action, not before.</span>
<a name="l01273"></a>01273 <span class="comment"> *</span>
<a name="l01274"></a>01274 <span class="comment"> * @note If @c action is #svn_wc_notify_update (### what?), then @c path has</span>
<a name="l01275"></a>01275 <span class="comment"> * already been installed, so it is legitimate for an implementation of</span>
<a name="l01276"></a>01276 <span class="comment"> * #svn_wc_notify_func2_t to examine @c path in the working copy.</span>
<a name="l01277"></a>01277 <span class="comment"> *</span>
<a name="l01278"></a>01278 <span class="comment"> * @note The purpose of the @c kind, @c mime_type, @c content_state, and</span>
<a name="l01279"></a>01279 <span class="comment"> * @c prop_state fields is to provide &quot;for free&quot; information that an</span>
<a name="l01280"></a>01280 <span class="comment"> * implementation is likely to want, and which it would otherwise be</span>
<a name="l01281"></a>01281 <span class="comment"> * forced to deduce via expensive operations such as reading entries</span>
<a name="l01282"></a>01282 <span class="comment"> * and properties.  However, if the caller does not have this</span>
<a name="l01283"></a>01283 <span class="comment"> * information, it will simply pass the corresponding `*_unknown&#39;</span>
<a name="l01284"></a>01284 <span class="comment"> * values, and it is up to the implementation how to handle that</span>
<a name="l01285"></a>01285 <span class="comment"> * (i.e., whether to attempt deduction, or just to punt and</span>
<a name="l01286"></a>01286 <span class="comment"> * give a less informative notification).</span>
<a name="l01287"></a>01287 <span class="comment"> *</span>
<a name="l01288"></a>01288 <span class="comment"> * @note Callers of notification functions should use svn_wc_create_notify()</span>
<a name="l01289"></a>01289 <span class="comment"> * or svn_wc_create_notify_url() to create structures of this type to allow</span>
<a name="l01290"></a>01290 <span class="comment"> * for extensibility.</span>
<a name="l01291"></a>01291 <span class="comment"> *</span>
<a name="l01292"></a>01292 <span class="comment"> * @since New in 1.2.</span>
<a name="l01293"></a>01293 <span class="comment"> */</span>
<a name="l01294"></a><a class="code" href="structsvn__wc__notify__t.html">01294</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__notify__t.html" title="Structure used in the svn_wc_notify_func2_t function.">svn_wc_notify_t</a> {
<a name="l01295"></a>01295 <span class="comment"></span>
<a name="l01296"></a>01296 <span class="comment">  /** Path, either absolute or relative to the current working directory</span>
<a name="l01297"></a>01297 <span class="comment">   * (i.e., not relative to an anchor).  @c path is &quot;.&quot; or another valid path</span>
<a name="l01298"></a>01298 <span class="comment">   * value for compatibility reasons when the real target is an url that</span>
<a name="l01299"></a>01299 <span class="comment">   * is available in @c url. */</span>
<a name="l01300"></a><a class="code" href="structsvn__wc__notify__t.html#a18a0e75c7335d63a4bc4dd901d27ec86">01300</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__notify__t.html#a18a0e75c7335d63a4bc4dd901d27ec86" title="Path, either absolute or relative to the current working directory (i.e., not relative to an anchor)...">path</a>;
<a name="l01301"></a>01301 <span class="comment"></span>
<a name="l01302"></a>01302 <span class="comment">  /** Action that describes what happened to #svn_wc_notify_t.path. */</span>
<a name="l01303"></a><a class="code" href="structsvn__wc__notify__t.html#a5eeeb245fd816ee3fa332ab8d2907b40">01303</a>   <a class="code" href="group__svn__wc__notifications.html#ga816dd065327746637bb9af6322959dfb" title="The type of action occurring.">svn_wc_notify_action_t</a> <a class="code" href="structsvn__wc__notify__t.html#a5eeeb245fd816ee3fa332ab8d2907b40" title="Action that describes what happened to svn_wc_notify_t.path.">action</a>;
<a name="l01304"></a>01304 <span class="comment"></span>
<a name="l01305"></a>01305 <span class="comment">  /** Node kind of @c path. */</span>
<a name="l01306"></a><a class="code" href="structsvn__wc__notify__t.html#ae9dbc0b2970104bb5372078ba1d08061">01306</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__wc__notify__t.html#ae9dbc0b2970104bb5372078ba1d08061" title="Node kind of path.">kind</a>;
<a name="l01307"></a>01307 <span class="comment"></span>
<a name="l01308"></a>01308 <span class="comment">  /** If non-NULL, indicates the mime-type of @c path.</span>
<a name="l01309"></a>01309 <span class="comment">   * It is always @c NULL for directories. */</span>
<a name="l01310"></a><a class="code" href="structsvn__wc__notify__t.html#a69a2156ef45b8cda7b4c39f4d8d0762a">01310</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__notify__t.html#a69a2156ef45b8cda7b4c39f4d8d0762a" title="If non-NULL, indicates the mime-type of path.">mime_type</a>;
<a name="l01311"></a>01311 <span class="comment"></span>
<a name="l01312"></a>01312 <span class="comment">  /** Points to the lock structure received from the repository when</span>
<a name="l01313"></a>01313 <span class="comment">   * @c action is #svn_wc_notify_locked.  For other actions, it is</span>
<a name="l01314"></a>01314 <span class="comment">   * @c NULL. */</span>
<a name="l01315"></a><a class="code" href="structsvn__wc__notify__t.html#a5af3db77b756e7ddecc43537dc3438f7">01315</a>   <span class="keyword">const</span> <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *<a class="code" href="structsvn__wc__notify__t.html#a5af3db77b756e7ddecc43537dc3438f7" title="Points to the lock structure received from the repository when action is svn_wc_notify_locked.">lock</a>;
<a name="l01316"></a>01316 <span class="comment"></span>
<a name="l01317"></a>01317 <span class="comment">  /** Points to an error describing the reason for the failure when @c</span>
<a name="l01318"></a>01318 <span class="comment">   * action is one of the following: #svn_wc_notify_failed_lock,</span>
<a name="l01319"></a>01319 <span class="comment">   * #svn_wc_notify_failed_unlock, #svn_wc_notify_failed_external.</span>
<a name="l01320"></a>01320 <span class="comment">   * Is @c NULL otherwise. */</span>
<a name="l01321"></a><a class="code" href="structsvn__wc__notify__t.html#aa7ced822d6fb2f3a082c63face95edf9">01321</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *<a class="code" href="structsvn__wc__notify__t.html#aa7ced822d6fb2f3a082c63face95edf9" title="Points to an error describing the reason for the failure when action is one of the following: svn_wc_...">err</a>;
<a name="l01322"></a>01322 <span class="comment"></span>
<a name="l01323"></a>01323 <span class="comment">  /** The type of notification that is occurring about node content. */</span>
<a name="l01324"></a><a class="code" href="structsvn__wc__notify__t.html#a59c80f6af33747c20fd1eff5f5d406a0">01324</a>   <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> <a class="code" href="structsvn__wc__notify__t.html#a59c80f6af33747c20fd1eff5f5d406a0" title="The type of notification that is occurring about node content.">content_state</a>;
<a name="l01325"></a>01325 <span class="comment"></span>
<a name="l01326"></a>01326 <span class="comment">  /** The type of notification that is occurring about node properties. */</span>
<a name="l01327"></a><a class="code" href="structsvn__wc__notify__t.html#ab3bd85966e914028b28a937a135269c7">01327</a>   <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> <a class="code" href="structsvn__wc__notify__t.html#ab3bd85966e914028b28a937a135269c7" title="The type of notification that is occurring about node properties.">prop_state</a>;
<a name="l01328"></a>01328 <span class="comment"></span>
<a name="l01329"></a>01329 <span class="comment">  /** Reflects the addition or removal of a lock token in the working copy. */</span>
<a name="l01330"></a><a class="code" href="structsvn__wc__notify__t.html#a80ef3fec5428439c665a59d0daf4ff40">01330</a>   <a class="code" href="group__svn__wc__notifications.html#gac65b99bf7baf711fdc2d4afb8ddcaad9" title="What happened to a lock during an operation.">svn_wc_notify_lock_state_t</a> <a class="code" href="structsvn__wc__notify__t.html#a80ef3fec5428439c665a59d0daf4ff40" title="Reflects the addition or removal of a lock token in the working copy.">lock_state</a>;
<a name="l01331"></a>01331 <span class="comment"></span>
<a name="l01332"></a>01332 <span class="comment">  /** When @c action is #svn_wc_notify_update_completed, target revision</span>
<a name="l01333"></a>01333 <span class="comment">   * of the update, or #SVN_INVALID_REVNUM if not available; when @c</span>
<a name="l01334"></a>01334 <span class="comment">   * action is #svn_wc_notify_blame_revision, processed revision; Since</span>
<a name="l01335"></a>01335 <span class="comment">   * Subversion 1.7 when action is #svn_wc_notify_update_update or</span>
<a name="l01336"></a>01336 <span class="comment">   * #svn_wc_notify_update_add, the target revision.</span>
<a name="l01337"></a>01337 <span class="comment">   * In all other cases, it is #SVN_INVALID_REVNUM.</span>
<a name="l01338"></a>01338 <span class="comment">   */</span>
<a name="l01339"></a><a class="code" href="structsvn__wc__notify__t.html#af456bf5fba4e718fe5e4049fca29c350">01339</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__wc__notify__t.html#af456bf5fba4e718fe5e4049fca29c350" title="When action is svn_wc_notify_update_completed, target revision of the update, or SVN_INVALID_REVNUM i...">revision</a>;
<a name="l01340"></a>01340 <span class="comment"></span>
<a name="l01341"></a>01341 <span class="comment">  /** If @c action pertains to a changelist, this is the changelist name.</span>
<a name="l01342"></a>01342 <span class="comment">   * In all other cases, it is @c NULL.  @since New in 1.5 */</span>
<a name="l01343"></a><a class="code" href="structsvn__wc__notify__t.html#acf9a8253bb63669e55a5e23bcc5580e9">01343</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__notify__t.html#acf9a8253bb63669e55a5e23bcc5580e9" title="If action pertains to a changelist, this is the changelist name.">changelist_name</a>;
<a name="l01344"></a>01344 <span class="comment"></span>
<a name="l01345"></a>01345 <span class="comment">  /** When @c action is #svn_wc_notify_merge_begin, and both the</span>
<a name="l01346"></a>01346 <span class="comment">   * left and right sides of the merge are from the same URL.  In all</span>
<a name="l01347"></a>01347 <span class="comment">   * other cases, it is @c NULL.  @since New in 1.5 */</span>
<a name="l01348"></a><a class="code" href="structsvn__wc__notify__t.html#ac21132410ecfff9772e0e2e5161645fa">01348</a>   <a class="code" href="structsvn__merge__range__t.html" title="Mergeinfo representing a merge of a range of revisions.">svn_merge_range_t</a> *<a class="code" href="structsvn__wc__notify__t.html#ac21132410ecfff9772e0e2e5161645fa" title="When action is svn_wc_notify_merge_begin, and both the left and right sides of the merge are from the...">merge_range</a>;
<a name="l01349"></a>01349 <span class="comment"></span>
<a name="l01350"></a>01350 <span class="comment">  /** Similar to @c path, but if non-NULL the notification is about a url.</span>
<a name="l01351"></a>01351 <span class="comment">   * @since New in 1.6 */</span>
<a name="l01352"></a><a class="code" href="structsvn__wc__notify__t.html#a5a9f84c348036479f956dd46d2eb9715">01352</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__notify__t.html#a5a9f84c348036479f956dd46d2eb9715" title="Similar to path, but if non-NULL the notification is about a url.">url</a>;
<a name="l01353"></a>01353 <span class="comment"></span>
<a name="l01354"></a>01354 <span class="comment">  /** If non-NULL, specifies an absolute path prefix that can be subtracted</span>
<a name="l01355"></a>01355 <span class="comment">   * from the start of the absolute path in @c path or @c url.  Its purpose</span>
<a name="l01356"></a>01356 <span class="comment">   * is to allow notification to remove a common prefix from all the paths</span>
<a name="l01357"></a>01357 <span class="comment">   * displayed for an operation.  @since New in 1.6 */</span>
<a name="l01358"></a><a class="code" href="structsvn__wc__notify__t.html#a2f452fbd407ac6482aa573c020481903">01358</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__notify__t.html#a2f452fbd407ac6482aa573c020481903" title="If non-NULL, specifies an absolute path prefix that can be subtracted from the start of the absolute ...">path_prefix</a>;
<a name="l01359"></a>01359 <span class="comment"></span>
<a name="l01360"></a>01360 <span class="comment">  /** If @c action relates to properties, specifies the name of the property.</span>
<a name="l01361"></a>01361 <span class="comment">   * @since New in 1.6 */</span>
<a name="l01362"></a><a class="code" href="structsvn__wc__notify__t.html#aab8cf78c1ed20b39b4d0db6429944647">01362</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__notify__t.html#aab8cf78c1ed20b39b4d0db6429944647" title="If action relates to properties, specifies the name of the property.">prop_name</a>;
<a name="l01363"></a>01363 <span class="comment"></span>
<a name="l01364"></a>01364 <span class="comment">  /** If @c action is #svn_wc_notify_blame_revision, contains a list of</span>
<a name="l01365"></a>01365 <span class="comment">   * revision properties for the specified revision</span>
<a name="l01366"></a>01366 <span class="comment">   * @since New in 1.6 */</span>
<a name="l01367"></a><a class="code" href="structsvn__wc__notify__t.html#a5b5c44c2e775b7dd2cab5c802c93fb96">01367</a>   apr_hash_t *<a class="code" href="structsvn__wc__notify__t.html#a5b5c44c2e775b7dd2cab5c802c93fb96" title="If action is svn_wc_notify_blame_revision, contains a list of revision properties for the specified r...">rev_props</a>;
<a name="l01368"></a>01368 <span class="comment"></span>
<a name="l01369"></a>01369 <span class="comment">  /** If @c action is #svn_wc_notify_update_update or</span>
<a name="l01370"></a>01370 <span class="comment">   * #svn_wc_notify_update_add, contains the revision before the update.</span>
<a name="l01371"></a>01371 <span class="comment">   * In all other cases, it is #SVN_INVALID_REVNUM.</span>
<a name="l01372"></a>01372 <span class="comment">   * @since New in 1.7 */</span>
<a name="l01373"></a><a class="code" href="structsvn__wc__notify__t.html#a09bff6fde16c43440c79b2bc524e40ab">01373</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__wc__notify__t.html#a09bff6fde16c43440c79b2bc524e40ab" title="If action is svn_wc_notify_update_update or svn_wc_notify_update_add, contains the revision before th...">old_revision</a>;
<a name="l01374"></a>01374 <span class="comment"></span>
<a name="l01375"></a>01375 <span class="comment">  /** These fields are used by svn patch to identify the</span>
<a name="l01376"></a>01376 <span class="comment">   * hunk the notification is for. They are line-based</span>
<a name="l01377"></a>01377 <span class="comment">   * offsets and lengths parsed from the unidiff hunk header.</span>
<a name="l01378"></a>01378 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01379"></a>01379   <span class="comment">/* @{ */</span>
<a name="l01380"></a><a class="code" href="structsvn__wc__notify__t.html#a845e0b3d57dbaf7d8295bac39e6b32d6">01380</a>   <a class="code" href="svn__types_8h.html#acd2fa076b4ade5dbe9309966043f3bf8" title="A line number, such as in a file or a stream.">svn_linenum_t</a> <a class="code" href="structsvn__wc__notify__t.html#a845e0b3d57dbaf7d8295bac39e6b32d6" title="These fields are used by svn patch to identify the hunk the notification is for.">hunk_original_start</a>;
<a name="l01381"></a>01381   <a class="code" href="svn__types_8h.html#acd2fa076b4ade5dbe9309966043f3bf8" title="A line number, such as in a file or a stream.">svn_linenum_t</a> hunk_original_length;
<a name="l01382"></a>01382   <a class="code" href="svn__types_8h.html#acd2fa076b4ade5dbe9309966043f3bf8" title="A line number, such as in a file or a stream.">svn_linenum_t</a> hunk_modified_start;
<a name="l01383"></a>01383   <a class="code" href="svn__types_8h.html#acd2fa076b4ade5dbe9309966043f3bf8" title="A line number, such as in a file or a stream.">svn_linenum_t</a> hunk_modified_length;
<a name="l01384"></a>01384   <span class="comment">/* @} */</span>
<a name="l01385"></a>01385 <span class="comment"></span>
<a name="l01386"></a>01386 <span class="comment">  /** The line at which a hunk was matched (and applied).</span>
<a name="l01387"></a>01387 <span class="comment">   * @since New in 1.7. */</span>
<a name="l01388"></a><a class="code" href="structsvn__wc__notify__t.html#a90222a852b8883f6eb97e202e8dbd6fe">01388</a>   <a class="code" href="svn__types_8h.html#acd2fa076b4ade5dbe9309966043f3bf8" title="A line number, such as in a file or a stream.">svn_linenum_t</a> <a class="code" href="structsvn__wc__notify__t.html#a90222a852b8883f6eb97e202e8dbd6fe" title="The line at which a hunk was matched (and applied).">hunk_matched_line</a>;
<a name="l01389"></a>01389 <span class="comment"></span>
<a name="l01390"></a>01390 <span class="comment">  /** The fuzz factor the hunk was applied with.</span>
<a name="l01391"></a>01391 <span class="comment">   * @since New in 1.7 */</span>
<a name="l01392"></a><a class="code" href="structsvn__wc__notify__t.html#a5eb87ecfbbb79849cef7918eb7f34388">01392</a>   <a class="code" href="svn__types_8h.html#acd2fa076b4ade5dbe9309966043f3bf8" title="A line number, such as in a file or a stream.">svn_linenum_t</a> <a class="code" href="structsvn__wc__notify__t.html#a5eb87ecfbbb79849cef7918eb7f34388" title="The fuzz factor the hunk was applied with.">hunk_fuzz</a>;
<a name="l01393"></a>01393 
<a name="l01394"></a>01394   <span class="comment">/* NOTE: Add new fields at the end to preserve binary compatibility.</span>
<a name="l01395"></a>01395 <span class="comment">     Also, if you add fields here, you have to update svn_wc_create_notify</span>
<a name="l01396"></a>01396 <span class="comment">     and svn_wc_dup_notify. */</span>
<a name="l01397"></a>01397 } <a class="code" href="group__svn__wc__notifications.html#ga6056ab934ebfdfda8c3ce276aecc5130" title="Structure used in the svn_wc_notify_func2_t function.">svn_wc_notify_t</a>;
<a name="l01398"></a>01398 <span class="comment"></span>
<a name="l01399"></a>01399 <span class="comment">/**</span>
<a name="l01400"></a>01400 <span class="comment"> * Allocate an #svn_wc_notify_t structure in @a pool, initialize and return</span>
<a name="l01401"></a>01401 <span class="comment"> * it.</span>
<a name="l01402"></a>01402 <span class="comment"> *</span>
<a name="l01403"></a>01403 <span class="comment"> * Set the @c path field of the created struct to @a path, and @c action to</span>
<a name="l01404"></a>01404 <span class="comment"> * @a action.  Set all other fields to their @c _unknown, @c NULL or</span>
<a name="l01405"></a>01405 <span class="comment"> * invalid value, respectively. Make only a shallow copy of the pointer</span>
<a name="l01406"></a>01406 <span class="comment"> * @a path.</span>
<a name="l01407"></a>01407 <span class="comment"> *</span>
<a name="l01408"></a>01408 <span class="comment"> * @since New in 1.2.</span>
<a name="l01409"></a>01409 <span class="comment"> */</span>
<a name="l01410"></a>01410 <a class="code" href="structsvn__wc__notify__t.html" title="Structure used in the svn_wc_notify_func2_t function.">svn_wc_notify_t</a> *
<a name="l01411"></a>01411 <a class="code" href="group__svn__wc__notifications.html#gaffde9d9cea32a599c610a36bfcdb0496" title="Allocate an svn_wc_notify_t structure in pool, initialize and return it.">svn_wc_create_notify</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01412"></a>01412                      <a class="code" href="group__svn__wc__notifications.html#ga816dd065327746637bb9af6322959dfb" title="The type of action occurring.">svn_wc_notify_action_t</a> action,
<a name="l01413"></a>01413                      apr_pool_t *pool);
<a name="l01414"></a>01414 <span class="comment"></span>
<a name="l01415"></a>01415 <span class="comment">/**</span>
<a name="l01416"></a>01416 <span class="comment"> * Allocate an #svn_wc_notify_t structure in @a pool, initialize and return</span>
<a name="l01417"></a>01417 <span class="comment"> * it.</span>
<a name="l01418"></a>01418 <span class="comment"> *</span>
<a name="l01419"></a>01419 <span class="comment"> * Set the @c url field of the created struct to @a url, @c path to &quot;.&quot; and @c</span>
<a name="l01420"></a>01420 <span class="comment"> * action to @a action.  Set all other fields to their @c _unknown, @c NULL or</span>
<a name="l01421"></a>01421 <span class="comment"> * invalid value, respectively. Make only a shallow copy of the pointer</span>
<a name="l01422"></a>01422 <span class="comment"> * @a url.</span>
<a name="l01423"></a>01423 <span class="comment"> *</span>
<a name="l01424"></a>01424 <span class="comment"> * @since New in 1.6.</span>
<a name="l01425"></a>01425 <span class="comment"> */</span>
<a name="l01426"></a>01426 <a class="code" href="structsvn__wc__notify__t.html" title="Structure used in the svn_wc_notify_func2_t function.">svn_wc_notify_t</a> *
<a name="l01427"></a>01427 <a class="code" href="group__svn__wc__notifications.html#ga3af63042b1ca5caa280348f2dd1e1f55" title="Allocate an svn_wc_notify_t structure in pool, initialize and return it.">svn_wc_create_notify_url</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l01428"></a>01428                          <a class="code" href="group__svn__wc__notifications.html#ga816dd065327746637bb9af6322959dfb" title="The type of action occurring.">svn_wc_notify_action_t</a> action,
<a name="l01429"></a>01429                          apr_pool_t *pool);
<a name="l01430"></a>01430 <span class="comment"></span>
<a name="l01431"></a>01431 <span class="comment">/**</span>
<a name="l01432"></a>01432 <span class="comment"> * Return a deep copy of @a notify, allocated in @a pool.</span>
<a name="l01433"></a>01433 <span class="comment"> *</span>
<a name="l01434"></a>01434 <span class="comment"> * @since New in 1.2.</span>
<a name="l01435"></a>01435 <span class="comment"> */</span>
<a name="l01436"></a>01436 <a class="code" href="structsvn__wc__notify__t.html" title="Structure used in the svn_wc_notify_func2_t function.">svn_wc_notify_t</a> *
<a name="l01437"></a>01437 <a class="code" href="group__svn__wc__notifications.html#gaf37b095e26ff48bd695bfac901b5a7b9" title="Return a deep copy of notify, allocated in pool.">svn_wc_dup_notify</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__notify__t.html" title="Structure used in the svn_wc_notify_func2_t function.">svn_wc_notify_t</a> *notify,
<a name="l01438"></a>01438                   apr_pool_t *pool);
<a name="l01439"></a>01439 <span class="comment"></span>
<a name="l01440"></a>01440 <span class="comment">/**</span>
<a name="l01441"></a>01441 <span class="comment"> * Notify the world that @a notify-&gt;action has happened to @a notify-&gt;path.</span>
<a name="l01442"></a>01442 <span class="comment"> *</span>
<a name="l01443"></a>01443 <span class="comment"> * Recommendation: callers of #svn_wc_notify_func2_t should avoid</span>
<a name="l01444"></a>01444 <span class="comment"> * invoking it multiple times on the same path within a given</span>
<a name="l01445"></a>01445 <span class="comment"> * operation, and implementations should not bother checking for such</span>
<a name="l01446"></a>01446 <span class="comment"> * duplicate calls.  For example, in an update, the caller should not</span>
<a name="l01447"></a>01447 <span class="comment"> * invoke the notify func on receiving a prop change and then again</span>
<a name="l01448"></a>01448 <span class="comment"> * on receiving a text change.  Instead, wait until all changes have</span>
<a name="l01449"></a>01449 <span class="comment"> * been received, and then invoke the notify func once (from within</span>
<a name="l01450"></a>01450 <span class="comment"> * an #svn_delta_editor_t&#39;s close_file(), for example), passing</span>
<a name="l01451"></a>01451 <span class="comment"> * the appropriate @a notify-&gt;content_state and @a notify-&gt;prop_state flags.</span>
<a name="l01452"></a>01452 <span class="comment"> *</span>
<a name="l01453"></a>01453 <span class="comment"> * @since New in 1.2.</span>
<a name="l01454"></a>01454 <span class="comment"> */</span>
<a name="l01455"></a><a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62">01455</a> <span class="keyword">typedef</span> void (*<a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a>)(<span class="keywordtype">void</span> *baton,
<a name="l01456"></a>01456                                       <span class="keyword">const</span> <a class="code" href="structsvn__wc__notify__t.html" title="Structure used in the svn_wc_notify_func2_t function.">svn_wc_notify_t</a> *notify,
<a name="l01457"></a>01457                                       apr_pool_t *pool);
<a name="l01458"></a>01458 <span class="comment"></span>
<a name="l01459"></a>01459 <span class="comment">/**</span>
<a name="l01460"></a>01460 <span class="comment"> * Similar to #svn_wc_notify_func2_t, but takes the information as arguments</span>
<a name="l01461"></a>01461 <span class="comment"> * instead of struct fields.</span>
<a name="l01462"></a>01462 <span class="comment"> *</span>
<a name="l01463"></a>01463 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l01464"></a>01464 <span class="comment"> */</span>
<a name="l01465"></a><a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2">01465</a> <span class="keyword">typedef</span> void (*<a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2" title="Similar to svn_wc_notify_func2_t, but takes the information as arguments instead of struct fields...">svn_wc_notify_func_t</a>)(<span class="keywordtype">void</span> *baton,
<a name="l01466"></a>01466                                      <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01467"></a>01467                                      <a class="code" href="group__svn__wc__notifications.html#ga816dd065327746637bb9af6322959dfb" title="The type of action occurring.">svn_wc_notify_action_t</a> action,
<a name="l01468"></a>01468                                      <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> kind,
<a name="l01469"></a>01469                                      <span class="keyword">const</span> <span class="keywordtype">char</span> *mime_type,
<a name="l01470"></a>01470                                      <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> content_state,
<a name="l01471"></a>01471                                      <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> prop_state,
<a name="l01472"></a>01472                                      <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> revision);
<a name="l01473"></a>01473 <span class="comment"></span>
<a name="l01474"></a>01474 <span class="comment">/** @} */</span>
<a name="l01475"></a>01475 
<a name="l01476"></a>01476 <span class="comment"></span>
<a name="l01477"></a>01477 <span class="comment">/**</span>
<a name="l01478"></a>01478 <span class="comment"> * Interactive conflict handling</span>
<a name="l01479"></a>01479 <span class="comment"> *</span>
<a name="l01480"></a>01480 <span class="comment"> * @defgroup svn_wc_conflict Conflict callback functionality</span>
<a name="l01481"></a>01481 <span class="comment"> * @{</span>
<a name="l01482"></a>01482 <span class="comment"> *</span>
<a name="l01483"></a>01483 <span class="comment"> * This API gives a Subversion client application the opportunity to</span>
<a name="l01484"></a>01484 <span class="comment"> * define a callback that allows the user to resolve conflicts</span>
<a name="l01485"></a>01485 <span class="comment"> * interactively during updates and merges.</span>
<a name="l01486"></a>01486 <span class="comment"> *</span>
<a name="l01487"></a>01487 <span class="comment"> * If a conflict is discovered, libsvn_wc invokes the callback with an</span>
<a name="l01488"></a>01488 <span class="comment"> * #svn_wc_conflict_description_t.  This structure describes the</span>
<a name="l01489"></a>01489 <span class="comment"> * path in conflict, whether it&#39;s a text or property conflict, and may</span>
<a name="l01490"></a>01490 <span class="comment"> * also present up to three files that can be used to resolve the</span>
<a name="l01491"></a>01491 <span class="comment"> * conflict (perhaps by launching an editor or 3rd-party merging</span>
<a name="l01492"></a>01492 <span class="comment"> * tool).  The structure also provides a possible fourth file (@c</span>
<a name="l01493"></a>01493 <span class="comment"> * merged_file) which, if not NULL, represents libsvn_wc&#39;s attempt to</span>
<a name="l01494"></a>01494 <span class="comment"> * contextually merge the first three files.  (Note that libsvn_wc</span>
<a name="l01495"></a>01495 <span class="comment"> * will not attempt to merge a file that it believes is binary, and it</span>
<a name="l01496"></a>01496 <span class="comment"> * will only attempt to merge property values it believes to be a</span>
<a name="l01497"></a>01497 <span class="comment"> * series of multi-line text.)</span>
<a name="l01498"></a>01498 <span class="comment"> *</span>
<a name="l01499"></a>01499 <span class="comment"> * When the callback is finished interacting with the user, it</span>
<a name="l01500"></a>01500 <span class="comment"> * responds by returning a #svn_wc_conflict_result_t.  This</span>
<a name="l01501"></a>01501 <span class="comment"> * structure indicates whether the user wants to postpone the conflict</span>
<a name="l01502"></a>01502 <span class="comment"> * for later (allowing libsvn_wc to mark the path &quot;conflicted&quot; as</span>
<a name="l01503"></a>01503 <span class="comment"> * usual), or whether the user wants libsvn_wc to use one of the four</span>
<a name="l01504"></a>01504 <span class="comment"> * files as the &quot;final&quot; state for resolving the conflict immediately.</span>
<a name="l01505"></a>01505 <span class="comment"> *</span>
<a name="l01506"></a>01506 <span class="comment"> * Note that the callback is at liberty (and encouraged) to merge the</span>
<a name="l01507"></a>01507 <span class="comment"> * three files itself.  If it does so, it signals this to libsvn_wc by</span>
<a name="l01508"></a>01508 <span class="comment"> * returning a choice of #svn_wc_conflict_choose_merged.  To return</span>
<a name="l01509"></a>01509 <span class="comment"> * the &#39;final&#39; merged file to libsvn_wc, the callback has the option of</span>
<a name="l01510"></a>01510 <span class="comment"> * either:</span>
<a name="l01511"></a>01511 <span class="comment"> *</span>
<a name="l01512"></a>01512 <span class="comment"> *    - editing the original @c merged_file in-place</span>
<a name="l01513"></a>01513 <span class="comment"> *</span>
<a name="l01514"></a>01514 <span class="comment"> *        or, if libsvn_wc never supplied a merged_file in the</span>
<a name="l01515"></a>01515 <span class="comment"> *        description structure (i.e. passed NULL for that field),</span>
<a name="l01516"></a>01516 <span class="comment"> *</span>
<a name="l01517"></a>01517 <span class="comment"> *    - return the merged file in the #svn_wc_conflict_result_t.</span>
<a name="l01518"></a>01518 <span class="comment"> *</span>
<a name="l01519"></a>01519 <span class="comment"> */</span>
<a name="l01520"></a>01520 <span class="comment"></span>
<a name="l01521"></a>01521 <span class="comment">/** The type of action being attempted on an object.</span>
<a name="l01522"></a>01522 <span class="comment"> *</span>
<a name="l01523"></a>01523 <span class="comment"> * @since New in 1.5.</span>
<a name="l01524"></a>01524 <span class="comment"> */</span>
<a name="l01525"></a><a class="code" href="group__svn__wc__conflict.html#gaacebef7772e264ec0b4ff4cf7a0085a6">01525</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__conflict.html#gaacebef7772e264ec0b4ff4cf7a0085a6" title="The type of action being attempted on an object.">svn_wc_conflict_action_t</a>
<a name="l01526"></a>01526 {
<a name="l01527"></a><a class="code" href="group__svn__wc__conflict.html#ggaacebef7772e264ec0b4ff4cf7a0085a6a3b149c9730710f450e151c225bb5fab0">01527</a>   <a class="code" href="group__svn__wc__conflict.html#ggaacebef7772e264ec0b4ff4cf7a0085a6a3b149c9730710f450e151c225bb5fab0" title="attempting to change text or props">svn_wc_conflict_action_edit</a>,    <span class="comment">/**&lt; attempting to change text or props */</span>
<a name="l01528"></a><a class="code" href="group__svn__wc__conflict.html#ggaacebef7772e264ec0b4ff4cf7a0085a6a2a5f5b11e0d571bf5ff7b67159e1700c">01528</a>   <a class="code" href="group__svn__wc__conflict.html#ggaacebef7772e264ec0b4ff4cf7a0085a6a2a5f5b11e0d571bf5ff7b67159e1700c" title="attempting to add object">svn_wc_conflict_action_add</a>,     <span class="comment">/**&lt; attempting to add object */</span>
<a name="l01529"></a><a class="code" href="group__svn__wc__conflict.html#ggaacebef7772e264ec0b4ff4cf7a0085a6ae9a598dc8a4f6854748d25afe39c2b67">01529</a>   <a class="code" href="group__svn__wc__conflict.html#ggaacebef7772e264ec0b4ff4cf7a0085a6ae9a598dc8a4f6854748d25afe39c2b67" title="attempting to delete object">svn_wc_conflict_action_delete</a>,  <span class="comment">/**&lt; attempting to delete object */</span>
<a name="l01530"></a><a class="code" href="group__svn__wc__conflict.html#ggaacebef7772e264ec0b4ff4cf7a0085a6a3b911981d32d04a5bba15ba689a1c9a2">01530</a>   <a class="code" href="group__svn__wc__conflict.html#ggaacebef7772e264ec0b4ff4cf7a0085a6a3b911981d32d04a5bba15ba689a1c9a2" title="attempting to replace object,">svn_wc_conflict_action_replace</a>  <span class="comment">/**&lt; attempting to replace object,</span>
<a name="l01531"></a>01531 <span class="comment">                                       @since New in 1.7 */</span>
<a name="l01532"></a>01532 } <a class="code" href="group__svn__wc__conflict.html#gaacebef7772e264ec0b4ff4cf7a0085a6" title="The type of action being attempted on an object.">svn_wc_conflict_action_t</a>;
<a name="l01533"></a>01533 
<a name="l01534"></a>01534 <span class="comment"></span>
<a name="l01535"></a>01535 <span class="comment">/** The pre-existing condition which is causing a state of conflict.</span>
<a name="l01536"></a>01536 <span class="comment"> *</span>
<a name="l01537"></a>01537 <span class="comment"> * @since New in 1.5.</span>
<a name="l01538"></a>01538 <span class="comment"> */</span>
<a name="l01539"></a><a class="code" href="group__svn__wc__conflict.html#ga4097310282eb9ad622aa52a6efb99dff">01539</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__conflict.html#ga4097310282eb9ad622aa52a6efb99dff" title="The pre-existing condition which is causing a state of conflict.">svn_wc_conflict_reason_t</a>
<a name="l01540"></a>01540 {<span class="comment"></span>
<a name="l01541"></a>01541 <span class="comment">  /** Local edits are already present */</span>
<a name="l01542"></a><a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffa1e8f66241eb2f0058af56617c8e930c9">01542</a>   <a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffa1e8f66241eb2f0058af56617c8e930c9" title="Local edits are already present.">svn_wc_conflict_reason_edited</a>,<span class="comment"></span>
<a name="l01543"></a>01543 <span class="comment">  /** Another object is in the way */</span>
<a name="l01544"></a><a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffa047ab9d5cc19f78429b5ed891162175d">01544</a>   <a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffa047ab9d5cc19f78429b5ed891162175d" title="Another object is in the way.">svn_wc_conflict_reason_obstructed</a>,<span class="comment"></span>
<a name="l01545"></a>01545 <span class="comment">  /** Object is already schedule-delete */</span>
<a name="l01546"></a><a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffa56182b82145a71b454f966338ba7285f">01546</a>   <a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffa56182b82145a71b454f966338ba7285f" title="Object is already schedule-delete.">svn_wc_conflict_reason_deleted</a>,<span class="comment"></span>
<a name="l01547"></a>01547 <span class="comment">  /** Object is unknown or missing */</span>
<a name="l01548"></a><a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffaee315a796384a8150f4b030233e0aa45">01548</a>   <a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffaee315a796384a8150f4b030233e0aa45" title="Object is unknown or missing.">svn_wc_conflict_reason_missing</a>,<span class="comment"></span>
<a name="l01549"></a>01549 <span class="comment">  /** Object is unversioned */</span>
<a name="l01550"></a><a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffab705002ab5a130deba6426ed1debfa5e">01550</a>   <a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffab705002ab5a130deba6426ed1debfa5e" title="Object is unversioned.">svn_wc_conflict_reason_unversioned</a>,<span class="comment"></span>
<a name="l01551"></a>01551 <span class="comment">  /** Object is already added or schedule-add. @since New in 1.6. */</span>
<a name="l01552"></a><a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffa3b2f1ecd2b98dd3734830ff53c07cf7f">01552</a>   <a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffa3b2f1ecd2b98dd3734830ff53c07cf7f" title="Object is already added or schedule-add.">svn_wc_conflict_reason_added</a>,<span class="comment"></span>
<a name="l01553"></a>01553 <span class="comment">  /** Object is already replaced. @since New in 1.7. */</span>
<a name="l01554"></a><a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffa43ccd2a96956a6fad00900444cce2bd1">01554</a>   <a class="code" href="group__svn__wc__conflict.html#gga4097310282eb9ad622aa52a6efb99dffa43ccd2a96956a6fad00900444cce2bd1" title="Object is already replaced.">svn_wc_conflict_reason_replaced</a>
<a name="l01555"></a>01555 
<a name="l01556"></a>01556 } <a class="code" href="group__svn__wc__conflict.html#ga4097310282eb9ad622aa52a6efb99dff" title="The pre-existing condition which is causing a state of conflict.">svn_wc_conflict_reason_t</a>;
<a name="l01557"></a>01557 
<a name="l01558"></a>01558 <span class="comment"></span>
<a name="l01559"></a>01559 <span class="comment">/** The type of conflict being described by an</span>
<a name="l01560"></a>01560 <span class="comment"> * #svn_wc_conflict_description2_t (see below).</span>
<a name="l01561"></a>01561 <span class="comment"> *</span>
<a name="l01562"></a>01562 <span class="comment"> * @since New in 1.5.</span>
<a name="l01563"></a>01563 <span class="comment"> */</span>
<a name="l01564"></a><a class="code" href="group__svn__wc__conflict.html#gaac1aede3523f061c66fca467fb88d7fb">01564</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__conflict.html#gaac1aede3523f061c66fca467fb88d7fb" title="The type of conflict being described by an svn_wc_conflict_description2_t (see below).">svn_wc_conflict_kind_t</a>
<a name="l01565"></a>01565 {<span class="comment"></span>
<a name="l01566"></a>01566 <span class="comment">  /** textual conflict (on a file) */</span>
<a name="l01567"></a><a class="code" href="group__svn__wc__conflict.html#ggaac1aede3523f061c66fca467fb88d7fba414ce713bbe806e29c9b04fb8108395b">01567</a>   <a class="code" href="group__svn__wc__conflict.html#ggaac1aede3523f061c66fca467fb88d7fba414ce713bbe806e29c9b04fb8108395b" title="textual conflict (on a file)">svn_wc_conflict_kind_text</a>,<span class="comment"></span>
<a name="l01568"></a>01568 <span class="comment">  /** property conflict (on a file or dir) */</span>
<a name="l01569"></a><a class="code" href="group__svn__wc__conflict.html#ggaac1aede3523f061c66fca467fb88d7fba5a0c8b718dd142629e26a438d3e6289a">01569</a>   <a class="code" href="group__svn__wc__conflict.html#ggaac1aede3523f061c66fca467fb88d7fba5a0c8b718dd142629e26a438d3e6289a" title="property conflict (on a file or dir)">svn_wc_conflict_kind_property</a>,<span class="comment"></span>
<a name="l01570"></a>01570 <span class="comment">  /** tree conflict (on a dir) @since New in 1.6. */</span>
<a name="l01571"></a><a class="code" href="group__svn__wc__conflict.html#ggaac1aede3523f061c66fca467fb88d7fbac8df3de851b3ca11ae514c8b010554c8">01571</a>   <a class="code" href="group__svn__wc__conflict.html#ggaac1aede3523f061c66fca467fb88d7fbac8df3de851b3ca11ae514c8b010554c8" title="tree conflict (on a dir)">svn_wc_conflict_kind_tree</a>
<a name="l01572"></a>01572 } <a class="code" href="group__svn__wc__conflict.html#gaac1aede3523f061c66fca467fb88d7fb" title="The type of conflict being described by an svn_wc_conflict_description2_t (see below).">svn_wc_conflict_kind_t</a>;
<a name="l01573"></a>01573 
<a name="l01574"></a>01574 <span class="comment"></span>
<a name="l01575"></a>01575 <span class="comment">/** The user operation that exposed a conflict.</span>
<a name="l01576"></a>01576 <span class="comment"> *</span>
<a name="l01577"></a>01577 <span class="comment"> * @since New in 1.6.</span>
<a name="l01578"></a>01578 <span class="comment"> */</span>
<a name="l01579"></a><a class="code" href="group__svn__wc__conflict.html#ga5e08ee2f05c0b17f18bc798dbc30d0b6">01579</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__conflict.html#ga5e08ee2f05c0b17f18bc798dbc30d0b6" title="The user operation that exposed a conflict.">svn_wc_operation_t</a>
<a name="l01580"></a>01580 {
<a name="l01581"></a>01581   svn_wc_operation_none = 0,
<a name="l01582"></a>01582   svn_wc_operation_update,
<a name="l01583"></a>01583   svn_wc_operation_switch,
<a name="l01584"></a>01584   svn_wc_operation_merge
<a name="l01585"></a>01585 
<a name="l01586"></a>01586 } <a class="code" href="group__svn__wc__conflict.html#ga5e08ee2f05c0b17f18bc798dbc30d0b6" title="The user operation that exposed a conflict.">svn_wc_operation_t</a>;
<a name="l01587"></a>01587 
<a name="l01588"></a>01588 <span class="comment"></span>
<a name="l01589"></a>01589 <span class="comment">/** Info about one of the conflicting versions of a node. Each field may</span>
<a name="l01590"></a>01590 <span class="comment"> * have its respective null/invalid/unknown value if the corresponding</span>
<a name="l01591"></a>01591 <span class="comment"> * information is not relevant or not available.</span>
<a name="l01592"></a>01592 <span class="comment"> *</span>
<a name="l01593"></a>01593 <span class="comment"> * @todo Consider making some or all of the info mandatory, to reduce</span>
<a name="l01594"></a>01594 <span class="comment"> * complexity.</span>
<a name="l01595"></a>01595 <span class="comment"> *</span>
<a name="l01596"></a>01596 <span class="comment"> * @note Fields may be added to the end of this structure in future</span>
<a name="l01597"></a>01597 <span class="comment"> * versions.  Therefore, to preserve binary compatibility, users</span>
<a name="l01598"></a>01598 <span class="comment"> * should not directly allocate structures of this type.</span>
<a name="l01599"></a>01599 <span class="comment"> *</span>
<a name="l01600"></a>01600 <span class="comment"> * @see svn_wc_conflict_version_create()</span>
<a name="l01601"></a>01601 <span class="comment"> * @see svn_wc_conflict_version_dup()</span>
<a name="l01602"></a>01602 <span class="comment"> *</span>
<a name="l01603"></a>01603 <span class="comment"> * @since New in 1.6.</span>
<a name="l01604"></a>01604 <span class="comment">*/</span>
<a name="l01605"></a><a class="code" href="structsvn__wc__conflict__version__t.html">01605</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a>
<a name="l01606"></a>01606 {<span class="comment"></span>
<a name="l01607"></a>01607 <span class="comment">  /** @name Where to find this node version in a repository */</span><span class="comment"></span>
<a name="l01608"></a>01608 <span class="comment">  /**@{*/</span>
<a name="l01609"></a>01609 <span class="comment"></span>
<a name="l01610"></a>01610 <span class="comment">  /** URL of repository root */</span>
<a name="l01611"></a><a class="code" href="structsvn__wc__conflict__version__t.html#a6f4c3197ebd908aca6adc1de5b68402e">01611</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__version__t.html#a6f4c3197ebd908aca6adc1de5b68402e" title="URL of repository root.">repos_url</a>;
<a name="l01612"></a>01612 <span class="comment"></span>
<a name="l01613"></a>01613 <span class="comment">  /** revision at which to look up path_in_repos */</span>
<a name="l01614"></a><a class="code" href="structsvn__wc__conflict__version__t.html#a81ab279202187aaec14d9cd895b64992">01614</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__wc__conflict__version__t.html#a81ab279202187aaec14d9cd895b64992" title="revision at which to look up path_in_repos">peg_rev</a>;
<a name="l01615"></a>01615 <span class="comment"></span>
<a name="l01616"></a>01616 <span class="comment">  /** path within repos; must not start with &#39;/&#39; */</span>
<a name="l01617"></a><a class="code" href="structsvn__wc__conflict__version__t.html#afb0983596bcc9d0ed1f651856494b9b1">01617</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__version__t.html#afb0983596bcc9d0ed1f651856494b9b1" title="path within repos; must not start with &#39;/&#39;">path_in_repos</a>;
<a name="l01618"></a>01618   <span class="comment">/* @todo We may decide to add the repository UUID, to handle conflicts</span>
<a name="l01619"></a>01619 <span class="comment">   * properly during a repository move. */</span><span class="comment"></span>
<a name="l01620"></a>01620 <span class="comment">  /** @} */</span>
<a name="l01621"></a>01621 <span class="comment"></span>
<a name="l01622"></a>01622 <span class="comment">  /** Info about this node */</span>
<a name="l01623"></a><a class="code" href="structsvn__wc__conflict__version__t.html#a712329ecbb8b4dd49911506e261f8f57">01623</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__wc__conflict__version__t.html#a712329ecbb8b4dd49911506e261f8f57" title="Info about this node.">node_kind</a>;  <span class="comment">/* note that &#39;none&#39; is a legitimate value */</span>
<a name="l01624"></a>01624 
<a name="l01625"></a>01625   <span class="comment">/* @todo Add metadata about a local copy of the node, if and when</span>
<a name="l01626"></a>01626 <span class="comment">   * we store one. */</span>
<a name="l01627"></a>01627 
<a name="l01628"></a>01628   <span class="comment">/* Remember to update svn_wc_conflict_version_create() and</span>
<a name="l01629"></a>01629 <span class="comment">   * svn_wc_conflict_version_dup() in case you add fields to this struct. */</span>
<a name="l01630"></a>01630 } <a class="code" href="group__svn__wc__conflict.html#gab249de710489f171377fd85edc27d916" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a>;
<a name="l01631"></a>01631 <span class="comment"></span>
<a name="l01632"></a>01632 <span class="comment">/**</span>
<a name="l01633"></a>01633 <span class="comment"> * Allocate an #svn_wc_conflict_version_t structure in @a pool,</span>
<a name="l01634"></a>01634 <span class="comment"> * initialize to contain a conflict origin, and return it.</span>
<a name="l01635"></a>01635 <span class="comment"> *</span>
<a name="l01636"></a>01636 <span class="comment"> * Set the @c repos_url field of the created struct to @a repos_url, the</span>
<a name="l01637"></a>01637 <span class="comment"> * @c path_in_repos field to @a path_in_repos, the @c peg_rev field to</span>
<a name="l01638"></a>01638 <span class="comment"> * @a peg_rev and the the @c node_kind to @c node_kind. Make only shallow</span>
<a name="l01639"></a>01639 <span class="comment"> * copies of the pointer arguments.</span>
<a name="l01640"></a>01640 <span class="comment"> *</span>
<a name="l01641"></a>01641 <span class="comment"> * @since New in 1.6.</span>
<a name="l01642"></a>01642 <span class="comment"> */</span>
<a name="l01643"></a>01643 <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *
<a name="l01644"></a>01644 <a class="code" href="group__svn__wc__conflict.html#ga462a5f04be5d9f546414f3284ee63b23" title="Allocate an svn_wc_conflict_version_t structure in pool, initialize to contain a conflict origin...">svn_wc_conflict_version_create</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *repos_url,
<a name="l01645"></a>01645                                <span class="keyword">const</span> <span class="keywordtype">char</span> *path_in_repos,
<a name="l01646"></a>01646                                <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> peg_rev,
<a name="l01647"></a>01647                                <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> node_kind,
<a name="l01648"></a>01648                                apr_pool_t *pool);
<a name="l01649"></a>01649 <span class="comment"></span>
<a name="l01650"></a>01650 <span class="comment">/** Return a duplicate of @a version, allocated in @a pool.</span>
<a name="l01651"></a>01651 <span class="comment"> * No part of the new version will be shared with @a version.</span>
<a name="l01652"></a>01652 <span class="comment"> *</span>
<a name="l01653"></a>01653 <span class="comment"> * @since New in 1.6.</span>
<a name="l01654"></a>01654 <span class="comment"> */</span>
<a name="l01655"></a>01655 <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *
<a name="l01656"></a>01656 <a class="code" href="group__svn__wc__conflict.html#ga2ef3ff03a84483abddcf9136c82fb1c1" title="Return a duplicate of version, allocated in pool.">svn_wc_conflict_version_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *version,
<a name="l01657"></a>01657                             apr_pool_t *pool);
<a name="l01658"></a>01658 <span class="comment"></span>
<a name="l01659"></a>01659 <span class="comment">/** A struct that describes a conflict that has occurred in the</span>
<a name="l01660"></a>01660 <span class="comment"> * working copy.</span>
<a name="l01661"></a>01661 <span class="comment"> *</span>
<a name="l01662"></a>01662 <span class="comment"> * The conflict described by this structure is one of:</span>
<a name="l01663"></a>01663 <span class="comment"> *   - a conflict on the content of the file node @a local_abspath</span>
<a name="l01664"></a>01664 <span class="comment"> *   - a conflict on the property @a property_name of @a local_abspath</span>
<a name="l01665"></a>01665 <span class="comment"> *   - a tree conflict, of which @a local_abspath is the victim</span>
<a name="l01666"></a>01666 <span class="comment"> * Be aware that the victim of a tree conflict can be a non-existent node.</span>
<a name="l01667"></a>01667 <span class="comment"> * The three kinds of conflict are distinguished by @a kind.</span>
<a name="l01668"></a>01668 <span class="comment"> *</span>
<a name="l01669"></a>01669 <span class="comment"> * @note Fields may be added to the end of this structure in future</span>
<a name="l01670"></a>01670 <span class="comment"> * versions.  Therefore, to preserve binary compatibility, users</span>
<a name="l01671"></a>01671 <span class="comment"> * should not directly allocate structures of this type but should use</span>
<a name="l01672"></a>01672 <span class="comment"> * svn_wc_create_conflict_description_text2() or</span>
<a name="l01673"></a>01673 <span class="comment"> * svn_wc_create_conflict_description_prop2() or</span>
<a name="l01674"></a>01674 <span class="comment"> * svn_wc_create_conflict_description_tree2() instead.</span>
<a name="l01675"></a>01675 <span class="comment"> *</span>
<a name="l01676"></a>01676 <span class="comment"> * @since New in 1.7.</span>
<a name="l01677"></a>01677 <span class="comment"> */</span>
<a name="l01678"></a><a class="code" href="structsvn__wc__conflict__description2__t.html">01678</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__conflict__description2__t.html" title="A struct that describes a conflict that has occurred in the working copy.">svn_wc_conflict_description2_t</a>
<a name="l01679"></a>01679 {<span class="comment"></span>
<a name="l01680"></a>01680 <span class="comment">  /** The path that is in conflict (for a tree conflict, it is the victim) */</span>
<a name="l01681"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a898424b44ea9fc5503e4f4be813fe58d">01681</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description2__t.html#a898424b44ea9fc5503e4f4be813fe58d" title="The path that is in conflict (for a tree conflict, it is the victim)">local_abspath</a>;
<a name="l01682"></a>01682 <span class="comment"></span>
<a name="l01683"></a>01683 <span class="comment">  /** The node type of the path being operated on (for a tree conflict,</span>
<a name="l01684"></a>01684 <span class="comment">   *  ### which version?) */</span>
<a name="l01685"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a410b32ed8fa3eba169b1d9d5a215c155">01685</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__wc__conflict__description2__t.html#a410b32ed8fa3eba169b1d9d5a215c155" title="The node type of the path being operated on (for a tree conflict, ### which version?)">node_kind</a>;
<a name="l01686"></a>01686 <span class="comment"></span>
<a name="l01687"></a>01687 <span class="comment">  /** What sort of conflict are we describing? */</span>
<a name="l01688"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a13a5baf5a42e561797854e69fd118e05">01688</a>   <a class="code" href="group__svn__wc__conflict.html#gaac1aede3523f061c66fca467fb88d7fb" title="The type of conflict being described by an svn_wc_conflict_description2_t (see below).">svn_wc_conflict_kind_t</a> <a class="code" href="structsvn__wc__conflict__description2__t.html#a13a5baf5a42e561797854e69fd118e05" title="What sort of conflict are we describing?">kind</a>;
<a name="l01689"></a>01689 <span class="comment"></span>
<a name="l01690"></a>01690 <span class="comment">  /** The name of the property whose conflict is being described.</span>
<a name="l01691"></a>01691 <span class="comment">   *  (Only if @a kind is &#39;property&#39;; else undefined.) */</span>
<a name="l01692"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#af8326e410958dc9b677d9eb0eb16d621">01692</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description2__t.html#af8326e410958dc9b677d9eb0eb16d621" title="The name of the property whose conflict is being described.">property_name</a>;
<a name="l01693"></a>01693 <span class="comment"></span>
<a name="l01694"></a>01694 <span class="comment">  /** Whether svn thinks (&#39;my&#39; version of) @c path is a &#39;binary&#39; file.</span>
<a name="l01695"></a>01695 <span class="comment">   *  (Only if @c kind is &#39;text&#39;, else undefined.) */</span>
<a name="l01696"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a1cfc118edfbafb324f758ceb47b30bef">01696</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__conflict__description2__t.html#a1cfc118edfbafb324f758ceb47b30bef" title="Whether svn thinks (&#39;my&#39; version of) path is a &#39;binary&#39; file.">is_binary</a>;
<a name="l01697"></a>01697 <span class="comment"></span>
<a name="l01698"></a>01698 <span class="comment">  /** The svn:mime-type property of (&#39;my&#39; version of) @c path, if available,</span>
<a name="l01699"></a>01699 <span class="comment">   *  else NULL.</span>
<a name="l01700"></a>01700 <span class="comment">   *  (Only if @c kind is &#39;text&#39;, else undefined.) */</span>
<a name="l01701"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#ae05a1d426bd3393003e1e88e197d69df">01701</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description2__t.html#ae05a1d426bd3393003e1e88e197d69df" title="The svn:mime-type property of (&#39;my&#39; version of) path, if available, else NULL.">mime_type</a>;
<a name="l01702"></a>01702 <span class="comment"></span>
<a name="l01703"></a>01703 <span class="comment">  /** The action being attempted on the conflicted node or property.</span>
<a name="l01704"></a>01704 <span class="comment">   *  (When @c kind is &#39;text&#39;, this action must be &#39;edit&#39;.) */</span>
<a name="l01705"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a6d6aba989c54874f168d64975c8c4df9">01705</a>   <a class="code" href="group__svn__wc__conflict.html#gaacebef7772e264ec0b4ff4cf7a0085a6" title="The type of action being attempted on an object.">svn_wc_conflict_action_t</a> <a class="code" href="structsvn__wc__conflict__description2__t.html#a6d6aba989c54874f168d64975c8c4df9" title="The action being attempted on the conflicted node or property.">action</a>;
<a name="l01706"></a>01706 <span class="comment"></span>
<a name="l01707"></a>01707 <span class="comment">  /** The state of the target node or property, relative to its merge-left</span>
<a name="l01708"></a>01708 <span class="comment">   *  source, that is the reason for the conflict.</span>
<a name="l01709"></a>01709 <span class="comment">   *  (When @c kind is &#39;text&#39;, this reason must be &#39;edited&#39;.) */</span>
<a name="l01710"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a7557180800a50568c07607fe59fe09c9">01710</a>   <a class="code" href="group__svn__wc__conflict.html#ga4097310282eb9ad622aa52a6efb99dff" title="The pre-existing condition which is causing a state of conflict.">svn_wc_conflict_reason_t</a> <a class="code" href="structsvn__wc__conflict__description2__t.html#a7557180800a50568c07607fe59fe09c9" title="The state of the target node or property, relative to its merge-left source, that is the reason for t...">reason</a>;
<a name="l01711"></a>01711 <span class="comment"></span>
<a name="l01712"></a>01712 <span class="comment">  /** If this is text-conflict and involves the merging of two files</span>
<a name="l01713"></a>01713 <span class="comment">   * descended from a common ancestor, here are the paths of up to</span>
<a name="l01714"></a>01714 <span class="comment">   * four fulltext files that can be used to interactively resolve the</span>
<a name="l01715"></a>01715 <span class="comment">   * conflict.</span>
<a name="l01716"></a>01716 <span class="comment">   *</span>
<a name="l01717"></a>01717 <span class="comment">   * @a base_abspath, @a their_abspath and @a my_abspath are absolute</span>
<a name="l01718"></a>01718 <span class="comment">   * paths.</span>
<a name="l01719"></a>01719 <span class="comment">   *</span>
<a name="l01720"></a>01720 <span class="comment">   * ### Is @a merged_file relative to some directory, or absolute?</span>
<a name="l01721"></a>01721 <span class="comment">   *</span>
<a name="l01722"></a>01722 <span class="comment">   * All four files will be in repository-normal form -- LF</span>
<a name="l01723"></a>01723 <span class="comment">   * line endings and contracted keywords.  (If any of these files are</span>
<a name="l01724"></a>01724 <span class="comment">   * not available, they default to NULL.)</span>
<a name="l01725"></a>01725 <span class="comment">   *</span>
<a name="l01726"></a>01726 <span class="comment">   * On the other hand, if this is a property-conflict, then these</span>
<a name="l01727"></a>01727 <span class="comment">   * paths represent temporary files that contain the three different</span>
<a name="l01728"></a>01728 <span class="comment">   * property-values in conflict.  The fourth path (@c merged_file)</span>
<a name="l01729"></a>01729 <span class="comment">   * may or may not be NULL;  if set, it represents libsvn_wc&#39;s</span>
<a name="l01730"></a>01730 <span class="comment">   * attempt to merge the property values together.  (Remember that</span>
<a name="l01731"></a>01731 <span class="comment">   * property values are technically binary values, and thus can&#39;t</span>
<a name="l01732"></a>01732 <span class="comment">   * always be merged.)</span>
<a name="l01733"></a>01733 <span class="comment">   */</span>
<a name="l01734"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#ac0d0e48c0b337be4c588cb1fdc5404b4">01734</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description2__t.html#ac0d0e48c0b337be4c588cb1fdc5404b4" title="If this is text-conflict and involves the merging of two files descended from a common ancestor...">base_abspath</a>;  <span class="comment">/* common ancestor of the two files being merged */</span>
<a name="l01735"></a>01735 <span class="comment"></span>
<a name="l01736"></a>01736 <span class="comment">  /** their version of the file */</span>
<a name="l01737"></a>01737   <span class="comment">/* ### BH: For properties this field contains the reference to</span>
<a name="l01738"></a>01738 <span class="comment">             the property rejection (.prej) file */</span>
<a name="l01739"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a192bffd753611a187c9f96f1efafdba8">01739</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description2__t.html#a192bffd753611a187c9f96f1efafdba8" title="their version of the file">their_abspath</a>;
<a name="l01740"></a>01740 <span class="comment"></span>
<a name="l01741"></a>01741 <span class="comment">  /** my locally-edited version of the file */</span>
<a name="l01742"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a49a529d3c2fb672b6732b0358195c584">01742</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description2__t.html#a49a529d3c2fb672b6732b0358195c584" title="my locally-edited version of the file">my_abspath</a>;
<a name="l01743"></a>01743 <span class="comment"></span>
<a name="l01744"></a>01744 <span class="comment">  /** merged version; may contain conflict markers */</span>
<a name="l01745"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a00958195161f07322777439eac0ac74d">01745</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description2__t.html#a00958195161f07322777439eac0ac74d" title="merged version; may contain conflict markers">merged_file</a>;
<a name="l01746"></a>01746 <span class="comment"></span>
<a name="l01747"></a>01747 <span class="comment">  /** The operation that exposed the conflict.</span>
<a name="l01748"></a>01748 <span class="comment">   * Used only for tree conflicts.</span>
<a name="l01749"></a>01749 <span class="comment">   */</span>
<a name="l01750"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#ab11fb3749cdc03046d7923e9a33a03bf">01750</a>   <a class="code" href="group__svn__wc__conflict.html#ga5e08ee2f05c0b17f18bc798dbc30d0b6" title="The user operation that exposed a conflict.">svn_wc_operation_t</a> <a class="code" href="structsvn__wc__conflict__description2__t.html#ab11fb3749cdc03046d7923e9a33a03bf" title="The operation that exposed the conflict.">operation</a>;
<a name="l01751"></a>01751 <span class="comment"></span>
<a name="l01752"></a>01752 <span class="comment">  /** Info on the &quot;merge-left source&quot; or &quot;older&quot; version of incoming change. */</span>
<a name="l01753"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a553619d9e832fde7644eaeea55216d1a">01753</a>   <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *<a class="code" href="structsvn__wc__conflict__description2__t.html#a553619d9e832fde7644eaeea55216d1a" title="Info on the &quot;merge-left source&quot; or &quot;older&quot; version of incoming change.">src_left_version</a>;
<a name="l01754"></a>01754 <span class="comment"></span>
<a name="l01755"></a>01755 <span class="comment">  /** Info on the &quot;merge-right source&quot; or &quot;their&quot; version of incoming change. */</span>
<a name="l01756"></a><a class="code" href="structsvn__wc__conflict__description2__t.html#a0b9ca30d7d7fe1dba3bfa4bd76faf556">01756</a>   <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *<a class="code" href="structsvn__wc__conflict__description2__t.html#a0b9ca30d7d7fe1dba3bfa4bd76faf556" title="Info on the &quot;merge-right source&quot; or &quot;their&quot; version of incoming change.">src_right_version</a>;
<a name="l01757"></a>01757 
<a name="l01758"></a>01758   <span class="comment">/* Remember to adjust svn_wc__conflict_description_dup()</span>
<a name="l01759"></a>01759 <span class="comment">   * if you add new fields to this struct. */</span>
<a name="l01760"></a>01760 } <a class="code" href="group__svn__wc__conflict.html#ga27357e159ce4f9cbb21bc48ec1ff9939" title="A struct that describes a conflict that has occurred in the working copy.">svn_wc_conflict_description2_t</a>;
<a name="l01761"></a>01761 
<a name="l01762"></a>01762 <span class="comment"></span>
<a name="l01763"></a>01763 <span class="comment">/** Similar to #svn_wc_conflict_description2_t, but with relative paths and</span>
<a name="l01764"></a>01764 <span class="comment"> * adm_access batons.  Passed to #svn_wc_conflict_resolver_func_t.</span>
<a name="l01765"></a>01765 <span class="comment"> *</span>
<a name="l01766"></a>01766 <span class="comment"> * @since New in 1.5.</span>
<a name="l01767"></a>01767 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l01768"></a>01768 <span class="comment"> */</span>
<a name="l01769"></a><a class="code" href="structsvn__wc__conflict__description__t.html">01769</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__conflict__description__t.html" title="Similar to svn_wc_conflict_description2_t, but with relative paths and adm_access batons...">svn_wc_conflict_description_t</a>
<a name="l01770"></a>01770 {<span class="comment"></span>
<a name="l01771"></a>01771 <span class="comment">  /** The path that is in conflict (for a tree conflict, it is the victim) */</span>
<a name="l01772"></a><a class="code" href="structsvn__wc__conflict__description__t.html#a7e88bc2a4898a031543e2e8fef852eea">01772</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description__t.html#a7e88bc2a4898a031543e2e8fef852eea" title="The path that is in conflict (for a tree conflict, it is the victim)">path</a>;
<a name="l01773"></a>01773 <span class="comment"></span>
<a name="l01774"></a>01774 <span class="comment">  /** The node type of the path being operated on (for a tree conflict,</span>
<a name="l01775"></a>01775 <span class="comment">   *  ### which version?) */</span>
<a name="l01776"></a><a class="code" href="structsvn__wc__conflict__description__t.html#a90231857ee8dac361dd223d5c2fede4c">01776</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__wc__conflict__description__t.html#a90231857ee8dac361dd223d5c2fede4c" title="The node type of the path being operated on (for a tree conflict, ### which version?)">node_kind</a>;
<a name="l01777"></a>01777 <span class="comment"></span>
<a name="l01778"></a>01778 <span class="comment">  /** What sort of conflict are we describing? */</span>
<a name="l01779"></a><a class="code" href="structsvn__wc__conflict__description__t.html#af5b6aab82fb8ce48fae6e1041c77867d">01779</a>   <a class="code" href="group__svn__wc__conflict.html#gaac1aede3523f061c66fca467fb88d7fb" title="The type of conflict being described by an svn_wc_conflict_description2_t (see below).">svn_wc_conflict_kind_t</a> <a class="code" href="structsvn__wc__conflict__description__t.html#af5b6aab82fb8ce48fae6e1041c77867d" title="What sort of conflict are we describing?">kind</a>;
<a name="l01780"></a>01780 <span class="comment"></span>
<a name="l01781"></a>01781 <span class="comment">  /** The name of the property whose conflict is being described.</span>
<a name="l01782"></a>01782 <span class="comment">   *  (Only if @a kind is &#39;property&#39;; else undefined.) */</span>
<a name="l01783"></a><a class="code" href="structsvn__wc__conflict__description__t.html#ac25547692ff8f540a7bfc349a1204e5e">01783</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description__t.html#ac25547692ff8f540a7bfc349a1204e5e" title="The name of the property whose conflict is being described.">property_name</a>;
<a name="l01784"></a>01784 <span class="comment"></span>
<a name="l01785"></a>01785 <span class="comment">  /** Whether svn thinks (&#39;my&#39; version of) @c path is a &#39;binary&#39; file.</span>
<a name="l01786"></a>01786 <span class="comment">   *  (Only if @c kind is &#39;text&#39;, else undefined.) */</span>
<a name="l01787"></a><a class="code" href="structsvn__wc__conflict__description__t.html#a9b670ad87c4446e6b074074b49139d72">01787</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__conflict__description__t.html#a9b670ad87c4446e6b074074b49139d72" title="Whether svn thinks (&#39;my&#39; version of) path is a &#39;binary&#39; file.">is_binary</a>;
<a name="l01788"></a>01788 <span class="comment"></span>
<a name="l01789"></a>01789 <span class="comment">  /** The svn:mime-type property of (&#39;my&#39; version of) @c path, if available,</span>
<a name="l01790"></a>01790 <span class="comment">   *  else NULL.</span>
<a name="l01791"></a>01791 <span class="comment">   *  (Only if @c kind is &#39;text&#39;, else undefined.) */</span>
<a name="l01792"></a><a class="code" href="structsvn__wc__conflict__description__t.html#af735c4935ee5b9fa302ddf259ef493b8">01792</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description__t.html#af735c4935ee5b9fa302ddf259ef493b8" title="The svn:mime-type property of (&#39;my&#39; version of) path, if available, else NULL.">mime_type</a>;
<a name="l01793"></a>01793 <span class="comment"></span>
<a name="l01794"></a>01794 <span class="comment">  /** If not NULL, an open working copy access baton to either the</span>
<a name="l01795"></a>01795 <span class="comment">   *  path itself (if @c path is a directory), or to the parent</span>
<a name="l01796"></a>01796 <span class="comment">   *  directory (if @c path is a file.)</span>
<a name="l01797"></a>01797 <span class="comment">   *  For a tree conflict, this will always be an access baton</span>
<a name="l01798"></a>01798 <span class="comment">   *  to the parent directory of the path, even if the path is</span>
<a name="l01799"></a>01799 <span class="comment">   *  a directory. */</span>
<a name="l01800"></a><a class="code" href="structsvn__wc__conflict__description__t.html#a155edb7ffed515fc71dd72c9c7a6d2de">01800</a>   <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *<a class="code" href="structsvn__wc__conflict__description__t.html#a155edb7ffed515fc71dd72c9c7a6d2de" title="If not NULL, an open working copy access baton to either the path itself (if path is a directory)...">access</a>;
<a name="l01801"></a>01801 <span class="comment"></span>
<a name="l01802"></a>01802 <span class="comment">  /** The action being attempted on the conflicted node or property.</span>
<a name="l01803"></a>01803 <span class="comment">   *  (When @c kind is &#39;text&#39;, this action must be &#39;edit&#39;.) */</span>
<a name="l01804"></a><a class="code" href="structsvn__wc__conflict__description__t.html#a2eb0a7f4ad632a2d3c27432549e2cc31">01804</a>   <a class="code" href="group__svn__wc__conflict.html#gaacebef7772e264ec0b4ff4cf7a0085a6" title="The type of action being attempted on an object.">svn_wc_conflict_action_t</a> <a class="code" href="structsvn__wc__conflict__description__t.html#a2eb0a7f4ad632a2d3c27432549e2cc31" title="The action being attempted on the conflicted node or property.">action</a>;
<a name="l01805"></a>01805 <span class="comment"></span>
<a name="l01806"></a>01806 <span class="comment">  /** The state of the target node or property, relative to its merge-left</span>
<a name="l01807"></a>01807 <span class="comment">   *  source, that is the reason for the conflict.</span>
<a name="l01808"></a>01808 <span class="comment">   *  (When @c kind is &#39;text&#39;, this reason must be &#39;edited&#39;.) */</span>
<a name="l01809"></a><a class="code" href="structsvn__wc__conflict__description__t.html#aa99de73a639adcf0a934368cc1886e9d">01809</a>   <a class="code" href="group__svn__wc__conflict.html#ga4097310282eb9ad622aa52a6efb99dff" title="The pre-existing condition which is causing a state of conflict.">svn_wc_conflict_reason_t</a> <a class="code" href="structsvn__wc__conflict__description__t.html#aa99de73a639adcf0a934368cc1886e9d" title="The state of the target node or property, relative to its merge-left source, that is the reason for t...">reason</a>;
<a name="l01810"></a>01810 <span class="comment"></span>
<a name="l01811"></a>01811 <span class="comment">  /** If this is text-conflict and involves the merging of two files</span>
<a name="l01812"></a>01812 <span class="comment">   * descended from a common ancestor, here are the paths of up to</span>
<a name="l01813"></a>01813 <span class="comment">   * four fulltext files that can be used to interactively resolve the</span>
<a name="l01814"></a>01814 <span class="comment">   * conflict.  All four files will be in repository-normal form -- LF</span>
<a name="l01815"></a>01815 <span class="comment">   * line endings and contracted keywords.  (If any of these files are</span>
<a name="l01816"></a>01816 <span class="comment">   * not available, they default to NULL.)</span>
<a name="l01817"></a>01817 <span class="comment">   *</span>
<a name="l01818"></a>01818 <span class="comment">   * On the other hand, if this is a property-conflict, then these</span>
<a name="l01819"></a>01819 <span class="comment">   * paths represent temporary files that contain the three different</span>
<a name="l01820"></a>01820 <span class="comment">   * property-values in conflict.  The fourth path (@c merged_file)</span>
<a name="l01821"></a>01821 <span class="comment">   * may or may not be NULL;  if set, it represents libsvn_wc&#39;s</span>
<a name="l01822"></a>01822 <span class="comment">   * attempt to merge the property values together.  (Remember that</span>
<a name="l01823"></a>01823 <span class="comment">   * property values are technically binary values, and thus can&#39;t</span>
<a name="l01824"></a>01824 <span class="comment">   * always be merged.)</span>
<a name="l01825"></a>01825 <span class="comment">   */</span>
<a name="l01826"></a><a class="code" href="structsvn__wc__conflict__description__t.html#a48dc9fea03417e910989cc4603b56db0">01826</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description__t.html#a48dc9fea03417e910989cc4603b56db0" title="If this is text-conflict and involves the merging of two files descended from a common ancestor...">base_file</a>;     <span class="comment">/* common ancestor of the two files being merged */</span>
<a name="l01827"></a>01827 <span class="comment"></span>
<a name="l01828"></a>01828 <span class="comment">  /** their version of the file */</span>
<a name="l01829"></a><a class="code" href="structsvn__wc__conflict__description__t.html#a36b592830d961ec83390849bab86ed02">01829</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description__t.html#a36b592830d961ec83390849bab86ed02" title="their version of the file">their_file</a>;
<a name="l01830"></a>01830 <span class="comment"></span>
<a name="l01831"></a>01831 <span class="comment">  /** my locally-edited version of the file */</span>
<a name="l01832"></a><a class="code" href="structsvn__wc__conflict__description__t.html#a8456635804cdf975cbcf4ae5a214ec4c">01832</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description__t.html#a8456635804cdf975cbcf4ae5a214ec4c" title="my locally-edited version of the file">my_file</a>;
<a name="l01833"></a>01833 <span class="comment"></span>
<a name="l01834"></a>01834 <span class="comment">  /** merged version; may contain conflict markers */</span>
<a name="l01835"></a><a class="code" href="structsvn__wc__conflict__description__t.html#a1f3b68cd67f525a495815a147464cc70">01835</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__description__t.html#a1f3b68cd67f525a495815a147464cc70" title="merged version; may contain conflict markers">merged_file</a>;
<a name="l01836"></a>01836 <span class="comment"></span>
<a name="l01837"></a>01837 <span class="comment">  /** The operation that exposed the conflict.</span>
<a name="l01838"></a>01838 <span class="comment">   * Used only for tree conflicts.</span>
<a name="l01839"></a>01839 <span class="comment">   *</span>
<a name="l01840"></a>01840 <span class="comment">   * @since New in 1.6.</span>
<a name="l01841"></a>01841 <span class="comment">   */</span>
<a name="l01842"></a><a class="code" href="structsvn__wc__conflict__description__t.html#ad3e393e18a1317379994bd6d3598d18e">01842</a>   <a class="code" href="group__svn__wc__conflict.html#ga5e08ee2f05c0b17f18bc798dbc30d0b6" title="The user operation that exposed a conflict.">svn_wc_operation_t</a> <a class="code" href="structsvn__wc__conflict__description__t.html#ad3e393e18a1317379994bd6d3598d18e" title="The operation that exposed the conflict.">operation</a>;
<a name="l01843"></a>01843 <span class="comment"></span>
<a name="l01844"></a>01844 <span class="comment">  /** Info on the &quot;merge-left source&quot; or &quot;older&quot; version of incoming change.</span>
<a name="l01845"></a>01845 <span class="comment">   * @since New in 1.6. */</span>
<a name="l01846"></a><a class="code" href="structsvn__wc__conflict__description__t.html#a3ee35f785566cecf62ecf9475949beaf">01846</a>   <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *<a class="code" href="structsvn__wc__conflict__description__t.html#a3ee35f785566cecf62ecf9475949beaf" title="Info on the &quot;merge-left source&quot; or &quot;older&quot; version of incoming change.">src_left_version</a>;
<a name="l01847"></a>01847 <span class="comment"></span>
<a name="l01848"></a>01848 <span class="comment">  /** Info on the &quot;merge-right source&quot; or &quot;their&quot; version of incoming change.</span>
<a name="l01849"></a>01849 <span class="comment">   * @since New in 1.6. */</span>
<a name="l01850"></a><a class="code" href="structsvn__wc__conflict__description__t.html#abedfc1ac7be003ee8086a7f44b783a3f">01850</a>   <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *<a class="code" href="structsvn__wc__conflict__description__t.html#abedfc1ac7be003ee8086a7f44b783a3f" title="Info on the &quot;merge-right source&quot; or &quot;their&quot; version of incoming change.">src_right_version</a>;
<a name="l01851"></a>01851 
<a name="l01852"></a>01852   <span class="comment">/* Remember to adjust svn_wc__conflict_description_dup()</span>
<a name="l01853"></a>01853 <span class="comment">   * if you add new fields to this struct. */</span>
<a name="l01854"></a>01854 } <a class="code" href="group__svn__wc__conflict.html#ga2c547588f4c226b5b99d39b9c918b2cc" title="Similar to svn_wc_conflict_description2_t, but with relative paths and adm_access batons...">svn_wc_conflict_description_t</a>;
<a name="l01855"></a>01855 <span class="comment"></span>
<a name="l01856"></a>01856 <span class="comment">/**</span>
<a name="l01857"></a>01857 <span class="comment"> * Allocate an #svn_wc_conflict_description_t structure in @a result_pool,</span>
<a name="l01858"></a>01858 <span class="comment"> * initialize to represent a text conflict, and return it.</span>
<a name="l01859"></a>01859 <span class="comment"> *</span>
<a name="l01860"></a>01860 <span class="comment"> * Set the @c local_abspath field of the created struct to @a local_abspath</span>
<a name="l01861"></a>01861 <span class="comment"> * (which must be an absolute path), the @c kind field to</span>
<a name="l01862"></a>01862 <span class="comment"> * #svn_wc_conflict_kind_text, the @c node_kind to #svn_node_file,</span>
<a name="l01863"></a>01863 <span class="comment"> * the @c action to #svn_wc_conflict_action_edit, and the @c reason to</span>
<a name="l01864"></a>01864 <span class="comment"> * #svn_wc_conflict_reason_edited.</span>
<a name="l01865"></a>01865 <span class="comment"> *</span>
<a name="l01866"></a>01866 <span class="comment"> * @note It is the caller&#39;s responsibility to set the other required fields</span>
<a name="l01867"></a>01867 <span class="comment"> * (such as the four file names and @c mime_type and @c is_binary).</span>
<a name="l01868"></a>01868 <span class="comment"> *</span>
<a name="l01869"></a>01869 <span class="comment"> * @since New in 1.7.</span>
<a name="l01870"></a>01870 <span class="comment"> */</span>
<a name="l01871"></a>01871 <a class="code" href="structsvn__wc__conflict__description2__t.html" title="A struct that describes a conflict that has occurred in the working copy.">svn_wc_conflict_description2_t</a> *
<a name="l01872"></a>01872 <a class="code" href="group__svn__wc__conflict.html#ga7a917a519057615103652a9226ac94aa" title="Allocate an svn_wc_conflict_description_t structure in result_pool, initialize to represent a text co...">svn_wc_conflict_description_create_text2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l01873"></a>01873                                          apr_pool_t *result_pool);
<a name="l01874"></a>01874 
<a name="l01875"></a>01875 <span class="comment"></span>
<a name="l01876"></a>01876 <span class="comment">/** Similar to svn_wc_conflict_description_create_text2(), but returns</span>
<a name="l01877"></a>01877 <span class="comment"> * a #svn_wc_conflict_description_t *.</span>
<a name="l01878"></a>01878 <span class="comment"> *</span>
<a name="l01879"></a>01879 <span class="comment"> * @since New in 1.6.</span>
<a name="l01880"></a>01880 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l01881"></a>01881 <span class="comment"> */</span>
<a name="l01882"></a>01882 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01883"></a>01883 <a class="code" href="structsvn__wc__conflict__description__t.html" title="Similar to svn_wc_conflict_description2_t, but with relative paths and adm_access batons...">svn_wc_conflict_description_t</a> *
<a name="l01884"></a>01884 <a class="code" href="group__svn__wc__conflict.html#ga1261e529b00366a671875e3edf21627b" title="Similar to svn_wc_conflict_description_create_text2(), but returns a svn_wc_conflict_description_t *...">svn_wc_conflict_description_create_text</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01885"></a>01885                                         <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l01886"></a>01886                                         apr_pool_t *pool);
<a name="l01887"></a>01887 <span class="comment"></span>
<a name="l01888"></a>01888 <span class="comment">/**</span>
<a name="l01889"></a>01889 <span class="comment"> * Allocate an #svn_wc_conflict_description_t structure in @a result_pool,</span>
<a name="l01890"></a>01890 <span class="comment"> * initialize to represent a property conflict, and return it.</span>
<a name="l01891"></a>01891 <span class="comment"> *</span>
<a name="l01892"></a>01892 <span class="comment"> * Set the @c local_abspath field of the created struct to @a local_abspath</span>
<a name="l01893"></a>01893 <span class="comment"> * (which must be an absolute path), the @c kind field</span>
<a name="l01894"></a>01894 <span class="comment"> * to #svn_wc_conflict_kind_prop, the @c node_kind to @a node_kind, and</span>
<a name="l01895"></a>01895 <span class="comment"> * the @c property_name to @a property_name.</span>
<a name="l01896"></a>01896 <span class="comment"> *</span>
<a name="l01897"></a>01897 <span class="comment"> * @note: It is the caller&#39;s responsibility to set the other required fields</span>
<a name="l01898"></a>01898 <span class="comment"> * (such as the four file names and @c action and @c reason).</span>
<a name="l01899"></a>01899 <span class="comment"> *</span>
<a name="l01900"></a>01900 <span class="comment"> * @since New in 1.7.</span>
<a name="l01901"></a>01901 <span class="comment"> */</span>
<a name="l01902"></a>01902 <a class="code" href="structsvn__wc__conflict__description2__t.html" title="A struct that describes a conflict that has occurred in the working copy.">svn_wc_conflict_description2_t</a> *
<a name="l01903"></a>01903 <a class="code" href="group__svn__wc__conflict.html#ga4eda4be2f2a3cf18b784546c0e15fd23" title="Allocate an svn_wc_conflict_description_t structure in result_pool, initialize to represent a propert...">svn_wc_conflict_description_create_prop2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l01904"></a>01904                                          <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> node_kind,
<a name="l01905"></a>01905                                          <span class="keyword">const</span> <span class="keywordtype">char</span> *property_name,
<a name="l01906"></a>01906                                          apr_pool_t *result_pool);
<a name="l01907"></a>01907 <span class="comment"></span>
<a name="l01908"></a>01908 <span class="comment">/** Similar to svn_wc_conflict_descriptor_create_prop(), but returns</span>
<a name="l01909"></a>01909 <span class="comment"> * a #svn_wc_conflict_description_t *.</span>
<a name="l01910"></a>01910 <span class="comment"> *</span>
<a name="l01911"></a>01911 <span class="comment"> * @since New in 1.6.</span>
<a name="l01912"></a>01912 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l01913"></a>01913 <span class="comment"> */</span>
<a name="l01914"></a>01914 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01915"></a>01915 <a class="code" href="structsvn__wc__conflict__description__t.html" title="Similar to svn_wc_conflict_description2_t, but with relative paths and adm_access batons...">svn_wc_conflict_description_t</a> *
<a name="l01916"></a>01916 <a class="code" href="group__svn__wc__conflict.html#gafaa6290752f95810592245bd4b8a6a11" title="Similar to svn_wc_conflict_descriptor_create_prop(), but returns a svn_wc_conflict_description_t *...">svn_wc_conflict_description_create_prop</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01917"></a>01917                                         <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l01918"></a>01918                                         <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> node_kind,
<a name="l01919"></a>01919                                         <span class="keyword">const</span> <span class="keywordtype">char</span> *property_name,
<a name="l01920"></a>01920                                         apr_pool_t *pool);
<a name="l01921"></a>01921 <span class="comment"></span>
<a name="l01922"></a>01922 <span class="comment">/**</span>
<a name="l01923"></a>01923 <span class="comment"> * Allocate an #svn_wc_conflict_description_t structure in @a pool,</span>
<a name="l01924"></a>01924 <span class="comment"> * initialize to represent a tree conflict, and return it.</span>
<a name="l01925"></a>01925 <span class="comment"> *</span>
<a name="l01926"></a>01926 <span class="comment"> * Set the @c local_abspath field of the created struct to @a local_abspath</span>
<a name="l01927"></a>01927 <span class="comment"> * (which must be an absolute path), the @c kind field to</span>
<a name="l01928"></a>01928 <span class="comment"> * #svn_wc_conflict_kind_tree, the @c node_kind to @a node_kind, the @c</span>
<a name="l01929"></a>01929 <span class="comment"> * operation to @a operation, the @c src_left_version field to</span>
<a name="l01930"></a>01930 <span class="comment"> * @a src_left_version, and the @c src_right_version field to</span>
<a name="l01931"></a>01931 <span class="comment"> * @a src_right_version.</span>
<a name="l01932"></a>01932 <span class="comment"> *</span>
<a name="l01933"></a>01933 <span class="comment"> * @note: It is the caller&#39;s responsibility to set the other required fields</span>
<a name="l01934"></a>01934 <span class="comment"> * (such as the four file names and @c action and @c reason).</span>
<a name="l01935"></a>01935 <span class="comment"> *</span>
<a name="l01936"></a>01936 <span class="comment"> * @since New in 1.7.</span>
<a name="l01937"></a>01937 <span class="comment"> */</span>
<a name="l01938"></a>01938 <a class="code" href="structsvn__wc__conflict__description2__t.html" title="A struct that describes a conflict that has occurred in the working copy.">svn_wc_conflict_description2_t</a> *
<a name="l01939"></a>01939 <a class="code" href="group__svn__wc__conflict.html#gadf2dcfda361f6a958149967b0a5b640d" title="Allocate an svn_wc_conflict_description_t structure in pool, initialize to represent a tree conflict...">svn_wc_conflict_description_create_tree2</a>(
<a name="l01940"></a>01940   <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l01941"></a>01941   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> node_kind,
<a name="l01942"></a>01942   <a class="code" href="group__svn__wc__conflict.html#ga5e08ee2f05c0b17f18bc798dbc30d0b6" title="The user operation that exposed a conflict.">svn_wc_operation_t</a> operation,
<a name="l01943"></a>01943   <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *src_left_version,
<a name="l01944"></a>01944   <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *src_right_version,
<a name="l01945"></a>01945   apr_pool_t *result_pool);
<a name="l01946"></a>01946 
<a name="l01947"></a>01947 <span class="comment"></span>
<a name="l01948"></a>01948 <span class="comment">/** Similar to svn_wc_conflict_description_create_tree(), but returns</span>
<a name="l01949"></a>01949 <span class="comment"> * a #svn_wc_conflict_description_t *.</span>
<a name="l01950"></a>01950 <span class="comment"> *</span>
<a name="l01951"></a>01951 <span class="comment"> * @since New in 1.6.</span>
<a name="l01952"></a>01952 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l01953"></a>01953 <span class="comment"> */</span>
<a name="l01954"></a>01954 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l01955"></a>01955 <a class="code" href="structsvn__wc__conflict__description__t.html" title="Similar to svn_wc_conflict_description2_t, but with relative paths and adm_access batons...">svn_wc_conflict_description_t</a> *
<a name="l01956"></a>01956 <a class="code" href="group__svn__wc__conflict.html#ga9bf1da260647786fa2da896b166d589e" title="Similar to svn_wc_conflict_description_create_tree(), but returns a svn_wc_conflict_description_t *...">svn_wc_conflict_description_create_tree</a>(
<a name="l01957"></a>01957   <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l01958"></a>01958   <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l01959"></a>01959   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> node_kind,
<a name="l01960"></a>01960   <a class="code" href="group__svn__wc__conflict.html#ga5e08ee2f05c0b17f18bc798dbc30d0b6" title="The user operation that exposed a conflict.">svn_wc_operation_t</a> operation,
<a name="l01961"></a>01961   <span class="comment">/* non-const */</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *src_left_version,
<a name="l01962"></a>01962   <span class="comment">/* non-const */</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *src_right_version,
<a name="l01963"></a>01963   apr_pool_t *pool);
<a name="l01964"></a>01964 
<a name="l01965"></a>01965 <span class="comment"></span>
<a name="l01966"></a>01966 <span class="comment">/** Return a duplicate of @a conflict, allocated in @a result_pool.</span>
<a name="l01967"></a>01967 <span class="comment"> * A deep copy of all members will be made.</span>
<a name="l01968"></a>01968 <span class="comment"> *</span>
<a name="l01969"></a>01969 <span class="comment"> * @since New in 1.7.</span>
<a name="l01970"></a>01970 <span class="comment"> */</span>
<a name="l01971"></a>01971 <a class="code" href="structsvn__wc__conflict__description2__t.html" title="A struct that describes a conflict that has occurred in the working copy.">svn_wc_conflict_description2_t</a> *
<a name="l01972"></a>01972 <a class="code" href="group__svn__wc__conflict.html#gae9cdfe0214490f1dc68ae510e810e3fc" title="Return a duplicate of conflict, allocated in result_pool.">svn_wc__conflict_description2_dup</a>(
<a name="l01973"></a>01973   <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__description2__t.html" title="A struct that describes a conflict that has occurred in the working copy.">svn_wc_conflict_description2_t</a> *conflict,
<a name="l01974"></a>01974   apr_pool_t *result_pool);
<a name="l01975"></a>01975 
<a name="l01976"></a>01976 <span class="comment"></span>
<a name="l01977"></a>01977 <span class="comment">/** The way in which the conflict callback chooses a course of action.</span>
<a name="l01978"></a>01978 <span class="comment"> *</span>
<a name="l01979"></a>01979 <span class="comment"> * @since New in 1.5.</span>
<a name="l01980"></a>01980 <span class="comment"> */</span>
<a name="l01981"></a><a class="code" href="group__svn__wc__conflict.html#ga040e000024033dd2721a4ddce5561431">01981</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__conflict.html#ga040e000024033dd2721a4ddce5561431" title="The way in which the conflict callback chooses a course of action.">svn_wc_conflict_choice_t</a>
<a name="l01982"></a>01982 {<span class="comment"></span>
<a name="l01983"></a>01983 <span class="comment">  /** Don&#39;t resolve the conflict now.  Let libsvn_wc mark the path</span>
<a name="l01984"></a>01984 <span class="comment">     &#39;conflicted&#39;, so user can run &#39;svn resolved&#39; later. */</span>
<a name="l01985"></a><a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431afa2379fd3a106561f17c2d481cddce3b">01985</a>   <a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431afa2379fd3a106561f17c2d481cddce3b" title="Don&#39;t resolve the conflict now.">svn_wc_conflict_choose_postpone</a>,
<a name="l01986"></a>01986 <span class="comment"></span>
<a name="l01987"></a>01987 <span class="comment">  /** If there were files to choose from, select one as a way of</span>
<a name="l01988"></a>01988 <span class="comment">     resolving the conflict here and now.  libsvn_wc will then do the</span>
<a name="l01989"></a>01989 <span class="comment">     work of &quot;installing&quot; the chosen file.</span>
<a name="l01990"></a>01990 <span class="comment">  */</span>
<a name="l01991"></a><a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431af6b88569447793363567212f22ab06dc">01991</a>   <a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431af6b88569447793363567212f22ab06dc" title="If there were files to choose from, select one as a way of resolving the conflict here and now...">svn_wc_conflict_choose_base</a>,            <span class="comment">/**&lt; original version */</span>
<a name="l01992"></a><a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431a2627b0594636fd14b1d7732e3b80f89d">01992</a>   <a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431a2627b0594636fd14b1d7732e3b80f89d" title="incoming version">svn_wc_conflict_choose_theirs_full</a>,     <span class="comment">/**&lt; incoming version */</span>
<a name="l01993"></a><a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431a7b1b41a511fa96f1b59139f9d5976889">01993</a>   <a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431a7b1b41a511fa96f1b59139f9d5976889" title="own version">svn_wc_conflict_choose_mine_full</a>,       <span class="comment">/**&lt; own version */</span>
<a name="l01994"></a><a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431abd13f571ab3e57737f0387e946818a3a">01994</a>   <a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431abd13f571ab3e57737f0387e946818a3a" title="incoming (for conflicted hunks)">svn_wc_conflict_choose_theirs_conflict</a>, <span class="comment">/**&lt; incoming (for conflicted hunks) */</span>
<a name="l01995"></a><a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431a16c70981a4cfba8460e21d4b9052b057">01995</a>   <a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431a16c70981a4cfba8460e21d4b9052b057" title="own (for conflicted hunks)">svn_wc_conflict_choose_mine_conflict</a>,   <span class="comment">/**&lt; own (for conflicted hunks) */</span>
<a name="l01996"></a><a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431ab3663bb754e92e589f1ad77149b54765">01996</a>   <a class="code" href="group__svn__wc__conflict.html#gga040e000024033dd2721a4ddce5561431ab3663bb754e92e589f1ad77149b54765" title="merged version">svn_wc_conflict_choose_merged</a>           <span class="comment">/**&lt; merged version */</span>
<a name="l01997"></a>01997 
<a name="l01998"></a>01998 } <a class="code" href="group__svn__wc__conflict.html#ga040e000024033dd2721a4ddce5561431" title="The way in which the conflict callback chooses a course of action.">svn_wc_conflict_choice_t</a>;
<a name="l01999"></a>01999 
<a name="l02000"></a>02000 <span class="comment"></span>
<a name="l02001"></a>02001 <span class="comment">/** The final result returned by #svn_wc_conflict_resolver_func_t.</span>
<a name="l02002"></a>02002 <span class="comment"> *</span>
<a name="l02003"></a>02003 <span class="comment"> * @note Fields may be added to the end of this structure in future</span>
<a name="l02004"></a>02004 <span class="comment"> * versions.  Therefore, to preserve binary compatibility, users</span>
<a name="l02005"></a>02005 <span class="comment"> * should not directly allocate structures of this type.  Instead,</span>
<a name="l02006"></a>02006 <span class="comment"> * construct this structure using svn_wc_create_conflict_result()</span>
<a name="l02007"></a>02007 <span class="comment"> * below.</span>
<a name="l02008"></a>02008 <span class="comment"> *</span>
<a name="l02009"></a>02009 <span class="comment"> * @since New in 1.5.</span>
<a name="l02010"></a>02010 <span class="comment"> */</span>
<a name="l02011"></a><a class="code" href="structsvn__wc__conflict__result__t.html">02011</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__conflict__result__t.html" title="The final result returned by svn_wc_conflict_resolver_func_t.">svn_wc_conflict_result_t</a>
<a name="l02012"></a>02012 {<span class="comment"></span>
<a name="l02013"></a>02013 <span class="comment">  /** A choice to either delay the conflict resolution or select a</span>
<a name="l02014"></a>02014 <span class="comment">      particular file to resolve the conflict. */</span>
<a name="l02015"></a><a class="code" href="structsvn__wc__conflict__result__t.html#ac8c5540d045a55a5cfe810f6130069fb">02015</a>   <a class="code" href="group__svn__wc__conflict.html#ga040e000024033dd2721a4ddce5561431" title="The way in which the conflict callback chooses a course of action.">svn_wc_conflict_choice_t</a> <a class="code" href="structsvn__wc__conflict__result__t.html#ac8c5540d045a55a5cfe810f6130069fb" title="A choice to either delay the conflict resolution or select a particular file to resolve the conflict...">choice</a>;
<a name="l02016"></a>02016 <span class="comment"></span>
<a name="l02017"></a>02017 <span class="comment">  /** If not NULL, this is a path to a file which contains the client&#39;s</span>
<a name="l02018"></a>02018 <span class="comment">      (or more likely, the user&#39;s) merging of the three values in</span>
<a name="l02019"></a>02019 <span class="comment">      conflict.  libsvn_wc accepts this file if (and only if) @c choice</span>
<a name="l02020"></a>02020 <span class="comment">      is set to #svn_wc_conflict_choose_merged.*/</span>
<a name="l02021"></a><a class="code" href="structsvn__wc__conflict__result__t.html#a836d2e528e75e29bc5f952b78094fbcf">02021</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__conflict__result__t.html#a836d2e528e75e29bc5f952b78094fbcf" title="If not NULL, this is a path to a file which contains the client&#39;s (or more likely, the user&#39;s) merging of the three values in conflict.">merged_file</a>;
<a name="l02022"></a>02022 <span class="comment"></span>
<a name="l02023"></a>02023 <span class="comment">  /** If true, save a backup copy of merged_file (or the original</span>
<a name="l02024"></a>02024 <span class="comment">      merged_file from the conflict description, if merged_file is</span>
<a name="l02025"></a>02025 <span class="comment">      NULL) in the user&#39;s working copy. */</span>
<a name="l02026"></a><a class="code" href="structsvn__wc__conflict__result__t.html#a82892346c7361cc0c67799c853b240b5">02026</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__conflict__result__t.html#a82892346c7361cc0c67799c853b240b5" title="If true, save a backup copy of merged_file (or the original merged_file from the conflict description...">save_merged</a>;
<a name="l02027"></a>02027 
<a name="l02028"></a>02028 } <a class="code" href="group__svn__wc__conflict.html#gaffde3aec234c1d62160761f08a2686cb" title="The final result returned by svn_wc_conflict_resolver_func_t.">svn_wc_conflict_result_t</a>;
<a name="l02029"></a>02029 
<a name="l02030"></a>02030 <span class="comment"></span>
<a name="l02031"></a>02031 <span class="comment">/**</span>
<a name="l02032"></a>02032 <span class="comment"> * Allocate an #svn_wc_conflict_result_t structure in @a pool,</span>
<a name="l02033"></a>02033 <span class="comment"> * initialize and return it.</span>
<a name="l02034"></a>02034 <span class="comment"> *</span>
<a name="l02035"></a>02035 <span class="comment"> * Set the @c choice field of the structure to @a choice, and @c</span>
<a name="l02036"></a>02036 <span class="comment"> * merged_file to @a merged_file.  Set all other fields to their @c</span>
<a name="l02037"></a>02037 <span class="comment"> * _unknown, @c NULL or invalid value, respectively. Make only a shallow</span>
<a name="l02038"></a>02038 <span class="comment"> * copy of the pointer argument @a merged_file.</span>
<a name="l02039"></a>02039 <span class="comment"> *</span>
<a name="l02040"></a>02040 <span class="comment"> * @since New in 1.5.</span>
<a name="l02041"></a>02041 <span class="comment"> */</span>
<a name="l02042"></a>02042 <a class="code" href="structsvn__wc__conflict__result__t.html" title="The final result returned by svn_wc_conflict_resolver_func_t.">svn_wc_conflict_result_t</a> *
<a name="l02043"></a>02043 <a class="code" href="group__svn__wc__conflict.html#ga704f013e1e358524bea8339baa344139" title="Allocate an svn_wc_conflict_result_t structure in pool, initialize and return it.">svn_wc_create_conflict_result</a>(<a class="code" href="group__svn__wc__conflict.html#ga040e000024033dd2721a4ddce5561431" title="The way in which the conflict callback chooses a course of action.">svn_wc_conflict_choice_t</a> choice,
<a name="l02044"></a>02044                               <span class="keyword">const</span> <span class="keywordtype">char</span> *merged_file,
<a name="l02045"></a>02045                               apr_pool_t *pool);
<a name="l02046"></a>02046 
<a name="l02047"></a>02047 <span class="comment"></span>
<a name="l02048"></a>02048 <span class="comment">/** A callback used in merge, update and switch for resolving conflicts</span>
<a name="l02049"></a>02049 <span class="comment"> * during the application of a tree delta to a working copy.</span>
<a name="l02050"></a>02050 <span class="comment"> *</span>
<a name="l02051"></a>02051 <span class="comment"> * @a description describes the exact nature of the conflict, and</span>
<a name="l02052"></a>02052 <span class="comment"> * provides information to help resolve it.  @a baton is a closure</span>
<a name="l02053"></a>02053 <span class="comment"> * object; it should be provided by the implementation, and passed by</span>
<a name="l02054"></a>02054 <span class="comment"> * the caller.  When finished, the callback signals its resolution by</span>
<a name="l02055"></a>02055 <span class="comment"> * returning a structure in @a *result, which should be allocated in</span>
<a name="l02056"></a>02056 <span class="comment"> * @a result_pool.  (See #svn_wc_conflict_result_t.)  @a scratch_pool</span>
<a name="l02057"></a>02057 <span class="comment"> * should be used for any temporary allocations.</span>
<a name="l02058"></a>02058 <span class="comment"> *</span>
<a name="l02059"></a>02059 <span class="comment"> * The values #svn_wc_conflict_choose_mine_conflict and</span>
<a name="l02060"></a>02060 <span class="comment"> * #svn_wc_conflict_choose_theirs_conflict are not legal for conflicts</span>
<a name="l02061"></a>02061 <span class="comment"> * in binary files or properties.</span>
<a name="l02062"></a>02062 <span class="comment"> *</span>
<a name="l02063"></a>02063 <span class="comment"> * Implementations of this callback are free to present the conflict</span>
<a name="l02064"></a>02064 <span class="comment"> * using any user interface.  This may include simple contextual</span>
<a name="l02065"></a>02065 <span class="comment"> * conflicts in a file&#39;s text or properties, or more complex</span>
<a name="l02066"></a>02066 <span class="comment"> * &#39;tree&#39;-based conflicts related to obstructed additions, deletions,</span>
<a name="l02067"></a>02067 <span class="comment"> * and edits.  The callback implementation is free to decide which</span>
<a name="l02068"></a>02068 <span class="comment"> * sorts of conflicts to handle; it&#39;s also free to decide which types</span>
<a name="l02069"></a>02069 <span class="comment"> * of conflicts are automatically resolvable and which require user</span>
<a name="l02070"></a>02070 <span class="comment"> * interaction.</span>
<a name="l02071"></a>02071 <span class="comment"> *</span>
<a name="l02072"></a>02072 <span class="comment"> * @since New in 1.7.</span>
<a name="l02073"></a>02073 <span class="comment"> */</span>
<a name="l02074"></a><a class="code" href="group__svn__wc__conflict.html#gaaf65c206c4bb05353897170ad4453656">02074</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_conflict_resolver_func2_t)(
<a name="l02075"></a>02075   <a class="code" href="structsvn__wc__conflict__result__t.html" title="The final result returned by svn_wc_conflict_resolver_func_t.">svn_wc_conflict_result_t</a> **result,
<a name="l02076"></a>02076   <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__description2__t.html" title="A struct that describes a conflict that has occurred in the working copy.">svn_wc_conflict_description2_t</a> *description,
<a name="l02077"></a>02077   <span class="keywordtype">void</span> *baton,
<a name="l02078"></a>02078   apr_pool_t *result_pool,
<a name="l02079"></a>02079   apr_pool_t *scratch_pool);
<a name="l02080"></a>02080 
<a name="l02081"></a>02081 <span class="comment"></span>
<a name="l02082"></a>02082 <span class="comment">/** Similar to #svn_wc_conflict_resolver_func2_t, but using</span>
<a name="l02083"></a>02083 <span class="comment"> * #svn_wc_conflict_description_t instead of</span>
<a name="l02084"></a>02084 <span class="comment"> * #svn_wc_conflict_description2_t</span>
<a name="l02085"></a>02085 <span class="comment"> *</span>
<a name="l02086"></a>02086 <span class="comment"> * @since New in 1.5.</span>
<a name="l02087"></a>02087 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02088"></a>02088 <span class="comment"> */</span>
<a name="l02089"></a><a class="code" href="group__svn__wc__conflict.html#gaad913ce66a4c5efdd82397da73e6a21d">02089</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_conflict_resolver_func_t)(
<a name="l02090"></a>02090   <a class="code" href="structsvn__wc__conflict__result__t.html" title="The final result returned by svn_wc_conflict_resolver_func_t.">svn_wc_conflict_result_t</a> **result,
<a name="l02091"></a>02091   <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__description__t.html" title="Similar to svn_wc_conflict_description2_t, but with relative paths and adm_access batons...">svn_wc_conflict_description_t</a> *description,
<a name="l02092"></a>02092   <span class="keywordtype">void</span> *baton,
<a name="l02093"></a>02093   apr_pool_t *pool);
<a name="l02094"></a>02094 <span class="comment"></span>
<a name="l02095"></a>02095 <span class="comment">/** @} */</span>
<a name="l02096"></a>02096 
<a name="l02097"></a>02097 
<a name="l02098"></a>02098 <span class="comment"></span>
<a name="l02099"></a>02099 <span class="comment">/**</span>
<a name="l02100"></a>02100 <span class="comment"> * A callback vtable invoked by our diff-editors, as they receive diffs</span>
<a name="l02101"></a>02101 <span class="comment"> * from the server. &#39;svn diff&#39; and &#39;svn merge&#39; implement their own versions</span>
<a name="l02102"></a>02102 <span class="comment"> * of this vtable.</span>
<a name="l02103"></a>02103 <span class="comment"> *</span>
<a name="l02104"></a>02104 <span class="comment"> * Common parameters:</span>
<a name="l02105"></a>02105 <span class="comment"> *</span>
<a name="l02106"></a>02106 <span class="comment"> * If @a state is non-NULL, set @a *state to the state of the item</span>
<a name="l02107"></a>02107 <span class="comment"> * after the operation has been performed.  (In practice, this is only</span>
<a name="l02108"></a>02108 <span class="comment"> * useful with merge, not diff; diff callbacks will probably set</span>
<a name="l02109"></a>02109 <span class="comment"> * @a *state to #svn_wc_notify_state_unknown, since they do not change</span>
<a name="l02110"></a>02110 <span class="comment"> * the state and therefore do not bother to know the state after the</span>
<a name="l02111"></a>02111 <span class="comment"> * operation.)  By default, @a state refers to the item&#39;s content</span>
<a name="l02112"></a>02112 <span class="comment"> * state.  Functions concerned with property state have separate</span>
<a name="l02113"></a>02113 <span class="comment"> * @a contentstate and @a propstate arguments.</span>
<a name="l02114"></a>02114 <span class="comment"> *</span>
<a name="l02115"></a>02115 <span class="comment"> * If @a tree_conflicted is non-NULL, set @a *tree_conflicted to true if</span>
<a name="l02116"></a>02116 <span class="comment"> * this operation caused a tree conflict, else to false. (Like with @a</span>
<a name="l02117"></a>02117 <span class="comment"> * state, this is only useful with merge, not diff; diff callbacks</span>
<a name="l02118"></a>02118 <span class="comment"> * should set this to false.)</span>
<a name="l02119"></a>02119 <span class="comment"> *</span>
<a name="l02120"></a>02120 <span class="comment"> * @since New in 1.7.</span>
<a name="l02121"></a>02121 <span class="comment"> */</span>
<a name="l02122"></a><a class="code" href="structsvn__wc__diff__callbacks4__t.html">02122</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__diff__callbacks4__t.html" title="A callback vtable invoked by our diff-editors, as they receive diffs from the server.">svn_wc_diff_callbacks4_t</a>
<a name="l02123"></a>02123 {<span class="comment"></span>
<a name="l02124"></a>02124 <span class="comment">  /**</span>
<a name="l02125"></a>02125 <span class="comment">   * This function is called before @a file_changed to allow callbacks to</span>
<a name="l02126"></a>02126 <span class="comment">   * skip the most expensive processing of retrieving the file data.</span>
<a name="l02127"></a>02127 <span class="comment">   *</span>
<a name="l02128"></a>02128 <span class="comment">   */</span>
<a name="l02129"></a><a class="code" href="structsvn__wc__diff__callbacks4__t.html#a4f77c94c56d2b1381a9137a48e3f8ce1">02129</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_opened)(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02130"></a>02130                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *skip,
<a name="l02131"></a>02131                               <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02132"></a>02132                               <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev,
<a name="l02133"></a>02133                               <span class="keywordtype">void</span> *diff_baton,
<a name="l02134"></a>02134                               apr_pool_t *scratch_pool);
<a name="l02135"></a>02135 <span class="comment"></span>
<a name="l02136"></a>02136 <span class="comment">  /**</span>
<a name="l02137"></a>02137 <span class="comment">   * A file @a path has changed.  If @a tmpfile2 is non-NULL, the</span>
<a name="l02138"></a>02138 <span class="comment">   * contents have changed and those changes can be seen by comparing</span>
<a name="l02139"></a>02139 <span class="comment">   * @a tmpfile1 and @a tmpfile2, which represent @a rev1 and @a rev2 of</span>
<a name="l02140"></a>02140 <span class="comment">   * the file, respectively.</span>
<a name="l02141"></a>02141 <span class="comment">   *</span>
<a name="l02142"></a>02142 <span class="comment">   * If known, the @c svn:mime-type value of each file is passed into</span>
<a name="l02143"></a>02143 <span class="comment">   * @a mimetype1 and @a mimetype2;  either or both of the values can</span>
<a name="l02144"></a>02144 <span class="comment">   * be NULL.  The implementor can use this information to decide if</span>
<a name="l02145"></a>02145 <span class="comment">   * (or how) to generate differences.</span>
<a name="l02146"></a>02146 <span class="comment">   *</span>
<a name="l02147"></a>02147 <span class="comment">   * @a propchanges is an array of (#svn_prop_t) structures. If it contains</span>
<a name="l02148"></a>02148 <span class="comment">   * any elements, the original list of properties is provided in</span>
<a name="l02149"></a>02149 <span class="comment">   * @a originalprops, which is a hash of #svn_string_t values, keyed on the</span>
<a name="l02150"></a>02150 <span class="comment">   * property name.</span>
<a name="l02151"></a>02151 <span class="comment">   *</span>
<a name="l02152"></a>02152 <span class="comment">   */</span>
<a name="l02153"></a><a class="code" href="structsvn__wc__diff__callbacks4__t.html#a635e9c92648d14ef0f11c4b74aec0f8a">02153</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_changed)(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *contentstate,
<a name="l02154"></a>02154                                <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *propstate,
<a name="l02155"></a>02155                                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02156"></a>02156                                <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02157"></a>02157                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02158"></a>02158                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02159"></a>02159                                <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev1,
<a name="l02160"></a>02160                                <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev2,
<a name="l02161"></a>02161                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02162"></a>02162                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02163"></a>02163                                <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l02164"></a>02164                                apr_hash_t *originalprops,
<a name="l02165"></a>02165                                <span class="keywordtype">void</span> *diff_baton,
<a name="l02166"></a>02166                                apr_pool_t *scratch_pool);
<a name="l02167"></a>02167 <span class="comment"></span>
<a name="l02168"></a>02168 <span class="comment">  /**</span>
<a name="l02169"></a>02169 <span class="comment">   * A file @a path was added.  The contents can be seen by comparing</span>
<a name="l02170"></a>02170 <span class="comment">   * @a tmpfile1 and @a tmpfile2, which represent @a rev1 and @a rev2</span>
<a name="l02171"></a>02171 <span class="comment">   * of the file, respectively.  (If either file is empty, the rev</span>
<a name="l02172"></a>02172 <span class="comment">   * will be 0.)</span>
<a name="l02173"></a>02173 <span class="comment">   *</span>
<a name="l02174"></a>02174 <span class="comment">   * If known, the @c svn:mime-type value of each file is passed into</span>
<a name="l02175"></a>02175 <span class="comment">   * @a mimetype1 and @a mimetype2;  either or both of the values can</span>
<a name="l02176"></a>02176 <span class="comment">   * be NULL.  The implementor can use this information to decide if</span>
<a name="l02177"></a>02177 <span class="comment">   * (or how) to generate differences.</span>
<a name="l02178"></a>02178 <span class="comment">   *</span>
<a name="l02179"></a>02179 <span class="comment">   * @a propchanges is an array of (#svn_prop_t) structures.  If it contains</span>
<a name="l02180"></a>02180 <span class="comment">   * any elements, the original list of properties is provided in</span>
<a name="l02181"></a>02181 <span class="comment">   * @a originalprops, which is a hash of #svn_string_t values, keyed on the</span>
<a name="l02182"></a>02182 <span class="comment">   * property name.</span>
<a name="l02183"></a>02183 <span class="comment">   * If @a copyfrom_path is non-@c NULL, this add has history (i.e., is a</span>
<a name="l02184"></a>02184 <span class="comment">   * copy), and the origin of the copy may be recorded as</span>
<a name="l02185"></a>02185 <span class="comment">   * @a copyfrom_path under @a copyfrom_revision.</span>
<a name="l02186"></a>02186 <span class="comment">   */</span>
<a name="l02187"></a><a class="code" href="structsvn__wc__diff__callbacks4__t.html#a306a3a4be90279169223d97faa34cfee">02187</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_added)(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *contentstate,
<a name="l02188"></a>02188                              <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *propstate,
<a name="l02189"></a>02189                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02190"></a>02190                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02191"></a>02191                              <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02192"></a>02192                              <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02193"></a>02193                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev1,
<a name="l02194"></a>02194                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev2,
<a name="l02195"></a>02195                              <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02196"></a>02196                              <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02197"></a>02197                              <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_path,
<a name="l02198"></a>02198                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_revision,
<a name="l02199"></a>02199                              <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l02200"></a>02200                              apr_hash_t *originalprops,
<a name="l02201"></a>02201                              <span class="keywordtype">void</span> *diff_baton,
<a name="l02202"></a>02202                              apr_pool_t *scratch_pool);
<a name="l02203"></a>02203 <span class="comment"></span>
<a name="l02204"></a>02204 <span class="comment">  /**</span>
<a name="l02205"></a>02205 <span class="comment">   * A file @a path was deleted.  The [loss of] contents can be seen by</span>
<a name="l02206"></a>02206 <span class="comment">   * comparing @a tmpfile1 and @a tmpfile2.  @a originalprops provides</span>
<a name="l02207"></a>02207 <span class="comment">   * the properties of the file.</span>
<a name="l02208"></a>02208 <span class="comment">   * ### Some existing callers include WC &quot;entry props&quot; in @a originalprops.</span>
<a name="l02209"></a>02209 <span class="comment">   *</span>
<a name="l02210"></a>02210 <span class="comment">   * If known, the @c svn:mime-type value of each file is passed into</span>
<a name="l02211"></a>02211 <span class="comment">   * @a mimetype1 and @a mimetype2;  either or both of the values can</span>
<a name="l02212"></a>02212 <span class="comment">   * be NULL.  The implementor can use this information to decide if</span>
<a name="l02213"></a>02213 <span class="comment">   * (or how) to generate differences.</span>
<a name="l02214"></a>02214 <span class="comment">   */</span>
<a name="l02215"></a><a class="code" href="structsvn__wc__diff__callbacks4__t.html#aef1ffc0e5257fe56682a20533756f910">02215</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_deleted)(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02216"></a>02216                                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02217"></a>02217                                <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02218"></a>02218                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02219"></a>02219                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02220"></a>02220                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02221"></a>02221                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02222"></a>02222                                apr_hash_t *originalprops,
<a name="l02223"></a>02223                                <span class="keywordtype">void</span> *diff_baton,
<a name="l02224"></a>02224                                apr_pool_t *scratch_pool);
<a name="l02225"></a>02225 <span class="comment"></span>
<a name="l02226"></a>02226 <span class="comment">  /**</span>
<a name="l02227"></a>02227 <span class="comment">   * A directory @a path was deleted.</span>
<a name="l02228"></a>02228 <span class="comment">   */</span>
<a name="l02229"></a><a class="code" href="structsvn__wc__diff__callbacks4__t.html#a25789a206002fe7598e654f637bc224e">02229</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_deleted)(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02230"></a>02230                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02231"></a>02231                               <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02232"></a>02232                               <span class="keywordtype">void</span> *diff_baton,
<a name="l02233"></a>02233                               apr_pool_t *scratch_pool);<span class="comment"></span>
<a name="l02234"></a>02234 <span class="comment">  /**</span>
<a name="l02235"></a>02235 <span class="comment">   * A directory @a path has been opened.  @a rev is the revision that the</span>
<a name="l02236"></a>02236 <span class="comment">   * directory came from.</span>
<a name="l02237"></a>02237 <span class="comment">   *</span>
<a name="l02238"></a>02238 <span class="comment">   * This function is called for any existing directory @a path before any</span>
<a name="l02239"></a>02239 <span class="comment">   * of the callbacks are called for a child of @a path.</span>
<a name="l02240"></a>02240 <span class="comment">   *</span>
<a name="l02241"></a>02241 <span class="comment">   * If the callback returns @c TRUE in @a *skip_children, children</span>
<a name="l02242"></a>02242 <span class="comment">   * of this directory will be skipped.</span>
<a name="l02243"></a>02243 <span class="comment">   */</span>
<a name="l02244"></a><a class="code" href="structsvn__wc__diff__callbacks4__t.html#adc66c1acd87f3f6fc75c7ebbf7794ea9">02244</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_opened)(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02245"></a>02245                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *skip,
<a name="l02246"></a>02246                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *skip_children,
<a name="l02247"></a>02247                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02248"></a>02248                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev,
<a name="l02249"></a>02249                              <span class="keywordtype">void</span> *diff_baton,
<a name="l02250"></a>02250                              apr_pool_t *scratch_pool);
<a name="l02251"></a>02251 <span class="comment"></span>
<a name="l02252"></a>02252 <span class="comment">  /**</span>
<a name="l02253"></a>02253 <span class="comment">   * A directory @a path was added.  @a rev is the revision that the</span>
<a name="l02254"></a>02254 <span class="comment">   * directory came from.</span>
<a name="l02255"></a>02255 <span class="comment">   *</span>
<a name="l02256"></a>02256 <span class="comment">   * This function is called for any new directory @a path before any</span>
<a name="l02257"></a>02257 <span class="comment">   * of the callbacks are called for a child of @a path.</span>
<a name="l02258"></a>02258 <span class="comment">   *</span>
<a name="l02259"></a>02259 <span class="comment">   * If @a copyfrom_path is non-@c NULL, this add has history (i.e., is a</span>
<a name="l02260"></a>02260 <span class="comment">   * copy), and the origin of the copy may be recorded as</span>
<a name="l02261"></a>02261 <span class="comment">   * @a copyfrom_path under @a copyfrom_revision.</span>
<a name="l02262"></a>02262 <span class="comment">   */</span>
<a name="l02263"></a><a class="code" href="structsvn__wc__diff__callbacks4__t.html#aa1a4a597dcc29dd85cca3a7578c33ef7">02263</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_added)(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02264"></a>02264                             <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02265"></a>02265                             <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *skip,
<a name="l02266"></a>02266                             <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *skip_children,
<a name="l02267"></a>02267                             <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02268"></a>02268                             <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev,
<a name="l02269"></a>02269                             <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_path,
<a name="l02270"></a>02270                             <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_revision,
<a name="l02271"></a>02271                             <span class="keywordtype">void</span> *diff_baton,
<a name="l02272"></a>02272                             apr_pool_t *scratch_pool);
<a name="l02273"></a>02273 <span class="comment"></span>
<a name="l02274"></a>02274 <span class="comment">  /**</span>
<a name="l02275"></a>02275 <span class="comment">   * A list of property changes (@a propchanges) was applied to the</span>
<a name="l02276"></a>02276 <span class="comment">   * directory @a path.</span>
<a name="l02277"></a>02277 <span class="comment">   *</span>
<a name="l02278"></a>02278 <span class="comment">   * The array is a list of (#svn_prop_t) structures.</span>
<a name="l02279"></a>02279 <span class="comment">   *</span>
<a name="l02280"></a>02280 <span class="comment">   * @a dir_was_added is set to #TRUE if the directory was added, and</span>
<a name="l02281"></a>02281 <span class="comment">   * to #FALSE if the directory pre-existed.</span>
<a name="l02282"></a>02282 <span class="comment">   */</span>
<a name="l02283"></a><a class="code" href="structsvn__wc__diff__callbacks4__t.html#a904859cfeb0215a427d74c1b13b8f264">02283</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_props_changed)(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *propstate,
<a name="l02284"></a>02284                                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02285"></a>02285                                     <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02286"></a>02286                                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dir_was_added,
<a name="l02287"></a>02287                                     <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l02288"></a>02288                                     apr_hash_t *original_props,
<a name="l02289"></a>02289                                     <span class="keywordtype">void</span> *diff_baton,
<a name="l02290"></a>02290                                     apr_pool_t *scratch_pool);
<a name="l02291"></a>02291 <span class="comment"></span>
<a name="l02292"></a>02292 <span class="comment">  /**</span>
<a name="l02293"></a>02293 <span class="comment">   * A directory @a path which has been opened with @a dir_opened or @a</span>
<a name="l02294"></a>02294 <span class="comment">   * dir_added has been closed.</span>
<a name="l02295"></a>02295 <span class="comment">   *</span>
<a name="l02296"></a>02296 <span class="comment">   * @a dir_was_added is set to #TRUE if the directory was added, and</span>
<a name="l02297"></a>02297 <span class="comment">   * to #FALSE if the directory pre-existed.</span>
<a name="l02298"></a>02298 <span class="comment">   */</span>
<a name="l02299"></a><a class="code" href="structsvn__wc__diff__callbacks4__t.html#a87a9673ccda6d76b8d701e41868d90d4">02299</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_closed)(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *contentstate,
<a name="l02300"></a>02300                              <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *propstate,
<a name="l02301"></a>02301                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02302"></a>02302                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02303"></a>02303                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dir_was_added,
<a name="l02304"></a>02304                              <span class="keywordtype">void</span> *diff_baton,
<a name="l02305"></a>02305                              apr_pool_t *scratch_pool);
<a name="l02306"></a>02306 
<a name="l02307"></a>02307 } <a class="code" href="group__svn__wc.html#ga12cc0b7a4774fa997dc40e80b646c2a3" title="A callback vtable invoked by our diff-editors, as they receive diffs from the server.">svn_wc_diff_callbacks4_t</a>;
<a name="l02308"></a>02308 
<a name="l02309"></a>02309 <span class="comment"></span>
<a name="l02310"></a>02310 <span class="comment">/**</span>
<a name="l02311"></a>02311 <span class="comment"> * Similar to #svn_wc_diff_callbacks4_t, but without @a copyfrom_path and</span>
<a name="l02312"></a>02312 <span class="comment"> * @a copyfrom_revision arguments to @c file_added and @c dir_added functions.</span>
<a name="l02313"></a>02313 <span class="comment"> *</span>
<a name="l02314"></a>02314 <span class="comment"> * @since New in 1.6.</span>
<a name="l02315"></a>02315 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02316"></a>02316 <span class="comment"> */</span>
<a name="l02317"></a><a class="code" href="structsvn__wc__diff__callbacks3__t.html">02317</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__diff__callbacks3__t.html" title="Similar to svn_wc_diff_callbacks4_t, but without copyfrom_path and copyfrom_revision arguments to fil...">svn_wc_diff_callbacks3_t</a>
<a name="l02318"></a>02318 {<span class="comment"></span>
<a name="l02319"></a>02319 <span class="comment">  /** The same as #svn_wc_diff_callbacks4_t.file_changed. */</span>
<a name="l02320"></a><a class="code" href="structsvn__wc__diff__callbacks3__t.html#a026d08e663a0004d3db41116e63d879a">02320</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_changed)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02321"></a>02321                                <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *contentstate,
<a name="l02322"></a>02322                                <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *propstate,
<a name="l02323"></a>02323                                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02324"></a>02324                                <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02325"></a>02325                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02326"></a>02326                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02327"></a>02327                                <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev1,
<a name="l02328"></a>02328                                <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev2,
<a name="l02329"></a>02329                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02330"></a>02330                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02331"></a>02331                                <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l02332"></a>02332                                apr_hash_t *originalprops,
<a name="l02333"></a>02333                                <span class="keywordtype">void</span> *diff_baton);
<a name="l02334"></a>02334 <span class="comment"></span>
<a name="l02335"></a>02335 <span class="comment">  /** Similar to #svn_wc_diff_callbacks4_t.file_added but without</span>
<a name="l02336"></a>02336 <span class="comment">   * @a copyfrom_path and @a copyfrom_revision arguments. */</span>
<a name="l02337"></a><a class="code" href="structsvn__wc__diff__callbacks3__t.html#accd3330170953e6a7567b8886a35dd36">02337</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_added)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02338"></a>02338                              <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *contentstate,
<a name="l02339"></a>02339                              <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *propstate,
<a name="l02340"></a>02340                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02341"></a>02341                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02342"></a>02342                              <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02343"></a>02343                              <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02344"></a>02344                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev1,
<a name="l02345"></a>02345                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev2,
<a name="l02346"></a>02346                              <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02347"></a>02347                              <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02348"></a>02348                              <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l02349"></a>02349                              apr_hash_t *originalprops,
<a name="l02350"></a>02350                              <span class="keywordtype">void</span> *diff_baton);
<a name="l02351"></a>02351 <span class="comment"></span>
<a name="l02352"></a>02352 <span class="comment">  /** The same as #svn_wc_diff_callbacks4_t.file_deleted. */</span>
<a name="l02353"></a><a class="code" href="structsvn__wc__diff__callbacks3__t.html#a789aaaff49699c75254b5815bfc19f8e">02353</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_deleted)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02354"></a>02354                                <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02355"></a>02355                                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02356"></a>02356                                <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02357"></a>02357                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02358"></a>02358                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02359"></a>02359                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02360"></a>02360                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02361"></a>02361                                apr_hash_t *originalprops,
<a name="l02362"></a>02362                                <span class="keywordtype">void</span> *diff_baton);
<a name="l02363"></a>02363 <span class="comment"></span>
<a name="l02364"></a>02364 <span class="comment">  /** Similar to #svn_wc_diff_callbacks4_t.dir_added but without</span>
<a name="l02365"></a>02365 <span class="comment">   * @a copyfrom_path and @a copyfrom_revision arguments. */</span>
<a name="l02366"></a><a class="code" href="structsvn__wc__diff__callbacks3__t.html#a7056fd8880db73de480b2a5a003b15ad">02366</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_added)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02367"></a>02367                             <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02368"></a>02368                             <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02369"></a>02369                             <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02370"></a>02370                             <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev,
<a name="l02371"></a>02371                             <span class="keywordtype">void</span> *diff_baton);
<a name="l02372"></a>02372 <span class="comment"></span>
<a name="l02373"></a>02373 <span class="comment">  /** The same as #svn_wc_diff_callbacks4_t.dir_deleted. */</span>
<a name="l02374"></a><a class="code" href="structsvn__wc__diff__callbacks3__t.html#a21d5f736149f7b1fb7659168b86b0737">02374</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_deleted)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02375"></a>02375                               <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02376"></a>02376                               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02377"></a>02377                               <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02378"></a>02378                               <span class="keywordtype">void</span> *diff_baton);
<a name="l02379"></a>02379 <span class="comment"></span>
<a name="l02380"></a>02380 <span class="comment">  /** The same as #svn_wc_diff_callbacks4_t.dir_props_changed. */</span>
<a name="l02381"></a><a class="code" href="structsvn__wc__diff__callbacks3__t.html#a94d249bffa2d42b1f929ea1864a0f248">02381</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_props_changed)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02382"></a>02382                                     <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *propstate,
<a name="l02383"></a>02383                                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02384"></a>02384                                     <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02385"></a>02385                                     <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l02386"></a>02386                                     apr_hash_t *original_props,
<a name="l02387"></a>02387                                     <span class="keywordtype">void</span> *diff_baton);
<a name="l02388"></a>02388 <span class="comment"></span>
<a name="l02389"></a>02389 <span class="comment">  /** The same as #svn_wc_diff_callbacks4_t.dir_opened. */</span>
<a name="l02390"></a><a class="code" href="structsvn__wc__diff__callbacks3__t.html#a74e9e79f7e806051173e29e64cfcc862">02390</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_opened)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02391"></a>02391                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02392"></a>02392                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02393"></a>02393                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev,
<a name="l02394"></a>02394                              <span class="keywordtype">void</span> *diff_baton);
<a name="l02395"></a>02395 <span class="comment"></span>
<a name="l02396"></a>02396 <span class="comment">  /** The same as #svn_wc_diff_callbacks4_t.dir_closed. */</span>
<a name="l02397"></a><a class="code" href="structsvn__wc__diff__callbacks3__t.html#a5ad18191c42153e447ca12efe6d58b32">02397</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_closed)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02398"></a>02398                              <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *contentstate,
<a name="l02399"></a>02399                              <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *propstate,
<a name="l02400"></a>02400                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted,
<a name="l02401"></a>02401                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02402"></a>02402                              <span class="keywordtype">void</span> *diff_baton);
<a name="l02403"></a>02403 
<a name="l02404"></a>02404 } <a class="code" href="group__svn__wc.html#ga3d7e3b30deaa61826c859cd6c436b9c5" title="Similar to svn_wc_diff_callbacks4_t, but without copyfrom_path and copyfrom_revision arguments to fil...">svn_wc_diff_callbacks3_t</a>;
<a name="l02405"></a>02405 <span class="comment"></span>
<a name="l02406"></a>02406 <span class="comment">/**</span>
<a name="l02407"></a>02407 <span class="comment"> * Similar to #svn_wc_diff_callbacks3_t, but without the @c dir_opened</span>
<a name="l02408"></a>02408 <span class="comment"> * and @c dir_closed functions, and without the @a tree_conflicted argument</span>
<a name="l02409"></a>02409 <span class="comment"> * to the functions.</span>
<a name="l02410"></a>02410 <span class="comment"> *</span>
<a name="l02411"></a>02411 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l02412"></a>02412 <span class="comment"> */</span>
<a name="l02413"></a><a class="code" href="structsvn__wc__diff__callbacks2__t.html">02413</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__diff__callbacks2__t.html" title="Similar to svn_wc_diff_callbacks3_t, but without the dir_opened and dir_closed functions, and without the tree_conflicted argument to the functions.">svn_wc_diff_callbacks2_t</a>
<a name="l02414"></a>02414 {<span class="comment"></span>
<a name="l02415"></a>02415 <span class="comment">  /** The same as @c file_changed in #svn_wc_diff_callbacks3_t. */</span>
<a name="l02416"></a><a class="code" href="structsvn__wc__diff__callbacks2__t.html#a1c8b4442f8e93bda308213b9c71835bc">02416</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_changed)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02417"></a>02417                                <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *contentstate,
<a name="l02418"></a>02418                                <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *propstate,
<a name="l02419"></a>02419                                <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02420"></a>02420                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02421"></a>02421                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02422"></a>02422                                <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev1,
<a name="l02423"></a>02423                                <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev2,
<a name="l02424"></a>02424                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02425"></a>02425                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02426"></a>02426                                <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l02427"></a>02427                                apr_hash_t *originalprops,
<a name="l02428"></a>02428                                <span class="keywordtype">void</span> *diff_baton);
<a name="l02429"></a>02429 <span class="comment"></span>
<a name="l02430"></a>02430 <span class="comment">  /** The same as @c file_added in #svn_wc_diff_callbacks3_t. */</span>
<a name="l02431"></a><a class="code" href="structsvn__wc__diff__callbacks2__t.html#a31b11e019708e821210bf449e851eda9">02431</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_added)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02432"></a>02432                              <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *contentstate,
<a name="l02433"></a>02433                              <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *propstate,
<a name="l02434"></a>02434                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02435"></a>02435                              <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02436"></a>02436                              <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02437"></a>02437                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev1,
<a name="l02438"></a>02438                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev2,
<a name="l02439"></a>02439                              <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02440"></a>02440                              <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02441"></a>02441                              <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l02442"></a>02442                              apr_hash_t *originalprops,
<a name="l02443"></a>02443                              <span class="keywordtype">void</span> *diff_baton);
<a name="l02444"></a>02444 <span class="comment"></span>
<a name="l02445"></a>02445 <span class="comment">  /** The same as @c file_deleted in #svn_wc_diff_callbacks3_t. */</span>
<a name="l02446"></a><a class="code" href="structsvn__wc__diff__callbacks2__t.html#a40b29f18bed940a3b2acb54207e49751">02446</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_deleted)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02447"></a>02447                                <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02448"></a>02448                                <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02449"></a>02449                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02450"></a>02450                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02451"></a>02451                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02452"></a>02452                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02453"></a>02453                                apr_hash_t *originalprops,
<a name="l02454"></a>02454                                <span class="keywordtype">void</span> *diff_baton);
<a name="l02455"></a>02455 <span class="comment"></span>
<a name="l02456"></a>02456 <span class="comment">  /** The same as @c dir_added in #svn_wc_diff_callbacks3_t. */</span>
<a name="l02457"></a><a class="code" href="structsvn__wc__diff__callbacks2__t.html#ac481b124880bcded4d9392f74148d795">02457</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_added)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02458"></a>02458                             <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02459"></a>02459                             <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02460"></a>02460                             <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev,
<a name="l02461"></a>02461                             <span class="keywordtype">void</span> *diff_baton);
<a name="l02462"></a>02462 <span class="comment"></span>
<a name="l02463"></a>02463 <span class="comment">  /** The same as @c dir_deleted in #svn_wc_diff_callbacks3_t. */</span>
<a name="l02464"></a><a class="code" href="structsvn__wc__diff__callbacks2__t.html#a3a6f696935bd07e19d9351b47ef36b9c">02464</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_deleted)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02465"></a>02465                               <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02466"></a>02466                               <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02467"></a>02467                               <span class="keywordtype">void</span> *diff_baton);
<a name="l02468"></a>02468 <span class="comment"></span>
<a name="l02469"></a>02469 <span class="comment">  /** The same as @c dir_props_changed in #svn_wc_diff_callbacks3_t. */</span>
<a name="l02470"></a><a class="code" href="structsvn__wc__diff__callbacks2__t.html#adc2125e8d31b0ca6a964df8b99fd656f">02470</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_props_changed)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02471"></a>02471                                     <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02472"></a>02472                                     <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02473"></a>02473                                     <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l02474"></a>02474                                     apr_hash_t *original_props,
<a name="l02475"></a>02475                                     <span class="keywordtype">void</span> *diff_baton);
<a name="l02476"></a>02476 
<a name="l02477"></a>02477 } <a class="code" href="group__svn__wc.html#ga851c3850ab946b02bf83cf12e8d25346" title="Similar to svn_wc_diff_callbacks3_t, but without the dir_opened and dir_closed functions, and without the tree_conflicted argument to the functions.">svn_wc_diff_callbacks2_t</a>;
<a name="l02478"></a>02478 <span class="comment"></span>
<a name="l02479"></a>02479 <span class="comment">/**</span>
<a name="l02480"></a>02480 <span class="comment"> * Similar to #svn_wc_diff_callbacks2_t, but with file additions/content</span>
<a name="l02481"></a>02481 <span class="comment"> * changes and property changes split into different functions.</span>
<a name="l02482"></a>02482 <span class="comment"> *</span>
<a name="l02483"></a>02483 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l02484"></a>02484 <span class="comment"> */</span>
<a name="l02485"></a><a class="code" href="structsvn__wc__diff__callbacks__t.html">02485</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__diff__callbacks__t.html" title="Similar to svn_wc_diff_callbacks2_t, but with file additions/content changes and property changes spl...">svn_wc_diff_callbacks_t</a>
<a name="l02486"></a>02486 {<span class="comment"></span>
<a name="l02487"></a>02487 <span class="comment">  /** Similar to @c file_changed in #svn_wc_diff_callbacks2_t, but without</span>
<a name="l02488"></a>02488 <span class="comment">   * property change information.  @a tmpfile2 is never NULL. @a state applies</span>
<a name="l02489"></a>02489 <span class="comment">   * to the file contents. */</span>
<a name="l02490"></a><a class="code" href="structsvn__wc__diff__callbacks__t.html#a0845c6d49698324ea9e0a80eba557dc2">02490</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_changed)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02491"></a>02491                                <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02492"></a>02492                                <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02493"></a>02493                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02494"></a>02494                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02495"></a>02495                                <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev1,
<a name="l02496"></a>02496                                <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev2,
<a name="l02497"></a>02497                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02498"></a>02498                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02499"></a>02499                                <span class="keywordtype">void</span> *diff_baton);
<a name="l02500"></a>02500 <span class="comment"></span>
<a name="l02501"></a>02501 <span class="comment">  /** Similar to @c file_added in #svn_wc_diff_callbacks2_t, but without</span>
<a name="l02502"></a>02502 <span class="comment">   * property change information.  @a *state applies to the file contents. */</span>
<a name="l02503"></a><a class="code" href="structsvn__wc__diff__callbacks__t.html#a34e26b8575d43f2417b3a4c78bafc00a">02503</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_added)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02504"></a>02504                              <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02505"></a>02505                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02506"></a>02506                              <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02507"></a>02507                              <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02508"></a>02508                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev1,
<a name="l02509"></a>02509                              <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev2,
<a name="l02510"></a>02510                              <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02511"></a>02511                              <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02512"></a>02512                              <span class="keywordtype">void</span> *diff_baton);
<a name="l02513"></a>02513 <span class="comment"></span>
<a name="l02514"></a>02514 <span class="comment">  /** Similar to @c file_deleted in #svn_wc_diff_callbacks2_t, but without</span>
<a name="l02515"></a>02515 <span class="comment">   * the properties. */</span>
<a name="l02516"></a><a class="code" href="structsvn__wc__diff__callbacks__t.html#a04d30c83a299dcfade03f771c38a1273">02516</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*file_deleted)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02517"></a>02517                                <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02518"></a>02518                                <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02519"></a>02519                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile1,
<a name="l02520"></a>02520                                <span class="keyword">const</span> <span class="keywordtype">char</span> *tmpfile2,
<a name="l02521"></a>02521                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype1,
<a name="l02522"></a>02522                                <span class="keyword">const</span> <span class="keywordtype">char</span> *mimetype2,
<a name="l02523"></a>02523                                <span class="keywordtype">void</span> *diff_baton);
<a name="l02524"></a>02524 <span class="comment"></span>
<a name="l02525"></a>02525 <span class="comment">  /** The same as @c dir_added in #svn_wc_diff_callbacks2_t. */</span>
<a name="l02526"></a><a class="code" href="structsvn__wc__diff__callbacks__t.html#a093cae06cb30b54d4ee921007ae4ad57">02526</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_added)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02527"></a>02527                             <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02528"></a>02528                             <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02529"></a>02529                             <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> rev,
<a name="l02530"></a>02530                             <span class="keywordtype">void</span> *diff_baton);
<a name="l02531"></a>02531 <span class="comment"></span>
<a name="l02532"></a>02532 <span class="comment">  /** The same as @c dir_deleted in #svn_wc_diff_callbacks2_t. */</span>
<a name="l02533"></a><a class="code" href="structsvn__wc__diff__callbacks__t.html#a331c01e2f9dabe4eefa3ed66085acc18">02533</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*dir_deleted)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02534"></a>02534                               <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02535"></a>02535                               <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02536"></a>02536                               <span class="keywordtype">void</span> *diff_baton);
<a name="l02537"></a>02537 <span class="comment"></span>
<a name="l02538"></a>02538 <span class="comment">  /** Similar to @c dir_props_changed in #svn_wc_diff_callbacks2_t, but this</span>
<a name="l02539"></a>02539 <span class="comment">   * function is called for files as well as directories. */</span>
<a name="l02540"></a><a class="code" href="structsvn__wc__diff__callbacks__t.html#a6899861bb81be34d08b722583a9bff8a">02540</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*props_changed)(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02541"></a>02541                                 <a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l02542"></a>02542                                 <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02543"></a>02543                                 <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l02544"></a>02544                                 apr_hash_t *original_props,
<a name="l02545"></a>02545                                 <span class="keywordtype">void</span> *diff_baton);
<a name="l02546"></a>02546 
<a name="l02547"></a>02547 } <a class="code" href="group__svn__wc.html#ga3875762dadb2468b7f962a7fec4d1099" title="Similar to svn_wc_diff_callbacks2_t, but with file additions/content changes and property changes spl...">svn_wc_diff_callbacks_t</a>;
<a name="l02548"></a>02548 
<a name="l02549"></a>02549 
<a name="l02550"></a>02550 <span class="comment">/* Asking questions about a working copy. */</span>
<a name="l02551"></a>02551 <span class="comment"></span>
<a name="l02552"></a>02552 <span class="comment">/** Set @a *wc_format to @a local_abspath&#39;s working copy format version</span>
<a name="l02553"></a>02553 <span class="comment"> * number if @a local_abspath is a valid working copy directory, else set it</span>
<a name="l02554"></a>02554 <span class="comment"> * to 0.</span>
<a name="l02555"></a>02555 <span class="comment"> *</span>
<a name="l02556"></a>02556 <span class="comment"> * Return error @c APR_ENOENT if @a local_abspath does not exist at all.</span>
<a name="l02557"></a>02557 <span class="comment"> *</span>
<a name="l02558"></a>02558 <span class="comment"> * @since New in 1.7.</span>
<a name="l02559"></a>02559 <span class="comment"> */</span>
<a name="l02560"></a>02560 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02561"></a>02561 <a class="code" href="group__svn__wc.html#ga98de33bfd6613cba23a78ae51bf093d1" title="Set *wc_format to local_abspath&#39;s working copy format version number if local_abspath is a valid work...">svn_wc_check_wc2</a>(<span class="keywordtype">int</span> *wc_format,
<a name="l02562"></a>02562                  <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l02563"></a>02563                  <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l02564"></a>02564                  apr_pool_t *scratch_pool);
<a name="l02565"></a>02565 <span class="comment"></span>
<a name="l02566"></a>02566 <span class="comment">/**</span>
<a name="l02567"></a>02567 <span class="comment"> * Similar to svn_wc_check_wc2(), but with a relative path and no supplied</span>
<a name="l02568"></a>02568 <span class="comment"> * working copy context.</span>
<a name="l02569"></a>02569 <span class="comment"> *</span>
<a name="l02570"></a>02570 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02571"></a>02571 <span class="comment"> */</span>
<a name="l02572"></a>02572 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02573"></a>02573 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02574"></a>02574 <a class="code" href="group__svn__wc.html#ga2056dc218d262eca9102e0260b6bc0d7" title="Similar to svn_wc_check_wc2(), but with a relative path and no supplied working copy context...">svn_wc_check_wc</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02575"></a>02575                 <span class="keywordtype">int</span> *wc_format,
<a name="l02576"></a>02576                 apr_pool_t *pool);
<a name="l02577"></a>02577 
<a name="l02578"></a>02578 <span class="comment"></span>
<a name="l02579"></a>02579 <span class="comment">/** Set @a *has_binary_prop to @c TRUE iff @a path has been marked</span>
<a name="l02580"></a>02580 <span class="comment"> * with a property indicating that it is non-text (in other words, binary).</span>
<a name="l02581"></a>02581 <span class="comment"> * @a adm_access is an access baton set that contains @a path.</span>
<a name="l02582"></a>02582 <span class="comment"> *</span>
<a name="l02583"></a>02583 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API. As a</span>
<a name="l02584"></a>02584 <span class="comment"> * replacement for this functionality, @see svn_mime_type_is_binary and</span>
<a name="l02585"></a>02585 <span class="comment"> * #SVN_PROP_MIME_TYPE.</span>
<a name="l02586"></a>02586 <span class="comment"> */</span>
<a name="l02587"></a>02587 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02588"></a>02588 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02589"></a>02589 <a class="code" href="group__svn__wc.html#gaccda369a983115a74223f53ec160f2ee" title="Set *has_binary_prop to TRUE iff path has been marked with a property indicating that it is non-text ...">svn_wc_has_binary_prop</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *has_binary_prop,
<a name="l02590"></a>02590                        <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02591"></a>02591                        <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02592"></a>02592                        apr_pool_t *pool);
<a name="l02593"></a>02593 
<a name="l02594"></a>02594 
<a name="l02595"></a>02595 <span class="comment">/* Detecting modification. */</span>
<a name="l02596"></a>02596 <span class="comment"></span>
<a name="l02597"></a>02597 <span class="comment">/** Set @a *modified_p to non-zero if @a local_abspath&#39;s text is modified</span>
<a name="l02598"></a>02598 <span class="comment"> * with regard to the base revision, else set @a *modified_p to zero.</span>
<a name="l02599"></a>02599 <span class="comment"> * @a local_abspath is the absolute path to the file.</span>
<a name="l02600"></a>02600 <span class="comment"> *</span>
<a name="l02601"></a>02601 <span class="comment"> * If @a force_comparison is @c TRUE, this function will not allow</span>
<a name="l02602"></a>02602 <span class="comment"> * early return mechanisms that avoid actual content comparison.</span>
<a name="l02603"></a>02603 <span class="comment"> * Instead, if there is a text base, a full byte-by-byte comparison</span>
<a name="l02604"></a>02604 <span class="comment"> * will be done, and the entry checksum verified as well.  (This means</span>
<a name="l02605"></a>02605 <span class="comment"> * that if the text base is much longer than the working file, every</span>
<a name="l02606"></a>02606 <span class="comment"> * byte of the text base will still be examined.)</span>
<a name="l02607"></a>02607 <span class="comment"> *</span>
<a name="l02608"></a>02608 <span class="comment"> * If @a local_abspath does not exist, consider it unmodified.  If it exists</span>
<a name="l02609"></a>02609 <span class="comment"> * but is not under revision control (not even scheduled for</span>
<a name="l02610"></a>02610 <span class="comment"> * addition), return the error #SVN_ERR_ENTRY_NOT_FOUND.</span>
<a name="l02611"></a>02611 <span class="comment"> *</span>
<a name="l02612"></a>02612 <span class="comment"> * @since New in 1.7.</span>
<a name="l02613"></a>02613 <span class="comment"> */</span>
<a name="l02614"></a>02614 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02615"></a>02615 <a class="code" href="group__svn__wc.html#ga7af34557f97ee9f71aa87eb6587559f4" title="Set *modified_p to non-zero if local_abspath&#39;s text is modified with regard to the base revision...">svn_wc_text_modified_p2</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *modified_p,
<a name="l02616"></a>02616                         <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l02617"></a>02617                         <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l02618"></a>02618                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force_comparison,
<a name="l02619"></a>02619                         apr_pool_t *scratch_pool);
<a name="l02620"></a>02620 <span class="comment"></span>
<a name="l02621"></a>02621 <span class="comment">/** Similar to svn_wc_text_modified_p2(), but with a relative path and</span>
<a name="l02622"></a>02622 <span class="comment"> * adm_access baton?</span>
<a name="l02623"></a>02623 <span class="comment"> *</span>
<a name="l02624"></a>02624 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02625"></a>02625 <span class="comment"> */</span>
<a name="l02626"></a>02626 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02627"></a>02627 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02628"></a>02628 <a class="code" href="group__svn__wc.html#gaf2804bd7bd17bd98989976ff2c62d7a8" title="Similar to svn_wc_text_modified_p2(), but with a relative path and adm_access baton?">svn_wc_text_modified_p</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *modified_p,
<a name="l02629"></a>02629                        <span class="keyword">const</span> <span class="keywordtype">char</span> *filename,
<a name="l02630"></a>02630                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force_comparison,
<a name="l02631"></a>02631                        <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02632"></a>02632                        apr_pool_t *pool);
<a name="l02633"></a>02633 <span class="comment"></span>
<a name="l02634"></a>02634 <span class="comment">/** Set @a *modified_p to non-zero if @a path&#39;s properties are modified</span>
<a name="l02635"></a>02635 <span class="comment"> * with regard to the base revision, else set @a modified_p to zero.</span>
<a name="l02636"></a>02636 <span class="comment"> * @a adm_access must be an access baton for @a path.</span>
<a name="l02637"></a>02637 <span class="comment"> *</span>
<a name="l02638"></a>02638 <span class="comment"> * @since New in 1.7.</span>
<a name="l02639"></a>02639 <span class="comment"> */</span>
<a name="l02640"></a>02640 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02641"></a>02641 <a class="code" href="group__svn__wc.html#ga0b4a29e114c1f337129efb8acb733150" title="Set *modified_p to non-zero if path&#39;s properties are modified with regard to the base revision...">svn_wc_props_modified_p2</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *modified_p,
<a name="l02642"></a>02642                          <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l02643"></a>02643                          <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l02644"></a>02644                          apr_pool_t *scratch_pool);
<a name="l02645"></a>02645 <span class="comment"></span>
<a name="l02646"></a>02646 <span class="comment">/** Similar to svn_wc_props_modified_p2(), but with a relative path and</span>
<a name="l02647"></a>02647 <span class="comment"> * adm_access baton.</span>
<a name="l02648"></a>02648 <span class="comment"> *</span>
<a name="l02649"></a>02649 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02650"></a>02650 <span class="comment"> */</span>
<a name="l02651"></a>02651 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02652"></a>02652 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02653"></a>02653 <a class="code" href="group__svn__wc.html#gac4aaab4da6f4a003371551bd535ac70d" title="Similar to svn_wc_props_modified_p2(), but with a relative path and adm_access baton.">svn_wc_props_modified_p</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *modified_p,
<a name="l02654"></a>02654                         <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02655"></a>02655                         <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02656"></a>02656                         apr_pool_t *pool);
<a name="l02657"></a>02657 
<a name="l02658"></a>02658 <span class="comment"></span>
<a name="l02659"></a>02659 <span class="comment">/**</span>
<a name="l02660"></a>02660 <span class="comment">* @defgroup svn_wc_entries Entries and status (deprecated)</span>
<a name="l02661"></a>02661 <span class="comment"> * @{</span>
<a name="l02662"></a>02662 <span class="comment"> */</span>
<a name="l02663"></a>02663 <span class="comment"></span>
<a name="l02664"></a>02664 <span class="comment">/** The schedule states an entry can be in.</span>
<a name="l02665"></a>02665 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API. */</span>
<a name="l02666"></a><a class="code" href="group__svn__wc__entries.html#ga5b1b7ce549f51d19cb0c0af8d9416ae9">02666</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__entries.html#ga5b1b7ce549f51d19cb0c0af8d9416ae9" title="The schedule states an entry can be in.">svn_wc_schedule_t</a>
<a name="l02667"></a>02667 {<span class="comment"></span>
<a name="l02668"></a>02668 <span class="comment">  /** Nothing special here */</span>
<a name="l02669"></a><a class="code" href="group__svn__wc__entries.html#gga5b1b7ce549f51d19cb0c0af8d9416ae9a186f61c7c1dc42f4868967e33fc7d38e">02669</a>   <a class="code" href="group__svn__wc__entries.html#gga5b1b7ce549f51d19cb0c0af8d9416ae9a186f61c7c1dc42f4868967e33fc7d38e" title="Nothing special here.">svn_wc_schedule_normal</a>,
<a name="l02670"></a>02670 <span class="comment"></span>
<a name="l02671"></a>02671 <span class="comment">  /** Slated for addition */</span>
<a name="l02672"></a><a class="code" href="group__svn__wc__entries.html#gga5b1b7ce549f51d19cb0c0af8d9416ae9a6b46f72ccd45de1260ec6e57263baa1d">02672</a>   <a class="code" href="group__svn__wc__entries.html#gga5b1b7ce549f51d19cb0c0af8d9416ae9a6b46f72ccd45de1260ec6e57263baa1d" title="Slated for addition.">svn_wc_schedule_add</a>,
<a name="l02673"></a>02673 <span class="comment"></span>
<a name="l02674"></a>02674 <span class="comment">  /** Slated for deletion */</span>
<a name="l02675"></a><a class="code" href="group__svn__wc__entries.html#gga5b1b7ce549f51d19cb0c0af8d9416ae9a4b427cc3c5e4364a195395014199cc6c">02675</a>   <a class="code" href="group__svn__wc__entries.html#gga5b1b7ce549f51d19cb0c0af8d9416ae9a4b427cc3c5e4364a195395014199cc6c" title="Slated for deletion.">svn_wc_schedule_delete</a>,
<a name="l02676"></a>02676 <span class="comment"></span>
<a name="l02677"></a>02677 <span class="comment">  /** Slated for replacement (delete + add) */</span>
<a name="l02678"></a><a class="code" href="group__svn__wc__entries.html#gga5b1b7ce549f51d19cb0c0af8d9416ae9a38a8d7229dd3bb80585c3e17dc35619c">02678</a>   <a class="code" href="group__svn__wc__entries.html#gga5b1b7ce549f51d19cb0c0af8d9416ae9a38a8d7229dd3bb80585c3e17dc35619c" title="Slated for replacement (delete + add)">svn_wc_schedule_replace</a>
<a name="l02679"></a>02679 
<a name="l02680"></a>02680 } <a class="code" href="group__svn__wc__entries.html#ga5b1b7ce549f51d19cb0c0af8d9416ae9" title="The schedule states an entry can be in.">svn_wc_schedule_t</a>;
<a name="l02681"></a>02681 
<a name="l02682"></a>02682 <span class="comment"></span>
<a name="l02683"></a>02683 <span class="comment">/**</span>
<a name="l02684"></a>02684 <span class="comment"> * Values for the working_size field in svn_wc_entry_t</span>
<a name="l02685"></a>02685 <span class="comment"> * when it isn&#39;t set to the actual size value of the unchanged</span>
<a name="l02686"></a>02686 <span class="comment"> * working file.</span>
<a name="l02687"></a>02687 <span class="comment"> *</span>
<a name="l02688"></a>02688 <span class="comment"> *  The value of the working size is unknown (hasn&#39;t been</span>
<a name="l02689"></a>02689 <span class="comment"> *  calculated and stored in the past for whatever reason).</span>
<a name="l02690"></a>02690 <span class="comment"> *</span>
<a name="l02691"></a>02691 <span class="comment"> * @since New in 1.5</span>
<a name="l02692"></a>02692 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02693"></a>02693 <span class="comment"> */</span>
<a name="l02694"></a><a class="code" href="group__svn__wc__entries.html#ga5e03b47cd3093ca2eefbf8a3d66e1bb6">02694</a> <span class="preprocessor">#define SVN_WC_ENTRY_WORKING_SIZE_UNKNOWN (-1)</span>
<a name="l02695"></a>02695 <span class="preprocessor"></span><span class="comment"></span>
<a name="l02696"></a>02696 <span class="comment">/** A working copy entry -- that is, revision control information about</span>
<a name="l02697"></a>02697 <span class="comment"> * one versioned entity.</span>
<a name="l02698"></a>02698 <span class="comment"> *</span>
<a name="l02699"></a>02699 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02700"></a>02700 <span class="comment"> */</span>
<a name="l02701"></a>02701 <span class="comment">/* SVN_DEPRECATED */</span>
<a name="l02702"></a><a class="code" href="structsvn__wc__entry__t.html">02702</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__entry__t.html" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a>
<a name="l02703"></a>02703 {
<a name="l02704"></a>02704   <span class="comment">/* IMPORTANT: If you extend this structure, add new fields to the end. */</span>
<a name="l02705"></a>02705 
<a name="l02706"></a>02706   <span class="comment">/* General Attributes */</span>
<a name="l02707"></a>02707 <span class="comment"></span>
<a name="l02708"></a>02708 <span class="comment">  /** entry&#39;s name */</span>
<a name="l02709"></a><a class="code" href="structsvn__wc__entry__t.html#abfebd1c409763c998b649724d18d9a02">02709</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#abfebd1c409763c998b649724d18d9a02" title="entry&#39;s name">name</a>;
<a name="l02710"></a>02710 <span class="comment"></span>
<a name="l02711"></a>02711 <span class="comment">  /** base revision */</span>
<a name="l02712"></a><a class="code" href="structsvn__wc__entry__t.html#a5c73032d6799b9be731ab36f17db7543">02712</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__wc__entry__t.html#a5c73032d6799b9be731ab36f17db7543" title="base revision">revision</a>;
<a name="l02713"></a>02713 <span class="comment"></span>
<a name="l02714"></a>02714 <span class="comment">  /** url in repository */</span>
<a name="l02715"></a><a class="code" href="structsvn__wc__entry__t.html#a0e04f933d63180505c633563155b0f48">02715</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a0e04f933d63180505c633563155b0f48" title="url in repository">url</a>;
<a name="l02716"></a>02716 <span class="comment"></span>
<a name="l02717"></a>02717 <span class="comment">  /** canonical repository URL or NULL if not known */</span>
<a name="l02718"></a><a class="code" href="structsvn__wc__entry__t.html#a0d88e0754e0ff156f8ea4088511f115d">02718</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a0d88e0754e0ff156f8ea4088511f115d" title="canonical repository URL or NULL if not known">repos</a>;
<a name="l02719"></a>02719 <span class="comment"></span>
<a name="l02720"></a>02720 <span class="comment">  /** repository uuid */</span>
<a name="l02721"></a><a class="code" href="structsvn__wc__entry__t.html#a34985b8a7dc1927139ae5be4e7272996">02721</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a34985b8a7dc1927139ae5be4e7272996" title="repository uuid">uuid</a>;
<a name="l02722"></a>02722 <span class="comment"></span>
<a name="l02723"></a>02723 <span class="comment">  /** node kind (file, dir, ...) */</span>
<a name="l02724"></a><a class="code" href="structsvn__wc__entry__t.html#a6c4b928a5431e07cb79b486f829de402">02724</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__wc__entry__t.html#a6c4b928a5431e07cb79b486f829de402" title="node kind (file, dir, ...)">kind</a>;
<a name="l02725"></a>02725 
<a name="l02726"></a>02726   <span class="comment">/* State information */</span>
<a name="l02727"></a>02727 <span class="comment"></span>
<a name="l02728"></a>02728 <span class="comment">  /** scheduling (add, delete, replace ...) */</span>
<a name="l02729"></a><a class="code" href="structsvn__wc__entry__t.html#a156bb4d8b6613cc617cdd395ab682af2">02729</a>   <a class="code" href="group__svn__wc__entries.html#ga5b1b7ce549f51d19cb0c0af8d9416ae9" title="The schedule states an entry can be in.">svn_wc_schedule_t</a> <a class="code" href="structsvn__wc__entry__t.html#a156bb4d8b6613cc617cdd395ab682af2" title="scheduling (add, delete, replace ...)">schedule</a>;
<a name="l02730"></a>02730 <span class="comment"></span>
<a name="l02731"></a>02731 <span class="comment">  /** in a copied state (possibly because the entry is a child of a</span>
<a name="l02732"></a>02732 <span class="comment">   *  path that is #svn_wc_schedule_add or #svn_wc_schedule_replace,</span>
<a name="l02733"></a>02733 <span class="comment">   *  when the entry itself is #svn_wc_schedule_normal).</span>
<a name="l02734"></a>02734 <span class="comment">   *  COPIED is true for nodes under a directory that was copied, but</span>
<a name="l02735"></a>02735 <span class="comment">   *  COPYFROM_URL is null there. They are both set for the root</span>
<a name="l02736"></a>02736 <span class="comment">   *  destination of the copy.</span>
<a name="l02737"></a>02737 <span class="comment">   */</span>
<a name="l02738"></a><a class="code" href="structsvn__wc__entry__t.html#a4f3cdda4873705e6867814025bb95a7a">02738</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__entry__t.html#a4f3cdda4873705e6867814025bb95a7a" title="in a copied state (possibly because the entry is a child of a path that is svn_wc_schedule_add or svn...">copied</a>;
<a name="l02739"></a>02739 <span class="comment"></span>
<a name="l02740"></a>02740 <span class="comment">  /** The directory containing this entry had a versioned child of this</span>
<a name="l02741"></a>02741 <span class="comment">   * name, but this entry represents a different revision or a switched</span>
<a name="l02742"></a>02742 <span class="comment">   * path at which no item exists in the repository. This typically</span>
<a name="l02743"></a>02743 <span class="comment">   * arises from committing or updating to a deletion of this entry</span>
<a name="l02744"></a>02744 <span class="comment">   * without committing or updating the parent directory.</span>
<a name="l02745"></a>02745 <span class="comment">   *</span>
<a name="l02746"></a>02746 <span class="comment">   * The schedule can be &#39;normal&#39; or &#39;add&#39;. */</span>
<a name="l02747"></a><a class="code" href="structsvn__wc__entry__t.html#a4bc8e72ae2e6b2c42771973f0d465148">02747</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__entry__t.html#a4bc8e72ae2e6b2c42771973f0d465148" title="The directory containing this entry had a versioned child of this name, but this entry represents a d...">deleted</a>;
<a name="l02748"></a>02748 <span class="comment"></span>
<a name="l02749"></a>02749 <span class="comment">  /** absent -- we know an entry of this name exists, but that&#39;s all</span>
<a name="l02750"></a>02750 <span class="comment">      (usually this happens because of authz restrictions)  */</span>
<a name="l02751"></a><a class="code" href="structsvn__wc__entry__t.html#aba25f9abc0cc4f1957886751768848f9">02751</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__entry__t.html#aba25f9abc0cc4f1957886751768848f9" title="absent -- we know an entry of this name exists, but that&#39;s all (usually this happens because of authz...">absent</a>;
<a name="l02752"></a>02752 <span class="comment"></span>
<a name="l02753"></a>02753 <span class="comment">  /** for THIS_DIR entry, implies whole entries file is incomplete */</span>
<a name="l02754"></a><a class="code" href="structsvn__wc__entry__t.html#ad8b7dac0683c1542ed46833a9a41d221">02754</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__entry__t.html#ad8b7dac0683c1542ed46833a9a41d221" title="for THIS_DIR entry, implies whole entries file is incomplete">incomplete</a>;
<a name="l02755"></a>02755 <span class="comment"></span>
<a name="l02756"></a>02756 <span class="comment">  /** copyfrom location */</span>
<a name="l02757"></a><a class="code" href="structsvn__wc__entry__t.html#aaed2210de64e2d70edcabe5abe7183fd">02757</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#aaed2210de64e2d70edcabe5abe7183fd" title="copyfrom location">copyfrom_url</a>;
<a name="l02758"></a>02758 <span class="comment"></span>
<a name="l02759"></a>02759 <span class="comment">  /** copyfrom revision */</span>
<a name="l02760"></a><a class="code" href="structsvn__wc__entry__t.html#a0b1d10e4a4b4d70486f069d58ce3eb40">02760</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__wc__entry__t.html#a0b1d10e4a4b4d70486f069d58ce3eb40" title="copyfrom revision">copyfrom_rev</a>;
<a name="l02761"></a>02761 <span class="comment"></span>
<a name="l02762"></a>02762 <span class="comment">  /** old version of conflicted file. A file basename, relative to the</span>
<a name="l02763"></a>02763 <span class="comment">   * user&#39;s directory that the THIS_DIR entry refers to. */</span>
<a name="l02764"></a><a class="code" href="structsvn__wc__entry__t.html#a825c841a79e0809709c3087a59cf6d3f">02764</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a825c841a79e0809709c3087a59cf6d3f" title="old version of conflicted file.">conflict_old</a>;
<a name="l02765"></a>02765 <span class="comment"></span>
<a name="l02766"></a>02766 <span class="comment">  /** new version of conflicted file. A file basename, relative to the</span>
<a name="l02767"></a>02767 <span class="comment">   * user&#39;s directory that the THIS_DIR entry refers to. */</span>
<a name="l02768"></a><a class="code" href="structsvn__wc__entry__t.html#afb0d52abebe4cd8d2c9e4ba02589ee18">02768</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#afb0d52abebe4cd8d2c9e4ba02589ee18" title="new version of conflicted file.">conflict_new</a>;
<a name="l02769"></a>02769 <span class="comment"></span>
<a name="l02770"></a>02770 <span class="comment">  /** working version of conflicted file. A file basename, relative to the</span>
<a name="l02771"></a>02771 <span class="comment">   * user&#39;s directory that the THIS_DIR entry refers to. */</span>
<a name="l02772"></a><a class="code" href="structsvn__wc__entry__t.html#a1cb344d4e4e0c1d137d5dd43dec1b237">02772</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a1cb344d4e4e0c1d137d5dd43dec1b237" title="working version of conflicted file.">conflict_wrk</a>;
<a name="l02773"></a>02773 <span class="comment"></span>
<a name="l02774"></a>02774 <span class="comment">  /** property reject file. A file basename, relative to the user&#39;s</span>
<a name="l02775"></a>02775 <span class="comment">   * directory that the THIS_DIR entry refers to. */</span>
<a name="l02776"></a><a class="code" href="structsvn__wc__entry__t.html#a81a980d38128f7c48f56cd21dee0dff3">02776</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a81a980d38128f7c48f56cd21dee0dff3" title="property reject file.">prejfile</a>;
<a name="l02777"></a>02777 <span class="comment"></span>
<a name="l02778"></a>02778 <span class="comment">  /** last up-to-date time for text contents (0 means no information available)</span>
<a name="l02779"></a>02779 <span class="comment">   */</span>
<a name="l02780"></a><a class="code" href="structsvn__wc__entry__t.html#a46845928f54786b09f8ac139154e9f72">02780</a>   apr_time_t <a class="code" href="structsvn__wc__entry__t.html#a46845928f54786b09f8ac139154e9f72" title="last up-to-date time for text contents (0 means no information available)">text_time</a>;
<a name="l02781"></a>02781 <span class="comment"></span>
<a name="l02782"></a>02782 <span class="comment">  /** last up-to-date time for properties (0 means no information available)</span>
<a name="l02783"></a>02783 <span class="comment">   *</span>
<a name="l02784"></a>02784 <span class="comment">   * @deprecated This value will always be 0 in version 1.4 and later.</span>
<a name="l02785"></a>02785 <span class="comment">   */</span>
<a name="l02786"></a><a class="code" href="structsvn__wc__entry__t.html#a871dfc66a871d6584e0aeb2b7bb92ead">02786</a>   apr_time_t <a class="code" href="structsvn__wc__entry__t.html#a871dfc66a871d6584e0aeb2b7bb92ead" title="last up-to-date time for properties (0 means no information available)">prop_time</a>;
<a name="l02787"></a>02787 <span class="comment"></span>
<a name="l02788"></a>02788 <span class="comment">  /** Hex MD5 checksum for the untranslated text base file,</span>
<a name="l02789"></a>02789 <span class="comment">   * can be @c NULL for backwards compatibility.</span>
<a name="l02790"></a>02790 <span class="comment">   */</span>
<a name="l02791"></a><a class="code" href="structsvn__wc__entry__t.html#af9df11b3cac4064271fb271ae3f57d11">02791</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#af9df11b3cac4064271fb271ae3f57d11" title="Hex MD5 checksum for the untranslated text base file, can be NULL for backwards compatibility.">checksum</a>;
<a name="l02792"></a>02792 
<a name="l02793"></a>02793   <span class="comment">/* &quot;Entry props&quot; */</span>
<a name="l02794"></a>02794 <span class="comment"></span>
<a name="l02795"></a>02795 <span class="comment">  /** last revision this was changed */</span>
<a name="l02796"></a><a class="code" href="structsvn__wc__entry__t.html#af417d4b2ebaff1c82676744d3a3ba262">02796</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__wc__entry__t.html#af417d4b2ebaff1c82676744d3a3ba262" title="last revision this was changed">cmt_rev</a>;
<a name="l02797"></a>02797 <span class="comment"></span>
<a name="l02798"></a>02798 <span class="comment">  /** last date this was changed */</span>
<a name="l02799"></a><a class="code" href="structsvn__wc__entry__t.html#af1f947009f25c6f84e88ee0ecc5f5004">02799</a>   apr_time_t <a class="code" href="structsvn__wc__entry__t.html#af1f947009f25c6f84e88ee0ecc5f5004" title="last date this was changed">cmt_date</a>;
<a name="l02800"></a>02800 <span class="comment"></span>
<a name="l02801"></a>02801 <span class="comment">  /** last commit author of this item */</span>
<a name="l02802"></a><a class="code" href="structsvn__wc__entry__t.html#a4cc9d8652976a93911b6c30451e04e8d">02802</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a4cc9d8652976a93911b6c30451e04e8d" title="last commit author of this item">cmt_author</a>;
<a name="l02803"></a>02803 <span class="comment"></span>
<a name="l02804"></a>02804 <span class="comment">  /** lock token or NULL if path not locked in this WC</span>
<a name="l02805"></a>02805 <span class="comment">   * @since New in 1.2.</span>
<a name="l02806"></a>02806 <span class="comment">   */</span>
<a name="l02807"></a><a class="code" href="structsvn__wc__entry__t.html#aa6cef7901140bef9e35fa8ea08f3f149">02807</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#aa6cef7901140bef9e35fa8ea08f3f149" title="lock token or NULL if path not locked in this WC">lock_token</a>;
<a name="l02808"></a>02808 <span class="comment"></span>
<a name="l02809"></a>02809 <span class="comment">  /** lock owner, or NULL if not locked in this WC</span>
<a name="l02810"></a>02810 <span class="comment">   * @since New in 1.2.</span>
<a name="l02811"></a>02811 <span class="comment">   */</span>
<a name="l02812"></a><a class="code" href="structsvn__wc__entry__t.html#ac3f8349a47d4768c6ed3fc0da85cda62">02812</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#ac3f8349a47d4768c6ed3fc0da85cda62" title="lock owner, or NULL if not locked in this WC">lock_owner</a>;
<a name="l02813"></a>02813 <span class="comment"></span>
<a name="l02814"></a>02814 <span class="comment">  /** lock comment or NULL if not locked in this WC or no comment</span>
<a name="l02815"></a>02815 <span class="comment">   * @since New in 1.2.</span>
<a name="l02816"></a>02816 <span class="comment">   */</span>
<a name="l02817"></a><a class="code" href="structsvn__wc__entry__t.html#a6de8134eaec3c9af89b80429fdbab679">02817</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a6de8134eaec3c9af89b80429fdbab679" title="lock comment or NULL if not locked in this WC or no comment">lock_comment</a>;
<a name="l02818"></a>02818 <span class="comment"></span>
<a name="l02819"></a>02819 <span class="comment">  /** Lock creation date or 0 if not locked in this WC</span>
<a name="l02820"></a>02820 <span class="comment">   * @since New in 1.2.</span>
<a name="l02821"></a>02821 <span class="comment">   */</span>
<a name="l02822"></a><a class="code" href="structsvn__wc__entry__t.html#a8e3ca6fb402f87a48a4fabbccf53c75c">02822</a>   apr_time_t <a class="code" href="structsvn__wc__entry__t.html#a8e3ca6fb402f87a48a4fabbccf53c75c" title="Lock creation date or 0 if not locked in this WC.">lock_creation_date</a>;
<a name="l02823"></a>02823 <span class="comment"></span>
<a name="l02824"></a>02824 <span class="comment">  /** Whether this entry has any working properties.</span>
<a name="l02825"></a>02825 <span class="comment">   * False if this information is not stored in the entry.</span>
<a name="l02826"></a>02826 <span class="comment">   *</span>
<a name="l02827"></a>02827 <span class="comment">   * @since New in 1.4. */</span>
<a name="l02828"></a><a class="code" href="structsvn__wc__entry__t.html#a3f28094ac4583c8ad05df2b07acbb92b">02828</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__entry__t.html#a3f28094ac4583c8ad05df2b07acbb92b" title="Whether this entry has any working properties.">has_props</a>;
<a name="l02829"></a>02829 <span class="comment"></span>
<a name="l02830"></a>02830 <span class="comment">  /** Whether this entry has property modifications.</span>
<a name="l02831"></a>02831 <span class="comment">   *</span>
<a name="l02832"></a>02832 <span class="comment">   * @note For working copies in older formats, this flag is not valid.</span>
<a name="l02833"></a>02833 <span class="comment">   *</span>
<a name="l02834"></a>02834 <span class="comment">   * @see svn_wc_props_modified_p().</span>
<a name="l02835"></a>02835 <span class="comment">   *</span>
<a name="l02836"></a>02836 <span class="comment">   * @since New in 1.4. */</span>
<a name="l02837"></a><a class="code" href="structsvn__wc__entry__t.html#ac806a8e5b75fc6af61f0aea134e83146">02837</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__entry__t.html#ac806a8e5b75fc6af61f0aea134e83146" title="Whether this entry has property modifications.">has_prop_mods</a>;
<a name="l02838"></a>02838 <span class="comment"></span>
<a name="l02839"></a>02839 <span class="comment">  /** A space-separated list of all properties whose presence/absence is cached</span>
<a name="l02840"></a>02840 <span class="comment">   * in this entry.</span>
<a name="l02841"></a>02841 <span class="comment">   *</span>
<a name="l02842"></a>02842 <span class="comment">   * @see @c present_props.</span>
<a name="l02843"></a>02843 <span class="comment">   *</span>
<a name="l02844"></a>02844 <span class="comment">   * @since New in 1.4.</span>
<a name="l02845"></a>02845 <span class="comment">   * @deprecated This value will always be &quot;&quot; in version 1.7 and later. */</span>
<a name="l02846"></a><a class="code" href="structsvn__wc__entry__t.html#a84eb341c6ce0fae9cd8a538f8c4d0ebe">02846</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a84eb341c6ce0fae9cd8a538f8c4d0ebe" title="A space-separated list of all properties whose presence/absence is cached in this entry...">cachable_props</a>;
<a name="l02847"></a>02847 <span class="comment"></span>
<a name="l02848"></a>02848 <span class="comment">  /** Cached property existence for this entry.</span>
<a name="l02849"></a>02849 <span class="comment">   * This is a space-separated list of property names.  If a name exists in</span>
<a name="l02850"></a>02850 <span class="comment">   * @c cachable_props but not in this list, this entry does not have that</span>
<a name="l02851"></a>02851 <span class="comment">   * property.  If a name exists in both lists, the property is present on this</span>
<a name="l02852"></a>02852 <span class="comment">   * entry.</span>
<a name="l02853"></a>02853 <span class="comment">   *</span>
<a name="l02854"></a>02854 <span class="comment">   * @since New in 1.4.</span>
<a name="l02855"></a>02855 <span class="comment">   * @deprecated This value will always be &quot;&quot; in version 1.7 and later. */</span>
<a name="l02856"></a><a class="code" href="structsvn__wc__entry__t.html#ab21e1ad3824501b1275f08efb77cb66e">02856</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#ab21e1ad3824501b1275f08efb77cb66e" title="Cached property existence for this entry.">present_props</a>;
<a name="l02857"></a>02857 <span class="comment"></span>
<a name="l02858"></a>02858 <span class="comment">  /** which changelist this item is part of, or NULL if not part of any.</span>
<a name="l02859"></a>02859 <span class="comment">   * @since New in 1.5.</span>
<a name="l02860"></a>02860 <span class="comment">   */</span>
<a name="l02861"></a><a class="code" href="structsvn__wc__entry__t.html#a377f19072509fdfcf85b781706deb140">02861</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a377f19072509fdfcf85b781706deb140" title="which changelist this item is part of, or NULL if not part of any.">changelist</a>;
<a name="l02862"></a>02862 <span class="comment"></span>
<a name="l02863"></a>02863 <span class="comment">  /** Size of the file after being translated into local</span>
<a name="l02864"></a>02864 <span class="comment">   * representation, or #SVN_WC_ENTRY_WORKING_SIZE_UNKNOWN if</span>
<a name="l02865"></a>02865 <span class="comment">   * unknown.</span>
<a name="l02866"></a>02866 <span class="comment">   *</span>
<a name="l02867"></a>02867 <span class="comment">   * @since New in 1.5.</span>
<a name="l02868"></a>02868 <span class="comment">   */</span>
<a name="l02869"></a><a class="code" href="structsvn__wc__entry__t.html#a25ab6ea3228d960e6c170856a573ee9c">02869</a>   apr_off_t <a class="code" href="structsvn__wc__entry__t.html#a25ab6ea3228d960e6c170856a573ee9c" title="Size of the file after being translated into local representation, or SVN_WC_ENTRY_WORKING_SIZE_UNKNO...">working_size</a>;
<a name="l02870"></a>02870 <span class="comment"></span>
<a name="l02871"></a>02871 <span class="comment">  /** Whether a local copy of this entry should be kept in the working copy</span>
<a name="l02872"></a>02872 <span class="comment">   * after a deletion has been committed,  Only valid for the this-dir entry</span>
<a name="l02873"></a>02873 <span class="comment">   * when it is scheduled for deletion.</span>
<a name="l02874"></a>02874 <span class="comment">   *</span>
<a name="l02875"></a>02875 <span class="comment">   * @since New in 1.5. */</span>
<a name="l02876"></a><a class="code" href="structsvn__wc__entry__t.html#ac6a6b6a25c74907b87bc6346f83f0111">02876</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__entry__t.html#ac6a6b6a25c74907b87bc6346f83f0111" title="Whether a local copy of this entry should be kept in the working copy after a deletion has been commi...">keep_local</a>;
<a name="l02877"></a>02877 <span class="comment"></span>
<a name="l02878"></a>02878 <span class="comment">  /** The depth of this entry.</span>
<a name="l02879"></a>02879 <span class="comment">   *</span>
<a name="l02880"></a>02880 <span class="comment">   * ### It&#39;s a bit annoying that we only use this on this_dir</span>
<a name="l02881"></a>02881 <span class="comment">   * ### entries, yet it will exist (with value svn_depth_infinity) on</span>
<a name="l02882"></a>02882 <span class="comment">   * ### all entries.  Maybe some future extensibility would make this</span>
<a name="l02883"></a>02883 <span class="comment">   * ### field meaningful on entries besides this_dir.</span>
<a name="l02884"></a>02884 <span class="comment">   *</span>
<a name="l02885"></a>02885 <span class="comment">   * @since New in 1.5. */</span>
<a name="l02886"></a><a class="code" href="structsvn__wc__entry__t.html#a05112919a6f06f75bbf763ac518c8a90">02886</a>   <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> <a class="code" href="structsvn__wc__entry__t.html#a05112919a6f06f75bbf763ac518c8a90" title="The depth of this entry.">depth</a>;
<a name="l02887"></a>02887 <span class="comment"></span>
<a name="l02888"></a>02888 <span class="comment">  /** Serialized data for all of the tree conflicts detected in this_dir.</span>
<a name="l02889"></a>02889 <span class="comment">   *</span>
<a name="l02890"></a>02890 <span class="comment">   * @since New in 1.6. */</span>
<a name="l02891"></a><a class="code" href="structsvn__wc__entry__t.html#aa2284a9cca95b5973979f098f0cece60">02891</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#aa2284a9cca95b5973979f098f0cece60" title="Serialized data for all of the tree conflicts detected in this_dir.">tree_conflict_data</a>;
<a name="l02892"></a>02892 <span class="comment"></span>
<a name="l02893"></a>02893 <span class="comment">  /** The entry is a intra-repository file external and this is the</span>
<a name="l02894"></a>02894 <span class="comment">   * repository root relative path to the file specified in the</span>
<a name="l02895"></a>02895 <span class="comment">   * externals definition, otherwise NULL if the entry is not a file</span>
<a name="l02896"></a>02896 <span class="comment">   * external.</span>
<a name="l02897"></a>02897 <span class="comment">   *</span>
<a name="l02898"></a>02898 <span class="comment">   * @since New in 1.6. */</span>
<a name="l02899"></a><a class="code" href="structsvn__wc__entry__t.html#a322fe69e9af87f4c9b1c7453ae7fd2ba">02899</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__entry__t.html#a322fe69e9af87f4c9b1c7453ae7fd2ba" title="The entry is a intra-repository file external and this is the repository root relative path to the fi...">file_external_path</a>;
<a name="l02900"></a>02900 <span class="comment"></span>
<a name="l02901"></a>02901 <span class="comment">  /** The entry is a intra-repository file external and this is the</span>
<a name="l02902"></a>02902 <span class="comment">   * peg revision number specified in the externals definition.  This</span>
<a name="l02903"></a>02903 <span class="comment">   * field is only valid when the file_external_path field is</span>
<a name="l02904"></a>02904 <span class="comment">   * non-NULL.  The only permissible values are</span>
<a name="l02905"></a>02905 <span class="comment">   * svn_opt_revision_unspecified if the entry is not an external,</span>
<a name="l02906"></a>02906 <span class="comment">   * svn_opt_revision_head if the external revision is unspecified or</span>
<a name="l02907"></a>02907 <span class="comment">   * specified with -r HEAD or svn_opt_revision_number for a specific</span>
<a name="l02908"></a>02908 <span class="comment">   * revision number.</span>
<a name="l02909"></a>02909 <span class="comment">   *</span>
<a name="l02910"></a>02910 <span class="comment">   * @since New in 1.6. */</span>
<a name="l02911"></a><a class="code" href="structsvn__wc__entry__t.html#ab6ad758572008cdd9caac1ab3c58e0a4">02911</a>   <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> <a class="code" href="structsvn__wc__entry__t.html#ab6ad758572008cdd9caac1ab3c58e0a4" title="The entry is a intra-repository file external and this is the peg revision number specified in the ex...">file_external_peg_rev</a>;
<a name="l02912"></a>02912 <span class="comment"></span>
<a name="l02913"></a>02913 <span class="comment">  /** The entry is an intra-repository file external and this is the</span>
<a name="l02914"></a>02914 <span class="comment">   * operative revision number specified in the externals definition.</span>
<a name="l02915"></a>02915 <span class="comment">   * This field is only valid when the file_external_path field is</span>
<a name="l02916"></a>02916 <span class="comment">   * non-NULL.  The only permissible values are</span>
<a name="l02917"></a>02917 <span class="comment">   * svn_opt_revision_unspecified if the entry is not an external,</span>
<a name="l02918"></a>02918 <span class="comment">   * svn_opt_revision_head if the external revision is unspecified or</span>
<a name="l02919"></a>02919 <span class="comment">   * specified with -r HEAD or svn_opt_revision_number for a specific</span>
<a name="l02920"></a>02920 <span class="comment">   * revision number.</span>
<a name="l02921"></a>02921 <span class="comment">   *</span>
<a name="l02922"></a>02922 <span class="comment">   * @since New in 1.6. */</span>
<a name="l02923"></a><a class="code" href="structsvn__wc__entry__t.html#acf45153ae64c649e492c267f848dcbb9">02923</a>   <a class="code" href="structsvn__opt__revision__t.html" title="A revision, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_t</a> <a class="code" href="structsvn__wc__entry__t.html#acf45153ae64c649e492c267f848dcbb9" title="The entry is an intra-repository file external and this is the operative revision number specified in...">file_external_rev</a>;
<a name="l02924"></a>02924 
<a name="l02925"></a>02925   <span class="comment">/* IMPORTANT: If you extend this structure, check the following functions in</span>
<a name="l02926"></a>02926 <span class="comment">   * subversion/libsvn_wc/entries.c, to see if you need to extend them as well.</span>
<a name="l02927"></a>02927 <span class="comment">   *</span>
<a name="l02928"></a>02928 <span class="comment">   * svn_wc__atts_to_entry()</span>
<a name="l02929"></a>02929 <span class="comment">   * svn_wc_entry_dup()</span>
<a name="l02930"></a>02930 <span class="comment">   * alloc_entry()</span>
<a name="l02931"></a>02931 <span class="comment">   * read_entry()</span>
<a name="l02932"></a>02932 <span class="comment">   * write_entry()</span>
<a name="l02933"></a>02933 <span class="comment">   * fold_entry()</span>
<a name="l02934"></a>02934 <span class="comment">   */</span>
<a name="l02935"></a>02935 } <a class="code" href="group__svn__wc__entries.html#ga3277fa69b29a0d53fc60a8e342c3cd50" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a>;
<a name="l02936"></a>02936 
<a name="l02937"></a>02937 <span class="comment"></span>
<a name="l02938"></a>02938 <span class="comment">/** How an entries file&#39;s owner dir is named in the entries file.</span>
<a name="l02939"></a>02939 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API. */</span>
<a name="l02940"></a><a class="code" href="group__svn__wc__entries.html#ga24a4e11f4582a56ea1b7e3809fa27467">02940</a> <span class="preprocessor">#define SVN_WC_ENTRY_THIS_DIR  &quot;&quot;</span>
<a name="l02941"></a>02941 <span class="preprocessor"></span>
<a name="l02942"></a>02942 <span class="comment"></span>
<a name="l02943"></a>02943 <span class="comment">/** Set @a *entry to an entry for @a path, allocated in the access baton pool.</span>
<a name="l02944"></a>02944 <span class="comment"> * If @a show_hidden is TRUE, return the entry even if it&#39;s in &#39;excluded&#39;,</span>
<a name="l02945"></a>02945 <span class="comment"> * &#39;deleted&#39; or &#39;absent&#39; state. Excluded entries are those with their depth</span>
<a name="l02946"></a>02946 <span class="comment"> * set to #svn_depth_exclude. If @a path is not under revision control, or</span>
<a name="l02947"></a>02947 <span class="comment"> * if entry is hidden, not scheduled for re-addition, and @a show_hidden is @c</span>
<a name="l02948"></a>02948 <span class="comment"> * FALSE, then set @a *entry to @c NULL.</span>
<a name="l02949"></a>02949 <span class="comment"> *</span>
<a name="l02950"></a>02950 <span class="comment"> * @a *entry should not be modified, since doing so modifies the entries</span>
<a name="l02951"></a>02951 <span class="comment"> * cache in @a adm_access without changing the entries file on disk.</span>
<a name="l02952"></a>02952 <span class="comment"> *</span>
<a name="l02953"></a>02953 <span class="comment"> * If @a path is not a directory then @a adm_access must be an access baton</span>
<a name="l02954"></a>02954 <span class="comment"> * for the parent directory of @a path.  To avoid needing to know whether</span>
<a name="l02955"></a>02955 <span class="comment"> * @a path is a directory or not, if @a path is a directory @a adm_access</span>
<a name="l02956"></a>02956 <span class="comment"> * can still be an access baton for the parent of @a path so long as the</span>
<a name="l02957"></a>02957 <span class="comment"> * access baton for @a path itself is in the same access baton set.</span>
<a name="l02958"></a>02958 <span class="comment"> *</span>
<a name="l02959"></a>02959 <span class="comment"> * @a path can be relative or absolute but must share the same base used</span>
<a name="l02960"></a>02960 <span class="comment"> * to open @a adm_access.</span>
<a name="l02961"></a>02961 <span class="comment"> *</span>
<a name="l02962"></a>02962 <span class="comment"> * Note that it is possible for @a path to be absent from disk but still</span>
<a name="l02963"></a>02963 <span class="comment"> * under revision control; and conversely, it is possible for @a path to</span>
<a name="l02964"></a>02964 <span class="comment"> * be present, but not under revision control.</span>
<a name="l02965"></a>02965 <span class="comment"> *</span>
<a name="l02966"></a>02966 <span class="comment"> * Use @a pool only for local processing.</span>
<a name="l02967"></a>02967 <span class="comment"> *</span>
<a name="l02968"></a>02968 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l02969"></a>02969 <span class="comment"> */</span>
<a name="l02970"></a>02970 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l02971"></a>02971 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l02972"></a>02972 <a class="code" href="group__svn__wc__entries.html#gaf69372a5565959dd46608c5d4cfc5d30" title="Set *entry to an entry for path, allocated in the access baton pool.">svn_wc_entry</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__t.html" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a> **entry,
<a name="l02973"></a>02973              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l02974"></a>02974              <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l02975"></a>02975              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> show_hidden,
<a name="l02976"></a>02976              apr_pool_t *pool);
<a name="l02977"></a>02977 
<a name="l02978"></a>02978 <span class="comment"></span>
<a name="l02979"></a>02979 <span class="comment">/** Parse the `entries&#39; file for @a adm_access and return a hash @a entries,</span>
<a name="l02980"></a>02980 <span class="comment"> * whose keys are (&lt;tt&gt;const char *&lt;/tt&gt;) entry names and values are</span>
<a name="l02981"></a>02981 <span class="comment"> * (&lt;tt&gt;svn_wc_entry_t *&lt;/tt&gt;).  The hash @a entries, and its keys and</span>
<a name="l02982"></a>02982 <span class="comment"> * values, are allocated from the pool used to open the @a adm_access</span>
<a name="l02983"></a>02983 <span class="comment"> * baton (that&#39;s how the entries caching works).  @a pool is used for</span>
<a name="l02984"></a>02984 <span class="comment"> * transient allocations.</span>
<a name="l02985"></a>02985 <span class="comment"> *</span>
<a name="l02986"></a>02986 <span class="comment"> * Entries that are in a &#39;excluded&#39;, &#39;deleted&#39; or &#39;absent&#39; state (and not</span>
<a name="l02987"></a>02987 <span class="comment"> * scheduled for re-addition) are not returned in the hash, unless</span>
<a name="l02988"></a>02988 <span class="comment"> * @a show_hidden is TRUE. Excluded entries are those with their depth set to</span>
<a name="l02989"></a>02989 <span class="comment"> * #svn_depth_exclude.</span>
<a name="l02990"></a>02990 <span class="comment"> *</span>
<a name="l02991"></a>02991 <span class="comment"> * @par Important:</span>
<a name="l02992"></a>02992 <span class="comment"> * The @a entries hash is the entries cache in @a adm_access</span>
<a name="l02993"></a>02993 <span class="comment"> * and so usually the hash itself, the keys and the values should be treated</span>
<a name="l02994"></a>02994 <span class="comment"> * as read-only.  If any of these are modified then it is the caller&#39;s</span>
<a name="l02995"></a>02995 <span class="comment"> * responsibility to ensure that the entries file on disk is updated.  Treat</span>
<a name="l02996"></a>02996 <span class="comment"> * the hash values as type (&lt;tt&gt;const svn_wc_entry_t *&lt;/tt&gt;) if you wish to</span>
<a name="l02997"></a>02997 <span class="comment"> * avoid accidental modification.  Modifying the schedule member is a</span>
<a name="l02998"></a>02998 <span class="comment"> * particularly bad idea, as the entries writing process relies on having</span>
<a name="l02999"></a>02999 <span class="comment"> * access to the original schedule.  Use a duplicate entry to modify the</span>
<a name="l03000"></a>03000 <span class="comment"> * schedule.</span>
<a name="l03001"></a>03001 <span class="comment"> *</span>
<a name="l03002"></a>03002 <span class="comment"> * @par Important:</span>
<a name="l03003"></a>03003 <span class="comment"> * Only the entry structures representing files and</span>
<a name="l03004"></a>03004 <span class="comment"> * #SVN_WC_ENTRY_THIS_DIR contain complete information.  The entry</span>
<a name="l03005"></a>03005 <span class="comment"> * structures representing subdirs have only the `kind&#39; and `state&#39;</span>
<a name="l03006"></a>03006 <span class="comment"> * fields filled in.  If you want info on a subdir, you must use this</span>
<a name="l03007"></a>03007 <span class="comment"> * routine to open its @a path and read the #SVN_WC_ENTRY_THIS_DIR</span>
<a name="l03008"></a>03008 <span class="comment"> * structure, or call svn_wc_entry() on its @a path.</span>
<a name="l03009"></a>03009 <span class="comment"> *</span>
<a name="l03010"></a>03010 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03011"></a>03011 <span class="comment"> */</span>
<a name="l03012"></a>03012 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03013"></a>03013 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03014"></a>03014 <a class="code" href="group__svn__wc__entries.html#gaf0077f122ca31fd55d684d35e96247b8" title="Parse the `entries&#39; file for adm_access and return a hash entries, whose keys are (const char *) entr...">svn_wc_entries_read</a>(apr_hash_t **entries,
<a name="l03015"></a>03015                     <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l03016"></a>03016                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> show_hidden,
<a name="l03017"></a>03017                     apr_pool_t *pool);
<a name="l03018"></a>03018 
<a name="l03019"></a>03019 <span class="comment"></span>
<a name="l03020"></a>03020 <span class="comment">/** Return a duplicate of @a entry, allocated in @a pool.  No part of the new</span>
<a name="l03021"></a>03021 <span class="comment"> * entry will be shared with @a entry.</span>
<a name="l03022"></a>03022 <span class="comment"> *</span>
<a name="l03023"></a>03023 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03024"></a>03024 <span class="comment"> */</span>
<a name="l03025"></a>03025 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03026"></a>03026 <a class="code" href="structsvn__wc__entry__t.html" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a> *
<a name="l03027"></a>03027 <a class="code" href="group__svn__wc__entries.html#ga9e303620a59db18a9b9702412278df71" title="Return a duplicate of entry, allocated in pool.">svn_wc_entry_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__t.html" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a> *entry,
<a name="l03028"></a>03028                  apr_pool_t *pool);
<a name="l03029"></a>03029 <span class="comment"></span>
<a name="l03030"></a>03030 <span class="comment">/** @} */</span>
<a name="l03031"></a>03031 
<a name="l03032"></a>03032 <span class="comment"></span>
<a name="l03033"></a>03033 <span class="comment">/**</span>
<a name="l03034"></a>03034 <span class="comment"> * This struct contains information about a working copy node.</span>
<a name="l03035"></a>03035 <span class="comment"> *</span>
<a name="l03036"></a>03036 <span class="comment"> * @note Fields may be added to the end of this structure in future</span>
<a name="l03037"></a>03037 <span class="comment"> * versions.  Therefore, users shouldn&#39;t allocate structures of this</span>
<a name="l03038"></a>03038 <span class="comment"> * type, to preserve binary compatibility.</span>
<a name="l03039"></a>03039 <span class="comment"> *</span>
<a name="l03040"></a>03040 <span class="comment"> * @since New in 1.7.</span>
<a name="l03041"></a>03041 <span class="comment"> */</span>
<a name="l03042"></a><a class="code" href="structsvn__wc__info__t.html">03042</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__info__t.html" title="This struct contains information about a working copy node.">svn_wc_info_t</a>
<a name="l03043"></a>03043 {
<a name="l03044"></a>03044   <span class="comment">/* ### Do we still need schedule? */</span>
<a name="l03045"></a>03045   <a class="code" href="group__svn__wc__entries.html#ga5b1b7ce549f51d19cb0c0af8d9416ae9" title="The schedule states an entry can be in.">svn_wc_schedule_t</a> schedule;
<a name="l03046"></a>03046   <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_url;
<a name="l03047"></a>03047   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_rev;
<a name="l03048"></a>03048   <span class="keyword">const</span> <a class="code" href="structsvn__checksum__t.html" title="A generic checksum representation.">svn_checksum_t</a> *checksum;
<a name="l03049"></a>03049   <span class="keyword">const</span> <span class="keywordtype">char</span> *changelist;
<a name="l03050"></a>03050   <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth;
<a name="l03051"></a>03051 <span class="comment"></span>
<a name="l03052"></a>03052 <span class="comment">  /**</span>
<a name="l03053"></a>03053 <span class="comment">   * The size of the file after being translated into its local</span>
<a name="l03054"></a>03054 <span class="comment">   * representation, or #SVN_INVALID_FILESIZE if unknown.</span>
<a name="l03055"></a>03055 <span class="comment">   * Not applicable for directories.</span>
<a name="l03056"></a>03056 <span class="comment">   */</span>
<a name="l03057"></a><a class="code" href="structsvn__wc__info__t.html#ad4b1b9e310ed6cd6193aff863a849cb3">03057</a>   <a class="code" href="svn__types_8h.html#a726e581898461c1d3e7dbdb16d99dad0" title="The size of a file in the Subversion FS.">svn_filesize_t</a> <a class="code" href="structsvn__wc__info__t.html#ad4b1b9e310ed6cd6193aff863a849cb3" title="The size of the file after being translated into its local representation, or SVN_INVALID_FILESIZE if...">recorded_size</a>;
<a name="l03058"></a>03058 <span class="comment"></span>
<a name="l03059"></a>03059 <span class="comment">  /**</span>
<a name="l03060"></a>03060 <span class="comment">   * The time at which the file had the recorded size recorded_size and was</span>
<a name="l03061"></a>03061 <span class="comment">   * considered unmodified. */</span>
<a name="l03062"></a><a class="code" href="structsvn__wc__info__t.html#a841a8c4bc187fd23bb04ed30ee79d58b">03062</a>   apr_time_t <a class="code" href="structsvn__wc__info__t.html#a841a8c4bc187fd23bb04ed30ee79d58b" title="The time at which the file had the recorded size recorded_size and was considered unmodified...">recorded_time</a>;
<a name="l03063"></a>03063 <span class="comment"></span>
<a name="l03064"></a>03064 <span class="comment">  /** Array of const svn_wc_conflict_description2_t * which contains info</span>
<a name="l03065"></a>03065 <span class="comment">   * on any conflict of which this node is a victim. Otherwise NULL.  */</span>
<a name="l03066"></a><a class="code" href="structsvn__wc__info__t.html#a2513ab352ff3191abe1d715130ab6d76">03066</a>   <span class="keyword">const</span> apr_array_header_t *<a class="code" href="structsvn__wc__info__t.html#a2513ab352ff3191abe1d715130ab6d76" title="Array of const svn_wc_conflict_description2_t * which contains info on any conflict of which this nod...">conflicts</a>;
<a name="l03067"></a>03067 <span class="comment"></span>
<a name="l03068"></a>03068 <span class="comment">  /** The local absolute path of the working copy root.  */</span>
<a name="l03069"></a><a class="code" href="structsvn__wc__info__t.html#a57e1153fc875ac9d750e817bb5d8c820">03069</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__info__t.html#a57e1153fc875ac9d750e817bb5d8c820" title="The local absolute path of the working copy root.">wcroot_abspath</a>;
<a name="l03070"></a>03070 
<a name="l03071"></a>03071 } <a class="code" href="group__svn__wc.html#gaf3977bd5adec3cc4f4a7a45b9d022d58" title="This struct contains information about a working copy node.">svn_wc_info_t</a>;
<a name="l03072"></a>03072 <span class="comment"></span>
<a name="l03073"></a>03073 <span class="comment">/**</span>
<a name="l03074"></a>03074 <span class="comment"> * Return a duplicate of @a info, allocated in @a pool. No part of the new</span>
<a name="l03075"></a>03075 <span class="comment"> * structure will be shared with @a info.</span>
<a name="l03076"></a>03076 <span class="comment"> *</span>
<a name="l03077"></a>03077 <span class="comment"> * @since New in 1.7.</span>
<a name="l03078"></a>03078 <span class="comment"> */</span>
<a name="l03079"></a>03079 <a class="code" href="structsvn__wc__info__t.html" title="This struct contains information about a working copy node.">svn_wc_info_t</a> *
<a name="l03080"></a>03080 <a class="code" href="group__svn__wc.html#ga9bb4e37e7b54bb8270ea23841c53139d" title="Return a duplicate of info, allocated in pool.">svn_wc_info_dup</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__info__t.html" title="This struct contains information about a working copy node.">svn_wc_info_t</a> *info,
<a name="l03081"></a>03081                 apr_pool_t *pool);
<a name="l03082"></a>03082 
<a name="l03083"></a>03083 <span class="comment"></span>
<a name="l03084"></a>03084 <span class="comment">/** Given @a local_abspath in a dir under version control, decide if it is</span>
<a name="l03085"></a>03085 <span class="comment"> * in a state of conflict; return the answers in @a *text_conflicted_p, @a</span>
<a name="l03086"></a>03086 <span class="comment"> * *prop_conflicted_p, and @a *tree_conflicted_p.  If one or two of the</span>
<a name="l03087"></a>03087 <span class="comment"> * answers are uninteresting, simply pass @c NULL pointers for those.</span>
<a name="l03088"></a>03088 <span class="comment"> *</span>
<a name="l03089"></a>03089 <span class="comment"> * If @a local_abspath is unversioned or does not exist, return</span>
<a name="l03090"></a>03090 <span class="comment"> * #SVN_ERR_WC_PATH_NOT_FOUND.</span>
<a name="l03091"></a>03091 <span class="comment"> *</span>
<a name="l03092"></a>03092 <span class="comment"> * If the @a local_abspath has corresponding text conflict files (with suffix</span>
<a name="l03093"></a>03093 <span class="comment"> * .mine, .theirs, etc.) that cannot be found, assume that the text conflict</span>
<a name="l03094"></a>03094 <span class="comment"> * has been resolved by the user and return @c FALSE in @a</span>
<a name="l03095"></a>03095 <span class="comment"> * *text_conflicted_p.</span>
<a name="l03096"></a>03096 <span class="comment"> *</span>
<a name="l03097"></a>03097 <span class="comment"> * Similarly, if a property conflicts file (.prej suffix) is said to exist,</span>
<a name="l03098"></a>03098 <span class="comment"> * but it cannot be found, assume that the property conflicts have been</span>
<a name="l03099"></a>03099 <span class="comment"> * resolved by the user and return @c FALSE in @a *prop_conflicted_p.</span>
<a name="l03100"></a>03100 <span class="comment"> *</span>
<a name="l03101"></a>03101 <span class="comment"> * @a *tree_conflicted_p can&#39;t be auto-resolved in this fashion.  An</span>
<a name="l03102"></a>03102 <span class="comment"> * explicit `resolved&#39; is needed.</span>
<a name="l03103"></a>03103 <span class="comment"> *</span>
<a name="l03104"></a>03104 <span class="comment"> * @since New in 1.7.</span>
<a name="l03105"></a>03105 <span class="comment"> */</span>
<a name="l03106"></a>03106 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03107"></a>03107 <a class="code" href="group__svn__wc.html#gabf3a26b636143b05fdf3b38542321275" title="Given local_abspath in a dir under version control, decide if it is in a state of conflict; return th...">svn_wc_conflicted_p3</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *text_conflicted_p,
<a name="l03108"></a>03108                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *prop_conflicted_p,
<a name="l03109"></a>03109                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted_p,
<a name="l03110"></a>03110                      <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l03111"></a>03111                      <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l03112"></a>03112                      apr_pool_t *scratch_pool);
<a name="l03113"></a>03113 <span class="comment"></span>
<a name="l03114"></a>03114 <span class="comment">/** Similar to svn_wc_conflicted_p3(), but with a path/adm_access parameter</span>
<a name="l03115"></a>03115 <span class="comment"> * pair in place of a wc_ctx/local_abspath pair.</span>
<a name="l03116"></a>03116 <span class="comment"> *</span>
<a name="l03117"></a>03117 <span class="comment"> * @since New in 1.6.</span>
<a name="l03118"></a>03118 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03119"></a>03119 <span class="comment"> */</span>
<a name="l03120"></a>03120 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03121"></a>03121 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03122"></a>03122 <a class="code" href="group__svn__wc.html#gac5c8afaab3705c51213f2443c106826b" title="Similar to svn_wc_conflicted_p3(), but with a path/adm_access parameter pair in place of a wc_ctx/loc...">svn_wc_conflicted_p2</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *text_conflicted_p,
<a name="l03123"></a>03123                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *prop_conflicted_p,
<a name="l03124"></a>03124                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *tree_conflicted_p,
<a name="l03125"></a>03125                      <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03126"></a>03126                      <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l03127"></a>03127                      apr_pool_t *pool);
<a name="l03128"></a>03128 <span class="comment"></span>
<a name="l03129"></a>03129 <span class="comment">/** Given a @a dir_path under version control, decide if one of its entries</span>
<a name="l03130"></a>03130 <span class="comment"> * (@a entry) is in a state of conflict; return the answers in @a</span>
<a name="l03131"></a>03131 <span class="comment"> * text_conflicted_p and @a prop_conflicted_p. These pointers must not be</span>
<a name="l03132"></a>03132 <span class="comment"> * null.</span>
<a name="l03133"></a>03133 <span class="comment"> *</span>
<a name="l03134"></a>03134 <span class="comment"> * If the @a entry mentions that text conflict files (with suffix .mine,</span>
<a name="l03135"></a>03135 <span class="comment"> * .theirs, etc.) exist, but they cannot be found, assume the text conflict</span>
<a name="l03136"></a>03136 <span class="comment"> * has been resolved by the user and return FALSE in @a *text_conflicted_p.</span>
<a name="l03137"></a>03137 <span class="comment"> *</span>
<a name="l03138"></a>03138 <span class="comment"> * Similarly, if the @a entry mentions that a property conflicts file (.prej</span>
<a name="l03139"></a>03139 <span class="comment"> * suffix) exists, but it cannot be found, assume the property conflicts</span>
<a name="l03140"></a>03140 <span class="comment"> * have been resolved by the user and return FALSE in @a *prop_conflicted_p.</span>
<a name="l03141"></a>03141 <span class="comment"> *</span>
<a name="l03142"></a>03142 <span class="comment"> * The @a entry is not updated.</span>
<a name="l03143"></a>03143 <span class="comment"> *</span>
<a name="l03144"></a>03144 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l03145"></a>03145 <span class="comment"> */</span>
<a name="l03146"></a>03146 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03147"></a>03147 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03148"></a>03148 <a class="code" href="group__svn__wc.html#gaf436fc679467645939ab22ba9b7b504f" title="Given a dir_path under version control, decide if one of its entries (entry) is in a state of conflic...">svn_wc_conflicted_p</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *text_conflicted_p,
<a name="l03149"></a>03149                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *prop_conflicted_p,
<a name="l03150"></a>03150                     <span class="keyword">const</span> <span class="keywordtype">char</span> *dir_path,
<a name="l03151"></a>03151                     <span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__t.html" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a> *entry,
<a name="l03152"></a>03152                     apr_pool_t *pool);
<a name="l03153"></a>03153 
<a name="l03154"></a>03154 <span class="comment"></span>
<a name="l03155"></a>03155 <span class="comment">/** Set @a *url and @a *rev to the ancestor URL and revision for @a path,</span>
<a name="l03156"></a>03156 <span class="comment"> * allocating in @a pool.  @a adm_access must be an access baton for @a path.</span>
<a name="l03157"></a>03157 <span class="comment"> *</span>
<a name="l03158"></a>03158 <span class="comment"> * If @a url or @a rev is NULL, then ignore it (just don&#39;t return the</span>
<a name="l03159"></a>03159 <span class="comment"> * corresponding information).</span>
<a name="l03160"></a>03160 <span class="comment"> *</span>
<a name="l03161"></a>03161 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03162"></a>03162 <span class="comment"> */</span>
<a name="l03163"></a>03163 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03164"></a>03164 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03165"></a>03165 <a class="code" href="group__svn__wc.html#ga204e46eaf18913808556e9b1f40a6bcb" title="Set *url and *rev to the ancestor URL and revision for path, allocating in pool.">svn_wc_get_ancestry</a>(<span class="keywordtype">char</span> **url,
<a name="l03166"></a>03166                     <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *rev,
<a name="l03167"></a>03167                     <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03168"></a>03168                     <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l03169"></a>03169                     apr_pool_t *pool);
<a name="l03170"></a>03170 
<a name="l03171"></a>03171 <span class="comment"></span>
<a name="l03172"></a>03172 <span class="comment">/** A callback vtable invoked by the generic entry-walker function.</span>
<a name="l03173"></a>03173 <span class="comment"> * @since New in 1.5.</span>
<a name="l03174"></a>03174 <span class="comment"> */</span>
<a name="l03175"></a><a class="code" href="structsvn__wc__entry__callbacks2__t.html">03175</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__entry__callbacks2__t.html" title="A callback vtable invoked by the generic entry-walker function.">svn_wc_entry_callbacks2_t</a>
<a name="l03176"></a>03176 {<span class="comment"></span>
<a name="l03177"></a>03177 <span class="comment">  /** An @a entry was found at @a path. */</span>
<a name="l03178"></a><a class="code" href="structsvn__wc__entry__callbacks2__t.html#a337dd1cd88a65a3a0ebb20fa74720dfb">03178</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*found_entry)(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03179"></a>03179                               <span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__t.html" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a> *entry,
<a name="l03180"></a>03180                               <span class="keywordtype">void</span> *walk_baton,
<a name="l03181"></a>03181                               apr_pool_t *pool);
<a name="l03182"></a>03182 <span class="comment"></span>
<a name="l03183"></a>03183 <span class="comment">  /** Handle the error @a err encountered while processing @a path.</span>
<a name="l03184"></a>03184 <span class="comment">   * Wrap or squelch @a err as desired, and return an #svn_error_t</span>
<a name="l03185"></a>03185 <span class="comment">   * *, or #SVN_NO_ERROR.</span>
<a name="l03186"></a>03186 <span class="comment">   */</span>
<a name="l03187"></a><a class="code" href="structsvn__wc__entry__callbacks2__t.html#aabe9808db52fa896761ef210055cfbae">03187</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*handle_error)(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03188"></a>03188                                <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *err,
<a name="l03189"></a>03189                                <span class="keywordtype">void</span> *walk_baton,
<a name="l03190"></a>03190                                apr_pool_t *pool);
<a name="l03191"></a>03191 
<a name="l03192"></a>03192 } <a class="code" href="group__svn__wc.html#gae57827536e4cfe627f777a4033ca668d" title="A callback vtable invoked by the generic entry-walker function.">svn_wc_entry_callbacks2_t</a>;
<a name="l03193"></a>03193 <span class="comment"></span>
<a name="l03194"></a>03194 <span class="comment">/** @deprecated Provided for backward compatibility with the 1.4 API. */</span>
<a name="l03195"></a><a class="code" href="structsvn__wc__entry__callbacks__t.html">03195</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__entry__callbacks__t.html">svn_wc_entry_callbacks_t</a>
<a name="l03196"></a>03196 {<span class="comment"></span>
<a name="l03197"></a>03197 <span class="comment">  /** An @a entry was found at @a path. */</span>
<a name="l03198"></a><a class="code" href="structsvn__wc__entry__callbacks__t.html#a9143b7c2f5c326c5557cd50d2aba9c63">03198</a>   <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*found_entry)(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03199"></a>03199                               <span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__t.html" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a> *entry,
<a name="l03200"></a>03200                               <span class="keywordtype">void</span> *walk_baton,
<a name="l03201"></a>03201                               apr_pool_t *pool);
<a name="l03202"></a>03202 
<a name="l03203"></a>03203 } <a class="code" href="group__svn__wc.html#ga55f4e859d73f34dfdd0a970422e624c0">svn_wc_entry_callbacks_t</a>;
<a name="l03204"></a>03204 <span class="comment"></span>
<a name="l03205"></a>03205 <span class="comment">/**</span>
<a name="l03206"></a>03206 <span class="comment"> * A generic entry-walker.</span>
<a name="l03207"></a>03207 <span class="comment"> *</span>
<a name="l03208"></a>03208 <span class="comment"> * Do a potentially recursive depth-first entry-walk beginning on</span>
<a name="l03209"></a>03209 <span class="comment"> * @a path, which can be a file or dir.  Call callbacks in</span>
<a name="l03210"></a>03210 <span class="comment"> * @a walk_callbacks, passing @a walk_baton to each.  Use @a pool for</span>
<a name="l03211"></a>03211 <span class="comment"> * looping, recursion, and to allocate all entries returned.</span>
<a name="l03212"></a>03212 <span class="comment"> * @a adm_access must be an access baton for @a path.  The pool</span>
<a name="l03213"></a>03213 <span class="comment"> * passed to @a walk_callbacks is a temporary subpool of @a pool.</span>
<a name="l03214"></a>03214 <span class="comment"> *</span>
<a name="l03215"></a>03215 <span class="comment"> * If @a depth is #svn_depth_empty, invoke the callbacks on @a path</span>
<a name="l03216"></a>03216 <span class="comment"> * and return without recursing further.  If #svn_depth_files, do</span>
<a name="l03217"></a>03217 <span class="comment"> * the same and invoke the callbacks on file children (if any) of</span>
<a name="l03218"></a>03218 <span class="comment"> * @a path, then return.  If #svn_depth_immediates, do the preceding</span>
<a name="l03219"></a>03219 <span class="comment"> * but also invoke callbacks on immediate subdirectories, then return.</span>
<a name="l03220"></a>03220 <span class="comment"> * If #svn_depth_infinity, recurse fully starting from @a path.</span>
<a name="l03221"></a>03221 <span class="comment"> *</span>
<a name="l03222"></a>03222 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton to determine</span>
<a name="l03223"></a>03223 <span class="comment"> * if the client has canceled the operation.</span>
<a name="l03224"></a>03224 <span class="comment"> *</span>
<a name="l03225"></a>03225 <span class="comment"> * Like our other entries interfaces, entries that are in a &#39;excluded&#39;,</span>
<a name="l03226"></a>03226 <span class="comment"> * &#39;deleted&#39; or &#39;absent&#39; state (and not scheduled for re-addition) are not</span>
<a name="l03227"></a>03227 <span class="comment"> * discovered, unless @a show_hidden is TRUE. Excluded entries are those with</span>
<a name="l03228"></a>03228 <span class="comment"> * their depth set to #svn_depth_exclude.</span>
<a name="l03229"></a>03229 <span class="comment"> *</span>
<a name="l03230"></a>03230 <span class="comment"> * When a new directory is entered, #SVN_WC_ENTRY_THIS_DIR will always</span>
<a name="l03231"></a>03231 <span class="comment"> * be returned first.</span>
<a name="l03232"></a>03232 <span class="comment"> *</span>
<a name="l03233"></a>03233 <span class="comment"> * @note Callers should be aware that each directory will be</span>
<a name="l03234"></a>03234 <span class="comment"> * returned *twice*:  first as an entry within its parent, and</span>
<a name="l03235"></a>03235 <span class="comment"> * subsequently as the &#39;.&#39; entry within itself.  The two calls can be</span>
<a name="l03236"></a>03236 <span class="comment"> * distinguished by looking for #SVN_WC_ENTRY_THIS_DIR in the &#39;name&#39;</span>
<a name="l03237"></a>03237 <span class="comment"> * field of the entry.</span>
<a name="l03238"></a>03238 <span class="comment"> *</span>
<a name="l03239"></a>03239 <span class="comment"> * @since New in 1.5.</span>
<a name="l03240"></a>03240 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03241"></a>03241 <span class="comment"> */</span>
<a name="l03242"></a>03242 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03243"></a>03243 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03244"></a>03244 <a class="code" href="group__svn__wc.html#ga17374d3b79862d5faa4887ed0f4366c3" title="A generic entry-walker.">svn_wc_walk_entries3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03245"></a>03245                      <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l03246"></a>03246                      <span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__callbacks2__t.html" title="A callback vtable invoked by the generic entry-walker function.">svn_wc_entry_callbacks2_t</a> *walk_callbacks,
<a name="l03247"></a>03247                      <span class="keywordtype">void</span> *walk_baton,
<a name="l03248"></a>03248                      <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03249"></a>03249                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> show_hidden,
<a name="l03250"></a>03250                      <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l03251"></a>03251                      <span class="keywordtype">void</span> *cancel_baton,
<a name="l03252"></a>03252                      apr_pool_t *pool);
<a name="l03253"></a>03253 <span class="comment"></span>
<a name="l03254"></a>03254 <span class="comment">/**</span>
<a name="l03255"></a>03255 <span class="comment"> * Similar to svn_wc_walk_entries3(), but without cancellation support</span>
<a name="l03256"></a>03256 <span class="comment"> * or error handling from @a walk_callbacks, and with @a depth always</span>
<a name="l03257"></a>03257 <span class="comment"> * set to #svn_depth_infinity.</span>
<a name="l03258"></a>03258 <span class="comment"> *</span>
<a name="l03259"></a>03259 <span class="comment"> * @since New in 1.2.</span>
<a name="l03260"></a>03260 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l03261"></a>03261 <span class="comment"> */</span>
<a name="l03262"></a>03262 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03263"></a>03263 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03264"></a>03264 <a class="code" href="group__svn__wc.html#ga0fc8c326b020e64cfb8d183f4a10a684" title="Similar to svn_wc_walk_entries3(), but without cancellation support or error handling from walk_callb...">svn_wc_walk_entries2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03265"></a>03265                      <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l03266"></a>03266                      <span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__callbacks__t.html">svn_wc_entry_callbacks_t</a> *walk_callbacks,
<a name="l03267"></a>03267                      <span class="keywordtype">void</span> *walk_baton,
<a name="l03268"></a>03268                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> show_hidden,
<a name="l03269"></a>03269                      <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l03270"></a>03270                      <span class="keywordtype">void</span> *cancel_baton,
<a name="l03271"></a>03271                      apr_pool_t *pool);
<a name="l03272"></a>03272 <span class="comment"></span>
<a name="l03273"></a>03273 <span class="comment">/**</span>
<a name="l03274"></a>03274 <span class="comment"> * Similar to svn_wc_walk_entries2(), but without cancellation support.</span>
<a name="l03275"></a>03275 <span class="comment"> *</span>
<a name="l03276"></a>03276 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l03277"></a>03277 <span class="comment"> */</span>
<a name="l03278"></a>03278 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03279"></a>03279 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03280"></a>03280 <a class="code" href="group__svn__wc.html#ga93c39ae07d4de5f49f1d5adcb45eab22" title="Similar to svn_wc_walk_entries2(), but without cancellation support.">svn_wc_walk_entries</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03281"></a>03281                     <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l03282"></a>03282                     <span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__callbacks__t.html">svn_wc_entry_callbacks_t</a> *walk_callbacks,
<a name="l03283"></a>03283                     <span class="keywordtype">void</span> *walk_baton,
<a name="l03284"></a>03284                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> show_hidden,
<a name="l03285"></a>03285                     apr_pool_t *pool);
<a name="l03286"></a>03286 
<a name="l03287"></a>03287 <span class="comment"></span>
<a name="l03288"></a>03288 <span class="comment">/** Mark missing @a path as &#39;deleted&#39; in its @a parent&#39;s list of</span>
<a name="l03289"></a>03289 <span class="comment"> * entries.  @a path should be a directory that is both deleted (via</span>
<a name="l03290"></a>03290 <span class="comment"> * svn_wc_delete4) and removed (via a system call).  This function</span>
<a name="l03291"></a>03291 <span class="comment"> * should only be called during post-commit processing following a</span>
<a name="l03292"></a>03292 <span class="comment"> * successful commit editor drive.</span>
<a name="l03293"></a>03293 <span class="comment"> *</span>
<a name="l03294"></a>03294 <span class="comment"> * Return #SVN_ERR_WC_PATH_FOUND if @a path isn&#39;t actually missing.</span>
<a name="l03295"></a>03295 <span class="comment"> *</span>
<a name="l03296"></a>03296 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03297"></a>03297 <span class="comment"> */</span>
<a name="l03298"></a>03298 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03299"></a>03299 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03300"></a>03300 <a class="code" href="group__svn__wc.html#ga5d95390b7527954903f5d491de17a1aa" title="Mark missing path as &#39;deleted&#39; in its parent&#39;s list of entries.">svn_wc_mark_missing_deleted</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03301"></a>03301                             <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *parent,
<a name="l03302"></a>03302                             apr_pool_t *pool);
<a name="l03303"></a>03303 
<a name="l03304"></a>03304 <span class="comment"></span>
<a name="l03305"></a>03305 <span class="comment">/** Ensure that an administrative area exists for @a local_abspath, so</span>
<a name="l03306"></a>03306 <span class="comment"> * that @a local_abspath is a working copy subdir based on @a url at @a</span>
<a name="l03307"></a>03307 <span class="comment"> * revision, with depth @a depth, and with repository UUID @a repos_uuid</span>
<a name="l03308"></a>03308 <span class="comment"> * and repository root URL @a repos_root_url.</span>
<a name="l03309"></a>03309 <span class="comment"> *</span>
<a name="l03310"></a>03310 <span class="comment"> * @a depth must be a definite depth, it cannot be #svn_depth_unknown.</span>
<a name="l03311"></a>03311 <span class="comment"> * @a repos_uuid and @a repos_root_url MUST NOT be @c NULL, and</span>
<a name="l03312"></a>03312 <span class="comment"> * @a repos_root_url must be a prefix of @a url.</span>
<a name="l03313"></a>03313 <span class="comment"> *</span>
<a name="l03314"></a>03314 <span class="comment"> * If the administrative area does not exist, then create it and</span>
<a name="l03315"></a>03315 <span class="comment"> * initialize it to an unlocked state.</span>
<a name="l03316"></a>03316 <span class="comment"> *</span>
<a name="l03317"></a>03317 <span class="comment"> * If the administrative area already exists then the given @a url</span>
<a name="l03318"></a>03318 <span class="comment"> * must match the URL in the administrative area and the given</span>
<a name="l03319"></a>03319 <span class="comment"> * @a revision must match the BASE of the working copy dir unless</span>
<a name="l03320"></a>03320 <span class="comment"> * the admin directory is scheduled for deletion or the</span>
<a name="l03321"></a>03321 <span class="comment"> * #SVN_ERR_WC_OBSTRUCTED_UPDATE error will be returned.</span>
<a name="l03322"></a>03322 <span class="comment"> *</span>
<a name="l03323"></a>03323 <span class="comment"> * Do not ensure existence of @a local_abspath itself; if @a local_abspath</span>
<a name="l03324"></a>03324 <span class="comment"> * does not exist, return error.</span>
<a name="l03325"></a>03325 <span class="comment"> *</span>
<a name="l03326"></a>03326 <span class="comment"> * Use @a scratch_pool for temporary allocations.</span>
<a name="l03327"></a>03327 <span class="comment"> *</span>
<a name="l03328"></a>03328 <span class="comment"> * @since New in 1.7.</span>
<a name="l03329"></a>03329 <span class="comment"> */</span>
<a name="l03330"></a>03330 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03331"></a>03331 <a class="code" href="group__svn__wc.html#gaf21372f91fa4944913741a2971587605" title="Ensure that an administrative area exists for local_abspath, so that local_abspath is a working copy ...">svn_wc_ensure_adm4</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l03332"></a>03332                    <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l03333"></a>03333                    <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l03334"></a>03334                    <span class="keyword">const</span> <span class="keywordtype">char</span> *repos_root_url,
<a name="l03335"></a>03335                    <span class="keyword">const</span> <span class="keywordtype">char</span> *repos_uuid,
<a name="l03336"></a>03336                    <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> revision,
<a name="l03337"></a>03337                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03338"></a>03338                    apr_pool_t *scratch_pool);
<a name="l03339"></a>03339 <span class="comment"></span>
<a name="l03340"></a>03340 <span class="comment">/**</span>
<a name="l03341"></a>03341 <span class="comment"> * Similar to svn_wc_ensure_adm4(), but without the wc context parameter.</span>
<a name="l03342"></a>03342 <span class="comment"> *</span>
<a name="l03343"></a>03343 <span class="comment"> * @note the @a uuid and @a repos parameters were documented as allowing</span>
<a name="l03344"></a>03344 <span class="comment"> * @c NULL to be passed. Beginning with 1.7, this will return an error,</span>
<a name="l03345"></a>03345 <span class="comment"> * contrary to prior documented behavior: see &#39;notes/api-errata/1.7/wc005.txt&#39;.</span>
<a name="l03346"></a>03346 <span class="comment"> *</span>
<a name="l03347"></a>03347 <span class="comment"> * @since New in 1.5.</span>
<a name="l03348"></a>03348 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l03349"></a>03349 <span class="comment"> */</span>
<a name="l03350"></a>03350 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03351"></a>03351 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03352"></a>03352 <a class="code" href="group__svn__wc.html#gab109796faf4e8919506658dc904ba63c" title="Similar to svn_wc_ensure_adm4(), but without the wc context parameter.">svn_wc_ensure_adm3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03353"></a>03353                    <span class="keyword">const</span> <span class="keywordtype">char</span> *uuid,
<a name="l03354"></a>03354                    <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l03355"></a>03355                    <span class="keyword">const</span> <span class="keywordtype">char</span> *repos,
<a name="l03356"></a>03356                    <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> revision,
<a name="l03357"></a>03357                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03358"></a>03358                    apr_pool_t *pool);
<a name="l03359"></a>03359 
<a name="l03360"></a>03360 <span class="comment"></span>
<a name="l03361"></a>03361 <span class="comment">/**</span>
<a name="l03362"></a>03362 <span class="comment"> * Similar to svn_wc_ensure_adm3(), but with @a depth set to</span>
<a name="l03363"></a>03363 <span class="comment"> * #svn_depth_infinity.</span>
<a name="l03364"></a>03364 <span class="comment"> *</span>
<a name="l03365"></a>03365 <span class="comment"> * See the note on svn_wc_ensure_adm3() regarding the @a repos and @a uuid</span>
<a name="l03366"></a>03366 <span class="comment"> * parameters.</span>
<a name="l03367"></a>03367 <span class="comment"> *</span>
<a name="l03368"></a>03368 <span class="comment"> * @since New in 1.3.</span>
<a name="l03369"></a>03369 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.4 API.</span>
<a name="l03370"></a>03370 <span class="comment"> */</span>
<a name="l03371"></a>03371 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03372"></a>03372 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03373"></a>03373 <a class="code" href="group__svn__wc.html#ga713231987f37479d004ba0621e9f92bb" title="Similar to svn_wc_ensure_adm3(), but with depth set to svn_depth_infinity.">svn_wc_ensure_adm2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03374"></a>03374                    <span class="keyword">const</span> <span class="keywordtype">char</span> *uuid,
<a name="l03375"></a>03375                    <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l03376"></a>03376                    <span class="keyword">const</span> <span class="keywordtype">char</span> *repos,
<a name="l03377"></a>03377                    <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> revision,
<a name="l03378"></a>03378                    apr_pool_t *pool);
<a name="l03379"></a>03379 
<a name="l03380"></a>03380 <span class="comment"></span>
<a name="l03381"></a>03381 <span class="comment">/**</span>
<a name="l03382"></a>03382 <span class="comment"> * Similar to svn_wc_ensure_adm2(), but with @a repos set to @c NULL.</span>
<a name="l03383"></a>03383 <span class="comment"> *</span>
<a name="l03384"></a>03384 <span class="comment"> * @note as of 1.7, this function always returns #SVN_ERR_BAD_URL since</span>
<a name="l03385"></a>03385 <span class="comment"> * the @a repos parameter may not be @c NULL.</span>
<a name="l03386"></a>03386 <span class="comment"> *</span>
<a name="l03387"></a>03387 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.2 API.</span>
<a name="l03388"></a>03388 <span class="comment"> */</span>
<a name="l03389"></a>03389 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03390"></a>03390 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03391"></a>03391 <a class="code" href="group__svn__wc.html#gadb898d9f94516ba81d4db5784ba57d75" title="Similar to svn_wc_ensure_adm2(), but with repos set to NULL.">svn_wc_ensure_adm</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03392"></a>03392                   <span class="keyword">const</span> <span class="keywordtype">char</span> *uuid,
<a name="l03393"></a>03393                   <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l03394"></a>03394                   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> revision,
<a name="l03395"></a>03395                   apr_pool_t *pool);
<a name="l03396"></a>03396 
<a name="l03397"></a>03397 <span class="comment"></span>
<a name="l03398"></a>03398 <span class="comment">/** Set the repository root URL of @a path to @a repos, if possible.</span>
<a name="l03399"></a>03399 <span class="comment"> *</span>
<a name="l03400"></a>03400 <span class="comment"> * Before Subversion 1.7 there could be working copy directories that</span>
<a name="l03401"></a>03401 <span class="comment"> * didn&#39;t have a stored repository root in some specific circumstances.</span>
<a name="l03402"></a>03402 <span class="comment"> * This function allowed setting this root later.</span>
<a name="l03403"></a>03403 <span class="comment"> *</span>
<a name="l03404"></a>03404 <span class="comment"> * Since Subversion 1.7 this function just returns #SVN_NO_ERROR.</span>
<a name="l03405"></a>03405 <span class="comment"> *</span>
<a name="l03406"></a>03406 <span class="comment"> * @since New in 1.3.</span>
<a name="l03407"></a>03407 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l03408"></a>03408 <span class="comment"> */</span>
<a name="l03409"></a>03409 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03410"></a>03410 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03411"></a>03411 <a class="code" href="group__svn__wc.html#ga4362bbf450311e0cce2b0559d9c5bef7" title="Set the repository root URL of path to repos, if possible.">svn_wc_maybe_set_repos_root</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l03412"></a>03412                             <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03413"></a>03413                             <span class="keyword">const</span> <span class="keywordtype">char</span> *repos,
<a name="l03414"></a>03414                             apr_pool_t *pool);
<a name="l03415"></a>03415 
<a name="l03416"></a>03416 <span class="comment"></span>
<a name="l03417"></a>03417 <span class="comment">/**</span>
<a name="l03418"></a>03418 <span class="comment"> * @defgroup svn_wc_status Working copy status.</span>
<a name="l03419"></a>03419 <span class="comment"> * @{</span>
<a name="l03420"></a>03420 <span class="comment"> *</span>
<a name="l03421"></a>03421 <span class="comment"> * We have three functions for getting working copy status: one function</span>
<a name="l03422"></a>03422 <span class="comment"> * for getting the status of exactly one thing, another for</span>
<a name="l03423"></a>03423 <span class="comment"> * getting the statuses of (potentially) multiple things and a third for</span>
<a name="l03424"></a>03424 <span class="comment"> * getting the working copy out-of-dateness with respect to the repository.</span>
<a name="l03425"></a>03425 <span class="comment"> *</span>
<a name="l03426"></a>03426 <span class="comment"> * Why do we have two different functions for getting working copy status?</span>
<a name="l03427"></a>03427 <span class="comment"> * The concept of depth, as explained in the documentation for</span>
<a name="l03428"></a>03428 <span class="comment"> * svn_depth_t, may be useful in understanding this.  Suppose we&#39;re</span>
<a name="l03429"></a>03429 <span class="comment"> * getting the status of directory D:</span>
<a name="l03430"></a>03430 <span class="comment"> *</span>
<a name="l03431"></a>03431 <span class="comment"> * To offer all three levels, we could have one unified function,</span>
<a name="l03432"></a>03432 <span class="comment"> * taking a `depth&#39; parameter.  Unfortunately, because this function</span>
<a name="l03433"></a>03433 <span class="comment"> * would have to handle multiple return values as well as the single</span>
<a name="l03434"></a>03434 <span class="comment"> * return value case, getting the status of just one entity would</span>
<a name="l03435"></a>03435 <span class="comment"> * become cumbersome: you&#39;d have to roll through a hash to find one</span>
<a name="l03436"></a>03436 <span class="comment"> * lone status.</span>
<a name="l03437"></a>03437 <span class="comment"> *</span>
<a name="l03438"></a>03438 <span class="comment"> * So we have svn_wc_status3() for depth-empty (just D itself), and</span>
<a name="l03439"></a>03439 <span class="comment"> * svn_wc_walk_status() for depth-immediates and depth-infinity,</span>
<a name="l03440"></a>03440 <span class="comment"> * since the latter two involve multiple return values. And for</span>
<a name="l03441"></a>03441 <span class="comment"> * out-of-dateness information we have svn_wc_get_status_editor5().</span>
<a name="l03442"></a>03442 <span class="comment"> */</span>
<a name="l03443"></a>03443 <span class="comment"></span>
<a name="l03444"></a>03444 <span class="comment">/** The type of status for the working copy. */</span>
<a name="l03445"></a><a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d">03445</a> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a>
<a name="l03446"></a>03446 {<span class="comment"></span>
<a name="l03447"></a>03447 <span class="comment">    /** does not exist */</span>
<a name="l03448"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da991bbf1a444aa18593ff11948bbea60a">03448</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da991bbf1a444aa18593ff11948bbea60a" title="does not exist">svn_wc_status_none</a> = 1,
<a name="l03449"></a>03449 <span class="comment"></span>
<a name="l03450"></a>03450 <span class="comment">    /** is not a versioned thing in this wc */</span>
<a name="l03451"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da7e9e322307b1442dff9e289fba9b00e8">03451</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da7e9e322307b1442dff9e289fba9b00e8" title="is not a versioned thing in this wc">svn_wc_status_unversioned</a>,
<a name="l03452"></a>03452 <span class="comment"></span>
<a name="l03453"></a>03453 <span class="comment">    /** exists, but uninteresting */</span>
<a name="l03454"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da2389c6b75fea54f05c5a6c9633a71087">03454</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da2389c6b75fea54f05c5a6c9633a71087" title="exists, but uninteresting">svn_wc_status_normal</a>,
<a name="l03455"></a>03455 <span class="comment"></span>
<a name="l03456"></a>03456 <span class="comment">    /** is scheduled for addition */</span>
<a name="l03457"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da0da8dafa7cea122186d1c00ec665afa6">03457</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da0da8dafa7cea122186d1c00ec665afa6" title="is scheduled for addition">svn_wc_status_added</a>,
<a name="l03458"></a>03458 <span class="comment"></span>
<a name="l03459"></a>03459 <span class="comment">    /** under v.c., but is missing */</span>
<a name="l03460"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da72aa0c31b345f4168ca0ccb862704643">03460</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da72aa0c31b345f4168ca0ccb862704643" title="under v.c., but is missing">svn_wc_status_missing</a>,
<a name="l03461"></a>03461 <span class="comment"></span>
<a name="l03462"></a>03462 <span class="comment">    /** scheduled for deletion */</span>
<a name="l03463"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96daba05805344c060627f5cc039a01c1cdc">03463</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96daba05805344c060627f5cc039a01c1cdc" title="scheduled for deletion">svn_wc_status_deleted</a>,
<a name="l03464"></a>03464 <span class="comment"></span>
<a name="l03465"></a>03465 <span class="comment">    /** was deleted and then re-added */</span>
<a name="l03466"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da80748e7146540a5ea5ba0d26c4a42ba5">03466</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da80748e7146540a5ea5ba0d26c4a42ba5" title="was deleted and then re-added">svn_wc_status_replaced</a>,
<a name="l03467"></a>03467 <span class="comment"></span>
<a name="l03468"></a>03468 <span class="comment">    /** text or props have been modified */</span>
<a name="l03469"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96daa68c26e1f269943abf2769a3df4d730b">03469</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96daa68c26e1f269943abf2769a3df4d730b" title="text or props have been modified">svn_wc_status_modified</a>,
<a name="l03470"></a>03470 <span class="comment"></span>
<a name="l03471"></a>03471 <span class="comment">    /** local mods received repos mods (### unused) */</span>
<a name="l03472"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da8c67a4d2576ed30014313088a4d972de">03472</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da8c67a4d2576ed30014313088a4d972de" title="local mods received repos mods (### unused)">svn_wc_status_merged</a>,
<a name="l03473"></a>03473 <span class="comment"></span>
<a name="l03474"></a>03474 <span class="comment">    /** local mods received conflicting repos mods */</span>
<a name="l03475"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da5786df1c38c41b28ff33c3ee692550ba">03475</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da5786df1c38c41b28ff33c3ee692550ba" title="local mods received conflicting repos mods">svn_wc_status_conflicted</a>,
<a name="l03476"></a>03476 <span class="comment"></span>
<a name="l03477"></a>03477 <span class="comment">    /** is unversioned but configured to be ignored */</span>
<a name="l03478"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96daafdcb2e885d5d000adc048235b9e38cd">03478</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96daafdcb2e885d5d000adc048235b9e38cd" title="is unversioned but configured to be ignored">svn_wc_status_ignored</a>,
<a name="l03479"></a>03479 <span class="comment"></span>
<a name="l03480"></a>03480 <span class="comment">    /** an unversioned resource is in the way of the versioned resource */</span>
<a name="l03481"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da8693ff658ce80dc8f9a8b4ff9b332b37">03481</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da8693ff658ce80dc8f9a8b4ff9b332b37" title="an unversioned resource is in the way of the versioned resource">svn_wc_status_obstructed</a>,
<a name="l03482"></a>03482 <span class="comment"></span>
<a name="l03483"></a>03483 <span class="comment">    /** an unversioned directory path populated by an svn:externals</span>
<a name="l03484"></a>03484 <span class="comment">        property; this status is not used for file externals */</span>
<a name="l03485"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da4f106daa9dfd6a7dde0002b2f54e001b">03485</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da4f106daa9dfd6a7dde0002b2f54e001b" title="an unversioned directory path populated by an svn:externals property; this status is not used for fil...">svn_wc_status_external</a>,
<a name="l03486"></a>03486 <span class="comment"></span>
<a name="l03487"></a>03487 <span class="comment">    /** a directory doesn&#39;t contain a complete entries list */</span>
<a name="l03488"></a><a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da971458b88498d03b7af67280c3f12c3f">03488</a>     <a class="code" href="group__svn__wc__status.html#ggad90a5ae2e412cd6fc047a64d627bd96da971458b88498d03b7af67280c3f12c3f" title="a directory doesn&#39;t contain a complete entries list">svn_wc_status_incomplete</a>
<a name="l03489"></a>03489 };
<a name="l03490"></a>03490 <span class="comment"></span>
<a name="l03491"></a>03491 <span class="comment">/**</span>
<a name="l03492"></a>03492 <span class="comment"> * Structure for holding the &quot;status&quot; of a working copy item.</span>
<a name="l03493"></a>03493 <span class="comment"> *</span>
<a name="l03494"></a>03494 <span class="comment"> * @note Fields may be added to the end of this structure in future</span>
<a name="l03495"></a>03495 <span class="comment"> * versions.  Therefore, to preserve binary compatibility, users</span>
<a name="l03496"></a>03496 <span class="comment"> * should not directly allocate structures of this type.</span>
<a name="l03497"></a>03497 <span class="comment"> *</span>
<a name="l03498"></a>03498 <span class="comment"> * @since New in 1.7.</span>
<a name="l03499"></a>03499 <span class="comment"> */</span>
<a name="l03500"></a><a class="code" href="structsvn__wc__status3__t.html">03500</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a>
<a name="l03501"></a>03501 {<span class="comment"></span>
<a name="l03502"></a>03502 <span class="comment">  /** The kind of node as recorded in the working copy */</span>
<a name="l03503"></a><a class="code" href="structsvn__wc__status3__t.html#a5bb3c2c282433b993e15e27e3c59adff">03503</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="structsvn__wc__status3__t.html#a5bb3c2c282433b993e15e27e3c59adff" title="The kind of node as recorded in the working copy.">kind</a>;
<a name="l03504"></a>03504 <span class="comment"></span>
<a name="l03505"></a>03505 <span class="comment">  /** The depth of the node as recorded in the working copy</span>
<a name="l03506"></a>03506 <span class="comment">   * (#svn_depth_unknown for files or when no depth is set) */</span>
<a name="l03507"></a><a class="code" href="structsvn__wc__status3__t.html#a317639bac4cc34c95e1cec10443af80b">03507</a>   <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> <a class="code" href="structsvn__wc__status3__t.html#a317639bac4cc34c95e1cec10443af80b" title="The depth of the node as recorded in the working copy (svn_depth_unknown for files or when no depth i...">depth</a>;
<a name="l03508"></a>03508 <span class="comment"></span>
<a name="l03509"></a>03509 <span class="comment">  /** The actual size of the working file on disk, or SVN_INVALID_FILESIZE</span>
<a name="l03510"></a>03510 <span class="comment">   * if unknown (or if the item isn&#39;t a file at all). */</span>
<a name="l03511"></a><a class="code" href="structsvn__wc__status3__t.html#ac488973ea11126b2e6c13cc8cb378cb6">03511</a>   <a class="code" href="svn__types_8h.html#a726e581898461c1d3e7dbdb16d99dad0" title="The size of a file in the Subversion FS.">svn_filesize_t</a> <a class="code" href="structsvn__wc__status3__t.html#ac488973ea11126b2e6c13cc8cb378cb6" title="The actual size of the working file on disk, or SVN_INVALID_FILESIZE if unknown (or if the item isn&#39;t...">filesize</a>;
<a name="l03512"></a>03512 <span class="comment"></span>
<a name="l03513"></a>03513 <span class="comment">  /** If the path is under version control, versioned is TRUE, otherwise</span>
<a name="l03514"></a>03514 <span class="comment">   * FALSE. */</span>
<a name="l03515"></a><a class="code" href="structsvn__wc__status3__t.html#acd4d0347e573fb396f9fad8d753e6bb8">03515</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status3__t.html#acd4d0347e573fb396f9fad8d753e6bb8" title="If the path is under version control, versioned is TRUE, otherwise FALSE.">versioned</a>;
<a name="l03516"></a>03516 <span class="comment"></span>
<a name="l03517"></a>03517 <span class="comment">  /** Set to TRUE if the item is the victim of a conflict. */</span>
<a name="l03518"></a><a class="code" href="structsvn__wc__status3__t.html#a87c26fe5967473391db6f981ffe9aad6">03518</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status3__t.html#a87c26fe5967473391db6f981ffe9aad6" title="Set to TRUE if the item is the victim of a conflict.">conflicted</a>;
<a name="l03519"></a>03519 <span class="comment"></span>
<a name="l03520"></a>03520 <span class="comment">  /** The status of the node itself. In order of precedence: Obstructions,</span>
<a name="l03521"></a>03521 <span class="comment">   * structural changes, text changes. */</span>
<a name="l03522"></a><a class="code" href="structsvn__wc__status3__t.html#ad307b190d067e75dcb7ddeb237ece471">03522</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status3__t.html#ad307b190d067e75dcb7ddeb237ece471" title="The status of the node itself.">node_status</a>;
<a name="l03523"></a>03523 <span class="comment"></span>
<a name="l03524"></a>03524 <span class="comment">  /** The status of the entry&#39;s text. */</span>
<a name="l03525"></a><a class="code" href="structsvn__wc__status3__t.html#a9c404ccddd49b42681c90d034df69f28">03525</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status3__t.html#a9c404ccddd49b42681c90d034df69f28" title="The status of the entry&#39;s text.">text_status</a>;
<a name="l03526"></a>03526 <span class="comment"></span>
<a name="l03527"></a>03527 <span class="comment">  /** The status of the entry&#39;s properties. */</span>
<a name="l03528"></a><a class="code" href="structsvn__wc__status3__t.html#af414e62c40f1bf31490674b789890d6b">03528</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status3__t.html#af414e62c40f1bf31490674b789890d6b" title="The status of the entry&#39;s properties.">prop_status</a>;
<a name="l03529"></a>03529 <span class="comment"></span>
<a name="l03530"></a>03530 <span class="comment">  /** a file or directory can be &#39;copied&#39; if it&#39;s scheduled for</span>
<a name="l03531"></a>03531 <span class="comment">   * addition-with-history (or part of a subtree that is scheduled as such.).</span>
<a name="l03532"></a>03532 <span class="comment">   */</span>
<a name="l03533"></a><a class="code" href="structsvn__wc__status3__t.html#a315808b7092565777a58b4e3bf5f27df">03533</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status3__t.html#a315808b7092565777a58b4e3bf5f27df" title="a file or directory can be &#39;copied&#39; if it&#39;s scheduled for addition-with-history (or part of a subtree...">copied</a>;
<a name="l03534"></a>03534 <span class="comment"></span>
<a name="l03535"></a>03535 <span class="comment">  /** Base revision. */</span>
<a name="l03536"></a><a class="code" href="structsvn__wc__status3__t.html#a7db29ebbb7704c0c0b2b9791db17062e">03536</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__wc__status3__t.html#a7db29ebbb7704c0c0b2b9791db17062e" title="Base revision.">revision</a>;
<a name="l03537"></a>03537 <span class="comment"></span>
<a name="l03538"></a>03538 <span class="comment">  /** Last revision this was changed */</span>
<a name="l03539"></a><a class="code" href="structsvn__wc__status3__t.html#af5faa71e985f603c3845dc9be9b3081e">03539</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__wc__status3__t.html#af5faa71e985f603c3845dc9be9b3081e" title="Last revision this was changed.">changed_rev</a>;
<a name="l03540"></a>03540 <span class="comment"></span>
<a name="l03541"></a>03541 <span class="comment">  /** Date of last commit. */</span>
<a name="l03542"></a><a class="code" href="structsvn__wc__status3__t.html#af2567ace47b10bde52e0f3d0aa0f4624">03542</a>   apr_time_t <a class="code" href="structsvn__wc__status3__t.html#af2567ace47b10bde52e0f3d0aa0f4624" title="Date of last commit.">changed_date</a>;
<a name="l03543"></a>03543 <span class="comment"></span>
<a name="l03544"></a>03544 <span class="comment">  /** Last commit author of this item */</span>
<a name="l03545"></a><a class="code" href="structsvn__wc__status3__t.html#a478da2f2d9fd2e8965a8335df7e14ec7">03545</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__status3__t.html#a478da2f2d9fd2e8965a8335df7e14ec7" title="Last commit author of this item.">changed_author</a>;
<a name="l03546"></a>03546 <span class="comment"></span>
<a name="l03547"></a>03547 <span class="comment">  /** The URL of the repository */</span>
<a name="l03548"></a><a class="code" href="structsvn__wc__status3__t.html#a5788b9b2a1a8c356c4fe1a5e7181ce3e">03548</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__status3__t.html#a5788b9b2a1a8c356c4fe1a5e7181ce3e" title="The URL of the repository.">repos_root_url</a>;
<a name="l03549"></a>03549 <span class="comment"></span>
<a name="l03550"></a>03550 <span class="comment">  /** The UUID of the repository */</span>
<a name="l03551"></a><a class="code" href="structsvn__wc__status3__t.html#a4fa1b0453abdafc30942326e354428c2">03551</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__status3__t.html#a4fa1b0453abdafc30942326e354428c2" title="The UUID of the repository.">repos_uuid</a>;
<a name="l03552"></a>03552 <span class="comment"></span>
<a name="l03553"></a>03553 <span class="comment">  /** The in-repository path relative to the repository root. */</span>
<a name="l03554"></a><a class="code" href="structsvn__wc__status3__t.html#a1704a155da33eaf254ab49c92a1d321c">03554</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__status3__t.html#a1704a155da33eaf254ab49c92a1d321c" title="The in-repository path relative to the repository root.">repos_relpath</a>;
<a name="l03555"></a>03555 <span class="comment"></span>
<a name="l03556"></a>03556 <span class="comment">  /** a file or directory can be &#39;switched&#39; if the switch command has been</span>
<a name="l03557"></a>03557 <span class="comment">   * used.  If this is TRUE, then file_external will be FALSE.</span>
<a name="l03558"></a>03558 <span class="comment">   */</span>
<a name="l03559"></a><a class="code" href="structsvn__wc__status3__t.html#abcc228441a9ee801f0378fda593158fa">03559</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status3__t.html#abcc228441a9ee801f0378fda593158fa" title="a file or directory can be &#39;switched&#39; if the switch command has been used.">switched</a>;
<a name="l03560"></a>03560 <span class="comment"></span>
<a name="l03561"></a>03561 <span class="comment">  /** This directory has a working copy lock */</span>
<a name="l03562"></a><a class="code" href="structsvn__wc__status3__t.html#a5d3a86be380bf56bdc41149e6981333d">03562</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status3__t.html#a5d3a86be380bf56bdc41149e6981333d" title="This directory has a working copy lock.">locked</a>;
<a name="l03563"></a>03563 <span class="comment"></span>
<a name="l03564"></a>03564 <span class="comment">  /** The repository file lock. (Values of path, token, owner, comment</span>
<a name="l03565"></a>03565 <span class="comment">   * and are available if a lock is present) */</span>
<a name="l03566"></a><a class="code" href="structsvn__wc__status3__t.html#a89b12990937c89ebc04603577a06077a">03566</a>   <span class="keyword">const</span> <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *<a class="code" href="structsvn__wc__status3__t.html#a89b12990937c89ebc04603577a06077a" title="The repository file lock.">lock</a>;
<a name="l03567"></a>03567 <span class="comment"></span>
<a name="l03568"></a>03568 <span class="comment">  /** Which changelist this item is part of, or NULL if not part of any. */</span>
<a name="l03569"></a><a class="code" href="structsvn__wc__status3__t.html#aaa7cd700dff951045ecdcf0e2c57cd42">03569</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__status3__t.html#aaa7cd700dff951045ecdcf0e2c57cd42" title="Which changelist this item is part of, or NULL if not part of any.">changelist</a>;
<a name="l03570"></a>03570 <span class="comment"></span>
<a name="l03571"></a>03571 <span class="comment">  /**</span>
<a name="l03572"></a>03572 <span class="comment">   * @defgroup svn_wc_status_ood WC out-of-date info from the repository</span>
<a name="l03573"></a>03573 <span class="comment">   * @{</span>
<a name="l03574"></a>03574 <span class="comment">   *</span>
<a name="l03575"></a>03575 <span class="comment">   * When the working copy item is out-of-date compared to the</span>
<a name="l03576"></a>03576 <span class="comment">   * repository, the following fields represent the state of the</span>
<a name="l03577"></a>03577 <span class="comment">   * youngest revision of the item in the repository.  If the working</span>
<a name="l03578"></a>03578 <span class="comment">   * copy is not out of date, the fields are initialized as described</span>
<a name="l03579"></a>03579 <span class="comment">   * below.</span>
<a name="l03580"></a>03580 <span class="comment">   */</span>
<a name="l03581"></a>03581 <span class="comment"></span>
<a name="l03582"></a>03582 <span class="comment">  /** Set to the node kind of the youngest commit, or #svn_node_none</span>
<a name="l03583"></a>03583 <span class="comment">   * if not out of date. */</span>
<a name="l03584"></a><a class="code" href="group__svn__wc__status__ood.html#ga31ea635a0b3e05457849bbea12ab9b29">03584</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="group__svn__wc__status__ood.html#ga31ea635a0b3e05457849bbea12ab9b29" title="Set to the node kind of the youngest commit, or svn_node_none if not out of date.">ood_kind</a>;
<a name="l03585"></a>03585 <span class="comment"></span>
<a name="l03586"></a>03586 <span class="comment">  /** The status of the node, based on the text status if the node has no</span>
<a name="l03587"></a>03587 <span class="comment">   * restructuring changes */</span>
<a name="l03588"></a><a class="code" href="group__svn__wc__status__ood.html#ga06cc91538405d20e1a3ae84d1972394a">03588</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="group__svn__wc__status__ood.html#ga06cc91538405d20e1a3ae84d1972394a" title="The status of the node, based on the text status if the node has no restructuring changes...">repos_node_status</a>;
<a name="l03589"></a>03589 <span class="comment"></span>
<a name="l03590"></a>03590 <span class="comment">  /** The entry&#39;s text status in the repository. */</span>
<a name="l03591"></a><a class="code" href="group__svn__wc__status__ood.html#ga0eeb31f639737f351a11ac782289eef5">03591</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="group__svn__wc__status__ood.html#ga0eeb31f639737f351a11ac782289eef5" title="The entry&#39;s text status in the repository.">repos_text_status</a>;
<a name="l03592"></a>03592 <span class="comment"></span>
<a name="l03593"></a>03593 <span class="comment">  /** The entry&#39;s property status in the repository. */</span>
<a name="l03594"></a><a class="code" href="group__svn__wc__status__ood.html#ga9570b7af242787ceabe9fb3c61ac6623">03594</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="group__svn__wc__status__ood.html#ga9570b7af242787ceabe9fb3c61ac6623" title="The entry&#39;s property status in the repository.">repos_prop_status</a>;
<a name="l03595"></a>03595 <span class="comment"></span>
<a name="l03596"></a>03596 <span class="comment">  /** The entry&#39;s lock in the repository, if any. */</span>
<a name="l03597"></a><a class="code" href="group__svn__wc__status__ood.html#ga0cf1302ab1132126561a9524e94bd204">03597</a>   <span class="keyword">const</span> <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *<a class="code" href="group__svn__wc__status__ood.html#ga0cf1302ab1132126561a9524e94bd204" title="The entry&#39;s lock in the repository, if any.">repos_lock</a>;
<a name="l03598"></a>03598 <span class="comment"></span>
<a name="l03599"></a>03599 <span class="comment">  /** Set to the youngest committed revision, or #SVN_INVALID_REVNUM</span>
<a name="l03600"></a>03600 <span class="comment">   * if not out of date. */</span>
<a name="l03601"></a><a class="code" href="group__svn__wc__status__ood.html#ga747b444195cd89698404102daf6a7bb1">03601</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="group__svn__wc__status__ood.html#ga747b444195cd89698404102daf6a7bb1" title="Set to the youngest committed revision, or SVN_INVALID_REVNUM if not out of date.">ood_changed_rev</a>;
<a name="l03602"></a>03602 <span class="comment"></span>
<a name="l03603"></a>03603 <span class="comment">  /** Set to the most recent commit date, or @c 0 if not out of date. */</span>
<a name="l03604"></a><a class="code" href="group__svn__wc__status__ood.html#ga0bd8014c8ed8ce6e997470f8e7d65277">03604</a>   apr_time_t <a class="code" href="group__svn__wc__status__ood.html#ga0bd8014c8ed8ce6e997470f8e7d65277" title="Set to the most recent commit date, or 0 if not out of date.">ood_changed_date</a>;
<a name="l03605"></a>03605 <span class="comment"></span>
<a name="l03606"></a>03606 <span class="comment">  /** Set to the user name of the youngest commit, or @c NULL if not</span>
<a name="l03607"></a>03607 <span class="comment">   * out of date or non-existent.  Because a non-existent @c</span>
<a name="l03608"></a>03608 <span class="comment">   * svn:author property has the same behavior as an out-of-date</span>
<a name="l03609"></a>03609 <span class="comment">   * working copy, examine @c ood_last_cmt_rev to determine whether</span>
<a name="l03610"></a>03610 <span class="comment">   * the working copy is out of date. */</span>
<a name="l03611"></a><a class="code" href="group__svn__wc__status__ood.html#ga3ec1015fd713f3b49b890afb9dd2070a">03611</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="group__svn__wc__status__ood.html#ga3ec1015fd713f3b49b890afb9dd2070a" title="Set to the user name of the youngest commit, or NULL if not out of date or non-existent.">ood_changed_author</a>;
<a name="l03612"></a>03612 <span class="comment"></span>
<a name="l03613"></a>03613 <span class="comment">  /** @} */</span>
<a name="l03614"></a>03614 
<a name="l03615"></a>03615   <span class="comment">/* NOTE! Please update svn_wc_dup_status3() when adding new fields here. */</span>
<a name="l03616"></a>03616 } <a class="code" href="group__svn__wc__status.html#gaaacb0e6f51c41931bd570da2df072ded" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a>;
<a name="l03617"></a>03617 <span class="comment"></span>
<a name="l03618"></a>03618 <span class="comment">/**</span>
<a name="l03619"></a>03619 <span class="comment"> * ### All diffs are not yet known.</span>
<a name="l03620"></a>03620 <span class="comment"> * Same as svn_wc_status3_t, but without the #svn_boolean_t &#39;versioned&#39;</span>
<a name="l03621"></a>03621 <span class="comment"> * field. Instead an item that is not versioned has the &#39;entry&#39; field set to</span>
<a name="l03622"></a>03622 <span class="comment"> * @c NULL.</span>
<a name="l03623"></a>03623 <span class="comment"> *</span>
<a name="l03624"></a>03624 <span class="comment"> * @since New in 1.2.</span>
<a name="l03625"></a>03625 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03626"></a>03626 <span class="comment"> */</span>
<a name="l03627"></a><a class="code" href="structsvn__wc__status2__t.html">03627</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__status2__t.html" title="### All diffs are not yet known.">svn_wc_status2_t</a>
<a name="l03628"></a>03628 {<span class="comment"></span>
<a name="l03629"></a>03629 <span class="comment">  /** Can be @c NULL if not under version control. */</span>
<a name="l03630"></a><a class="code" href="structsvn__wc__status2__t.html#aaa5c7ea143edf4699e46cbd346edfd41">03630</a>   <span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__t.html" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a> *<a class="code" href="structsvn__wc__status2__t.html#aaa5c7ea143edf4699e46cbd346edfd41" title="Can be NULL if not under version control.">entry</a>;
<a name="l03631"></a>03631 <span class="comment"></span>
<a name="l03632"></a>03632 <span class="comment">  /** The status of the entry itself, including its text if it is a file. */</span>
<a name="l03633"></a><a class="code" href="structsvn__wc__status2__t.html#a29caa09c608f664ede6b36356f01aa25">03633</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status2__t.html#a29caa09c608f664ede6b36356f01aa25" title="The status of the entry itself, including its text if it is a file.">text_status</a>;
<a name="l03634"></a>03634 <span class="comment"></span>
<a name="l03635"></a>03635 <span class="comment">  /** The status of the entry&#39;s properties. */</span>
<a name="l03636"></a><a class="code" href="structsvn__wc__status2__t.html#af7d8521653ec8e00b2b5ceb9bdee9445">03636</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status2__t.html#af7d8521653ec8e00b2b5ceb9bdee9445" title="The status of the entry&#39;s properties.">prop_status</a>;
<a name="l03637"></a>03637 <span class="comment"></span>
<a name="l03638"></a>03638 <span class="comment">  /** a directory can be &#39;locked&#39; if a working copy update was interrupted. */</span>
<a name="l03639"></a><a class="code" href="structsvn__wc__status2__t.html#a5138c89c7c24552c935d3b9a0f84a180">03639</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status2__t.html#a5138c89c7c24552c935d3b9a0f84a180" title="a directory can be &#39;locked&#39; if a working copy update was interrupted.">locked</a>;
<a name="l03640"></a>03640 <span class="comment"></span>
<a name="l03641"></a>03641 <span class="comment">  /** a file or directory can be &#39;copied&#39; if it&#39;s scheduled for</span>
<a name="l03642"></a>03642 <span class="comment">   * addition-with-history (or part of a subtree that is scheduled as such.).</span>
<a name="l03643"></a>03643 <span class="comment">   */</span>
<a name="l03644"></a><a class="code" href="structsvn__wc__status2__t.html#af3ffc4b5059a9230a4e23511df00396d">03644</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status2__t.html#af3ffc4b5059a9230a4e23511df00396d" title="a file or directory can be &#39;copied&#39; if it&#39;s scheduled for addition-with-history (or part of a subtree...">copied</a>;
<a name="l03645"></a>03645 <span class="comment"></span>
<a name="l03646"></a>03646 <span class="comment">  /** a file or directory can be &#39;switched&#39; if the switch command has been</span>
<a name="l03647"></a>03647 <span class="comment">   * used.  If this is TRUE, then file_external will be FALSE.</span>
<a name="l03648"></a>03648 <span class="comment">   */</span>
<a name="l03649"></a><a class="code" href="structsvn__wc__status2__t.html#a03d273c4c68237c6a17f677ab716e9d7">03649</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status2__t.html#a03d273c4c68237c6a17f677ab716e9d7" title="a file or directory can be &#39;switched&#39; if the switch command has been used.">switched</a>;
<a name="l03650"></a>03650 <span class="comment"></span>
<a name="l03651"></a>03651 <span class="comment">  /** The entry&#39;s text status in the repository. */</span>
<a name="l03652"></a><a class="code" href="structsvn__wc__status2__t.html#ad31b3e38aee584a68a4171e31bb64104">03652</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status2__t.html#ad31b3e38aee584a68a4171e31bb64104" title="The entry&#39;s text status in the repository.">repos_text_status</a>;
<a name="l03653"></a>03653 <span class="comment"></span>
<a name="l03654"></a>03654 <span class="comment">  /** The entry&#39;s property status in the repository. */</span>
<a name="l03655"></a><a class="code" href="structsvn__wc__status2__t.html#a9761a529b059476d8a1c210c958ec0d7">03655</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status2__t.html#a9761a529b059476d8a1c210c958ec0d7" title="The entry&#39;s property status in the repository.">repos_prop_status</a>;
<a name="l03656"></a>03656 <span class="comment"></span>
<a name="l03657"></a>03657 <span class="comment">  /** The entry&#39;s lock in the repository, if any. */</span>
<a name="l03658"></a><a class="code" href="structsvn__wc__status2__t.html#ac21e7e70a47fdf2e922086beb4e3328a">03658</a>   <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *<a class="code" href="structsvn__wc__status2__t.html#ac21e7e70a47fdf2e922086beb4e3328a" title="The entry&#39;s lock in the repository, if any.">repos_lock</a>;
<a name="l03659"></a>03659 <span class="comment"></span>
<a name="l03660"></a>03660 <span class="comment">  /** Set to the URI (actual or expected) of the item.</span>
<a name="l03661"></a>03661 <span class="comment">   * @since New in 1.3</span>
<a name="l03662"></a>03662 <span class="comment">   */</span>
<a name="l03663"></a><a class="code" href="structsvn__wc__status2__t.html#a2eb27dfa3ae98d54f08301a5f51cc813">03663</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structsvn__wc__status2__t.html#a2eb27dfa3ae98d54f08301a5f51cc813" title="Set to the URI (actual or expected) of the item.">url</a>;
<a name="l03664"></a>03664 <span class="comment"></span>
<a name="l03665"></a>03665 <span class="comment">  /**</span>
<a name="l03666"></a>03666 <span class="comment">   * @defgroup svn_wc_status_ood WC out-of-date info from the repository</span>
<a name="l03667"></a>03667 <span class="comment">   * @{</span>
<a name="l03668"></a>03668 <span class="comment">   *</span>
<a name="l03669"></a>03669 <span class="comment">   * When the working copy item is out-of-date compared to the</span>
<a name="l03670"></a>03670 <span class="comment">   * repository, the following fields represent the state of the</span>
<a name="l03671"></a>03671 <span class="comment">   * youngest revision of the item in the repository.  If the working</span>
<a name="l03672"></a>03672 <span class="comment">   * copy is not out of date, the fields are initialized as described</span>
<a name="l03673"></a>03673 <span class="comment">   * below.</span>
<a name="l03674"></a>03674 <span class="comment">   */</span>
<a name="l03675"></a>03675 <span class="comment"></span>
<a name="l03676"></a>03676 <span class="comment">  /** Set to the youngest committed revision, or #SVN_INVALID_REVNUM</span>
<a name="l03677"></a>03677 <span class="comment">   * if not out of date.</span>
<a name="l03678"></a>03678 <span class="comment">   * @since New in 1.3</span>
<a name="l03679"></a>03679 <span class="comment">   */</span>
<a name="l03680"></a><a class="code" href="group__svn__wc__status__ood.html#gab35e3202870d8d7797b2f6ef0c2b0640">03680</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="group__svn__wc__status__ood.html#gab35e3202870d8d7797b2f6ef0c2b0640" title="Set to the youngest committed revision, or SVN_INVALID_REVNUM if not out of date.">ood_last_cmt_rev</a>;
<a name="l03681"></a>03681 <span class="comment"></span>
<a name="l03682"></a>03682 <span class="comment">  /** Set to the most recent commit date, or @c 0 if not out of date.</span>
<a name="l03683"></a>03683 <span class="comment">   * @since New in 1.3</span>
<a name="l03684"></a>03684 <span class="comment">   */</span>
<a name="l03685"></a><a class="code" href="group__svn__wc__status__ood.html#ga040ed14e88245ec66489a6eea87290ab">03685</a>   apr_time_t <a class="code" href="group__svn__wc__status__ood.html#ga040ed14e88245ec66489a6eea87290ab" title="Set to the most recent commit date, or 0 if not out of date.">ood_last_cmt_date</a>;
<a name="l03686"></a>03686 <span class="comment"></span>
<a name="l03687"></a>03687 <span class="comment">  /** Set to the node kind of the youngest commit, or #svn_node_none</span>
<a name="l03688"></a>03688 <span class="comment">   * if not out of date.</span>
<a name="l03689"></a>03689 <span class="comment">   * @since New in 1.3</span>
<a name="l03690"></a>03690 <span class="comment">   */</span>
<a name="l03691"></a><a class="code" href="group__svn__wc__status__ood.html#ga7f72ab87b8a0d10729c2c2751f496949">03691</a>   <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> <a class="code" href="group__svn__wc__status__ood.html#ga7f72ab87b8a0d10729c2c2751f496949" title="Set to the node kind of the youngest commit, or svn_node_none if not out of date.">ood_kind</a>;
<a name="l03692"></a>03692 <span class="comment"></span>
<a name="l03693"></a>03693 <span class="comment">  /** Set to the user name of the youngest commit, or @c NULL if not</span>
<a name="l03694"></a>03694 <span class="comment">   * out of date or non-existent.  Because a non-existent @c</span>
<a name="l03695"></a>03695 <span class="comment">   * svn:author property has the same behavior as an out-of-date</span>
<a name="l03696"></a>03696 <span class="comment">   * working copy, examine @c ood_last_cmt_rev to determine whether</span>
<a name="l03697"></a>03697 <span class="comment">   * the working copy is out of date.</span>
<a name="l03698"></a>03698 <span class="comment">   * @since New in 1.3</span>
<a name="l03699"></a>03699 <span class="comment">   */</span>
<a name="l03700"></a><a class="code" href="group__svn__wc__status__ood.html#ga28455384b310ce2eace21740138fdf44">03700</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="group__svn__wc__status__ood.html#ga28455384b310ce2eace21740138fdf44" title="Set to the user name of the youngest commit, or NULL if not out of date or non-existent.">ood_last_cmt_author</a>;
<a name="l03701"></a>03701 <span class="comment"></span>
<a name="l03702"></a>03702 <span class="comment">  /** @} */</span>
<a name="l03703"></a>03703 <span class="comment"></span>
<a name="l03704"></a>03704 <span class="comment">  /** Non-NULL if the entry is the victim of a tree conflict.</span>
<a name="l03705"></a>03705 <span class="comment">   * @since New in 1.6</span>
<a name="l03706"></a>03706 <span class="comment">   */</span>
<a name="l03707"></a><a class="code" href="structsvn__wc__status2__t.html#aa2ffa9449d61787b9f78ad13f98f1486">03707</a>   <a class="code" href="structsvn__wc__conflict__description__t.html" title="Similar to svn_wc_conflict_description2_t, but with relative paths and adm_access batons...">svn_wc_conflict_description_t</a> *<a class="code" href="structsvn__wc__status2__t.html#aa2ffa9449d61787b9f78ad13f98f1486" title="Non-NULL if the entry is the victim of a tree conflict.">tree_conflict</a>;
<a name="l03708"></a>03708 <span class="comment"></span>
<a name="l03709"></a>03709 <span class="comment">  /** If the item is a file that was added to the working copy with an</span>
<a name="l03710"></a>03710 <span class="comment">   * svn:externals; if file_external is TRUE, then switched is always</span>
<a name="l03711"></a>03711 <span class="comment">   * FALSE.</span>
<a name="l03712"></a>03712 <span class="comment">   * @since New in 1.6</span>
<a name="l03713"></a>03713 <span class="comment">   */</span>
<a name="l03714"></a><a class="code" href="structsvn__wc__status2__t.html#a6fede287fb139b46746e803fb1b99327">03714</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status2__t.html#a6fede287fb139b46746e803fb1b99327" title="If the item is a file that was added to the working copy with an svn:externals; if file_external is T...">file_external</a>;
<a name="l03715"></a>03715 <span class="comment"></span>
<a name="l03716"></a>03716 <span class="comment">  /** The actual status of the text compared to the pristine base of the</span>
<a name="l03717"></a>03717 <span class="comment">   * file. This value isn&#39;t masked by other working copy statuses.</span>
<a name="l03718"></a>03718 <span class="comment">   * @c pristine_text_status is #svn_wc_status_none if this value was</span>
<a name="l03719"></a>03719 <span class="comment">   * not calculated during the status walk.</span>
<a name="l03720"></a>03720 <span class="comment">   * @since New in 1.6</span>
<a name="l03721"></a>03721 <span class="comment">   */</span>
<a name="l03722"></a><a class="code" href="structsvn__wc__status2__t.html#a9fbf8faa258e0e4037a9db2d04b44787">03722</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status2__t.html#a9fbf8faa258e0e4037a9db2d04b44787" title="The actual status of the text compared to the pristine base of the file.">pristine_text_status</a>;
<a name="l03723"></a>03723 <span class="comment"></span>
<a name="l03724"></a>03724 <span class="comment">  /** The actual status of the properties compared to the pristine base of</span>
<a name="l03725"></a>03725 <span class="comment">   * the node. This value isn&#39;t masked by other working copy statuses.</span>
<a name="l03726"></a>03726 <span class="comment">   * @c pristine_prop_status is #svn_wc_status_none if this value was</span>
<a name="l03727"></a>03727 <span class="comment">   * not calculated during the status walk.</span>
<a name="l03728"></a>03728 <span class="comment">   * @since New in 1.6</span>
<a name="l03729"></a>03729 <span class="comment">   */</span>
<a name="l03730"></a><a class="code" href="structsvn__wc__status2__t.html#a261ca6630b3a44f7f652e880379c04c9">03730</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status2__t.html#a261ca6630b3a44f7f652e880379c04c9" title="The actual status of the properties compared to the pristine base of the node.">pristine_prop_status</a>;
<a name="l03731"></a>03731 
<a name="l03732"></a>03732 } <a class="code" href="group__svn__wc__status.html#gaabad10f458b21f75780e0ef732c0ae1c" title="### All diffs are not yet known.">svn_wc_status2_t</a>;
<a name="l03733"></a>03733 
<a name="l03734"></a>03734 
<a name="l03735"></a>03735 <span class="comment"></span>
<a name="l03736"></a>03736 <span class="comment">/**</span>
<a name="l03737"></a>03737 <span class="comment"> * Same as #svn_wc_status2_t, but without the #svn_lock_t &#39;repos_lock&#39; field.</span>
<a name="l03738"></a>03738 <span class="comment"> *</span>
<a name="l03739"></a>03739 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l03740"></a>03740 <span class="comment"> */</span>
<a name="l03741"></a><a class="code" href="structsvn__wc__status__t.html">03741</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a>
<a name="l03742"></a>03742 {<span class="comment"></span>
<a name="l03743"></a>03743 <span class="comment">  /** Can be @c NULL if not under version control. */</span>
<a name="l03744"></a><a class="code" href="structsvn__wc__status__t.html#add4e3f51ca9f553930db22b60946077d">03744</a>   <span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__t.html" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a> *<a class="code" href="structsvn__wc__status__t.html#add4e3f51ca9f553930db22b60946077d" title="Can be NULL if not under version control.">entry</a>;
<a name="l03745"></a>03745 <span class="comment"></span>
<a name="l03746"></a>03746 <span class="comment">  /** The status of the entries text. */</span>
<a name="l03747"></a><a class="code" href="structsvn__wc__status__t.html#a9c05f0c158dd1cfba1a21e5fbf05a7a4">03747</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status__t.html#a9c05f0c158dd1cfba1a21e5fbf05a7a4" title="The status of the entries text.">text_status</a>;
<a name="l03748"></a>03748 <span class="comment"></span>
<a name="l03749"></a>03749 <span class="comment">  /** The status of the entries properties. */</span>
<a name="l03750"></a><a class="code" href="structsvn__wc__status__t.html#adb93e40c967aeee2cbcb1acdc3590cab">03750</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status__t.html#adb93e40c967aeee2cbcb1acdc3590cab" title="The status of the entries properties.">prop_status</a>;
<a name="l03751"></a>03751 <span class="comment"></span>
<a name="l03752"></a>03752 <span class="comment">  /** a directory can be &#39;locked&#39; if a working copy update was interrupted. */</span>
<a name="l03753"></a><a class="code" href="structsvn__wc__status__t.html#a991df903a22831be97ab4b03421c3281">03753</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status__t.html#a991df903a22831be97ab4b03421c3281" title="a directory can be &#39;locked&#39; if a working copy update was interrupted.">locked</a>;
<a name="l03754"></a>03754 <span class="comment"></span>
<a name="l03755"></a>03755 <span class="comment">  /** a file or directory can be &#39;copied&#39; if it&#39;s scheduled for</span>
<a name="l03756"></a>03756 <span class="comment">   * addition-with-history (or part of a subtree that is scheduled as such.).</span>
<a name="l03757"></a>03757 <span class="comment">   */</span>
<a name="l03758"></a><a class="code" href="structsvn__wc__status__t.html#a77651987c76ee7620368eb5c6ac2440c">03758</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status__t.html#a77651987c76ee7620368eb5c6ac2440c" title="a file or directory can be &#39;copied&#39; if it&#39;s scheduled for addition-with-history (or part of a subtree...">copied</a>;
<a name="l03759"></a>03759 <span class="comment"></span>
<a name="l03760"></a>03760 <span class="comment">  /** a file or directory can be &#39;switched&#39; if the switch command has been</span>
<a name="l03761"></a>03761 <span class="comment">   * used.</span>
<a name="l03762"></a>03762 <span class="comment">   */</span>
<a name="l03763"></a><a class="code" href="structsvn__wc__status__t.html#adb8663cf08a5dd8b167f459e9ed0a91d">03763</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__status__t.html#adb8663cf08a5dd8b167f459e9ed0a91d" title="a file or directory can be &#39;switched&#39; if the switch command has been used.">switched</a>;
<a name="l03764"></a>03764 <span class="comment"></span>
<a name="l03765"></a>03765 <span class="comment">  /** The entry&#39;s text status in the repository. */</span>
<a name="l03766"></a><a class="code" href="structsvn__wc__status__t.html#a59263b17cebfed45fc0ace04d103e1f3">03766</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status__t.html#a59263b17cebfed45fc0ace04d103e1f3" title="The entry&#39;s text status in the repository.">repos_text_status</a>;
<a name="l03767"></a>03767 <span class="comment"></span>
<a name="l03768"></a>03768 <span class="comment">  /** The entry&#39;s property status in the repository. */</span>
<a name="l03769"></a><a class="code" href="structsvn__wc__status__t.html#a636aa7e20f3306ef67f102e1080b84e0">03769</a>   <span class="keyword">enum</span> <a class="code" href="group__svn__wc__status.html#gad90a5ae2e412cd6fc047a64d627bd96d" title="The type of status for the working copy.">svn_wc_status_kind</a> <a class="code" href="structsvn__wc__status__t.html#a636aa7e20f3306ef67f102e1080b84e0" title="The entry&#39;s property status in the repository.">repos_prop_status</a>;
<a name="l03770"></a>03770 
<a name="l03771"></a>03771 } <a class="code" href="group__svn__wc__status.html#ga03f227a4ca2b2a55c69375b3b7d225b5" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a>;
<a name="l03772"></a>03772 
<a name="l03773"></a>03773 <span class="comment"></span>
<a name="l03774"></a>03774 <span class="comment">/**</span>
<a name="l03775"></a>03775 <span class="comment"> * Return a deep copy of the @a orig_stat status structure, allocated</span>
<a name="l03776"></a>03776 <span class="comment"> * in @a pool.</span>
<a name="l03777"></a>03777 <span class="comment"> *</span>
<a name="l03778"></a>03778 <span class="comment"> * @since New in 1.7.</span>
<a name="l03779"></a>03779 <span class="comment"> */</span>
<a name="l03780"></a>03780 <a class="code" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a> *
<a name="l03781"></a>03781 <a class="code" href="group__svn__wc__status.html#ga29408615c14deb823ab2dafa3de10a5d" title="Return a deep copy of the orig_stat status structure, allocated in pool.">svn_wc_dup_status3</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a> *orig_stat,
<a name="l03782"></a>03782                    apr_pool_t *pool);
<a name="l03783"></a>03783 <span class="comment"></span>
<a name="l03784"></a>03784 <span class="comment">/**</span>
<a name="l03785"></a>03785 <span class="comment"> * Same as svn_wc_dup_status3(), but for older svn_wc_status_t structures.</span>
<a name="l03786"></a>03786 <span class="comment"> *</span>
<a name="l03787"></a>03787 <span class="comment"> * @since New in 1.2</span>
<a name="l03788"></a>03788 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03789"></a>03789 <span class="comment"> */</span>
<a name="l03790"></a>03790 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03791"></a>03791 <a class="code" href="structsvn__wc__status2__t.html" title="### All diffs are not yet known.">svn_wc_status2_t</a> *
<a name="l03792"></a>03792 <a class="code" href="group__svn__wc__status.html#gac330f5bc134efdbcf4b36c88faa78579" title="Same as svn_wc_dup_status3(), but for older svn_wc_status_t structures.">svn_wc_dup_status2</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__status2__t.html" title="### All diffs are not yet known.">svn_wc_status2_t</a> *orig_stat,
<a name="l03793"></a>03793                    apr_pool_t *pool);
<a name="l03794"></a>03794 
<a name="l03795"></a>03795 <span class="comment"></span>
<a name="l03796"></a>03796 <span class="comment">/**</span>
<a name="l03797"></a>03797 <span class="comment"> * Same as svn_wc_dup_status2(), but for older svn_wc_status_t structures.</span>
<a name="l03798"></a>03798 <span class="comment"> *</span>
<a name="l03799"></a>03799 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l03800"></a>03800 <span class="comment"> */</span>
<a name="l03801"></a>03801 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03802"></a>03802 <a class="code" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> *
<a name="l03803"></a>03803 <a class="code" href="group__svn__wc__status.html#ga4eb3742e8ac569f2467ef77d885b7a57" title="Same as svn_wc_dup_status2(), but for older svn_wc_status_t structures.">svn_wc_dup_status</a>(<span class="keyword">const</span> <a class="code" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> *orig_stat,
<a name="l03804"></a>03804                   apr_pool_t *pool);
<a name="l03805"></a>03805 
<a name="l03806"></a>03806 <span class="comment"></span>
<a name="l03807"></a>03807 <span class="comment">/**</span>
<a name="l03808"></a>03808 <span class="comment"> * Fill @a *status for @a local_abspath, allocating in @a result_pool.</span>
<a name="l03809"></a>03809 <span class="comment"> * Use @a scratch_pool for temporary allocations.</span>
<a name="l03810"></a>03810 <span class="comment"> *</span>
<a name="l03811"></a>03811 <span class="comment"> * Here are some things to note about the returned structure.  A quick</span>
<a name="l03812"></a>03812 <span class="comment"> * examination of the @c status-&gt;text_status after a successful return of</span>
<a name="l03813"></a>03813 <span class="comment"> * this function can reveal the following things:</span>
<a name="l03814"></a>03814 <span class="comment"> *</span>
<a name="l03815"></a>03815 <span class="comment"> *    - #svn_wc_status_none : @a local_abspath is not versioned, and is</span>
<a name="l03816"></a>03816 <span class="comment"> *                            not present on disk</span>
<a name="l03817"></a>03817 <span class="comment"> *</span>
<a name="l03818"></a>03818 <span class="comment"> *    - #svn_wc_status_missing : @a local_abspath is versioned, but is</span>
<a name="l03819"></a>03819 <span class="comment"> *                               missing from the working copy.</span>
<a name="l03820"></a>03820 <span class="comment"> *</span>
<a name="l03821"></a>03821 <span class="comment"> *    - #svn_wc_status_unversioned : @a local_abspath is not versioned,</span>
<a name="l03822"></a>03822 <span class="comment"> *                                   but is present on disk and not being</span>
<a name="l03823"></a>03823 <span class="comment"> *                                   ignored (see above).</span>
<a name="l03824"></a>03824 <span class="comment"> *</span>
<a name="l03825"></a>03825 <span class="comment"> * The other available results for the @c text_status field are more</span>
<a name="l03826"></a>03826 <span class="comment"> * straightforward in their meanings.  See the comments on the</span>
<a name="l03827"></a>03827 <span class="comment"> * #svn_wc_status_kind structure for some hints.</span>
<a name="l03828"></a>03828 <span class="comment"> *</span>
<a name="l03829"></a>03829 <span class="comment"> * @since New in 1.7.</span>
<a name="l03830"></a>03830 <span class="comment"> */</span>
<a name="l03831"></a>03831 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03832"></a>03832 <a class="code" href="group__svn__wc__status.html#ga0e93907a864fb509616bc84477c83a40" title="Fill *status for local_abspath, allocating in result_pool.">svn_wc_status3</a>(<a class="code" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a> **status,
<a name="l03833"></a>03833                <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l03834"></a>03834                <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l03835"></a>03835                apr_pool_t *result_pool,
<a name="l03836"></a>03836                apr_pool_t *scratch_pool);
<a name="l03837"></a>03837 <span class="comment"></span>
<a name="l03838"></a>03838 <span class="comment">/** Similar to svn_wc_status3(), but with a adm_access baton and absolute</span>
<a name="l03839"></a>03839 <span class="comment"> * path.</span>
<a name="l03840"></a>03840 <span class="comment"> *</span>
<a name="l03841"></a>03841 <span class="comment"> * @since New in 1.2.</span>
<a name="l03842"></a>03842 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03843"></a>03843 <span class="comment"> */</span>
<a name="l03844"></a>03844 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03845"></a>03845 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03846"></a>03846 <a class="code" href="group__svn__wc__status.html#ga83f1370500939a518fdd46c909a0587d" title="Similar to svn_wc_status3(), but with a adm_access baton and absolute path.">svn_wc_status2</a>(<a class="code" href="structsvn__wc__status2__t.html" title="### All diffs are not yet known.">svn_wc_status2_t</a> **status,
<a name="l03847"></a>03847                <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03848"></a>03848                <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l03849"></a>03849                apr_pool_t *pool);
<a name="l03850"></a>03850 
<a name="l03851"></a>03851 <span class="comment"></span>
<a name="l03852"></a>03852 <span class="comment">/**</span>
<a name="l03853"></a>03853 <span class="comment"> *  Same as svn_wc_status2(), but for older svn_wc_status_t structures.</span>
<a name="l03854"></a>03854 <span class="comment"> *</span>
<a name="l03855"></a>03855 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l03856"></a>03856 <span class="comment"> */</span>
<a name="l03857"></a>03857 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l03858"></a>03858 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03859"></a>03859 <a class="code" href="group__svn__wc__status.html#ga2dfbf2bcac68c534a4d54cf251d7abd6" title="Same as svn_wc_status2(), but for older svn_wc_status_t structures.">svn_wc_status</a>(<a class="code" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> **status,
<a name="l03860"></a>03860               <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03861"></a>03861               <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l03862"></a>03862               apr_pool_t *pool);
<a name="l03863"></a>03863 
<a name="l03864"></a>03864 
<a name="l03865"></a>03865 
<a name="l03866"></a>03866 <span class="comment"></span>
<a name="l03867"></a>03867 <span class="comment">/**</span>
<a name="l03868"></a>03868 <span class="comment"> * A callback for reporting a @a status about @a local_abspath.</span>
<a name="l03869"></a>03869 <span class="comment"> *</span>
<a name="l03870"></a>03870 <span class="comment"> * @a baton is a closure object; it should be provided by the</span>
<a name="l03871"></a>03871 <span class="comment"> * implementation, and passed by the caller.</span>
<a name="l03872"></a>03872 <span class="comment"> *</span>
<a name="l03873"></a>03873 <span class="comment"> * @a scratch_pool will be cleared between invocations to the callback.</span>
<a name="l03874"></a>03874 <span class="comment"> *</span>
<a name="l03875"></a>03875 <span class="comment"> * ### we might be revamping the status infrastructure, and this callback</span>
<a name="l03876"></a>03876 <span class="comment"> * ### could totally disappear by the end of 1.7 development. however, we</span>
<a name="l03877"></a>03877 <span class="comment"> * ### need to mark the STATUS parameter as &quot;const&quot; so that it is easier</span>
<a name="l03878"></a>03878 <span class="comment"> * ### to reason about who/what can modify those structures.</span>
<a name="l03879"></a>03879 <span class="comment"> *</span>
<a name="l03880"></a>03880 <span class="comment"> * @since New in 1.7.</span>
<a name="l03881"></a>03881 <span class="comment"> */</span>
<a name="l03882"></a><a class="code" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d">03882</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_status_func4_t)(<span class="keywordtype">void</span> *baton,
<a name="l03883"></a>03883                                               <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l03884"></a>03884                                               <span class="keyword">const</span> <a class="code" href="structsvn__wc__status3__t.html" title="Structure for holding the &quot;status&quot; of a working copy item.">svn_wc_status3_t</a> *status,
<a name="l03885"></a>03885                                               apr_pool_t *scratch_pool);
<a name="l03886"></a>03886 <span class="comment"></span>
<a name="l03887"></a>03887 <span class="comment">/**</span>
<a name="l03888"></a>03888 <span class="comment"> * Same as svn_wc_status_func4_t, but with a non-const status and a relative</span>
<a name="l03889"></a>03889 <span class="comment"> * path.</span>
<a name="l03890"></a>03890 <span class="comment"> *</span>
<a name="l03891"></a>03891 <span class="comment"> * @since New in 1.6.</span>
<a name="l03892"></a>03892 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l03893"></a>03893 <span class="comment"> */</span>
<a name="l03894"></a><a class="code" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a">03894</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_status_func3_t)(<span class="keywordtype">void</span> *baton,
<a name="l03895"></a>03895                                               <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03896"></a>03896                                               <a class="code" href="structsvn__wc__status2__t.html" title="### All diffs are not yet known.">svn_wc_status2_t</a> *status,
<a name="l03897"></a>03897                                               apr_pool_t *pool);
<a name="l03898"></a>03898 <span class="comment"></span>
<a name="l03899"></a>03899 <span class="comment">/**</span>
<a name="l03900"></a>03900 <span class="comment"> * Same as svn_wc_status_func3_t, but without a provided pool or</span>
<a name="l03901"></a>03901 <span class="comment"> * the ability to propagate errors.</span>
<a name="l03902"></a>03902 <span class="comment"> *</span>
<a name="l03903"></a>03903 <span class="comment"> * @since New in 1.2.</span>
<a name="l03904"></a>03904 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l03905"></a>03905 <span class="comment"> */</span>
<a name="l03906"></a><a class="code" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e">03906</a> <span class="keyword">typedef</span> void (*<a class="code" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a>)(<span class="keywordtype">void</span> *baton,
<a name="l03907"></a>03907                                       <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03908"></a>03908                                       <a class="code" href="structsvn__wc__status2__t.html" title="### All diffs are not yet known.">svn_wc_status2_t</a> *status);
<a name="l03909"></a>03909 <span class="comment"></span>
<a name="l03910"></a>03910 <span class="comment">/**</span>
<a name="l03911"></a>03911 <span class="comment"> *  Same as svn_wc_status_func2_t, but for older svn_wc_status_t structures.</span>
<a name="l03912"></a>03912 <span class="comment"> *</span>
<a name="l03913"></a>03913 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l03914"></a>03914 <span class="comment"> */</span>
<a name="l03915"></a><a class="code" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a">03915</a> <span class="keyword">typedef</span> void (*<a class="code" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a" title="Same as svn_wc_status_func2_t, but for older svn_wc_status_t structures.">svn_wc_status_func_t</a>)(<span class="keywordtype">void</span> *baton,
<a name="l03916"></a>03916                                      <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l03917"></a>03917                                      <a class="code" href="structsvn__wc__status__t.html" title="Same as svn_wc_status2_t, but without the svn_lock_t &#39;repos_lock&#39; field.">svn_wc_status_t</a> *status);
<a name="l03918"></a>03918 <span class="comment"></span>
<a name="l03919"></a>03919 <span class="comment">/**</span>
<a name="l03920"></a>03920 <span class="comment"> * Walk the working copy status of @a local_abspath using @a wc_ctx, by</span>
<a name="l03921"></a>03921 <span class="comment"> * creating #svn_wc_status3_t structures and sending these through</span>
<a name="l03922"></a>03922 <span class="comment"> * @a status_func / @a status_baton.</span>
<a name="l03923"></a>03923 <span class="comment"> *</span>
<a name="l03924"></a>03924 <span class="comment"> *  * Assuming the target is a directory, then:</span>
<a name="l03925"></a>03925 <span class="comment"> *</span>
<a name="l03926"></a>03926 <span class="comment"> *   - If @a get_all is FALSE, then only locally-modified entries will be</span>
<a name="l03927"></a>03927 <span class="comment"> *     returned.  If TRUE, then all entries will be returned.</span>
<a name="l03928"></a>03928 <span class="comment"> *</span>
<a name="l03929"></a>03929 <span class="comment"> *   - If @a ignore_text_mods is TRUE, then the walk will not check for</span>
<a name="l03930"></a>03930 <span class="comment"> *     modified files.  Any #svn_wc_status3_t structures returned for files</span>
<a name="l03931"></a>03931 <span class="comment"> *     will always have a text_status field set to svn_wc_status_normal.</span>
<a name="l03932"></a>03932 <span class="comment"> *     If @a ignore_text_mods is FALSE, the walk checks for text changes</span>
<a name="l03933"></a>03933 <span class="comment"> *     and returns #svn_wc_status3_t structures describing any changes.</span>
<a name="l03934"></a>03934 <span class="comment"> *</span>
<a name="l03935"></a>03935 <span class="comment"> *   - If @a depth is #svn_depth_empty, a status structure will</span>
<a name="l03936"></a>03936 <span class="comment"> *     be returned for the target only; if #svn_depth_files, for the</span>
<a name="l03937"></a>03937 <span class="comment"> *     target and its immediate file children; if</span>
<a name="l03938"></a>03938 <span class="comment"> *     #svn_depth_immediates, for the target and its immediate</span>
<a name="l03939"></a>03939 <span class="comment"> *     children; if #svn_depth_infinity, for the target and</span>
<a name="l03940"></a>03940 <span class="comment"> *     everything underneath it, fully recursively.</span>
<a name="l03941"></a>03941 <span class="comment"> *</span>
<a name="l03942"></a>03942 <span class="comment"> *     If @a depth is #svn_depth_unknown, take depths from the</span>
<a name="l03943"></a>03943 <span class="comment"> *     working copy and behave as above in each directory&#39;s case.</span>
<a name="l03944"></a>03944 <span class="comment"> *</span>
<a name="l03945"></a>03945 <span class="comment"> *     If the given @a depth is incompatible with the depth found in a</span>
<a name="l03946"></a>03946 <span class="comment"> *     working copy directory, the found depth always governs.</span>
<a name="l03947"></a>03947 <span class="comment"> *</span>
<a name="l03948"></a>03948 <span class="comment"> * If @a no_ignore is set, statuses that would typically be ignored</span>
<a name="l03949"></a>03949 <span class="comment"> * will instead be reported.</span>
<a name="l03950"></a>03950 <span class="comment"> *</span>
<a name="l03951"></a>03951 <span class="comment"> * @a ignore_patterns is an array of file patterns matching</span>
<a name="l03952"></a>03952 <span class="comment"> * unversioned files to ignore for the purposes of status reporting,</span>
<a name="l03953"></a>03953 <span class="comment"> * or @c NULL if the default set of ignorable file patterns should be used.</span>
<a name="l03954"></a>03954 <span class="comment"> *</span>
<a name="l03955"></a>03955 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton while walking</span>
<a name="l03956"></a>03956 <span class="comment"> * to determine if the client has canceled the operation.</span>
<a name="l03957"></a>03957 <span class="comment"> *</span>
<a name="l03958"></a>03958 <span class="comment"> * This function uses @a scratch_pool for temporary allocations.</span>
<a name="l03959"></a>03959 <span class="comment"> *</span>
<a name="l03960"></a>03960 <span class="comment"> * @since New in 1.7.</span>
<a name="l03961"></a>03961 <span class="comment"> */</span>
<a name="l03962"></a>03962 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l03963"></a>03963 <a class="code" href="group__svn__wc__status.html#ga456c84ac9b3bcd268722f3d7689a337a" title="Walk the working copy status of local_abspath using wc_ctx, by creating svn_wc_status3_t structures a...">svn_wc_walk_status</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l03964"></a>03964                    <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l03965"></a>03965                    <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l03966"></a>03966                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l03967"></a>03967                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l03968"></a>03968                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_text_mods,
<a name="l03969"></a>03969                    <span class="keyword">const</span> apr_array_header_t *ignore_patterns,
<a name="l03970"></a>03970                    <a class="code" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d" title="A callback for reporting a status about local_abspath.">svn_wc_status_func4_t</a> status_func,
<a name="l03971"></a>03971                    <span class="keywordtype">void</span> *status_baton,
<a name="l03972"></a>03972                    <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l03973"></a>03973                    <span class="keywordtype">void</span> *cancel_baton,
<a name="l03974"></a>03974                    apr_pool_t *scratch_pool);
<a name="l03975"></a>03975 <span class="comment"></span>
<a name="l03976"></a>03976 <span class="comment">/**</span>
<a name="l03977"></a>03977 <span class="comment"> * Set @a *editor and @a *edit_baton to an editor that generates</span>
<a name="l03978"></a>03978 <span class="comment"> * #svn_wc_status3_t structures and sends them through @a status_func /</span>
<a name="l03979"></a>03979 <span class="comment"> * @a status_baton.  @a anchor_abspath is a working copy directory</span>
<a name="l03980"></a>03980 <span class="comment"> * directory which will be used as the root of our editor.  If @a</span>
<a name="l03981"></a>03981 <span class="comment"> * target_basename is not &quot;&quot;, it represents a node in the @a anchor_abspath</span>
<a name="l03982"></a>03982 <span class="comment"> * which is the subject of the editor drive (otherwise, the @a</span>
<a name="l03983"></a>03983 <span class="comment"> * anchor_abspath is the subject).</span>
<a name="l03984"></a>03984 <span class="comment"> *</span>
<a name="l03985"></a>03985 <span class="comment"> * If @a set_locks_baton is non-@c NULL, it will be set to a baton that can</span>
<a name="l03986"></a>03986 <span class="comment"> * be used in a call to the svn_wc_status_set_repos_locks() function.</span>
<a name="l03987"></a>03987 <span class="comment"> *</span>
<a name="l03988"></a>03988 <span class="comment"> * Callers drive this editor to describe working copy out-of-dateness</span>
<a name="l03989"></a>03989 <span class="comment"> * with respect to the repository.  If this information is not</span>
<a name="l03990"></a>03990 <span class="comment"> * available or not desired, callers should simply call the</span>
<a name="l03991"></a>03991 <span class="comment"> * close_edit() function of the @a editor vtable.</span>
<a name="l03992"></a>03992 <span class="comment"> *</span>
<a name="l03993"></a>03993 <span class="comment"> * If the editor driver calls @a editor&#39;s set_target_revision() vtable</span>
<a name="l03994"></a>03994 <span class="comment"> * function, then when the edit drive is completed, @a *edit_revision</span>
<a name="l03995"></a>03995 <span class="comment"> * will contain the revision delivered via that interface.</span>
<a name="l03996"></a>03996 <span class="comment"> *</span>
<a name="l03997"></a>03997 <span class="comment"> * Assuming the target is a directory, then:</span>
<a name="l03998"></a>03998 <span class="comment"> *</span>
<a name="l03999"></a>03999 <span class="comment"> *   - If @a get_all is FALSE, then only locally-modified entries will be</span>
<a name="l04000"></a>04000 <span class="comment"> *     returned.  If TRUE, then all entries will be returned.</span>
<a name="l04001"></a>04001 <span class="comment"> *</span>
<a name="l04002"></a>04002 <span class="comment"> *   - If @a depth is #svn_depth_empty, a status structure will</span>
<a name="l04003"></a>04003 <span class="comment"> *     be returned for the target only; if #svn_depth_files, for the</span>
<a name="l04004"></a>04004 <span class="comment"> *     target and its immediate file children; if</span>
<a name="l04005"></a>04005 <span class="comment"> *     #svn_depth_immediates, for the target and its immediate</span>
<a name="l04006"></a>04006 <span class="comment"> *     children; if #svn_depth_infinity, for the target and</span>
<a name="l04007"></a>04007 <span class="comment"> *     everything underneath it, fully recursively.</span>
<a name="l04008"></a>04008 <span class="comment"> *</span>
<a name="l04009"></a>04009 <span class="comment"> *     If @a depth is #svn_depth_unknown, take depths from the</span>
<a name="l04010"></a>04010 <span class="comment"> *     working copy and behave as above in each directory&#39;s case.</span>
<a name="l04011"></a>04011 <span class="comment"> *</span>
<a name="l04012"></a>04012 <span class="comment"> *     If the given @a depth is incompatible with the depth found in a</span>
<a name="l04013"></a>04013 <span class="comment"> *     working copy directory, the found depth always governs.</span>
<a name="l04014"></a>04014 <span class="comment"> *</span>
<a name="l04015"></a>04015 <span class="comment"> * If @a no_ignore is set, statuses that would typically be ignored</span>
<a name="l04016"></a>04016 <span class="comment"> * will instead be reported.</span>
<a name="l04017"></a>04017 <span class="comment"> *</span>
<a name="l04018"></a>04018 <span class="comment"> * @a ignore_patterns is an array of file patterns matching</span>
<a name="l04019"></a>04019 <span class="comment"> * unversioned files to ignore for the purposes of status reporting,</span>
<a name="l04020"></a>04020 <span class="comment"> * or @c NULL if the default set of ignorable file patterns should be used.</span>
<a name="l04021"></a>04021 <span class="comment"> *</span>
<a name="l04022"></a>04022 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton while building</span>
<a name="l04023"></a>04023 <span class="comment"> * the @a statushash to determine if the client has canceled the operation.</span>
<a name="l04024"></a>04024 <span class="comment"> *</span>
<a name="l04025"></a>04025 <span class="comment"> * If @a depth_as_sticky is set handle @a depth like when depth_is_sticky is</span>
<a name="l04026"></a>04026 <span class="comment"> * passed for updating. This will show excluded nodes show up as added in the</span>
<a name="l04027"></a>04027 <span class="comment"> * repository.</span>
<a name="l04028"></a>04028 <span class="comment"> *</span>
<a name="l04029"></a>04029 <span class="comment"> * If @a server_performs_filtering is TRUE, assume that the server handles</span>
<a name="l04030"></a>04030 <span class="comment"> * the ambient depth filtering, so this doesn&#39;t have to be handled in the</span>
<a name="l04031"></a>04031 <span class="comment"> * editor.</span>
<a name="l04032"></a>04032 <span class="comment"> *</span>
<a name="l04033"></a>04033 <span class="comment"> * Allocate the editor itself in @a result_pool, and use @a scratch_pool</span>
<a name="l04034"></a>04034 <span class="comment"> * for temporary allocations. The editor will do its temporary allocations</span>
<a name="l04035"></a>04035 <span class="comment"> * in a subpool of @a result_pool.</span>
<a name="l04036"></a>04036 <span class="comment"> *</span>
<a name="l04037"></a>04037 <span class="comment"> * @since New in 1.7.</span>
<a name="l04038"></a>04038 <span class="comment"> */</span>
<a name="l04039"></a>04039 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04040"></a>04040 <a class="code" href="group__svn__wc__status.html#ga97e9c50ae801b942989859e36810aeed" title="Set *editor and *edit_baton to an editor that generates svn_wc_status3_t structures and sends them th...">svn_wc_get_status_editor5</a>(<span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l04041"></a>04041                           <span class="keywordtype">void</span> **edit_baton,
<a name="l04042"></a>04042                           <span class="keywordtype">void</span> **set_locks_baton,
<a name="l04043"></a>04043                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *edit_revision,
<a name="l04044"></a>04044                           <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l04045"></a>04045                           <span class="keyword">const</span> <span class="keywordtype">char</span> *anchor_abspath,
<a name="l04046"></a>04046                           <span class="keyword">const</span> <span class="keywordtype">char</span> *target_basename,
<a name="l04047"></a>04047                           <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04048"></a>04048                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l04049"></a>04049                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l04050"></a>04050                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_as_sticky,
<a name="l04051"></a>04051                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> server_performs_filtering,
<a name="l04052"></a>04052                           <span class="keyword">const</span> apr_array_header_t *ignore_patterns,
<a name="l04053"></a>04053                           <a class="code" href="group__svn__wc__status.html#gac4d4bbb3b4cbe9c20ef772d4ac8f940d" title="A callback for reporting a status about local_abspath.">svn_wc_status_func4_t</a> status_func,
<a name="l04054"></a>04054                           <span class="keywordtype">void</span> *status_baton,
<a name="l04055"></a>04055                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04056"></a>04056                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l04057"></a>04057                           apr_pool_t *result_pool,
<a name="l04058"></a>04058                           apr_pool_t *scratch_pool);
<a name="l04059"></a>04059 <span class="comment"></span>
<a name="l04060"></a>04060 <span class="comment">/**</span>
<a name="l04061"></a>04061 <span class="comment"> * Same as svn_wc_get_status_editor5, but using #svn_wc_status_func3_t</span>
<a name="l04062"></a>04062 <span class="comment"> * instead of #svn_wc_status_func4_t. And @a server_performs_filtering</span>
<a name="l04063"></a>04063 <span class="comment"> * always set to #TRUE.</span>
<a name="l04064"></a>04064 <span class="comment"> *</span>
<a name="l04065"></a>04065 <span class="comment"> * This also uses a single pool parameter, stating that all temporary</span>
<a name="l04066"></a>04066 <span class="comment"> * allocations are performed in manually constructed/destroyed subpool.</span>
<a name="l04067"></a>04067 <span class="comment"> *</span>
<a name="l04068"></a>04068 <span class="comment"> * @since New in 1.6.</span>
<a name="l04069"></a>04069 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l04070"></a>04070 <span class="comment"> */</span>
<a name="l04071"></a>04071 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04072"></a>04072 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04073"></a>04073 <a class="code" href="group__svn__wc__status.html#gad76e728aaadd7e46b02fba84c0ca5aeb" title="Same as svn_wc_get_status_editor5, but using svn_wc_status_func3_t instead of svn_wc_status_func4_t.">svn_wc_get_status_editor4</a>(<span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l04074"></a>04074                           <span class="keywordtype">void</span> **edit_baton,
<a name="l04075"></a>04075                           <span class="keywordtype">void</span> **set_locks_baton,
<a name="l04076"></a>04076                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *edit_revision,
<a name="l04077"></a>04077                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l04078"></a>04078                           <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04079"></a>04079                           <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04080"></a>04080                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l04081"></a>04081                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l04082"></a>04082                           <span class="keyword">const</span> apr_array_header_t *ignore_patterns,
<a name="l04083"></a>04083                           <a class="code" href="group__svn__wc__status.html#ga29ecaaf89f883d1a308f1f5320ca967a" title="Same as svn_wc_status_func4_t, but with a non-const status and a relative path.">svn_wc_status_func3_t</a> status_func,
<a name="l04084"></a>04084                           <span class="keywordtype">void</span> *status_baton,
<a name="l04085"></a>04085                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04086"></a>04086                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l04087"></a>04087                           <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *traversal_info,
<a name="l04088"></a>04088                           apr_pool_t *pool);
<a name="l04089"></a>04089 <span class="comment"></span>
<a name="l04090"></a>04090 <span class="comment">/**</span>
<a name="l04091"></a>04091 <span class="comment"> * Same as svn_wc_get_status_editor4(), but using #svn_wc_status_func2_t</span>
<a name="l04092"></a>04092 <span class="comment"> * instead of #svn_wc_status_func3_t.</span>
<a name="l04093"></a>04093 <span class="comment"> *</span>
<a name="l04094"></a>04094 <span class="comment"> * @since New in 1.5.</span>
<a name="l04095"></a>04095 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l04096"></a>04096 <span class="comment"> */</span>
<a name="l04097"></a>04097 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04098"></a>04098 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04099"></a>04099 <a class="code" href="group__svn__wc__status.html#gafbd5836dd65c99007a3c5258f513eaef" title="Same as svn_wc_get_status_editor4(), but using svn_wc_status_func2_t instead of svn_wc_status_func3_t...">svn_wc_get_status_editor3</a>(<span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l04100"></a>04100                           <span class="keywordtype">void</span> **edit_baton,
<a name="l04101"></a>04101                           <span class="keywordtype">void</span> **set_locks_baton,
<a name="l04102"></a>04102                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *edit_revision,
<a name="l04103"></a>04103                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l04104"></a>04104                           <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04105"></a>04105                           <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04106"></a>04106                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l04107"></a>04107                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l04108"></a>04108                           <span class="keyword">const</span> apr_array_header_t *ignore_patterns,
<a name="l04109"></a>04109                           <a class="code" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a> status_func,
<a name="l04110"></a>04110                           <span class="keywordtype">void</span> *status_baton,
<a name="l04111"></a>04111                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04112"></a>04112                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l04113"></a>04113                           <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *traversal_info,
<a name="l04114"></a>04114                           apr_pool_t *pool);
<a name="l04115"></a>04115 <span class="comment"></span>
<a name="l04116"></a>04116 <span class="comment">/**</span>
<a name="l04117"></a>04117 <span class="comment"> * Like svn_wc_get_status_editor3(), but with @a ignore_patterns</span>
<a name="l04118"></a>04118 <span class="comment"> * provided from the corresponding value in @a config, and @a recurse</span>
<a name="l04119"></a>04119 <span class="comment"> * instead of @a depth.  If @a recurse is TRUE, behave as if for</span>
<a name="l04120"></a>04120 <span class="comment"> * #svn_depth_infinity; else if @a recurse is FALSE, behave as if for</span>
<a name="l04121"></a>04121 <span class="comment"> * #svn_depth_immediates.</span>
<a name="l04122"></a>04122 <span class="comment"> *</span>
<a name="l04123"></a>04123 <span class="comment"> * @since New in 1.2.</span>
<a name="l04124"></a>04124 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l04125"></a>04125 <span class="comment"> */</span>
<a name="l04126"></a>04126 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04127"></a>04127 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04128"></a>04128 <a class="code" href="group__svn__wc__status.html#gae384903ef5abbbebc26a73622e010a4d" title="Like svn_wc_get_status_editor3(), but with ignore_patterns provided from the corresponding value in c...">svn_wc_get_status_editor2</a>(<span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l04129"></a>04129                           <span class="keywordtype">void</span> **edit_baton,
<a name="l04130"></a>04130                           <span class="keywordtype">void</span> **set_locks_baton,
<a name="l04131"></a>04131                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *edit_revision,
<a name="l04132"></a>04132                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l04133"></a>04133                           <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04134"></a>04134                           apr_hash_t *config,
<a name="l04135"></a>04135                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04136"></a>04136                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l04137"></a>04137                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l04138"></a>04138                           <a class="code" href="group__svn__wc__status.html#gaf68700e38ff4fd0a8a246e5c9290b14e" title="Same as svn_wc_status_func3_t, but without a provided pool or the ability to propagate errors...">svn_wc_status_func2_t</a> status_func,
<a name="l04139"></a>04139                           <span class="keywordtype">void</span> *status_baton,
<a name="l04140"></a>04140                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04141"></a>04141                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l04142"></a>04142                           <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *traversal_info,
<a name="l04143"></a>04143                           apr_pool_t *pool);
<a name="l04144"></a>04144 <span class="comment"></span>
<a name="l04145"></a>04145 <span class="comment">/**</span>
<a name="l04146"></a>04146 <span class="comment"> * Same as svn_wc_get_status_editor2(), but with @a set_locks_baton set</span>
<a name="l04147"></a>04147 <span class="comment"> * to @c NULL, and taking a deprecated svn_wc_status_func_t argument.</span>
<a name="l04148"></a>04148 <span class="comment"> *</span>
<a name="l04149"></a>04149 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04150"></a>04150 <span class="comment"> */</span>
<a name="l04151"></a>04151 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04152"></a>04152 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04153"></a>04153 <a class="code" href="group__svn__wc__status.html#ga4fa9b6de93c3b3e5aafc07b39b68ea13" title="Same as svn_wc_get_status_editor2(), but with set_locks_baton set to NULL, and taking a deprecated sv...">svn_wc_get_status_editor</a>(<span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l04154"></a>04154                          <span class="keywordtype">void</span> **edit_baton,
<a name="l04155"></a>04155                          <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *edit_revision,
<a name="l04156"></a>04156                          <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l04157"></a>04157                          <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l04158"></a>04158                          apr_hash_t *config,
<a name="l04159"></a>04159                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04160"></a>04160                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> get_all,
<a name="l04161"></a>04161                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> no_ignore,
<a name="l04162"></a>04162                          <a class="code" href="group__svn__wc__status.html#gac19e1c47c044d86aaa9e3a0790efa17a" title="Same as svn_wc_status_func2_t, but for older svn_wc_status_t structures.">svn_wc_status_func_t</a> status_func,
<a name="l04163"></a>04163                          <span class="keywordtype">void</span> *status_baton,
<a name="l04164"></a>04164                          <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04165"></a>04165                          <span class="keywordtype">void</span> *cancel_baton,
<a name="l04166"></a>04166                          <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *traversal_info,
<a name="l04167"></a>04167                          apr_pool_t *pool);
<a name="l04168"></a>04168 
<a name="l04169"></a>04169 <span class="comment"></span>
<a name="l04170"></a>04170 <span class="comment">/**</span>
<a name="l04171"></a>04171 <span class="comment"> * Associate @a locks, a hash table mapping &lt;tt&gt;const char*&lt;/tt&gt;</span>
<a name="l04172"></a>04172 <span class="comment"> * absolute repository paths to &lt;tt&gt;svn_lock_t&lt;/tt&gt; objects, with a</span>
<a name="l04173"></a>04173 <span class="comment"> * @a set_locks_baton returned by an earlier call to</span>
<a name="l04174"></a>04174 <span class="comment"> * svn_wc_get_status_editor3().  @a repos_root is the repository root URL.</span>
<a name="l04175"></a>04175 <span class="comment"> * Perform all allocations in @a pool.</span>
<a name="l04176"></a>04176 <span class="comment"> *</span>
<a name="l04177"></a>04177 <span class="comment"> * @note @a locks will not be copied, so it must be valid throughout the</span>
<a name="l04178"></a>04178 <span class="comment"> * edit.  @a pool must also not be destroyed or cleared before the edit is</span>
<a name="l04179"></a>04179 <span class="comment"> * finished.</span>
<a name="l04180"></a>04180 <span class="comment"> *</span>
<a name="l04181"></a>04181 <span class="comment"> * @since New in 1.2.</span>
<a name="l04182"></a>04182 <span class="comment"> */</span>
<a name="l04183"></a>04183 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04184"></a>04184 <a class="code" href="group__svn__wc__status.html#gabfd8e5c78af1b718a60fed0ee2a8e590" title="Associate locks, a hash table mapping const char* absolute repository paths to svn_lock_t objects...">svn_wc_status_set_repos_locks</a>(<span class="keywordtype">void</span> *set_locks_baton,
<a name="l04185"></a>04185                               apr_hash_t *locks,
<a name="l04186"></a>04186                               <span class="keyword">const</span> <span class="keywordtype">char</span> *repos_root,
<a name="l04187"></a>04187                               apr_pool_t *pool);
<a name="l04188"></a>04188 <span class="comment"></span>
<a name="l04189"></a>04189 <span class="comment">/** @} */</span>
<a name="l04190"></a>04190 
<a name="l04191"></a>04191 <span class="comment"></span>
<a name="l04192"></a>04192 <span class="comment">/**</span>
<a name="l04193"></a>04193 <span class="comment"> * Copy @a src_abspath to @a dst_abspath, and schedule @a dst_abspath</span>
<a name="l04194"></a>04194 <span class="comment"> * for addition to the repository, remembering the copy history. @a wc_ctx</span>
<a name="l04195"></a>04195 <span class="comment"> * is used for accessing the working copy and must contain a write lock for</span>
<a name="l04196"></a>04196 <span class="comment"> * the parent directory of @a dst_abspath,</span>
<a name="l04197"></a>04197 <span class="comment"> *</span>
<a name="l04198"></a>04198 <span class="comment"> * If @a metadata_only is TRUE then this is a database-only operation and</span>
<a name="l04199"></a>04199 <span class="comment"> * the working directories and files are not copied.</span>
<a name="l04200"></a>04200 <span class="comment"> *</span>
<a name="l04201"></a>04201 <span class="comment"> * @a src_abspath must be a file or directory under version control;</span>
<a name="l04202"></a>04202 <span class="comment"> * the parent of @a dst_abspath must be a directory under version control</span>
<a name="l04203"></a>04203 <span class="comment"> * in the same working copy; @a dst_abspath will be the name of the copied</span>
<a name="l04204"></a>04204 <span class="comment"> * item, and it must not exist already if @a metadata_only is FALSE.  Note that</span>
<a name="l04205"></a>04205 <span class="comment"> * when @a src points to a versioned file, the working file doesn&#39;t</span>
<a name="l04206"></a>04206 <span class="comment"> * necessarily exist in which case its text-base is used instead.</span>
<a name="l04207"></a>04207 <span class="comment"> *</span>
<a name="l04208"></a>04208 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton at</span>
<a name="l04209"></a>04209 <span class="comment"> * various points during the operation.  If it returns an error</span>
<a name="l04210"></a>04210 <span class="comment"> * (typically #SVN_ERR_CANCELLED), return that error immediately.</span>
<a name="l04211"></a>04211 <span class="comment"> *</span>
<a name="l04212"></a>04212 <span class="comment"> * If @a notify_func is non-NULL, call it with @a notify_baton and the path</span>
<a name="l04213"></a>04213 <span class="comment"> * of the root node (only) of the destination.</span>
<a name="l04214"></a>04214 <span class="comment"> *</span>
<a name="l04215"></a>04215 <span class="comment"> * Use @a scratch_pool for temporary allocations.</span>
<a name="l04216"></a>04216 <span class="comment"> *</span>
<a name="l04217"></a>04217 <span class="comment"> * @since New in 1.7.</span>
<a name="l04218"></a>04218 <span class="comment"> */</span>
<a name="l04219"></a>04219 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04220"></a>04220 <a class="code" href="group__svn__wc.html#gaa7be3f311d11c3dd5a59550d25eb4e6d" title="Copy src_abspath to dst_abspath, and schedule dst_abspath for addition to the repository, remembering the copy history.">svn_wc_copy3</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l04221"></a>04221              <span class="keyword">const</span> <span class="keywordtype">char</span> *src_abspath,
<a name="l04222"></a>04222              <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_abspath,
<a name="l04223"></a>04223              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> metadata_only,
<a name="l04224"></a>04224              <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04225"></a>04225              <span class="keywordtype">void</span> *cancel_baton,
<a name="l04226"></a>04226              <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04227"></a>04227              <span class="keywordtype">void</span> *notify_baton,
<a name="l04228"></a>04228              apr_pool_t *scratch_pool);
<a name="l04229"></a>04229 <span class="comment"></span>
<a name="l04230"></a>04230 <span class="comment">/** Similar to svn_wc_copy3(), but takes access batons and a relative path</span>
<a name="l04231"></a>04231 <span class="comment"> * and a basename instead of absolute paths and a working copy context.</span>
<a name="l04232"></a>04232 <span class="comment"> *</span>
<a name="l04233"></a>04233 <span class="comment"> * @since New in 1.2.</span>
<a name="l04234"></a>04234 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l04235"></a>04235 <span class="comment"> */</span>
<a name="l04236"></a>04236 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04237"></a>04237 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04238"></a>04238 <a class="code" href="group__svn__wc.html#ga4db028d5bd4921e3e087137274f6cd8f" title="Similar to svn_wc_copy3(), but takes access batons and a relative path and a basename instead of abso...">svn_wc_copy2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *src,
<a name="l04239"></a>04239              <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *dst_parent,
<a name="l04240"></a>04240              <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_basename,
<a name="l04241"></a>04241              <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04242"></a>04242              <span class="keywordtype">void</span> *cancel_baton,
<a name="l04243"></a>04243              <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04244"></a>04244              <span class="keywordtype">void</span> *notify_baton,
<a name="l04245"></a>04245              apr_pool_t *pool);
<a name="l04246"></a>04246 <span class="comment"></span>
<a name="l04247"></a>04247 <span class="comment">/**</span>
<a name="l04248"></a>04248 <span class="comment"> * Similar to svn_wc_copy2(), but takes an #svn_wc_notify_func_t instead.</span>
<a name="l04249"></a>04249 <span class="comment"> *</span>
<a name="l04250"></a>04250 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04251"></a>04251 <span class="comment"> */</span>
<a name="l04252"></a>04252 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04253"></a>04253 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04254"></a>04254 <a class="code" href="group__svn__wc.html#ga196abed06b6cc8d3e385c40172fd8a9f" title="Similar to svn_wc_copy2(), but takes an svn_wc_notify_func_t instead.">svn_wc_copy</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *src,
<a name="l04255"></a>04255             <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *dst_parent,
<a name="l04256"></a>04256             <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_basename,
<a name="l04257"></a>04257             <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04258"></a>04258             <span class="keywordtype">void</span> *cancel_baton,
<a name="l04259"></a>04259             <a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2" title="Similar to svn_wc_notify_func2_t, but takes the information as arguments instead of struct fields...">svn_wc_notify_func_t</a> notify_func,
<a name="l04260"></a>04260             <span class="keywordtype">void</span> *notify_baton,
<a name="l04261"></a>04261             apr_pool_t *pool);
<a name="l04262"></a>04262 <span class="comment"></span>
<a name="l04263"></a>04263 <span class="comment">/**</span>
<a name="l04264"></a>04264 <span class="comment"> * Move @a src_abspath to @a dst_abspath, by scheduling @a dst_abspath</span>
<a name="l04265"></a>04265 <span class="comment"> * for addition to the repository, remembering the history. Mark @a src_abspath</span>
<a name="l04266"></a>04266 <span class="comment"> * as deleted after moving.@a wc_ctx is used for accessing the working copy and</span>
<a name="l04267"></a>04267 <span class="comment"> * must contain a write lock for the parent directory of @a src_abspath and</span>
<a name="l04268"></a>04268 <span class="comment"> * @a dst_abspath.</span>
<a name="l04269"></a>04269 <span class="comment"> *</span>
<a name="l04270"></a>04270 <span class="comment"> * If @a metadata_only is TRUE then this is a database-only operation and</span>
<a name="l04271"></a>04271 <span class="comment"> * the working directories and files are not changed.</span>
<a name="l04272"></a>04272 <span class="comment"> *</span>
<a name="l04273"></a>04273 <span class="comment"> * @a src_abspath must be a file or directory under version control;</span>
<a name="l04274"></a>04274 <span class="comment"> * the parent of @a dst_abspath must be a directory under version control</span>
<a name="l04275"></a>04275 <span class="comment"> * in the same working copy; @a dst_abspath will be the name of the copied</span>
<a name="l04276"></a>04276 <span class="comment"> * item, and it must not exist already if @a metadata_only is FALSE.  Note that</span>
<a name="l04277"></a>04277 <span class="comment"> * when @a src points to a versioned file, the working file doesn&#39;t</span>
<a name="l04278"></a>04278 <span class="comment"> * necessarily exist in which case its text-base is used instead.</span>
<a name="l04279"></a>04279 <span class="comment"> *</span>
<a name="l04280"></a>04280 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton at</span>
<a name="l04281"></a>04281 <span class="comment"> * various points during the operation.  If it returns an error</span>
<a name="l04282"></a>04282 <span class="comment"> * (typically #SVN_ERR_CANCELLED), return that error immediately.</span>
<a name="l04283"></a>04283 <span class="comment"> *</span>
<a name="l04284"></a>04284 <span class="comment"> * If @a notify_func is non-NULL, call it with @a notify_baton and the path</span>
<a name="l04285"></a>04285 <span class="comment"> * of the root node (only) of the destination.</span>
<a name="l04286"></a>04286 <span class="comment"> *</span>
<a name="l04287"></a>04287 <span class="comment"> * Use @a scratch_pool for temporary allocations.</span>
<a name="l04288"></a>04288 <span class="comment"> *</span>
<a name="l04289"></a>04289 <span class="comment"> * @since New in 1.7.</span>
<a name="l04290"></a>04290 <span class="comment"> */</span>
<a name="l04291"></a>04291 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04292"></a>04292 <a class="code" href="group__svn__wc.html#gae7754ab49be10d4cd2811e8eac34a837" title="Move src_abspath to dst_abspath, by scheduling dst_abspath for addition to the repository, remembering the history.">svn_wc_move</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l04293"></a>04293             <span class="keyword">const</span> <span class="keywordtype">char</span> *src_abspath,
<a name="l04294"></a>04294             <span class="keyword">const</span> <span class="keywordtype">char</span> *dst_abspath,
<a name="l04295"></a>04295             <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> metadata_only,
<a name="l04296"></a>04296             <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04297"></a>04297             <span class="keywordtype">void</span> *cancel_baton,
<a name="l04298"></a>04298             <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04299"></a>04299             <span class="keywordtype">void</span> *notify_baton,
<a name="l04300"></a>04300             apr_pool_t *scratch_pool);
<a name="l04301"></a>04301 <span class="comment"></span>
<a name="l04302"></a>04302 <span class="comment">/**</span>
<a name="l04303"></a>04303 <span class="comment"> * Schedule @a local_abspath for deletion.  It will be deleted from the</span>
<a name="l04304"></a>04304 <span class="comment"> * repository on the next commit.  If @a local_abspath refers to a</span>
<a name="l04305"></a>04305 <span class="comment"> * directory, then a recursive deletion will occur. @a wc_ctx must hold</span>
<a name="l04306"></a>04306 <span class="comment"> * a write lock for the parent of @a local_abspath, @a local_abspath itself</span>
<a name="l04307"></a>04307 <span class="comment"> * and everything below @a local_abspath.</span>
<a name="l04308"></a>04308 <span class="comment"> *</span>
<a name="l04309"></a>04309 <span class="comment"> * If @a keep_local is FALSE, this function immediately deletes all files,</span>
<a name="l04310"></a>04310 <span class="comment"> * modified and unmodified, versioned and of @a delete_unversioned is TRUE,</span>
<a name="l04311"></a>04311 <span class="comment"> * unversioned from the working copy.</span>
<a name="l04312"></a>04312 <span class="comment"> * It also immediately deletes unversioned directories and directories that</span>
<a name="l04313"></a>04313 <span class="comment"> * are scheduled to be added below @a local_abspath.  Only versioned may</span>
<a name="l04314"></a>04314 <span class="comment"> * remain in the working copy, these get deleted by the update following</span>
<a name="l04315"></a>04315 <span class="comment"> * the commit.</span>
<a name="l04316"></a>04316 <span class="comment"> *</span>
<a name="l04317"></a>04317 <span class="comment"> * If @a keep_local is TRUE, all files and directories will be kept in the</span>
<a name="l04318"></a>04318 <span class="comment"> * working copy (and will become unversioned on the next commit).</span>
<a name="l04319"></a>04319 <span class="comment"> *</span>
<a name="l04320"></a>04320 <span class="comment"> * If @a delete_unversioned_target is TRUE and @a local_abspath is not</span>
<a name="l04321"></a>04321 <span class="comment"> * versioned, @a local_abspath will be handled as an added files without</span>
<a name="l04322"></a>04322 <span class="comment"> * history. So it will be deleted if @a keep_local is FALSE. If @a</span>
<a name="l04323"></a>04323 <span class="comment"> * delete_unversioned is FALSE and @a local_abspath is not versioned a</span>
<a name="l04324"></a>04324 <span class="comment"> * #SVN_ERR_WC_PATH_NOT_FOUND error will be returned.</span>
<a name="l04325"></a>04325 <span class="comment"> *</span>
<a name="l04326"></a>04326 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton at</span>
<a name="l04327"></a>04327 <span class="comment"> * various points during the operation.  If it returns an error</span>
<a name="l04328"></a>04328 <span class="comment"> * (typically #SVN_ERR_CANCELLED), return that error immediately.</span>
<a name="l04329"></a>04329 <span class="comment"> *</span>
<a name="l04330"></a>04330 <span class="comment"> * For each path marked for deletion, @a notify_func will be called with</span>
<a name="l04331"></a>04331 <span class="comment"> * the @a notify_baton and that path. The @a notify_func callback may be</span>
<a name="l04332"></a>04332 <span class="comment"> * @c NULL if notification is not needed.</span>
<a name="l04333"></a>04333 <span class="comment"> *</span>
<a name="l04334"></a>04334 <span class="comment"> * Use @a scratch_pool for temporary allocations.  It may be cleared</span>
<a name="l04335"></a>04335 <span class="comment"> * immediately upon returning from this function.</span>
<a name="l04336"></a>04336 <span class="comment"> *</span>
<a name="l04337"></a>04337 <span class="comment"> * @since New in 1.7.</span>
<a name="l04338"></a>04338 <span class="comment"> */</span>
<a name="l04339"></a>04339  <span class="comment">/* ### BH: Maybe add a delete_switched flag that allows deny switched</span>
<a name="l04340"></a>04340 <span class="comment">            nodes like file externals? */</span>
<a name="l04341"></a>04341 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04342"></a>04342 <a class="code" href="group__svn__wc.html#ga72c78b3fa4fc0fc282a0f3d1f42b0ff7" title="Schedule local_abspath for deletion.">svn_wc_delete4</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l04343"></a>04343                <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l04344"></a>04344                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_local,
<a name="l04345"></a>04345                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> delete_unversioned_target,
<a name="l04346"></a>04346                <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04347"></a>04347                <span class="keywordtype">void</span> *cancel_baton,
<a name="l04348"></a>04348                <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04349"></a>04349                <span class="keywordtype">void</span> *notify_baton,
<a name="l04350"></a>04350                apr_pool_t *scratch_pool);
<a name="l04351"></a>04351 <span class="comment"></span>
<a name="l04352"></a>04352 <span class="comment">/**</span>
<a name="l04353"></a>04353 <span class="comment"> * Similar to svn_wc_delete4, but uses an access baton and relative path</span>
<a name="l04354"></a>04354 <span class="comment"> * instead of a working copy context and absolute path. @a adm_access</span>
<a name="l04355"></a>04355 <span class="comment"> * must hold a write lock for the parent of @a path.</span>
<a name="l04356"></a>04356 <span class="comment"> *</span>
<a name="l04357"></a>04357 <span class="comment"> * @c delete_unversioned_target will always be set to TRUE.</span>
<a name="l04358"></a>04358 <span class="comment"> *</span>
<a name="l04359"></a>04359 <span class="comment"> * @since New in 1.5.</span>
<a name="l04360"></a>04360 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l04361"></a>04361 <span class="comment"> */</span>
<a name="l04362"></a>04362 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04363"></a>04363 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04364"></a>04364 <a class="code" href="group__svn__wc.html#gaf6efdb929f507a21a089722d6432ebab" title="Similar to svn_wc_delete4, but uses an access baton and relative path instead of a working copy conte...">svn_wc_delete3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04365"></a>04365                <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04366"></a>04366                <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04367"></a>04367                <span class="keywordtype">void</span> *cancel_baton,
<a name="l04368"></a>04368                <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04369"></a>04369                <span class="keywordtype">void</span> *notify_baton,
<a name="l04370"></a>04370                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> keep_local,
<a name="l04371"></a>04371                apr_pool_t *pool);
<a name="l04372"></a>04372 <span class="comment"></span>
<a name="l04373"></a>04373 <span class="comment">/**</span>
<a name="l04374"></a>04374 <span class="comment"> * Similar to svn_wc_delete3(), but with @a keep_local always set to FALSE.</span>
<a name="l04375"></a>04375 <span class="comment"> *</span>
<a name="l04376"></a>04376 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l04377"></a>04377 <span class="comment"> */</span>
<a name="l04378"></a>04378 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04379"></a>04379 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04380"></a>04380 <a class="code" href="group__svn__wc.html#ga139d40a7260782c3c6b7fefebde4e82c" title="Similar to svn_wc_delete3(), but with keep_local always set to FALSE.">svn_wc_delete2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04381"></a>04381                <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04382"></a>04382                <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04383"></a>04383                <span class="keywordtype">void</span> *cancel_baton,
<a name="l04384"></a>04384                <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04385"></a>04385                <span class="keywordtype">void</span> *notify_baton,
<a name="l04386"></a>04386                apr_pool_t *pool);
<a name="l04387"></a>04387 <span class="comment"></span>
<a name="l04388"></a>04388 <span class="comment">/**</span>
<a name="l04389"></a>04389 <span class="comment"> * Similar to svn_wc_delete2(), but takes an #svn_wc_notify_func_t instead.</span>
<a name="l04390"></a>04390 <span class="comment"> *</span>
<a name="l04391"></a>04391 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04392"></a>04392 <span class="comment"> */</span>
<a name="l04393"></a>04393 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04394"></a>04394 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04395"></a>04395 <a class="code" href="group__svn__wc.html#gac06874bc919b5c51a8d2f56ad8dbaa08" title="Similar to svn_wc_delete2(), but takes an svn_wc_notify_func_t instead.">svn_wc_delete</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04396"></a>04396               <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04397"></a>04397               <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04398"></a>04398               <span class="keywordtype">void</span> *cancel_baton,
<a name="l04399"></a>04399               <a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2" title="Similar to svn_wc_notify_func2_t, but takes the information as arguments instead of struct fields...">svn_wc_notify_func_t</a> notify_func,
<a name="l04400"></a>04400               <span class="keywordtype">void</span> *notify_baton,
<a name="l04401"></a>04401               apr_pool_t *pool);
<a name="l04402"></a>04402 
<a name="l04403"></a>04403 <span class="comment"></span>
<a name="l04404"></a>04404 <span class="comment">/**</span>
<a name="l04405"></a>04405 <span class="comment"> * Schedule the single node that exists on disk at @a local_abspath for</span>
<a name="l04406"></a>04406 <span class="comment"> * addition to the working copy.  The added node will have no properties.</span>
<a name="l04407"></a>04407 <span class="comment"> *</span>
<a name="l04408"></a>04408 <span class="comment"> * The versioned state of the parent path must be a modifiable directory,</span>
<a name="l04409"></a>04409 <span class="comment"> * and the versioned state of @a local_abspath must be either nonexistent or</span>
<a name="l04410"></a>04410 <span class="comment"> * deleted; if deleted, the new node will be a replacement.</span>
<a name="l04411"></a>04411 <span class="comment"> *</span>
<a name="l04412"></a>04412 <span class="comment"> * If @a local_abspath does not exist as file, directory or symlink, return</span>
<a name="l04413"></a>04413 <span class="comment"> * #SVN_ERR_WC_PATH_NOT_FOUND.</span>
<a name="l04414"></a>04414 <span class="comment"> *</span>
<a name="l04415"></a>04415 <span class="comment"> * This is a replacement for svn_wc_add4() case 2a.</span>
<a name="l04416"></a>04416 <span class="comment"> *</span>
<a name="l04417"></a>04417 <span class="comment"> * ### TODO: Allow the caller to provide the node&#39;s properties?</span>
<a name="l04418"></a>04418 <span class="comment"> *</span>
<a name="l04419"></a>04419 <span class="comment"> * ### TODO: Split into add_dir, add_file, add_symlink?</span>
<a name="l04420"></a>04420 <span class="comment"> *</span>
<a name="l04421"></a>04421 <span class="comment"> * @since New in 1.7.</span>
<a name="l04422"></a>04422 <span class="comment"> */</span>
<a name="l04423"></a>04423 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04424"></a>04424 <a class="code" href="group__svn__wc.html#ga0d22e8a0836c52681f01896c0fb6f48a" title="Schedule the single node that exists on disk at local_abspath for addition to the working copy...">svn_wc_add_from_disk</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l04425"></a>04425                      <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l04426"></a>04426                      <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04427"></a>04427                      <span class="keywordtype">void</span> *notify_baton,
<a name="l04428"></a>04428                      apr_pool_t *scratch_pool);
<a name="l04429"></a>04429 
<a name="l04430"></a>04430 <span class="comment"></span>
<a name="l04431"></a>04431 <span class="comment">/**</span>
<a name="l04432"></a>04432 <span class="comment"> * Put @a local_abspath under version control by registering it as addition</span>
<a name="l04433"></a>04433 <span class="comment"> * or copy in the database containing its parent. The new node is scheduled</span>
<a name="l04434"></a>04434 <span class="comment"> * for addition to the repository below its parent node.</span>
<a name="l04435"></a>04435 <span class="comment"> *</span>
<a name="l04436"></a>04436 <span class="comment"> * 1) If the node is already versioned, it MUST BE the root of a separate</span>
<a name="l04437"></a>04437 <span class="comment"> * working copy from the same repository as the parent WC. The new node</span>
<a name="l04438"></a>04438 <span class="comment"> * and anything below it will be scheduled for addition inside the parent</span>
<a name="l04439"></a>04439 <span class="comment"> * working copy as a copy of the original location. The separate working</span>
<a name="l04440"></a>04440 <span class="comment"> * copy will be integrated by this step. In this case, which is only used</span>
<a name="l04441"></a>04441 <span class="comment"> * by code like that of &quot;svn cp URL@rev path&quot; @a copyfrom_url and</span>
<a name="l04442"></a>04442 <span class="comment"> * @a copyfrom_rev MUST BE the the url and revision of @a local_abspath</span>
<a name="l04443"></a>04443 <span class="comment"> * in the separate working copy.</span>
<a name="l04444"></a>04444 <span class="comment"> *</span>
<a name="l04445"></a>04445 <span class="comment"> * 2a) If the node was not versioned before it will be scheduled as a local</span>
<a name="l04446"></a>04446 <span class="comment"> * addition or 2b) if @a copyfrom_url and @a copyfrom_rev are set as a copy</span>
<a name="l04447"></a>04447 <span class="comment"> * of that location. In this last case the function doesn&#39;t set the pristine</span>
<a name="l04448"></a>04448 <span class="comment"> * version (of a file) and/or pristine properties, which callers should</span>
<a name="l04449"></a>04449 <span class="comment"> * handle via different APIs. Usually it is easier to call</span>
<a name="l04450"></a>04450 <span class="comment"> * svn_wc_add_repos_file4() (### or a possible svn_wc_add_repos_dir()) than</span>
<a name="l04451"></a>04451 <span class="comment"> * using this variant.</span>
<a name="l04452"></a>04452 <span class="comment"> *</span>
<a name="l04453"></a>04453 <span class="comment"> * If @a local_abspath does not exist as file, directory or symlink, return</span>
<a name="l04454"></a>04454 <span class="comment"> * #SVN_ERR_WC_PATH_NOT_FOUND.</span>
<a name="l04455"></a>04455 <span class="comment"> *</span>
<a name="l04456"></a>04456 <span class="comment"> * If @a local_abspath is an unversioned directory, record @a depth on it;</span>
<a name="l04457"></a>04457 <span class="comment"> * otherwise, ignore @a depth. (Use #svn_depth_infinity unless you exactly</span>
<a name="l04458"></a>04458 <span class="comment"> * know what you are doing, or you may create an unexpected sparse working</span>
<a name="l04459"></a>04459 <span class="comment"> * copy)</span>
<a name="l04460"></a>04460 <span class="comment"> *</span>
<a name="l04461"></a>04461 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton at</span>
<a name="l04462"></a>04462 <span class="comment"> * various points during the operation.  If it returns an error</span>
<a name="l04463"></a>04463 <span class="comment"> * (typically #SVN_ERR_CANCELLED), return that error immediately.</span>
<a name="l04464"></a>04464 <span class="comment"> *</span>
<a name="l04465"></a>04465 <span class="comment"> * When the @a local_abspath has been added, then @a notify_func will be</span>
<a name="l04466"></a>04466 <span class="comment"> * called (if it is not @c NULL) with the @a notify_baton and the path.</span>
<a name="l04467"></a>04467 <span class="comment"> *</span>
<a name="l04468"></a>04468 <span class="comment"> * @note Case 1 is deprecated. Consider doing a WC-to-WC copy instead.</span>
<a name="l04469"></a>04469 <span class="comment"> * @note For case 2a, prefer svn_wc_add_from_disk().</span>
<a name="l04470"></a>04470 <span class="comment"> *</span>
<a name="l04471"></a>04471 <span class="comment"> * @since New in 1.7.</span>
<a name="l04472"></a>04472 <span class="comment"> */</span>
<a name="l04473"></a>04473 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04474"></a>04474 <a class="code" href="group__svn__wc.html#gadaafaffaeabd943d0fb33c82938e9708" title="Put local_abspath under version control by registering it as addition or copy in the database contain...">svn_wc_add4</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l04475"></a>04475             <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l04476"></a>04476             <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04477"></a>04477             <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_url,
<a name="l04478"></a>04478             <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_rev,
<a name="l04479"></a>04479             <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04480"></a>04480             <span class="keywordtype">void</span> *cancel_baton,
<a name="l04481"></a>04481             <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04482"></a>04482             <span class="keywordtype">void</span> *notify_baton,
<a name="l04483"></a>04483             apr_pool_t *scratch_pool);
<a name="l04484"></a>04484 <span class="comment"></span>
<a name="l04485"></a>04485 <span class="comment">/**</span>
<a name="l04486"></a>04486 <span class="comment"> * Similar to svn_wc_add4(), but with an access baton</span>
<a name="l04487"></a>04487 <span class="comment"> * and relative path instead of a context and absolute path.</span>
<a name="l04488"></a>04488 <span class="comment"> * @since New in 1.6.</span>
<a name="l04489"></a>04489 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l04490"></a>04490 <span class="comment"> */</span>
<a name="l04491"></a>04491 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04492"></a>04492 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04493"></a>04493 <a class="code" href="group__svn__wc.html#gaf5a440e1bbb7f13d80995d64c55b1044" title="Similar to svn_wc_add4(), but with an access baton and relative path instead of a context and absolut...">svn_wc_add3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04494"></a>04494             <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *parent_access,
<a name="l04495"></a>04495             <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04496"></a>04496             <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_url,
<a name="l04497"></a>04497             <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_rev,
<a name="l04498"></a>04498             <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04499"></a>04499             <span class="keywordtype">void</span> *cancel_baton,
<a name="l04500"></a>04500             <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04501"></a>04501             <span class="keywordtype">void</span> *notify_baton,
<a name="l04502"></a>04502             apr_pool_t *pool);
<a name="l04503"></a>04503 <span class="comment"></span>
<a name="l04504"></a>04504 <span class="comment">/**</span>
<a name="l04505"></a>04505 <span class="comment"> * Similar to svn_wc_add3(), but with the @a depth parameter always</span>
<a name="l04506"></a>04506 <span class="comment"> * #svn_depth_infinity.</span>
<a name="l04507"></a>04507 <span class="comment"> *</span>
<a name="l04508"></a>04508 <span class="comment"> * @since New in 1.2.</span>
<a name="l04509"></a>04509 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l04510"></a>04510 <span class="comment"> */</span>
<a name="l04511"></a>04511 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04512"></a>04512 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04513"></a>04513 <a class="code" href="group__svn__wc.html#gab9c690a572a5e13418e8f58d4e58d9b6" title="Similar to svn_wc_add3(), but with the depth parameter always svn_depth_infinity.">svn_wc_add2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04514"></a>04514             <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *parent_access,
<a name="l04515"></a>04515             <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_url,
<a name="l04516"></a>04516             <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_rev,
<a name="l04517"></a>04517             <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04518"></a>04518             <span class="keywordtype">void</span> *cancel_baton,
<a name="l04519"></a>04519             <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04520"></a>04520             <span class="keywordtype">void</span> *notify_baton,
<a name="l04521"></a>04521             apr_pool_t *pool);
<a name="l04522"></a>04522 <span class="comment"></span>
<a name="l04523"></a>04523 <span class="comment">/**</span>
<a name="l04524"></a>04524 <span class="comment"> * Similar to svn_wc_add2(), but takes an #svn_wc_notify_func_t instead.</span>
<a name="l04525"></a>04525 <span class="comment"> *</span>
<a name="l04526"></a>04526 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04527"></a>04527 <span class="comment"> */</span>
<a name="l04528"></a>04528 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04529"></a>04529 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04530"></a>04530 <a class="code" href="group__svn__wc.html#gace37ab3ad1f94adf21e30e0795e9179f" title="Similar to svn_wc_add2(), but takes an svn_wc_notify_func_t instead.">svn_wc_add</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04531"></a>04531            <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *parent_access,
<a name="l04532"></a>04532            <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_url,
<a name="l04533"></a>04533            <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_rev,
<a name="l04534"></a>04534            <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04535"></a>04535            <span class="keywordtype">void</span> *cancel_baton,
<a name="l04536"></a>04536            <a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2" title="Similar to svn_wc_notify_func2_t, but takes the information as arguments instead of struct fields...">svn_wc_notify_func_t</a> notify_func,
<a name="l04537"></a>04537            <span class="keywordtype">void</span> *notify_baton,
<a name="l04538"></a>04538            apr_pool_t *pool);
<a name="l04539"></a>04539 <span class="comment"></span>
<a name="l04540"></a>04540 <span class="comment">/** Add a file to a working copy at @a local_abspath, obtaining the</span>
<a name="l04541"></a>04541 <span class="comment"> * text-base&#39;s contents from @a new_base_contents, the wc file&#39;s</span>
<a name="l04542"></a>04542 <span class="comment"> * content from @a new_contents, its unmodified properties from @a</span>
<a name="l04543"></a>04543 <span class="comment"> * new_base_props and its actual properties from @a new_props. Use</span>
<a name="l04544"></a>04544 <span class="comment"> * @a wc_ctx for accessing the working copy.</span>
<a name="l04545"></a>04545 <span class="comment"> *</span>
<a name="l04546"></a>04546 <span class="comment"> * The unmodified text and props normally come from the repository</span>
<a name="l04547"></a>04547 <span class="comment"> * file represented by the copyfrom args, see below.  The new file</span>
<a name="l04548"></a>04548 <span class="comment"> * will be marked as copy.</span>
<a name="l04549"></a>04549 <span class="comment"> *</span>
<a name="l04550"></a>04550 <span class="comment"> * @a new_contents and @a new_props may be NULL, in which case</span>
<a name="l04551"></a>04551 <span class="comment"> * the working copy text and props are taken from the base files with</span>
<a name="l04552"></a>04552 <span class="comment"> * appropriate translation of the file&#39;s content.</span>
<a name="l04553"></a>04553 <span class="comment"> *</span>
<a name="l04554"></a>04554 <span class="comment"> * @a new_contents must be provided in Normal Form. This is required</span>
<a name="l04555"></a>04555 <span class="comment"> * in order to pass both special and non-special files through a stream.</span>
<a name="l04556"></a>04556 <span class="comment"> *</span>
<a name="l04557"></a>04557 <span class="comment"> * @a wc_ctx must contain a write lock for the parent of @a local_abspath.</span>
<a name="l04558"></a>04558 <span class="comment"> *</span>
<a name="l04559"></a>04559 <span class="comment"> * If @a copyfrom_url is non-NULL, then @a copyfrom_rev must be a</span>
<a name="l04560"></a>04560 <span class="comment"> * valid revision number, and together they are the copyfrom history</span>
<a name="l04561"></a>04561 <span class="comment"> * for the new file.</span>
<a name="l04562"></a>04562 <span class="comment"> *</span>
<a name="l04563"></a>04563 <span class="comment"> * The @a cancel_func and @a cancel_baton are a standard cancellation</span>
<a name="l04564"></a>04564 <span class="comment"> * callback, or NULL if no callback is needed. @a notify_func and</span>
<a name="l04565"></a>04565 <span class="comment"> * @a notify_baton are a notification callback, and (if not NULL)</span>
<a name="l04566"></a>04566 <span class="comment"> * will be notified of the addition of this file.</span>
<a name="l04567"></a>04567 <span class="comment"> *</span>
<a name="l04568"></a>04568 <span class="comment"> * Use @a scratch_pool for temporary allocations.</span>
<a name="l04569"></a>04569 <span class="comment"> *</span>
<a name="l04570"></a>04570 <span class="comment"> * ### This function is very redundant with svn_wc_add().  Ideally,</span>
<a name="l04571"></a>04571 <span class="comment"> * we&#39;d merge them, so that svn_wc_add() would just take optional</span>
<a name="l04572"></a>04572 <span class="comment"> * new_props and optional copyfrom information.  That way it could be</span>
<a name="l04573"></a>04573 <span class="comment"> * used for both &#39;svn add somefilesittingonmydisk&#39; and for adding</span>
<a name="l04574"></a>04574 <span class="comment"> * files from repositories, with or without copyfrom history.</span>
<a name="l04575"></a>04575 <span class="comment"> *</span>
<a name="l04576"></a>04576 <span class="comment"> * The problem with this Ideal Plan is that svn_wc_add() also takes</span>
<a name="l04577"></a>04577 <span class="comment"> * care of recursive URL-rewriting.  There&#39;s a whole comment in its</span>
<a name="l04578"></a>04578 <span class="comment"> * doc string about how that&#39;s really weird, outside its core mission,</span>
<a name="l04579"></a>04579 <span class="comment"> * etc, etc.  So another part of the Ideal Plan is that that</span>
<a name="l04580"></a>04580 <span class="comment"> * functionality of svn_wc_add() would move into a separate function.</span>
<a name="l04581"></a>04581 <span class="comment"> *</span>
<a name="l04582"></a>04582 <span class="comment"> * @since New in 1.7.</span>
<a name="l04583"></a>04583 <span class="comment"> */</span>
<a name="l04584"></a>04584 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04585"></a>04585 <a class="code" href="group__svn__wc.html#ga7f664885f3e4478f713ccbfa3d80b9f0" title="Add a file to a working copy at local_abspath, obtaining the text-base&#39;s contents from new_base_conte...">svn_wc_add_repos_file4</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l04586"></a>04586                        <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l04587"></a>04587                        <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> *new_base_contents,
<a name="l04588"></a>04588                        <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> *new_contents,
<a name="l04589"></a>04589                        apr_hash_t *new_base_props,
<a name="l04590"></a>04590                        apr_hash_t *new_props,
<a name="l04591"></a>04591                        <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_url,
<a name="l04592"></a>04592                        <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_rev,
<a name="l04593"></a>04593                        <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04594"></a>04594                        <span class="keywordtype">void</span> *cancel_baton,
<a name="l04595"></a>04595                        apr_pool_t *scratch_pool);
<a name="l04596"></a>04596 <span class="comment"></span>
<a name="l04597"></a>04597 <span class="comment">/** Similar to svn_wc_add_repos_file4, but uses access batons and a</span>
<a name="l04598"></a>04598 <span class="comment"> * relative path instead of a working copy context and absolute path.</span>
<a name="l04599"></a>04599 <span class="comment"> *</span>
<a name="l04600"></a>04600 <span class="comment"> * ### NOTE: the notification callback/baton is not yet used.</span>
<a name="l04601"></a>04601 <span class="comment"> *</span>
<a name="l04602"></a>04602 <span class="comment"> * @since New in 1.6.</span>
<a name="l04603"></a>04603 <span class="comment"> * @deprecated Provided for compatibility with the 1.6 API.</span>
<a name="l04604"></a>04604 <span class="comment"> */</span>
<a name="l04605"></a>04605 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04606"></a>04606 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04607"></a>04607 <a class="code" href="group__svn__wc.html#ga9cf3280194d1e52abc4afbbf467413e2" title="Similar to svn_wc_add_repos_file4, but uses access batons and a relative path instead of a working co...">svn_wc_add_repos_file3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l04608"></a>04608                        <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04609"></a>04609                        <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> *new_base_contents,
<a name="l04610"></a>04610                        <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> *new_contents,
<a name="l04611"></a>04611                        apr_hash_t *new_base_props,
<a name="l04612"></a>04612                        apr_hash_t *new_props,
<a name="l04613"></a>04613                        <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_url,
<a name="l04614"></a>04614                        <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_rev,
<a name="l04615"></a>04615                        <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04616"></a>04616                        <span class="keywordtype">void</span> *cancel_baton,
<a name="l04617"></a>04617                        <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04618"></a>04618                        <span class="keywordtype">void</span> *notify_baton,
<a name="l04619"></a>04619                        apr_pool_t *scratch_pool);
<a name="l04620"></a>04620 
<a name="l04621"></a>04621 <span class="comment"></span>
<a name="l04622"></a>04622 <span class="comment">/** Same as svn_wc_add_repos_file3(), except that it has pathnames rather</span>
<a name="l04623"></a>04623 <span class="comment"> * than streams for the text base, and actual text, and has no cancellation.</span>
<a name="l04624"></a>04624 <span class="comment"> *</span>
<a name="l04625"></a>04625 <span class="comment"> * @since New in 1.4.</span>
<a name="l04626"></a>04626 <span class="comment"> * @deprecated Provided for compatibility with the 1.5 API</span>
<a name="l04627"></a>04627 <span class="comment"> */</span>
<a name="l04628"></a>04628 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04629"></a>04629 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04630"></a>04630 <a class="code" href="group__svn__wc.html#gacd74be608158aacf75d1e18ffe24100f" title="Same as svn_wc_add_repos_file3(), except that it has pathnames rather than streams for the text base...">svn_wc_add_repos_file2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l04631"></a>04631                        <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04632"></a>04632                        <span class="keyword">const</span> <span class="keywordtype">char</span> *new_text_base_path,
<a name="l04633"></a>04633                        <span class="keyword">const</span> <span class="keywordtype">char</span> *new_text_path,
<a name="l04634"></a>04634                        apr_hash_t *new_base_props,
<a name="l04635"></a>04635                        apr_hash_t *new_props,
<a name="l04636"></a>04636                        <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_url,
<a name="l04637"></a>04637                        <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_rev,
<a name="l04638"></a>04638                        apr_pool_t *pool);
<a name="l04639"></a>04639 <span class="comment"></span>
<a name="l04640"></a>04640 <span class="comment">/** Same as svn_wc_add_repos_file3(), except that it doesn&#39;t have the</span>
<a name="l04641"></a>04641 <span class="comment"> * BASE arguments or cancellation.</span>
<a name="l04642"></a>04642 <span class="comment"> *</span>
<a name="l04643"></a>04643 <span class="comment"> * @deprecated Provided for compatibility with the 1.3 API</span>
<a name="l04644"></a>04644 <span class="comment"> */</span>
<a name="l04645"></a>04645 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04646"></a>04646 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04647"></a>04647 <a class="code" href="group__svn__wc.html#ga2bec19fd4aeda3a9ed2c667dd4df879c" title="Same as svn_wc_add_repos_file3(), except that it doesn&#39;t have the BASE arguments or cancellation...">svn_wc_add_repos_file</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *dst_path,
<a name="l04648"></a>04648                       <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04649"></a>04649                       <span class="keyword">const</span> <span class="keywordtype">char</span> *new_text_path,
<a name="l04650"></a>04650                       apr_hash_t *new_props,
<a name="l04651"></a>04651                       <span class="keyword">const</span> <span class="keywordtype">char</span> *copyfrom_url,
<a name="l04652"></a>04652                       <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> copyfrom_rev,
<a name="l04653"></a>04653                       apr_pool_t *pool);
<a name="l04654"></a>04654 
<a name="l04655"></a>04655 <span class="comment"></span>
<a name="l04656"></a>04656 <span class="comment">/** Remove @a local_abspath from revision control.  @a wc_ctx must</span>
<a name="l04657"></a>04657 <span class="comment"> * hold a write lock.</span>
<a name="l04658"></a>04658 <span class="comment"> *</span>
<a name="l04659"></a>04659 <span class="comment"> * If @a local_abspath is a file, all its info will be removed from the</span>
<a name="l04660"></a>04660 <span class="comment"> * administrative area.  If @a local_abspath is a directory, then the</span>
<a name="l04661"></a>04661 <span class="comment"> * administrative area will be deleted, along with *all* the administrative</span>
<a name="l04662"></a>04662 <span class="comment"> * areas anywhere in the tree below @a adm_access.</span>
<a name="l04663"></a>04663 <span class="comment"> *</span>
<a name="l04664"></a>04664 <span class="comment"> * Normally, only administrative data is removed.  However, if</span>
<a name="l04665"></a>04665 <span class="comment"> * @a destroy_wf is TRUE, then all working file(s) and dirs are deleted</span>
<a name="l04666"></a>04666 <span class="comment"> * from disk as well.  When called with @a destroy_wf, any locally</span>
<a name="l04667"></a>04667 <span class="comment"> * modified files will *not* be deleted, and the special error</span>
<a name="l04668"></a>04668 <span class="comment"> * #SVN_ERR_WC_LEFT_LOCAL_MOD might be returned.  (Callers only need to</span>
<a name="l04669"></a>04669 <span class="comment"> * check for this special return value if @a destroy_wf is TRUE.)</span>
<a name="l04670"></a>04670 <span class="comment"> *</span>
<a name="l04671"></a>04671 <span class="comment"> * If @a instant_error is TRUE, then return</span>
<a name="l04672"></a>04672 <span class="comment"> * #SVN_ERR_WC_LEFT_LOCAL_MOD the instant a locally modified file is</span>
<a name="l04673"></a>04673 <span class="comment"> * encountered.  Otherwise, leave locally modified files in place and</span>
<a name="l04674"></a>04674 <span class="comment"> * return the error only after all the recursion is complete.</span>
<a name="l04675"></a>04675 <span class="comment"> *</span>
<a name="l04676"></a>04676 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton at</span>
<a name="l04677"></a>04677 <span class="comment"> * various points during the removal.  If it returns an error</span>
<a name="l04678"></a>04678 <span class="comment"> * (typically #SVN_ERR_CANCELLED), return that error immediately.</span>
<a name="l04679"></a>04679 <span class="comment"> *</span>
<a name="l04680"></a>04680 <span class="comment"> * WARNING:  This routine is exported for careful, measured use by</span>
<a name="l04681"></a>04681 <span class="comment"> * libsvn_client.  Do *not* call this routine unless you really</span>
<a name="l04682"></a>04682 <span class="comment"> * understand what the heck you&#39;re doing.</span>
<a name="l04683"></a>04683 <span class="comment"> *</span>
<a name="l04684"></a>04684 <span class="comment"> * @since New in 1.7.</span>
<a name="l04685"></a>04685 <span class="comment"> */</span>
<a name="l04686"></a>04686 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04687"></a>04687 <a class="code" href="group__svn__wc.html#ga24d515e760153e9fd648b1911e218b77" title="Remove local_abspath from revision control.">svn_wc_remove_from_revision_control2</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l04688"></a>04688                                      <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l04689"></a>04689                                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> destroy_wf,
<a name="l04690"></a>04690                                      <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> instant_error,
<a name="l04691"></a>04691                                      <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04692"></a>04692                                      <span class="keywordtype">void</span> *cancel_baton,
<a name="l04693"></a>04693                                      apr_pool_t *pool);
<a name="l04694"></a>04694 <span class="comment"></span>
<a name="l04695"></a>04695 <span class="comment">/**</span>
<a name="l04696"></a>04696 <span class="comment"> * Similar to svn_wc_remove_from_revision_control2() but with a name</span>
<a name="l04697"></a>04697 <span class="comment"> * and access baton.</span>
<a name="l04698"></a>04698 <span class="comment"> *</span>
<a name="l04699"></a>04699 <span class="comment"> * WARNING:  This routine was exported for careful, measured use by</span>
<a name="l04700"></a>04700 <span class="comment"> * libsvn_client.  Do *not* call this routine unless you really</span>
<a name="l04701"></a>04701 <span class="comment"> * understand what the heck you&#39;re doing.</span>
<a name="l04702"></a>04702 <span class="comment"> *</span>
<a name="l04703"></a>04703 <span class="comment"> * @deprecated Provided for compatibility with the 1.6 API</span>
<a name="l04704"></a>04704 <span class="comment"> */</span>
<a name="l04705"></a>04705 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04706"></a>04706 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04707"></a>04707 <a class="code" href="group__svn__wc.html#gaac573ae3466f4367cb57aeb7b4289637" title="Similar to svn_wc_remove_from_revision_control2() but with a name and access baton.">svn_wc_remove_from_revision_control</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04708"></a>04708                                     <span class="keyword">const</span> <span class="keywordtype">char</span> *name,
<a name="l04709"></a>04709                                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> destroy_wf,
<a name="l04710"></a>04710                                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> instant_error,
<a name="l04711"></a>04711                                     <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04712"></a>04712                                     <span class="keywordtype">void</span> *cancel_baton,
<a name="l04713"></a>04713                                     apr_pool_t *pool);
<a name="l04714"></a>04714 
<a name="l04715"></a>04715 <span class="comment"></span>
<a name="l04716"></a>04716 <span class="comment">/**</span>
<a name="l04717"></a>04717 <span class="comment"> * Assuming @a local_abspath is under version control or a tree conflict</span>
<a name="l04718"></a>04718 <span class="comment"> * victim and in a state of conflict, then take @a local_abspath *out*</span>
<a name="l04719"></a>04719 <span class="comment"> * of this state.  If @a resolve_text is TRUE then any text conflict is</span>
<a name="l04720"></a>04720 <span class="comment"> * resolved, if @a resolve_tree is TRUE then any tree conflicts are</span>
<a name="l04721"></a>04721 <span class="comment"> * resolved. If @a resolve_prop is set to &quot;&quot; all property conflicts are</span>
<a name="l04722"></a>04722 <span class="comment"> * resolved, if it is set to any other string value, conflicts on that</span>
<a name="l04723"></a>04723 <span class="comment"> * specific property are resolved and when resolve_prop is NULL, no</span>
<a name="l04724"></a>04724 <span class="comment"> * property conflicts are resolved.</span>
<a name="l04725"></a>04725 <span class="comment"> *</span>
<a name="l04726"></a>04726 <span class="comment"> * If @a depth is #svn_depth_empty, act only on @a local_abspath; if</span>
<a name="l04727"></a>04727 <span class="comment"> * #svn_depth_files, resolve @a local_abspath and its conflicted file</span>
<a name="l04728"></a>04728 <span class="comment"> * children (if any); if #svn_depth_immediates, resolve @a local_abspath</span>
<a name="l04729"></a>04729 <span class="comment"> * and all its immediate conflicted children (both files and directories,</span>
<a name="l04730"></a>04730 <span class="comment"> * if any); if #svn_depth_infinity, resolve @a local_abspath and every</span>
<a name="l04731"></a>04731 <span class="comment"> * conflicted file or directory anywhere beneath it.</span>
<a name="l04732"></a>04732 <span class="comment"> *</span>
<a name="l04733"></a>04733 <span class="comment"> * If @a conflict_choice is #svn_wc_conflict_choose_base, resolve the</span>
<a name="l04734"></a>04734 <span class="comment"> * conflict with the old file contents; if</span>
<a name="l04735"></a>04735 <span class="comment"> * #svn_wc_conflict_choose_mine_full, use the original working contents;</span>
<a name="l04736"></a>04736 <span class="comment"> * if #svn_wc_conflict_choose_theirs_full, the new contents; and if</span>
<a name="l04737"></a>04737 <span class="comment"> * #svn_wc_conflict_choose_merged, don&#39;t change the contents at all,</span>
<a name="l04738"></a>04738 <span class="comment"> * just remove the conflict status, which is the pre-1.5 behavior.</span>
<a name="l04739"></a>04739 <span class="comment"> *</span>
<a name="l04740"></a>04740 <span class="comment"> * #svn_wc_conflict_choose_theirs_conflict and</span>
<a name="l04741"></a>04741 <span class="comment"> * #svn_wc_conflict_choose_mine_conflict are not legal for binary</span>
<a name="l04742"></a>04742 <span class="comment"> * files or properties.</span>
<a name="l04743"></a>04743 <span class="comment"> *</span>
<a name="l04744"></a>04744 <span class="comment"> * @a wc_ctx is a working copy context, with a write lock, for @a</span>
<a name="l04745"></a>04745 <span class="comment"> * local_abspath.</span>
<a name="l04746"></a>04746 <span class="comment"> *</span>
<a name="l04747"></a>04747 <span class="comment"> * Needless to say, this function doesn&#39;t touch conflict markers or</span>
<a name="l04748"></a>04748 <span class="comment"> * anything of that sort -- only a human can semantically resolve a</span>
<a name="l04749"></a>04749 <span class="comment"> * conflict.  Instead, this function simply marks a file as &quot;having</span>
<a name="l04750"></a>04750 <span class="comment"> * been resolved&quot;, clearing the way for a commit.</span>
<a name="l04751"></a>04751 <span class="comment"> *</span>
<a name="l04752"></a>04752 <span class="comment"> * The implementation details are opaque, as our &quot;conflicted&quot; criteria</span>
<a name="l04753"></a>04753 <span class="comment"> * might change over time.  (At the moment, this routine removes the</span>
<a name="l04754"></a>04754 <span class="comment"> * three fulltext &#39;backup&#39; files and any .prej file created in a conflict,</span>
<a name="l04755"></a>04755 <span class="comment"> * and modifies @a local_abspath&#39;s entry.)</span>
<a name="l04756"></a>04756 <span class="comment"> *</span>
<a name="l04757"></a>04757 <span class="comment"> * If @a local_abspath is not under version control and not a tree</span>
<a name="l04758"></a>04758 <span class="comment"> * conflict, return #SVN_ERR_ENTRY_NOT_FOUND. If @a path isn&#39;t in a</span>
<a name="l04759"></a>04759 <span class="comment"> * state of conflict to begin with, do nothing, and return #SVN_NO_ERROR.</span>
<a name="l04760"></a>04760 <span class="comment"> *</span>
<a name="l04761"></a>04761 <span class="comment"> * If @c local_abspath was successfully taken out of a state of conflict,</span>
<a name="l04762"></a>04762 <span class="comment"> * report this information to @c notify_func (if non-@c NULL.)  If only</span>
<a name="l04763"></a>04763 <span class="comment"> * text, only property, or only tree conflict resolution was requested,</span>
<a name="l04764"></a>04764 <span class="comment"> * and it was successful, then success gets reported.</span>
<a name="l04765"></a>04765 <span class="comment"> *</span>
<a name="l04766"></a>04766 <span class="comment"> * Temporary allocations will be performed in @a scratch_pool.</span>
<a name="l04767"></a>04767 <span class="comment"> *</span>
<a name="l04768"></a>04768 <span class="comment"> * @since New in 1.7.</span>
<a name="l04769"></a>04769 <span class="comment"> */</span>
<a name="l04770"></a>04770 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04771"></a>04771 <a class="code" href="group__svn__wc.html#gaa76d8a7b197bb9103738e1efa0dad68c" title="Assuming local_abspath is under version control or a tree conflict victim and in a state of conflict...">svn_wc_resolved_conflict5</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l04772"></a>04772                           <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l04773"></a>04773                           <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04774"></a>04774                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_text,
<a name="l04775"></a>04775                           <span class="keyword">const</span> <span class="keywordtype">char</span> *resolve_prop,
<a name="l04776"></a>04776                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_tree,
<a name="l04777"></a>04777                           <a class="code" href="group__svn__wc__conflict.html#ga040e000024033dd2721a4ddce5561431" title="The way in which the conflict callback chooses a course of action.">svn_wc_conflict_choice_t</a> conflict_choice,
<a name="l04778"></a>04778                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04779"></a>04779                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l04780"></a>04780                           <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04781"></a>04781                           <span class="keywordtype">void</span> *notify_baton,
<a name="l04782"></a>04782                           apr_pool_t *scratch_pool);
<a name="l04783"></a>04783 <span class="comment"></span>
<a name="l04784"></a>04784 <span class="comment">/** Similar to svn_wc_resolved_conflict5, but takes an absolute path</span>
<a name="l04785"></a>04785 <span class="comment"> * and an access baton. This version doesn&#39;t support resolving a specific</span>
<a name="l04786"></a>04786 <span class="comment"> * property.conflict.</span>
<a name="l04787"></a>04787 <span class="comment"> *</span>
<a name="l04788"></a>04788 <span class="comment"> * @since New in 1.6.</span>
<a name="l04789"></a>04789 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l04790"></a>04790 <span class="comment"> */</span>
<a name="l04791"></a>04791 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04792"></a>04792 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04793"></a>04793 <a class="code" href="group__svn__wc.html#ga8eeabb76dc33dfd32dbdd70a1065a7fe" title="Similar to svn_wc_resolved_conflict5, but takes an absolute path and an access baton.">svn_wc_resolved_conflict4</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04794"></a>04794                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04795"></a>04795                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_text,
<a name="l04796"></a>04796                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_props,
<a name="l04797"></a>04797                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_tree,
<a name="l04798"></a>04798                           <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04799"></a>04799                           <a class="code" href="group__svn__wc__conflict.html#ga040e000024033dd2721a4ddce5561431" title="The way in which the conflict callback chooses a course of action.">svn_wc_conflict_choice_t</a> conflict_choice,
<a name="l04800"></a>04800                           <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04801"></a>04801                           <span class="keywordtype">void</span> *notify_baton,
<a name="l04802"></a>04802                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04803"></a>04803                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l04804"></a>04804                           apr_pool_t *pool);
<a name="l04805"></a>04805 
<a name="l04806"></a>04806 <span class="comment"></span>
<a name="l04807"></a>04807 <span class="comment">/**</span>
<a name="l04808"></a>04808 <span class="comment"> * Similar to svn_wc_resolved_conflict4(), but without tree-conflict</span>
<a name="l04809"></a>04809 <span class="comment"> * resolution support.</span>
<a name="l04810"></a>04810 <span class="comment"> *</span>
<a name="l04811"></a>04811 <span class="comment"> * @since New in 1.5.</span>
<a name="l04812"></a>04812 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l04813"></a>04813 <span class="comment"> */</span>
<a name="l04814"></a>04814 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04815"></a>04815 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04816"></a>04816 <a class="code" href="group__svn__wc.html#ga552cd6679dec494a65a793ba2d658066" title="Similar to svn_wc_resolved_conflict4(), but without tree-conflict resolution support.">svn_wc_resolved_conflict3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04817"></a>04817                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04818"></a>04818                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_text,
<a name="l04819"></a>04819                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_props,
<a name="l04820"></a>04820                           <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l04821"></a>04821                           <a class="code" href="group__svn__wc__conflict.html#ga040e000024033dd2721a4ddce5561431" title="The way in which the conflict callback chooses a course of action.">svn_wc_conflict_choice_t</a> conflict_choice,
<a name="l04822"></a>04822                           <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04823"></a>04823                           <span class="keywordtype">void</span> *notify_baton,
<a name="l04824"></a>04824                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04825"></a>04825                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l04826"></a>04826                           apr_pool_t *pool);
<a name="l04827"></a>04827 
<a name="l04828"></a>04828 <span class="comment"></span>
<a name="l04829"></a>04829 <span class="comment">/**</span>
<a name="l04830"></a>04830 <span class="comment"> * Similar to svn_wc_resolved_conflict3(), but without automatic conflict</span>
<a name="l04831"></a>04831 <span class="comment"> * resolution support, and with @a depth set according to @a recurse:</span>
<a name="l04832"></a>04832 <span class="comment"> * if @a recurse is TRUE, @a depth is #svn_depth_infinity, else it is</span>
<a name="l04833"></a>04833 <span class="comment"> * #svn_depth_files.</span>
<a name="l04834"></a>04834 <span class="comment"> *</span>
<a name="l04835"></a>04835 <span class="comment"> * @since New in 1.2.</span>
<a name="l04836"></a>04836 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l04837"></a>04837 <span class="comment"> */</span>
<a name="l04838"></a>04838 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04839"></a>04839 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04840"></a>04840 <a class="code" href="group__svn__wc.html#ga54e3128550adfc252c3b3c622897e698" title="Similar to svn_wc_resolved_conflict3(), but without automatic conflict resolution support...">svn_wc_resolved_conflict2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04841"></a>04841                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04842"></a>04842                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_text,
<a name="l04843"></a>04843                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_props,
<a name="l04844"></a>04844                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04845"></a>04845                           <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l04846"></a>04846                           <span class="keywordtype">void</span> *notify_baton,
<a name="l04847"></a>04847                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l04848"></a>04848                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l04849"></a>04849                           apr_pool_t *pool);
<a name="l04850"></a>04850 <span class="comment"></span>
<a name="l04851"></a>04851 <span class="comment">/**</span>
<a name="l04852"></a>04852 <span class="comment"> * Similar to svn_wc_resolved_conflict2(), but takes an</span>
<a name="l04853"></a>04853 <span class="comment"> * svn_wc_notify_func_t and doesn&#39;t have cancellation support.</span>
<a name="l04854"></a>04854 <span class="comment"> *</span>
<a name="l04855"></a>04855 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l04856"></a>04856 <span class="comment"> */</span>
<a name="l04857"></a>04857 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04858"></a>04858 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04859"></a>04859 <a class="code" href="group__svn__wc.html#gad065d03c864e45af71d0b26dcc4e8552" title="Similar to svn_wc_resolved_conflict2(), but takes an svn_wc_notify_func_t and doesn&#39;t have cancellati...">svn_wc_resolved_conflict</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04860"></a>04860                          <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04861"></a>04861                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_text,
<a name="l04862"></a>04862                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> resolve_props,
<a name="l04863"></a>04863                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04864"></a>04864                          <a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2" title="Similar to svn_wc_notify_func2_t, but takes the information as arguments instead of struct fields...">svn_wc_notify_func_t</a> notify_func,
<a name="l04865"></a>04865                          <span class="keywordtype">void</span> *notify_baton,
<a name="l04866"></a>04866                          apr_pool_t *pool);
<a name="l04867"></a>04867 
<a name="l04868"></a>04868 
<a name="l04869"></a>04869 <span class="comment">/* Commits. */</span>
<a name="l04870"></a>04870 
<a name="l04871"></a>04871 <span class="comment"></span>
<a name="l04872"></a>04872 <span class="comment">/**</span>
<a name="l04873"></a>04873 <span class="comment"> * Storage type for queued post-commit data.</span>
<a name="l04874"></a>04874 <span class="comment"> *</span>
<a name="l04875"></a>04875 <span class="comment"> * @since New in 1.5.</span>
<a name="l04876"></a>04876 <span class="comment"> */</span>
<a name="l04877"></a><a class="code" href="group__svn__wc.html#gab5313e08f94a081034e8453609bb7638">04877</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="group__svn__wc.html#gab5313e08f94a081034e8453609bb7638" title="Storage type for queued post-commit data.">svn_wc_committed_queue_t</a> <a class="code" href="group__svn__wc.html#gab5313e08f94a081034e8453609bb7638" title="Storage type for queued post-commit data.">svn_wc_committed_queue_t</a>;
<a name="l04878"></a>04878 
<a name="l04879"></a>04879 <span class="comment"></span>
<a name="l04880"></a>04880 <span class="comment">/**</span>
<a name="l04881"></a>04881 <span class="comment"> * Create a queue for use with svn_wc_queue_committed() and</span>
<a name="l04882"></a>04882 <span class="comment"> * svn_wc_process_committed_queue().</span>
<a name="l04883"></a>04883 <span class="comment"> *</span>
<a name="l04884"></a>04884 <span class="comment"> * The returned queue and all further allocations required for queuing</span>
<a name="l04885"></a>04885 <span class="comment"> * new items will also be done from @a pool.</span>
<a name="l04886"></a>04886 <span class="comment"> *</span>
<a name="l04887"></a>04887 <span class="comment"> * @since New in 1.5.</span>
<a name="l04888"></a>04888 <span class="comment"> */</span>
<a name="l04889"></a>04889 <a class="code" href="group__svn__wc.html#gab5313e08f94a081034e8453609bb7638" title="Storage type for queued post-commit data.">svn_wc_committed_queue_t</a> *
<a name="l04890"></a>04890 <a class="code" href="group__svn__wc.html#ga32461ffb9ca12374861ec37b79718a73" title="Create a queue for use with svn_wc_queue_committed() and svn_wc_process_committed_queue().">svn_wc_committed_queue_create</a>(apr_pool_t *pool);
<a name="l04891"></a>04891 
<a name="l04892"></a>04892 <span class="comment"></span>
<a name="l04893"></a>04893 <span class="comment">/**</span>
<a name="l04894"></a>04894 <span class="comment"> * Queue committed items to be processed later by</span>
<a name="l04895"></a>04895 <span class="comment"> * svn_wc_process_committed_queue2().</span>
<a name="l04896"></a>04896 <span class="comment"> *</span>
<a name="l04897"></a>04897 <span class="comment"> * Record in @a queue that @a local_abspath will need to be bumped</span>
<a name="l04898"></a>04898 <span class="comment"> * after a commit succeeds.</span>
<a name="l04899"></a>04899 <span class="comment"> *</span>
<a name="l04900"></a>04900 <span class="comment"> * If non-NULL, @a wcprop_changes is an array of &lt;tt&gt;svn_prop_t *&lt;/tt&gt;</span>
<a name="l04901"></a>04901 <span class="comment"> * changes to wc properties; if an #svn_prop_t-&gt;value is NULL, then</span>
<a name="l04902"></a>04902 <span class="comment"> * that property is deleted.</span>
<a name="l04903"></a>04903 <span class="comment"> *   ### [JAF]  No, a prop whose value is NULL is ignored, not deleted.  This</span>
<a name="l04904"></a>04904 <span class="comment"> *   ### seems to be not a set of changes but rather the new complete set of</span>
<a name="l04905"></a>04905 <span class="comment"> *   ### props.  And it&#39;s renamed to &#39;new_dav_cache&#39; inside; why?</span>
<a name="l04906"></a>04906 <span class="comment"> *</span>
<a name="l04907"></a>04907 <span class="comment"> * If @a remove_lock is @c TRUE, any entryprops related to a repository</span>
<a name="l04908"></a>04908 <span class="comment"> * lock will be removed.</span>
<a name="l04909"></a>04909 <span class="comment"> *</span>
<a name="l04910"></a>04910 <span class="comment"> * If @a remove_changelist is @c TRUE, any association with a</span>
<a name="l04911"></a>04911 <span class="comment"> * changelist will be removed.</span>
<a name="l04912"></a>04912 <span class="comment"> *</span>
<a name="l04913"></a>04913 <span class="comment"> *</span>
<a name="l04914"></a>04914 <span class="comment"> * If @a sha1_checksum is non-NULL, use it to identify the node&#39;s pristine</span>
<a name="l04915"></a>04915 <span class="comment"> * text.</span>
<a name="l04916"></a>04916 <span class="comment"> *</span>
<a name="l04917"></a>04917 <span class="comment"> * If @a recurse is TRUE and @a local_abspath is a directory, then bump every</span>
<a name="l04918"></a>04918 <span class="comment"> * versioned object at or under @a local_abspath.  This is usually done for</span>
<a name="l04919"></a>04919 <span class="comment"> * copied trees.</span>
<a name="l04920"></a>04920 <span class="comment"> *</span>
<a name="l04921"></a>04921 <span class="comment"> * ### In the present implementation, if a recursive directory item is in</span>
<a name="l04922"></a>04922 <span class="comment"> *     the queue, then any children (at any depth) of that directory that</span>
<a name="l04923"></a>04923 <span class="comment"> *     are also in the queue as separate items will get:</span>
<a name="l04924"></a>04924 <span class="comment"> *       &#39;wcprop_changes&#39; = NULL;</span>
<a name="l04925"></a>04925 <span class="comment"> *       &#39;remove_lock&#39; = FALSE;</span>
<a name="l04926"></a>04926 <span class="comment"> *       &#39;remove_changelist&#39; from the recursive parent item;</span>
<a name="l04927"></a>04927 <span class="comment"> *     and any children (at any depth) of that directory that are NOT in</span>
<a name="l04928"></a>04928 <span class="comment"> *     the queue as separate items will get:</span>
<a name="l04929"></a>04929 <span class="comment"> *       &#39;wcprop_changes&#39; = NULL;</span>
<a name="l04930"></a>04930 <span class="comment"> *       &#39;remove_lock&#39; = FALSE;</span>
<a name="l04931"></a>04931 <span class="comment"> *       &#39;remove_changelist&#39; from the recursive parent item;</span>
<a name="l04932"></a>04932 <span class="comment"> *</span>
<a name="l04933"></a>04933 <span class="comment"> * @note the @a recurse parameter should be used with extreme care since</span>
<a name="l04934"></a>04934 <span class="comment"> * it will bump ALL nodes under the directory, regardless of their</span>
<a name="l04935"></a>04935 <span class="comment"> * actual inclusion in the new revision.</span>
<a name="l04936"></a>04936 <span class="comment"> *</span>
<a name="l04937"></a>04937 <span class="comment"> * All pointer data passed to this function (@a local_abspath,</span>
<a name="l04938"></a>04938 <span class="comment"> * @a wcprop_changes and the checksums) should remain valid until the</span>
<a name="l04939"></a>04939 <span class="comment"> * queue has been processed by svn_wc_process_committed_queue2().</span>
<a name="l04940"></a>04940 <span class="comment"> *</span>
<a name="l04941"></a>04941 <span class="comment"> * Temporary allocations will be performed in @a scratch_pool, and persistent</span>
<a name="l04942"></a>04942 <span class="comment"> * allocations will use the same pool as @a queue used when it was created.</span>
<a name="l04943"></a>04943 <span class="comment"> *</span>
<a name="l04944"></a>04944 <span class="comment"> * @since New in 1.7.</span>
<a name="l04945"></a>04945 <span class="comment"> */</span>
<a name="l04946"></a>04946 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04947"></a>04947 <a class="code" href="group__svn__wc.html#ga8da2f5064372bda0fcf2c4f8fb84eb62" title="Queue committed items to be processed later by svn_wc_process_committed_queue2().">svn_wc_queue_committed3</a>(<a class="code" href="group__svn__wc.html#gab5313e08f94a081034e8453609bb7638" title="Storage type for queued post-commit data.">svn_wc_committed_queue_t</a> *queue,
<a name="l04948"></a>04948                         <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l04949"></a>04949                         <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l04950"></a>04950                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04951"></a>04951                         <span class="keyword">const</span> apr_array_header_t *wcprop_changes,
<a name="l04952"></a>04952                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_lock,
<a name="l04953"></a>04953                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_changelist,
<a name="l04954"></a>04954                         <span class="keyword">const</span> <a class="code" href="structsvn__checksum__t.html" title="A generic checksum representation.">svn_checksum_t</a> *sha1_checksum,
<a name="l04955"></a>04955                         apr_pool_t *scratch_pool);
<a name="l04956"></a>04956 <span class="comment"></span>
<a name="l04957"></a>04957 <span class="comment">/** Same as svn_wc_queue_committed3() except @a path doesn&#39;t have to be an</span>
<a name="l04958"></a>04958 <span class="comment"> * abspath and @a adm_access is unused and a SHA-1 checksum cannot be</span>
<a name="l04959"></a>04959 <span class="comment"> * specified.</span>
<a name="l04960"></a>04960 <span class="comment"> *</span>
<a name="l04961"></a>04961 <span class="comment"> * @since New in 1.6.</span>
<a name="l04962"></a>04962 <span class="comment"> *</span>
<a name="l04963"></a>04963 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l04964"></a>04964 <span class="comment"> */</span>
<a name="l04965"></a>04965 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04966"></a>04966 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04967"></a>04967 <a class="code" href="group__svn__wc.html#gaf90b126117f2446776ea25f6b0328e38" title="Same as svn_wc_queue_committed3() except path doesn&#39;t have to be an abspath and adm_access is unused ...">svn_wc_queue_committed2</a>(<a class="code" href="group__svn__wc.html#gab5313e08f94a081034e8453609bb7638" title="Storage type for queued post-commit data.">svn_wc_committed_queue_t</a> *queue,
<a name="l04968"></a>04968                         <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04969"></a>04969                         <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04970"></a>04970                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04971"></a>04971                         <span class="keyword">const</span> apr_array_header_t *wcprop_changes,
<a name="l04972"></a>04972                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_lock,
<a name="l04973"></a>04973                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_changelist,
<a name="l04974"></a>04974                         <span class="keyword">const</span> <a class="code" href="structsvn__checksum__t.html" title="A generic checksum representation.">svn_checksum_t</a> *md5_checksum,
<a name="l04975"></a>04975                         apr_pool_t *scratch_pool);
<a name="l04976"></a>04976 
<a name="l04977"></a>04977 <span class="comment"></span>
<a name="l04978"></a>04978 <span class="comment">/** Same as svn_wc_queue_committed2() but the @a queue parameter has an</span>
<a name="l04979"></a>04979 <span class="comment"> * extra indirection and @a digest is supplied instead of a checksum type.</span>
<a name="l04980"></a>04980 <span class="comment"> *</span>
<a name="l04981"></a>04981 <span class="comment"> * @note despite the extra indirection, this function does NOT allocate</span>
<a name="l04982"></a>04982 <span class="comment"> *   the queue for you. svn_wc_committed_queue_create() must be called.</span>
<a name="l04983"></a>04983 <span class="comment"> *</span>
<a name="l04984"></a>04984 <span class="comment"> * @since New in 1.5</span>
<a name="l04985"></a>04985 <span class="comment"> *</span>
<a name="l04986"></a>04986 <span class="comment"> * @deprecated Provided for backwards compatibility with 1.5</span>
<a name="l04987"></a>04987 <span class="comment"> */</span>
<a name="l04988"></a>04988 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l04989"></a>04989 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l04990"></a>04990 <a class="code" href="group__svn__wc.html#ga7856266623140d568a76f03672f9b1c3" title="Same as svn_wc_queue_committed2() but the queue parameter has an extra indirection and digest is supp...">svn_wc_queue_committed</a>(<a class="code" href="group__svn__wc.html#gab5313e08f94a081034e8453609bb7638" title="Storage type for queued post-commit data.">svn_wc_committed_queue_t</a> **queue,
<a name="l04991"></a>04991                        <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l04992"></a>04992                        <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l04993"></a>04993                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l04994"></a>04994                        <span class="keyword">const</span> apr_array_header_t *wcprop_changes,
<a name="l04995"></a>04995                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_lock,
<a name="l04996"></a>04996                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_changelist,
<a name="l04997"></a>04997                        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *digest,
<a name="l04998"></a>04998                        apr_pool_t *pool);
<a name="l04999"></a>04999 
<a name="l05000"></a>05000 <span class="comment"></span>
<a name="l05001"></a>05001 <span class="comment">/**</span>
<a name="l05002"></a>05002 <span class="comment"> * Bump all items in @a queue to @a new_revnum after a commit succeeds.</span>
<a name="l05003"></a>05003 <span class="comment"> * @a rev_date and @a rev_author are the (server-side) date and author</span>
<a name="l05004"></a>05004 <span class="comment"> * of the new revision; one or both may be @c NULL.</span>
<a name="l05005"></a>05005 <span class="comment"> *</span>
<a name="l05006"></a>05006 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton to determine</span>
<a name="l05007"></a>05007 <span class="comment"> * if the client wants to cancel the operation.</span>
<a name="l05008"></a>05008 <span class="comment"> *</span>
<a name="l05009"></a>05009 <span class="comment"> * @since New in 1.7.</span>
<a name="l05010"></a>05010 <span class="comment"> */</span>
<a name="l05011"></a>05011 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05012"></a>05012 <a class="code" href="group__svn__wc.html#ga72fc390a891af297d845c72055e0b6f2" title="Bump all items in queue to new_revnum after a commit succeeds.">svn_wc_process_committed_queue2</a>(<a class="code" href="group__svn__wc.html#gab5313e08f94a081034e8453609bb7638" title="Storage type for queued post-commit data.">svn_wc_committed_queue_t</a> *queue,
<a name="l05013"></a>05013                                 <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l05014"></a>05014                                 <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> new_revnum,
<a name="l05015"></a>05015                                 <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_date,
<a name="l05016"></a>05016                                 <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_author,
<a name="l05017"></a>05017                                 <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05018"></a>05018                                 <span class="keywordtype">void</span> *cancel_baton,
<a name="l05019"></a>05019                                 apr_pool_t *scratch_pool);
<a name="l05020"></a>05020 <span class="comment"></span>
<a name="l05021"></a>05021 <span class="comment">/** @see svn_wc_process_committed_queue2()</span>
<a name="l05022"></a>05022 <span class="comment"> *</span>
<a name="l05023"></a>05023 <span class="comment"> * @since New in 1.5.</span>
<a name="l05024"></a>05024 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l05025"></a>05025 <span class="comment"> */</span>
<a name="l05026"></a>05026 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05027"></a>05027 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05028"></a>05028 <a class="code" href="group__svn__wc.html#gaf1d8b8294ad80550d7d0c90f002c7a1c">svn_wc_process_committed_queue</a>(<a class="code" href="group__svn__wc.html#gab5313e08f94a081034e8453609bb7638" title="Storage type for queued post-commit data.">svn_wc_committed_queue_t</a> *queue,
<a name="l05029"></a>05029                                <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05030"></a>05030                                <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> new_revnum,
<a name="l05031"></a>05031                                <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_date,
<a name="l05032"></a>05032                                <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_author,
<a name="l05033"></a>05033                                apr_pool_t *pool);
<a name="l05034"></a>05034 
<a name="l05035"></a>05035 <span class="comment"></span>
<a name="l05036"></a>05036 <span class="comment">/**</span>
<a name="l05037"></a>05037 <span class="comment"> * @note this function has improper expectations around the operation and</span>
<a name="l05038"></a>05038 <span class="comment"> *   execution of other parts of the Subversion WC library. The resulting</span>
<a name="l05039"></a>05039 <span class="comment"> *   coupling makes this interface near-impossible to support. Documentation</span>
<a name="l05040"></a>05040 <span class="comment"> *   has been removed, as a result.</span>
<a name="l05041"></a>05041 <span class="comment"> *</span>
<a name="l05042"></a>05042 <span class="comment"> * @deprecated Use the svn_wc_committed_queue_* functions instead. Provided</span>
<a name="l05043"></a>05043 <span class="comment"> *   for backwards compatibility with the 1.5 API.</span>
<a name="l05044"></a>05044 <span class="comment"> */</span>
<a name="l05045"></a>05045 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05046"></a>05046 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05047"></a>05047 <a class="code" href="group__svn__wc.html#ga8e947b4ad57c711e67596dc2d249114a">svn_wc_process_committed4</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05048"></a>05048                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05049"></a>05049                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05050"></a>05050                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> new_revnum,
<a name="l05051"></a>05051                           <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_date,
<a name="l05052"></a>05052                           <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_author,
<a name="l05053"></a>05053                           <span class="keyword">const</span> apr_array_header_t *wcprop_changes,
<a name="l05054"></a>05054                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_lock,
<a name="l05055"></a>05055                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_changelist,
<a name="l05056"></a>05056                           <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *digest,
<a name="l05057"></a>05057                           apr_pool_t *pool);
<a name="l05058"></a>05058 <span class="comment"></span>
<a name="l05059"></a>05059 <span class="comment">/** @see svn_wc_process_committed4()</span>
<a name="l05060"></a>05060 <span class="comment"> *</span>
<a name="l05061"></a>05061 <span class="comment"> * @deprecated Use the svn_wc_committed_queue_* functions instead. Provided</span>
<a name="l05062"></a>05062 <span class="comment"> *   for backwards compatibility with the 1.4 API.</span>
<a name="l05063"></a>05063 <span class="comment"> */</span>
<a name="l05064"></a>05064 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05065"></a>05065 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05066"></a>05066 <a class="code" href="group__svn__wc.html#ga90687846b22a6003da49351ea5834c86">svn_wc_process_committed3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05067"></a>05067                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05068"></a>05068                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05069"></a>05069                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> new_revnum,
<a name="l05070"></a>05070                           <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_date,
<a name="l05071"></a>05071                           <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_author,
<a name="l05072"></a>05072                           <span class="keyword">const</span> apr_array_header_t *wcprop_changes,
<a name="l05073"></a>05073                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_lock,
<a name="l05074"></a>05074                           <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *digest,
<a name="l05075"></a>05075                           apr_pool_t *pool);
<a name="l05076"></a>05076 <span class="comment"></span>
<a name="l05077"></a>05077 <span class="comment">/** @see svn_wc_process_committed4()</span>
<a name="l05078"></a>05078 <span class="comment"> *</span>
<a name="l05079"></a>05079 <span class="comment"> * @deprecated Use the svn_wc_committed_queue_* functions instead. Provided</span>
<a name="l05080"></a>05080 <span class="comment"> *   for backwards compatibility with the 1.3 API.</span>
<a name="l05081"></a>05081 <span class="comment"> */</span>
<a name="l05082"></a>05082 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05083"></a>05083 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05084"></a>05084 <a class="code" href="group__svn__wc.html#ga5e775715b8f275e3facb463a344565a4">svn_wc_process_committed2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05085"></a>05085                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05086"></a>05086                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05087"></a>05087                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> new_revnum,
<a name="l05088"></a>05088                           <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_date,
<a name="l05089"></a>05089                           <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_author,
<a name="l05090"></a>05090                           <span class="keyword">const</span> apr_array_header_t *wcprop_changes,
<a name="l05091"></a>05091                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> remove_lock,
<a name="l05092"></a>05092                           apr_pool_t *pool);
<a name="l05093"></a>05093 <span class="comment"></span>
<a name="l05094"></a>05094 <span class="comment">/** @see svn_wc_process_committed4()</span>
<a name="l05095"></a>05095 <span class="comment"> *</span>
<a name="l05096"></a>05096 <span class="comment"> * @deprecated Use the svn_wc_committed_queue_* functions instead. Provided</span>
<a name="l05097"></a>05097 <span class="comment"> *   for backward compatibility with the 1.1 API.</span>
<a name="l05098"></a>05098 <span class="comment"> */</span>
<a name="l05099"></a>05099 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05100"></a>05100 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05101"></a>05101 <a class="code" href="group__svn__wc.html#gaba7900e76522e26b9b223e8ea738fa2a">svn_wc_process_committed</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05102"></a>05102                          <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05103"></a>05103                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05104"></a>05104                          <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> new_revnum,
<a name="l05105"></a>05105                          <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_date,
<a name="l05106"></a>05106                          <span class="keyword">const</span> <span class="keywordtype">char</span> *rev_author,
<a name="l05107"></a>05107                          <span class="keyword">const</span> apr_array_header_t *wcprop_changes,
<a name="l05108"></a>05108                          apr_pool_t *pool);
<a name="l05109"></a>05109 
<a name="l05110"></a>05110 
<a name="l05111"></a>05111 
<a name="l05112"></a>05112 
<a name="l05113"></a>05113 <span class="comment"></span>
<a name="l05114"></a>05114 <span class="comment">/**</span>
<a name="l05115"></a>05115 <span class="comment"> * Do a depth-first crawl in a working copy, beginning at @a local_abspath,</span>
<a name="l05116"></a>05116 <span class="comment"> * using @a wc_ctx for accessing the working copy.</span>
<a name="l05117"></a>05117 <span class="comment"> *</span>
<a name="l05118"></a>05118 <span class="comment"> * Communicate the `state&#39; of the working copy&#39;s revisions and depths</span>
<a name="l05119"></a>05119 <span class="comment"> * to @a reporter/@a report_baton.  Obviously, if @a local_abspath is a</span>
<a name="l05120"></a>05120 <span class="comment"> * file instead of a directory, this depth-first crawl will be a short one.</span>
<a name="l05121"></a>05121 <span class="comment"> *</span>
<a name="l05122"></a>05122 <span class="comment"> * No locks or logs are created, nor are any animals harmed in the</span>
<a name="l05123"></a>05123 <span class="comment"> * process unless @a restore_files is TRUE.  No cleanup is necessary.</span>
<a name="l05124"></a>05124 <span class="comment"> *</span>
<a name="l05125"></a>05125 <span class="comment"> * After all revisions are reported, @a reporter-&gt;finish_report() is</span>
<a name="l05126"></a>05126 <span class="comment"> * called, which immediately causes the RA layer to update the working</span>
<a name="l05127"></a>05127 <span class="comment"> * copy.  Thus the return value may very well reflect the result of</span>
<a name="l05128"></a>05128 <span class="comment"> * the update!</span>
<a name="l05129"></a>05129 <span class="comment"> *</span>
<a name="l05130"></a>05130 <span class="comment"> * If @a depth is #svn_depth_empty, then report state only for</span>
<a name="l05131"></a>05131 <span class="comment"> * @a path itself.  If #svn_depth_files, do the same and include</span>
<a name="l05132"></a>05132 <span class="comment"> * immediate file children of @a path.  If #svn_depth_immediates,</span>
<a name="l05133"></a>05133 <span class="comment"> * then behave as if for #svn_depth_files but also report the</span>
<a name="l05134"></a>05134 <span class="comment"> * property states of immediate subdirectories.  If @a depth is</span>
<a name="l05135"></a>05135 <span class="comment"> * #svn_depth_infinity, then report state fully recursively.  All</span>
<a name="l05136"></a>05136 <span class="comment"> * descents are only as deep as @a path&#39;s own depth permits, of</span>
<a name="l05137"></a>05137 <span class="comment"> * course.  If @a depth is #svn_depth_unknown, then just use</span>
<a name="l05138"></a>05138 <span class="comment"> * #svn_depth_infinity, which in practice means depth of @a path.</span>
<a name="l05139"></a>05139 <span class="comment"> *</span>
<a name="l05140"></a>05140 <span class="comment"> * Iff @a honor_depth_exclude is TRUE, the crawler will report paths</span>
<a name="l05141"></a>05141 <span class="comment"> * whose ambient depth is #svn_depth_exclude as being excluded, and</span>
<a name="l05142"></a>05142 <span class="comment"> * thus prevent the server from pushing update data for those paths;</span>
<a name="l05143"></a>05143 <span class="comment"> * therefore, don&#39;t set this flag if you wish to pull in excluded paths.</span>
<a name="l05144"></a>05144 <span class="comment"> * Note that #svn_depth_exclude on the target @a path is never</span>
<a name="l05145"></a>05145 <span class="comment"> * honored, even if @a honor_depth_exclude is TRUE, because we need to</span>
<a name="l05146"></a>05146 <span class="comment"> * be able to explicitly pull in a target.  For example, if this is</span>
<a name="l05147"></a>05147 <span class="comment"> * the working copy...</span>
<a name="l05148"></a>05148 <span class="comment"> *</span>
<a name="l05149"></a>05149 <span class="comment"> *    svn co greek_tree_repos wc_dir</span>
<a name="l05150"></a>05150 <span class="comment"> *    svn up --set-depth exclude wc_dir/A/B/E  # now A/B/E is excluded</span>
<a name="l05151"></a>05151 <span class="comment"> *</span>
<a name="l05152"></a>05152 <span class="comment"> * ...then &#39;svn up wc_dir/A/B&#39; would report E as excluded (assuming</span>
<a name="l05153"></a>05153 <span class="comment"> * @a honor_depth_exclude is TRUE), but &#39;svn up wc_dir/A/B/E&#39; would</span>
<a name="l05154"></a>05154 <span class="comment"> * not, because the latter is trying to explicitly pull in E.  In</span>
<a name="l05155"></a>05155 <span class="comment"> * general, we never report the update target as excluded.</span>
<a name="l05156"></a>05156 <span class="comment"> *</span>
<a name="l05157"></a>05157 <span class="comment"> * Iff @a depth_compatibility_trick is TRUE, then set the @c start_empty</span>
<a name="l05158"></a>05158 <span class="comment"> * flag on @a reporter-&gt;set_path() and @a reporter-&gt;link_path() calls</span>
<a name="l05159"></a>05159 <span class="comment"> * as necessary to trick a pre-1.5 (i.e., depth-unaware) server into</span>
<a name="l05160"></a>05160 <span class="comment"> * sending back all the items the client might need to upgrade a</span>
<a name="l05161"></a>05161 <span class="comment"> * working copy from a shallower depth to a deeper one.</span>
<a name="l05162"></a>05162 <span class="comment"> *</span>
<a name="l05163"></a>05163 <span class="comment"> * If @a restore_files is TRUE, then unexpectedly missing working files</span>
<a name="l05164"></a>05164 <span class="comment"> * will be restored from the administrative directory&#39;s cache. For each</span>
<a name="l05165"></a>05165 <span class="comment"> * file restored, the @a notify_func function will be called with the</span>
<a name="l05166"></a>05166 <span class="comment"> * @a notify_baton and the path of the restored file. @a notify_func may</span>
<a name="l05167"></a>05167 <span class="comment"> * be @c NULL if this notification is not required.  If @a</span>
<a name="l05168"></a>05168 <span class="comment"> * use_commit_times is TRUE, then set restored files&#39; timestamps to</span>
<a name="l05169"></a>05169 <span class="comment"> * their last-commit-times.</span>
<a name="l05170"></a>05170 <span class="comment"> *</span>
<a name="l05171"></a>05171 <span class="comment"> * @since New in 1.7.</span>
<a name="l05172"></a>05172 <span class="comment"> */</span>
<a name="l05173"></a>05173 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05174"></a>05174 <a class="code" href="group__svn__wc.html#gaafdb7545191f898b01cef68f232539c8" title="Do a depth-first crawl in a working copy, beginning at local_abspath, using wc_ctx for accessing the ...">svn_wc_crawl_revisions5</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l05175"></a>05175                         <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l05176"></a>05176                         <span class="keyword">const</span> <a class="code" href="structsvn__ra__reporter3__t.html" title="The update Reporter.">svn_ra_reporter3_t</a> *reporter,
<a name="l05177"></a>05177                         <span class="keywordtype">void</span> *report_baton,
<a name="l05178"></a>05178                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> restore_files,
<a name="l05179"></a>05179                         <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05180"></a>05180                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> honor_depth_exclude,
<a name="l05181"></a>05181                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_compatibility_trick,
<a name="l05182"></a>05182                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05183"></a>05183                         <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05184"></a>05184                         <span class="keywordtype">void</span> *cancel_baton,
<a name="l05185"></a>05185                         <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05186"></a>05186                         <span class="keywordtype">void</span> *notify_baton,
<a name="l05187"></a>05187                         apr_pool_t *scratch_pool);
<a name="l05188"></a>05188 <span class="comment"></span>
<a name="l05189"></a>05189 <span class="comment">/**</span>
<a name="l05190"></a>05190 <span class="comment"> * Similar to svn_wc_crawl_revisions5, but with a relative path and</span>
<a name="l05191"></a>05191 <span class="comment"> * access baton instead of an absolute path and wc_ctx.</span>
<a name="l05192"></a>05192 <span class="comment"> *</span>
<a name="l05193"></a>05193 <span class="comment"> * Passes NULL for @a cancel_func and @a cancel_baton.</span>
<a name="l05194"></a>05194 <span class="comment"> *</span>
<a name="l05195"></a>05195 <span class="comment"> * @since New in 1.6.</span>
<a name="l05196"></a>05196 <span class="comment"> * @deprecated Provided for compatibility with the 1.6 API.</span>
<a name="l05197"></a>05197 <span class="comment"> */</span>
<a name="l05198"></a>05198 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05199"></a>05199 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05200"></a>05200 <a class="code" href="group__svn__wc.html#ga4c9e88432451dd2348b65b8c9976e3ec" title="Similar to svn_wc_crawl_revisions5, but with a relative path and access baton instead of an absolute ...">svn_wc_crawl_revisions4</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05201"></a>05201                         <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05202"></a>05202                         <span class="keyword">const</span> <a class="code" href="structsvn__ra__reporter3__t.html" title="The update Reporter.">svn_ra_reporter3_t</a> *reporter,
<a name="l05203"></a>05203                         <span class="keywordtype">void</span> *report_baton,
<a name="l05204"></a>05204                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> restore_files,
<a name="l05205"></a>05205                         <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05206"></a>05206                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> honor_depth_exclude,
<a name="l05207"></a>05207                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_compatibility_trick,
<a name="l05208"></a>05208                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05209"></a>05209                         <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05210"></a>05210                         <span class="keywordtype">void</span> *notify_baton,
<a name="l05211"></a>05211                         <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *traversal_info,
<a name="l05212"></a>05212                         apr_pool_t *pool);
<a name="l05213"></a>05213 
<a name="l05214"></a>05214 <span class="comment"></span>
<a name="l05215"></a>05215 <span class="comment">/**</span>
<a name="l05216"></a>05216 <span class="comment"> * Similar to svn_wc_crawl_revisions4, but with @a honor_depth_exclude always</span>
<a name="l05217"></a>05217 <span class="comment"> * set to false.</span>
<a name="l05218"></a>05218 <span class="comment"> *</span>
<a name="l05219"></a>05219 <span class="comment"> * @deprecated Provided for compatibility with the 1.5 API.</span>
<a name="l05220"></a>05220 <span class="comment"> */</span>
<a name="l05221"></a>05221 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05222"></a>05222 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05223"></a>05223 <a class="code" href="group__svn__wc.html#ga2868b152e3e698645a7a0962f238b72c" title="Similar to svn_wc_crawl_revisions4, but with honor_depth_exclude always set to false.">svn_wc_crawl_revisions3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05224"></a>05224                         <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05225"></a>05225                         <span class="keyword">const</span> <a class="code" href="structsvn__ra__reporter3__t.html" title="The update Reporter.">svn_ra_reporter3_t</a> *reporter,
<a name="l05226"></a>05226                         <span class="keywordtype">void</span> *report_baton,
<a name="l05227"></a>05227                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> restore_files,
<a name="l05228"></a>05228                         <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05229"></a>05229                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_compatibility_trick,
<a name="l05230"></a>05230                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05231"></a>05231                         <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05232"></a>05232                         <span class="keywordtype">void</span> *notify_baton,
<a name="l05233"></a>05233                         <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *traversal_info,
<a name="l05234"></a>05234                         apr_pool_t *pool);
<a name="l05235"></a>05235 <span class="comment"></span>
<a name="l05236"></a>05236 <span class="comment">/**</span>
<a name="l05237"></a>05237 <span class="comment"> * Similar to svn_wc_crawl_revisions3, but taking svn_ra_reporter2_t</span>
<a name="l05238"></a>05238 <span class="comment"> * instead of svn_ra_reporter3_t, and therefore only able to report</span>
<a name="l05239"></a>05239 <span class="comment"> * #svn_depth_infinity for depths; and taking @a recurse instead of @a</span>
<a name="l05240"></a>05240 <span class="comment"> * depth; and with @a depth_compatibility_trick always false.</span>
<a name="l05241"></a>05241 <span class="comment"> *</span>
<a name="l05242"></a>05242 <span class="comment"> * @deprecated Provided for compatibility with the 1.4 API.</span>
<a name="l05243"></a>05243 <span class="comment"> */</span>
<a name="l05244"></a>05244 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05245"></a>05245 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05246"></a>05246 <a class="code" href="group__svn__wc.html#ga9aacdf613889a86c23af70544103132a" title="Similar to svn_wc_crawl_revisions3, but taking svn_ra_reporter2_t instead of svn_ra_reporter3_t, and therefore only able to report svn_depth_infinity for depths; and taking recurse instead of depth; and with depth_compatibility_trick always false.">svn_wc_crawl_revisions2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05247"></a>05247                         <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05248"></a>05248                         <span class="keyword">const</span> <a class="code" href="structsvn__ra__reporter2__t.html" title="Similar to svn_ra_reporter3_t, but without support for depths.">svn_ra_reporter2_t</a> *reporter,
<a name="l05249"></a>05249                         <span class="keywordtype">void</span> *report_baton,
<a name="l05250"></a>05250                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> restore_files,
<a name="l05251"></a>05251                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05252"></a>05252                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05253"></a>05253                         <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05254"></a>05254                         <span class="keywordtype">void</span> *notify_baton,
<a name="l05255"></a>05255                         <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *traversal_info,
<a name="l05256"></a>05256                         apr_pool_t *pool);
<a name="l05257"></a>05257 <span class="comment"></span>
<a name="l05258"></a>05258 <span class="comment">/**</span>
<a name="l05259"></a>05259 <span class="comment"> * Similar to svn_wc_crawl_revisions2(), but takes an #svn_wc_notify_func_t</span>
<a name="l05260"></a>05260 <span class="comment"> * and a #svn_ra_reporter_t instead.</span>
<a name="l05261"></a>05261 <span class="comment"> *</span>
<a name="l05262"></a>05262 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l05263"></a>05263 <span class="comment"> */</span>
<a name="l05264"></a>05264 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05265"></a>05265 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05266"></a>05266 <a class="code" href="group__svn__wc.html#ga6fd1aa796f77881329c0a4cd49c2faea" title="Similar to svn_wc_crawl_revisions2(), but takes an svn_wc_notify_func_t and a svn_ra_reporter_t inste...">svn_wc_crawl_revisions</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05267"></a>05267                        <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05268"></a>05268                        <span class="keyword">const</span> <a class="code" href="structsvn__ra__reporter__t.html" title="Similar to svn_ra_reporter2_t, but without support for lock tokens.">svn_ra_reporter_t</a> *reporter,
<a name="l05269"></a>05269                        <span class="keywordtype">void</span> *report_baton,
<a name="l05270"></a>05270                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> restore_files,
<a name="l05271"></a>05271                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05272"></a>05272                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05273"></a>05273                        <a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2" title="Similar to svn_wc_notify_func2_t, but takes the information as arguments instead of struct fields...">svn_wc_notify_func_t</a> notify_func,
<a name="l05274"></a>05274                        <span class="keywordtype">void</span> *notify_baton,
<a name="l05275"></a>05275                        <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *traversal_info,
<a name="l05276"></a>05276                        apr_pool_t *pool);
<a name="l05277"></a>05277 
<a name="l05278"></a>05278 <span class="comment"></span>
<a name="l05279"></a>05279 <span class="comment">/**</span>
<a name="l05280"></a>05280 <span class="comment"> * @defgroup svn_wc_roots Working copy roots</span>
<a name="l05281"></a>05281 <span class="comment"> * @{</span>
<a name="l05282"></a>05282 <span class="comment"> */</span>
<a name="l05283"></a>05283 <span class="comment"></span>
<a name="l05284"></a>05284 <span class="comment">/** Set @a *wc_root to @c TRUE if @a local_abspath represents a &quot;working copy</span>
<a name="l05285"></a>05285 <span class="comment"> * root&quot;, @c FALSE otherwise. Here, @a local_abspath is a &quot;working copy root&quot;</span>
<a name="l05286"></a>05286 <span class="comment"> * if its parent directory is not a WC or if its parent directory&#39;s repository</span>
<a name="l05287"></a>05287 <span class="comment"> * URL is not the parent of its own repository URL. Thus, a switched subtree is</span>
<a name="l05288"></a>05288 <span class="comment"> * considered to be a working copy root. Also, a deleted tree-conflict</span>
<a name="l05289"></a>05289 <span class="comment"> * victim is considered a &quot;working copy root&quot; because it has no URL.</span>
<a name="l05290"></a>05290 <span class="comment"> *</span>
<a name="l05291"></a>05291 <span class="comment"> * If @a local_abspath is not found, return the error #SVN_ERR_ENTRY_NOT_FOUND.</span>
<a name="l05292"></a>05292 <span class="comment"> *</span>
<a name="l05293"></a>05293 <span class="comment"> * Use @a scratch_pool for any temporary allocations.</span>
<a name="l05294"></a>05294 <span class="comment"> *</span>
<a name="l05295"></a>05295 <span class="comment"> * @since New in 1.7.</span>
<a name="l05296"></a>05296 <span class="comment"> */</span>
<a name="l05297"></a>05297 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05298"></a>05298 <a class="code" href="group__svn__wc__roots.html#ga495727ea5664689cc0f37d6c109b583f" title="Set *wc_root to TRUE if local_abspath represents a &quot;working copy  root&quot;, FALSE otherwise. Here, local_abspath is a &quot;working copy root&quot; if its parent directory is not a WC or if its parent directory&#39;s repository URL is not the parent of its own repository URL.">svn_wc_is_wc_root2</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *wc_root,
<a name="l05299"></a>05299                    <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l05300"></a>05300                    <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l05301"></a>05301                    apr_pool_t *scratch_pool);
<a name="l05302"></a>05302 <span class="comment"></span>
<a name="l05303"></a>05303 <span class="comment">/**</span>
<a name="l05304"></a>05304 <span class="comment"> * Similar to svn_wc_is_wc_root2(), but with an access baton and relative</span>
<a name="l05305"></a>05305 <span class="comment"> * path.</span>
<a name="l05306"></a>05306 <span class="comment"> *</span>
<a name="l05307"></a>05307 <span class="comment"> * @note If @a path is &#39;&#39;, this function will always return @c TRUE.</span>
<a name="l05308"></a>05308 <span class="comment"> *</span>
<a name="l05309"></a>05309 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l05310"></a>05310 <span class="comment"> */</span>
<a name="l05311"></a>05311 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05312"></a>05312 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05313"></a>05313 <a class="code" href="group__svn__wc__roots.html#ga2e9494529ad0a99e62e517c505af368b" title="Similar to svn_wc_is_wc_root2(), but with an access baton and relative path.">svn_wc_is_wc_root</a>(<a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> *wc_root,
<a name="l05314"></a>05314                   <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05315"></a>05315                   <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05316"></a>05316                   apr_pool_t *pool);
<a name="l05317"></a>05317 <span class="comment"></span>
<a name="l05318"></a>05318 <span class="comment">/** @} */</span>
<a name="l05319"></a>05319 
<a name="l05320"></a>05320 
<a name="l05321"></a>05321 <span class="comment">/* Updates. */</span>
<a name="l05322"></a>05322 <span class="comment"></span>
<a name="l05323"></a>05323 <span class="comment">/** Conditionally split @a path into an @a anchor and @a target for the</span>
<a name="l05324"></a>05324 <span class="comment"> * purpose of updating and committing.</span>
<a name="l05325"></a>05325 <span class="comment"> *</span>
<a name="l05326"></a>05326 <span class="comment"> * @a anchor is the directory at which the update or commit editor</span>
<a name="l05327"></a>05327 <span class="comment"> * should be rooted.</span>
<a name="l05328"></a>05328 <span class="comment"> *</span>
<a name="l05329"></a>05329 <span class="comment"> * @a target is the actual subject (relative to the @a anchor) of the</span>
<a name="l05330"></a>05330 <span class="comment"> * update/commit, or &quot;&quot; if the @a anchor itself is the subject.</span>
<a name="l05331"></a>05331 <span class="comment"> *</span>
<a name="l05332"></a>05332 <span class="comment"> * Allocate @a anchor and @a target in @a result_pool; @a scratch_pool</span>
<a name="l05333"></a>05333 <span class="comment"> * is used for temporary allocations.</span>
<a name="l05334"></a>05334 <span class="comment"> *</span>
<a name="l05335"></a>05335 <span class="comment"> * @note Even though this API uses a #svn_wc_context_t, it accepts a</span>
<a name="l05336"></a>05336 <span class="comment"> * (possibly) relative path and returns a (possibly) relative path in</span>
<a name="l05337"></a>05337 <span class="comment"> * @a *anchor.  The reason being that the outputs are generally used to</span>
<a name="l05338"></a>05338 <span class="comment"> * open access batons, and such opening currently requires relative paths.</span>
<a name="l05339"></a>05339 <span class="comment"> * In the long-run, I expect this API to be removed from 1.7, due to the</span>
<a name="l05340"></a>05340 <span class="comment"> * remove of access batons, but for the time being, the #svn_wc_context_t</span>
<a name="l05341"></a>05341 <span class="comment"> * parameter allows us to avoid opening a duplicate database, just for this</span>
<a name="l05342"></a>05342 <span class="comment"> * function.</span>
<a name="l05343"></a>05343 <span class="comment"> *</span>
<a name="l05344"></a>05344 <span class="comment"> * @since New in 1.7.</span>
<a name="l05345"></a>05345 <span class="comment"> */</span>
<a name="l05346"></a>05346 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05347"></a>05347 <a class="code" href="group__svn__wc.html#ga9b96325abcf1b9433c2001facddd1c83" title="Conditionally split path into an anchor and target for the purpose of updating and committing...">svn_wc_get_actual_target2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **anchor,
<a name="l05348"></a>05348                           <span class="keyword">const</span> <span class="keywordtype">char</span> **target,
<a name="l05349"></a>05349                           <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l05350"></a>05350                           <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05351"></a>05351                           apr_pool_t *result_pool,
<a name="l05352"></a>05352                           apr_pool_t *scratch_pool);
<a name="l05353"></a>05353 
<a name="l05354"></a>05354 <span class="comment"></span>
<a name="l05355"></a>05355 <span class="comment">/** Similar to svn_wc_get_actual_target2(), but without the wc context, and</span>
<a name="l05356"></a>05356 <span class="comment"> * with a absolute path.</span>
<a name="l05357"></a>05357 <span class="comment"> *</span>
<a name="l05358"></a>05358 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l05359"></a>05359 <span class="comment"> */</span>
<a name="l05360"></a>05360 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05361"></a>05361 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05362"></a>05362 <a class="code" href="group__svn__wc.html#gab56f7f5c239f34d5ac75fb65567410e6" title="Similar to svn_wc_get_actual_target2(), but without the wc context, and with a absolute path...">svn_wc_get_actual_target</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05363"></a>05363                          <span class="keyword">const</span> <span class="keywordtype">char</span> **anchor,
<a name="l05364"></a>05364                          <span class="keyword">const</span> <span class="keywordtype">char</span> **target,
<a name="l05365"></a>05365                          apr_pool_t *pool);
<a name="l05366"></a>05366 
<a name="l05367"></a>05367 <span class="comment"></span>
<a name="l05368"></a>05368 <span class="comment">/**</span>
<a name="l05369"></a>05369 <span class="comment"> * @defgroup svn_wc_update_switch Update and switch (update-like functionality)</span>
<a name="l05370"></a>05370 <span class="comment"> * @{</span>
<a name="l05371"></a>05371 <span class="comment"> */</span>
<a name="l05372"></a>05372 <span class="comment"></span>
<a name="l05373"></a>05373 <span class="comment">/**</span>
<a name="l05374"></a>05374 <span class="comment"> * A simple callback type to wrap svn_ra_get_file();  see that</span>
<a name="l05375"></a>05375 <span class="comment"> * docstring for more information.</span>
<a name="l05376"></a>05376 <span class="comment"> *</span>
<a name="l05377"></a>05377 <span class="comment"> * This technique allows libsvn_client to &#39;wrap&#39; svn_ra_get_file() and</span>
<a name="l05378"></a>05378 <span class="comment"> * pass it down into libsvn_wc functions, thus allowing the WC layer</span>
<a name="l05379"></a>05379 <span class="comment"> * to legally call the RA function via (blind) callback.</span>
<a name="l05380"></a>05380 <span class="comment"> *</span>
<a name="l05381"></a>05381 <span class="comment"> * @since New in 1.5</span>
<a name="l05382"></a>05382 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l05383"></a>05383 <span class="comment"> */</span>
<a name="l05384"></a><a class="code" href="group__svn__wc__update__switch.html#ga4b0829607325241fcbd74a12680126bf">05384</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_get_file_t)(<span class="keywordtype">void</span> *baton,
<a name="l05385"></a>05385                                           <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05386"></a>05386                                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> revision,
<a name="l05387"></a>05387                                           <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> *stream,
<a name="l05388"></a>05388                                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *fetched_rev,
<a name="l05389"></a>05389                                           apr_hash_t **props,
<a name="l05390"></a>05390                                           apr_pool_t *pool);
<a name="l05391"></a>05391 <span class="comment"></span>
<a name="l05392"></a>05392 <span class="comment">/**</span>
<a name="l05393"></a>05393 <span class="comment"> * A simple callback type to wrap svn_ra_get_dir2() for avoiding issue #3569,</span>
<a name="l05394"></a>05394 <span class="comment"> * where a directory is updated to a revision without some of its children</span>
<a name="l05395"></a>05395 <span class="comment"> * recorded in the working copy. A future update won&#39;t bring these files in</span>
<a name="l05396"></a>05396 <span class="comment"> * because the repository assumes they are already there.</span>
<a name="l05397"></a>05397 <span class="comment"> *</span>
<a name="l05398"></a>05398 <span class="comment"> * We really only need the names of the dirents for a not-present marking,</span>
<a name="l05399"></a>05399 <span class="comment"> * but we also store the node-kind if we receive one.</span>
<a name="l05400"></a>05400 <span class="comment"> *</span>
<a name="l05401"></a>05401 <span class="comment"> * @a *dirents should be set to a hash mapping &lt;tt&gt;const char *&lt;/tt&gt; child</span>
<a name="l05402"></a>05402 <span class="comment"> * names, to &lt;tt&gt;const svn_dirent_t *&lt;/tt&gt; instances.</span>
<a name="l05403"></a>05403 <span class="comment"> *</span>
<a name="l05404"></a>05404 <span class="comment"> * @since New in 1.7.</span>
<a name="l05405"></a>05405 <span class="comment"> */</span>
<a name="l05406"></a><a class="code" href="group__svn__wc__update__switch.html#ga61c6e246fbe03cd7f5f3662ef2b9e82d">05406</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_dirents_func_t)(<span class="keywordtype">void</span> *baton,
<a name="l05407"></a>05407                                               apr_hash_t **dirents,
<a name="l05408"></a>05408                                               <span class="keyword">const</span> <span class="keywordtype">char</span> *repos_root_url,
<a name="l05409"></a>05409                                               <span class="keyword">const</span> <span class="keywordtype">char</span> *repos_relpath,
<a name="l05410"></a>05410                                               apr_pool_t *result_pool,
<a name="l05411"></a>05411                                               apr_pool_t *scratch_pool);
<a name="l05412"></a>05412 
<a name="l05413"></a>05413 <span class="comment"></span>
<a name="l05414"></a>05414 <span class="comment">/**</span>
<a name="l05415"></a>05415 <span class="comment"> * Set @a *editor and @a *edit_baton to an editor and baton for updating a</span>
<a name="l05416"></a>05416 <span class="comment"> * working copy.</span>
<a name="l05417"></a>05417 <span class="comment"> *</span>
<a name="l05418"></a>05418 <span class="comment"> * @a anchor_abspath is a local working copy directory, with a fully recursive</span>
<a name="l05419"></a>05419 <span class="comment"> * write lock in @a wc_ctx, which will be used as the root of our editor.</span>
<a name="l05420"></a>05420 <span class="comment"> *</span>
<a name="l05421"></a>05421 <span class="comment"> * @a target_basename is the entry in @a anchor_abspath that will actually be</span>
<a name="l05422"></a>05422 <span class="comment"> * updated, or the empty string if all of @a anchor_abspath should be updated.</span>
<a name="l05423"></a>05423 <span class="comment"> *</span>
<a name="l05424"></a>05424 <span class="comment"> * The editor invokes @a notify_func with @a notify_baton as the update</span>
<a name="l05425"></a>05425 <span class="comment"> * progresses, if @a notify_func is non-NULL.</span>
<a name="l05426"></a>05426 <span class="comment"> *</span>
<a name="l05427"></a>05427 <span class="comment"> * If @a cancel_func is non-NULL, the editor will invoke @a cancel_func with</span>
<a name="l05428"></a>05428 <span class="comment"> * @a cancel_baton as the update progresses to see if it should continue.</span>
<a name="l05429"></a>05429 <span class="comment"> *</span>
<a name="l05430"></a>05430 <span class="comment"> * If @a conflict_func is non-NULL, then invoke it with @a</span>
<a name="l05431"></a>05431 <span class="comment"> * conflict_baton whenever a conflict is encountered, giving the</span>
<a name="l05432"></a>05432 <span class="comment"> * callback a chance to resolve the conflict before the editor takes</span>
<a name="l05433"></a>05433 <span class="comment"> * more drastic measures (such as marking a file conflicted, or</span>
<a name="l05434"></a>05434 <span class="comment"> * bailing out of the update).</span>
<a name="l05435"></a>05435 <span class="comment"> *</span>
<a name="l05436"></a>05436 <span class="comment"> * If @a external_func is non-NULL, then invoke it with @a external_baton</span>
<a name="l05437"></a>05437 <span class="comment"> * whenever external changes are encountered, giving the callback a chance</span>
<a name="l05438"></a>05438 <span class="comment"> * to store the external information for processing.</span>
<a name="l05439"></a>05439 <span class="comment"> *</span>
<a name="l05440"></a>05440 <span class="comment"> * If @a diff3_cmd is non-NULL, then use it as the diff3 command for</span>
<a name="l05441"></a>05441 <span class="comment"> * any merging; otherwise, use the built-in merge code.</span>
<a name="l05442"></a>05442 <span class="comment"> *</span>
<a name="l05443"></a>05443 <span class="comment"> * @a preserved_exts is an array of filename patterns which, when</span>
<a name="l05444"></a>05444 <span class="comment"> * matched against the extensions of versioned files, determine for</span>
<a name="l05445"></a>05445 <span class="comment"> * which such files any related generated conflict files will preserve</span>
<a name="l05446"></a>05446 <span class="comment"> * the original file&#39;s extension as their own.  If a file&#39;s extension</span>
<a name="l05447"></a>05447 <span class="comment"> * does not match any of the patterns in @a preserved_exts (which is</span>
<a name="l05448"></a>05448 <span class="comment"> * certainly the case if @a preserved_exts is @c NULL or empty),</span>
<a name="l05449"></a>05449 <span class="comment"> * generated conflict files will carry Subversion&#39;s custom extensions.</span>
<a name="l05450"></a>05450 <span class="comment"> *</span>
<a name="l05451"></a>05451 <span class="comment"> * @a target_revision is a pointer to a revision location which, after</span>
<a name="l05452"></a>05452 <span class="comment"> * successful completion of the drive of this editor, will be</span>
<a name="l05453"></a>05453 <span class="comment"> * populated with the revision to which the working copy was updated.</span>
<a name="l05454"></a>05454 <span class="comment"> *</span>
<a name="l05455"></a>05455 <span class="comment"> * If @a use_commit_times is TRUE, then all edited/added files will</span>
<a name="l05456"></a>05456 <span class="comment"> * have their working timestamp set to the last-committed-time.  If</span>
<a name="l05457"></a>05457 <span class="comment"> * FALSE, the working files will be touched with the &#39;now&#39; time.</span>
<a name="l05458"></a>05458 <span class="comment"> *</span>
<a name="l05459"></a>05459 <span class="comment"> * If @a allow_unver_obstructions is TRUE, then allow unversioned</span>
<a name="l05460"></a>05460 <span class="comment"> * obstructions when adding a path.</span>
<a name="l05461"></a>05461 <span class="comment"> *</span>
<a name="l05462"></a>05462 <span class="comment"> * If @a adds_as_modification is TRUE, a local addition at the same path</span>
<a name="l05463"></a>05463 <span class="comment"> * as an incoming addition of the same node kind results in a normal node</span>
<a name="l05464"></a>05464 <span class="comment"> * with a possible local modification, instead of a tree conflict.</span>
<a name="l05465"></a>05465 <span class="comment"> *</span>
<a name="l05466"></a>05466 <span class="comment"> * If @a depth is #svn_depth_infinity, update fully recursively.</span>
<a name="l05467"></a>05467 <span class="comment"> * Else if it is #svn_depth_immediates, update the uppermost</span>
<a name="l05468"></a>05468 <span class="comment"> * directory, its file entries, and the presence or absence of</span>
<a name="l05469"></a>05469 <span class="comment"> * subdirectories (but do not descend into the subdirectories).</span>
<a name="l05470"></a>05470 <span class="comment"> * Else if it is #svn_depth_files, update the uppermost directory</span>
<a name="l05471"></a>05471 <span class="comment"> * and its immediate file entries, but not subdirectories.</span>
<a name="l05472"></a>05472 <span class="comment"> * Else if it is #svn_depth_empty, update exactly the uppermost</span>
<a name="l05473"></a>05473 <span class="comment"> * target, and don&#39;t touch its entries.</span>
<a name="l05474"></a>05474 <span class="comment"> *</span>
<a name="l05475"></a>05475 <span class="comment"> * If @a depth_is_sticky is set and @a depth is not</span>
<a name="l05476"></a>05476 <span class="comment"> * #svn_depth_unknown, then in addition to updating PATHS, also set</span>
<a name="l05477"></a>05477 <span class="comment"> * their sticky ambient depth value to @a depth.</span>
<a name="l05478"></a>05478 <span class="comment"> *</span>
<a name="l05479"></a>05479 <span class="comment"> * If @a server_performs_filtering is TRUE, assume that the server handles</span>
<a name="l05480"></a>05480 <span class="comment"> * the ambient depth filtering, so this doesn&#39;t have to be handled in the</span>
<a name="l05481"></a>05481 <span class="comment"> * editor.</span>
<a name="l05482"></a>05482 <span class="comment"> *</span>
<a name="l05483"></a>05483 <span class="comment"> * If @a fetch_dirents_func is not NULL, the update editor may call this</span>
<a name="l05484"></a>05484 <span class="comment"> * callback, when asked to perform a depth restricted update. It will do this</span>
<a name="l05485"></a>05485 <span class="comment"> * before returning the editor to allow using the primary ra session for this.</span>
<a name="l05486"></a>05486 <span class="comment"> *</span>
<a name="l05487"></a>05487 <span class="comment"> * @since New in 1.7.</span>
<a name="l05488"></a>05488 <span class="comment"> */</span>
<a name="l05489"></a>05489 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05490"></a>05490 <a class="code" href="group__svn__wc__update__switch.html#ga30faab1e5c7cb143c0e8f986fe21ac5e" title="Set *editor and *edit_baton to an editor and baton for updating a working copy.">svn_wc_get_update_editor4</a>(<span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l05491"></a>05491                           <span class="keywordtype">void</span> **edit_baton,
<a name="l05492"></a>05492                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *target_revision,
<a name="l05493"></a>05493                           <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l05494"></a>05494                           <span class="keyword">const</span> <span class="keywordtype">char</span> *anchor_abspath,
<a name="l05495"></a>05495                           <span class="keyword">const</span> <span class="keywordtype">char</span> *target_basename,
<a name="l05496"></a>05496                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05497"></a>05497                           <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05498"></a>05498                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_is_sticky,
<a name="l05499"></a>05499                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_unver_obstructions,
<a name="l05500"></a>05500                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> adds_as_modification,
<a name="l05501"></a>05501                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> server_performs_filtering,
<a name="l05502"></a>05502                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> clean_checkout,
<a name="l05503"></a>05503                           <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l05504"></a>05504                           <span class="keyword">const</span> apr_array_header_t *preserved_exts,
<a name="l05505"></a>05505                           <a class="code" href="group__svn__wc__update__switch.html#ga61c6e246fbe03cd7f5f3662ef2b9e82d" title="A simple callback type to wrap svn_ra_get_dir2() for avoiding issue #3569, where a directory is updat...">svn_wc_dirents_func_t</a> fetch_dirents_func,
<a name="l05506"></a>05506                           <span class="keywordtype">void</span> *fetch_dirents_baton,
<a name="l05507"></a>05507                           <a class="code" href="group__svn__wc__conflict.html#gaaf65c206c4bb05353897170ad4453656" title="A callback used in merge, update and switch for resolving conflicts during the application of a tree ...">svn_wc_conflict_resolver_func2_t</a> conflict_func,
<a name="l05508"></a>05508                           <span class="keywordtype">void</span> *conflict_baton,
<a name="l05509"></a>05509                           <a class="code" href="group__svn__wc__externals.html#gaadc49094b6524a3fa3bd27cf91300eeb" title="Callback for external definitions updates.">svn_wc_external_update_t</a> external_func,
<a name="l05510"></a>05510                           <span class="keywordtype">void</span> *external_baton,
<a name="l05511"></a>05511                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05512"></a>05512                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l05513"></a>05513                           <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05514"></a>05514                           <span class="keywordtype">void</span> *notify_baton,
<a name="l05515"></a>05515                           apr_pool_t *result_pool,
<a name="l05516"></a>05516                           apr_pool_t *scratch_pool);
<a name="l05517"></a>05517 <span class="comment"></span>
<a name="l05518"></a>05518 <span class="comment">/** Similar to svn_wc_get_update_editor4, but uses access batons and relative</span>
<a name="l05519"></a>05519 <span class="comment"> * path instead of a working copy context-abspath pair and</span>
<a name="l05520"></a>05520 <span class="comment"> * svn_wc_traversal_info_t instead of an externals callback.  Also,</span>
<a name="l05521"></a>05521 <span class="comment"> * @a fetch_func and @a fetch_baton are ignored.</span>
<a name="l05522"></a>05522 <span class="comment"> *</span>
<a name="l05523"></a>05523 <span class="comment"> * If @a ti is non-NULL, record traversal info in @a ti, for use by</span>
<a name="l05524"></a>05524 <span class="comment"> * post-traversal accessors such as svn_wc_edited_externals().</span>
<a name="l05525"></a>05525 <span class="comment"> *</span>
<a name="l05526"></a>05526 <span class="comment"> * All locks, both those in @a anchor and newly acquired ones, will be</span>
<a name="l05527"></a>05527 <span class="comment"> * released when the editor driver calls @c close_edit.</span>
<a name="l05528"></a>05528 <span class="comment"> *</span>
<a name="l05529"></a>05529 <span class="comment"> * Always sets @a adds_as_modification to TRUE, @a server_performs_filtering</span>
<a name="l05530"></a>05530 <span class="comment"> * and @a clean_checkout to FALSE.</span>
<a name="l05531"></a>05531 <span class="comment"> *</span>
<a name="l05532"></a>05532 <span class="comment"> * Uses a svn_wc_conflict_resolver_func_t conflict resolver instead of a</span>
<a name="l05533"></a>05533 <span class="comment"> * svn_wc_conflict_resolver_func2_t.</span>
<a name="l05534"></a>05534 <span class="comment"> *</span>
<a name="l05535"></a>05535 <span class="comment"> * This function assumes that @a diff3_cmd is path encoded. Later versions</span>
<a name="l05536"></a>05536 <span class="comment"> * assume utf-8.</span>
<a name="l05537"></a>05537 <span class="comment"> *</span>
<a name="l05538"></a>05538 <span class="comment"> * Always passes a null dirent function.</span>
<a name="l05539"></a>05539 <span class="comment"> *</span>
<a name="l05540"></a>05540 <span class="comment"> * @since New in 1.5.</span>
<a name="l05541"></a>05541 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l05542"></a>05542 <span class="comment"> */</span>
<a name="l05543"></a>05543 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05544"></a>05544 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05545"></a>05545 <a class="code" href="group__svn__wc__update__switch.html#gad60f10850449029baaa75800dfbfda24" title="Similar to svn_wc_get_update_editor4, but uses access batons and relative path instead of a working c...">svn_wc_get_update_editor3</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *target_revision,
<a name="l05546"></a>05546                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l05547"></a>05547                           <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l05548"></a>05548                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05549"></a>05549                           <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05550"></a>05550                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_is_sticky,
<a name="l05551"></a>05551                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_unver_obstructions,
<a name="l05552"></a>05552                           <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05553"></a>05553                           <span class="keywordtype">void</span> *notify_baton,
<a name="l05554"></a>05554                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05555"></a>05555                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l05556"></a>05556                           <a class="code" href="group__svn__wc__conflict.html#gaad913ce66a4c5efdd82397da73e6a21d" title="Similar to svn_wc_conflict_resolver_func2_t, but using svn_wc_conflict_description_t instead of svn_w...">svn_wc_conflict_resolver_func_t</a> conflict_func,
<a name="l05557"></a>05557                           <span class="keywordtype">void</span> *conflict_baton,
<a name="l05558"></a>05558                           <a class="code" href="group__svn__wc__update__switch.html#ga4b0829607325241fcbd74a12680126bf" title="A simple callback type to wrap svn_ra_get_file(); see that docstring for more information.">svn_wc_get_file_t</a> fetch_func,
<a name="l05559"></a>05559                           <span class="keywordtype">void</span> *fetch_baton,
<a name="l05560"></a>05560                           <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l05561"></a>05561                           <span class="keyword">const</span> apr_array_header_t *preserved_exts,
<a name="l05562"></a>05562                           <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l05563"></a>05563                           <span class="keywordtype">void</span> **edit_baton,
<a name="l05564"></a>05564                           <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *ti,
<a name="l05565"></a>05565                           apr_pool_t *pool);
<a name="l05566"></a>05566 
<a name="l05567"></a>05567 <span class="comment"></span>
<a name="l05568"></a>05568 <span class="comment">/**</span>
<a name="l05569"></a>05569 <span class="comment"> * Similar to svn_wc_get_update_editor3() but with the @a</span>
<a name="l05570"></a>05570 <span class="comment"> * allow_unver_obstructions parameter always set to FALSE, @a</span>
<a name="l05571"></a>05571 <span class="comment"> * conflict_func and baton set to NULL, @a fetch_func and baton set to</span>
<a name="l05572"></a>05572 <span class="comment"> * NULL, @a preserved_exts set to NULL, @a depth_is_sticky set to</span>
<a name="l05573"></a>05573 <span class="comment"> * FALSE, and @a depth set according to @a recurse: if @a recurse is</span>
<a name="l05574"></a>05574 <span class="comment"> * TRUE, pass #svn_depth_infinity, if FALSE, pass #svn_depth_files.</span>
<a name="l05575"></a>05575 <span class="comment"> *</span>
<a name="l05576"></a>05576 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l05577"></a>05577 <span class="comment"> */</span>
<a name="l05578"></a>05578 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05579"></a>05579 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05580"></a>05580 <a class="code" href="group__svn__wc__update__switch.html#ga7fa8560aeb4b13082dc5425eae74bc5b" title="Similar to svn_wc_get_update_editor3() but with the allow_unver_obstructions parameter always set to ...">svn_wc_get_update_editor2</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *target_revision,
<a name="l05581"></a>05581                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l05582"></a>05582                           <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l05583"></a>05583                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05584"></a>05584                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05585"></a>05585                           <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05586"></a>05586                           <span class="keywordtype">void</span> *notify_baton,
<a name="l05587"></a>05587                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05588"></a>05588                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l05589"></a>05589                           <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l05590"></a>05590                           <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l05591"></a>05591                           <span class="keywordtype">void</span> **edit_baton,
<a name="l05592"></a>05592                           <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *ti,
<a name="l05593"></a>05593                           apr_pool_t *pool);
<a name="l05594"></a>05594 <span class="comment"></span>
<a name="l05595"></a>05595 <span class="comment">/**</span>
<a name="l05596"></a>05596 <span class="comment"> * Similar to svn_wc_get_update_editor2(), but takes an svn_wc_notify_func_t</span>
<a name="l05597"></a>05597 <span class="comment"> * instead.</span>
<a name="l05598"></a>05598 <span class="comment"> *</span>
<a name="l05599"></a>05599 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l05600"></a>05600 <span class="comment"> */</span>
<a name="l05601"></a>05601 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05602"></a>05602 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05603"></a>05603 <a class="code" href="group__svn__wc__update__switch.html#ga66dc0c07ad16f4b7b0f2e5aef8141602" title="Similar to svn_wc_get_update_editor2(), but takes an svn_wc_notify_func_t instead.">svn_wc_get_update_editor</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *target_revision,
<a name="l05604"></a>05604                          <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l05605"></a>05605                          <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l05606"></a>05606                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05607"></a>05607                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05608"></a>05608                          <a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2" title="Similar to svn_wc_notify_func2_t, but takes the information as arguments instead of struct fields...">svn_wc_notify_func_t</a> notify_func,
<a name="l05609"></a>05609                          <span class="keywordtype">void</span> *notify_baton,
<a name="l05610"></a>05610                          <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05611"></a>05611                          <span class="keywordtype">void</span> *cancel_baton,
<a name="l05612"></a>05612                          <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l05613"></a>05613                          <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l05614"></a>05614                          <span class="keywordtype">void</span> **edit_baton,
<a name="l05615"></a>05615                          <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *ti,
<a name="l05616"></a>05616                          apr_pool_t *pool);
<a name="l05617"></a>05617 <span class="comment"></span>
<a name="l05618"></a>05618 <span class="comment">/**</span>
<a name="l05619"></a>05619 <span class="comment"> * A variant of svn_wc_get_update_editor4().</span>
<a name="l05620"></a>05620 <span class="comment"> *</span>
<a name="l05621"></a>05621 <span class="comment"> * Set @a *editor and @a *edit_baton to an editor and baton for &quot;switching&quot;</span>
<a name="l05622"></a>05622 <span class="comment"> * a working copy to a new @a switch_url.  (Right now, this URL must be</span>
<a name="l05623"></a>05623 <span class="comment"> * within the same repository that the working copy already comes</span>
<a name="l05624"></a>05624 <span class="comment"> * from.)  @a switch_url must not be @c NULL.</span>
<a name="l05625"></a>05625 <span class="comment"> *</span>
<a name="l05626"></a>05626 <span class="comment"> * All other parameters behave as for svn_wc_get_update_editor4().</span>
<a name="l05627"></a>05627 <span class="comment"> *</span>
<a name="l05628"></a>05628 <span class="comment"> * @since New in 1.7.</span>
<a name="l05629"></a>05629 <span class="comment"> */</span>
<a name="l05630"></a>05630 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05631"></a>05631 <a class="code" href="group__svn__wc__update__switch.html#gaa0f6afccf7edf2b2d356f5789d3b8193" title="A variant of svn_wc_get_update_editor4().">svn_wc_get_switch_editor4</a>(<span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l05632"></a>05632                           <span class="keywordtype">void</span> **edit_baton,
<a name="l05633"></a>05633                           <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *target_revision,
<a name="l05634"></a>05634                           <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l05635"></a>05635                           <span class="keyword">const</span> <span class="keywordtype">char</span> *anchor_abspath,
<a name="l05636"></a>05636                           <span class="keyword">const</span> <span class="keywordtype">char</span> *target_basename,
<a name="l05637"></a>05637                           <span class="keyword">const</span> <span class="keywordtype">char</span> *switch_url,
<a name="l05638"></a>05638                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05639"></a>05639                           <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05640"></a>05640                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_is_sticky,
<a name="l05641"></a>05641                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_unver_obstructions,
<a name="l05642"></a>05642                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> server_performs_filtering,
<a name="l05643"></a>05643                           <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l05644"></a>05644                           <span class="keyword">const</span> apr_array_header_t *preserved_exts,
<a name="l05645"></a>05645                           <a class="code" href="group__svn__wc__update__switch.html#ga61c6e246fbe03cd7f5f3662ef2b9e82d" title="A simple callback type to wrap svn_ra_get_dir2() for avoiding issue #3569, where a directory is updat...">svn_wc_dirents_func_t</a> fetch_dirents_func,
<a name="l05646"></a>05646                           <span class="keywordtype">void</span> *fetch_dirents_baton,
<a name="l05647"></a>05647                           <a class="code" href="group__svn__wc__conflict.html#gaaf65c206c4bb05353897170ad4453656" title="A callback used in merge, update and switch for resolving conflicts during the application of a tree ...">svn_wc_conflict_resolver_func2_t</a> conflict_func,
<a name="l05648"></a>05648                           <span class="keywordtype">void</span> *conflict_baton,
<a name="l05649"></a>05649                           <a class="code" href="group__svn__wc__externals.html#gaadc49094b6524a3fa3bd27cf91300eeb" title="Callback for external definitions updates.">svn_wc_external_update_t</a> external_func,
<a name="l05650"></a>05650                           <span class="keywordtype">void</span> *external_baton,
<a name="l05651"></a>05651                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05652"></a>05652                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l05653"></a>05653                           <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05654"></a>05654                           <span class="keywordtype">void</span> *notify_baton,
<a name="l05655"></a>05655                           apr_pool_t *result_pool,
<a name="l05656"></a>05656                           apr_pool_t *scratch_pool);
<a name="l05657"></a>05657 <span class="comment"></span>
<a name="l05658"></a>05658 <span class="comment">/** Similar to svn_wc_get_switch_editor4, but uses access batons and relative</span>
<a name="l05659"></a>05659 <span class="comment"> * path instead of a working copy context and svn_wc_traversal_info_t instead</span>
<a name="l05660"></a>05660 <span class="comment"> * of an externals callback.</span>
<a name="l05661"></a>05661 <span class="comment"> *</span>
<a name="l05662"></a>05662 <span class="comment"> * If @a ti is non-NULL, record traversal info in @a ti, for use by</span>
<a name="l05663"></a>05663 <span class="comment"> * post-traversal accessors such as svn_wc_edited_externals().</span>
<a name="l05664"></a>05664 <span class="comment"> *</span>
<a name="l05665"></a>05665 <span class="comment"> * All locks, both those in @a anchor and newly acquired ones, will be</span>
<a name="l05666"></a>05666 <span class="comment"> * released when the editor driver calls @c close_edit.</span>
<a name="l05667"></a>05667 <span class="comment"> *</span>
<a name="l05668"></a>05668 <span class="comment"> * Always sets @a server_performs_filtering to FALSE.</span>
<a name="l05669"></a>05669 <span class="comment"> *</span>
<a name="l05670"></a>05670 <span class="comment"> * Uses a svn_wc_conflict_resolver_func_t conflict resolver instead of a</span>
<a name="l05671"></a>05671 <span class="comment"> * svn_wc_conflict_resolver_func2_t.</span>
<a name="l05672"></a>05672 <span class="comment"> *</span>
<a name="l05673"></a>05673 <span class="comment"> * This function assumes that @a diff3_cmd is path encoded. Later versions</span>
<a name="l05674"></a>05674 <span class="comment"> * assume utf-8.</span>
<a name="l05675"></a>05675 <span class="comment"> *</span>
<a name="l05676"></a>05676 <span class="comment"> * @since New in 1.5.</span>
<a name="l05677"></a>05677 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l05678"></a>05678 <span class="comment"> */</span>
<a name="l05679"></a>05679 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05680"></a>05680 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05681"></a>05681 <a class="code" href="group__svn__wc__update__switch.html#ga8e0452ee0891fae7d6709d6b43ae77b1" title="Similar to svn_wc_get_switch_editor4, but uses access batons and relative path instead of a working c...">svn_wc_get_switch_editor3</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *target_revision,
<a name="l05682"></a>05682                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l05683"></a>05683                           <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l05684"></a>05684                           <span class="keyword">const</span> <span class="keywordtype">char</span> *switch_url,
<a name="l05685"></a>05685                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05686"></a>05686                           <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05687"></a>05687                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> depth_is_sticky,
<a name="l05688"></a>05688                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> allow_unver_obstructions,
<a name="l05689"></a>05689                           <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05690"></a>05690                           <span class="keywordtype">void</span> *notify_baton,
<a name="l05691"></a>05691                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05692"></a>05692                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l05693"></a>05693                           <a class="code" href="group__svn__wc__conflict.html#gaad913ce66a4c5efdd82397da73e6a21d" title="Similar to svn_wc_conflict_resolver_func2_t, but using svn_wc_conflict_description_t instead of svn_w...">svn_wc_conflict_resolver_func_t</a> conflict_func,
<a name="l05694"></a>05694                           <span class="keywordtype">void</span> *conflict_baton,
<a name="l05695"></a>05695                           <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l05696"></a>05696                           <span class="keyword">const</span> apr_array_header_t *preserved_exts,
<a name="l05697"></a>05697                           <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l05698"></a>05698                           <span class="keywordtype">void</span> **edit_baton,
<a name="l05699"></a>05699                           <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *ti,
<a name="l05700"></a>05700                           apr_pool_t *pool);
<a name="l05701"></a>05701 <span class="comment"></span>
<a name="l05702"></a>05702 <span class="comment">/**</span>
<a name="l05703"></a>05703 <span class="comment"> * Similar to svn_wc_get_switch_editor3() but with the</span>
<a name="l05704"></a>05704 <span class="comment"> * @a allow_unver_obstructions parameter always set to FALSE,</span>
<a name="l05705"></a>05705 <span class="comment"> * @a preserved_exts set to NULL, @a conflict_func and baton set to NULL,</span>
<a name="l05706"></a>05706 <span class="comment"> * @a depth_is_sticky set to FALSE, and @a depth set according to @a</span>
<a name="l05707"></a>05707 <span class="comment"> * recurse: if @a recurse is TRUE, pass #svn_depth_infinity, if</span>
<a name="l05708"></a>05708 <span class="comment"> * FALSE, pass #svn_depth_files.</span>
<a name="l05709"></a>05709 <span class="comment"> *</span>
<a name="l05710"></a>05710 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l05711"></a>05711 <span class="comment"> */</span>
<a name="l05712"></a>05712 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05713"></a>05713 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05714"></a>05714 <a class="code" href="group__svn__wc__update__switch.html#ga064ce6ea097130e05f1e24c38a76bc8a" title="Similar to svn_wc_get_switch_editor3() but with the allow_unver_obstructions parameter always set to ...">svn_wc_get_switch_editor2</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *target_revision,
<a name="l05715"></a>05715                           <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l05716"></a>05716                           <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l05717"></a>05717                           <span class="keyword">const</span> <span class="keywordtype">char</span> *switch_url,
<a name="l05718"></a>05718                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05719"></a>05719                           <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05720"></a>05720                           <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05721"></a>05721                           <span class="keywordtype">void</span> *notify_baton,
<a name="l05722"></a>05722                           <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05723"></a>05723                           <span class="keywordtype">void</span> *cancel_baton,
<a name="l05724"></a>05724                           <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l05725"></a>05725                           <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l05726"></a>05726                           <span class="keywordtype">void</span> **edit_baton,
<a name="l05727"></a>05727                           <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *ti,
<a name="l05728"></a>05728                           apr_pool_t *pool);
<a name="l05729"></a>05729 <span class="comment"></span>
<a name="l05730"></a>05730 <span class="comment">/**</span>
<a name="l05731"></a>05731 <span class="comment"> * Similar to svn_wc_get_switch_editor2(), but takes an</span>
<a name="l05732"></a>05732 <span class="comment"> * #svn_wc_notify_func_t instead.</span>
<a name="l05733"></a>05733 <span class="comment"> *</span>
<a name="l05734"></a>05734 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l05735"></a>05735 <span class="comment"> */</span>
<a name="l05736"></a>05736 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05737"></a>05737 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05738"></a>05738 <a class="code" href="group__svn__wc__update__switch.html#gacd6e5ec07ad5893b436c08c951b7ed6e" title="Similar to svn_wc_get_switch_editor2(), but takes an svn_wc_notify_func_t instead.">svn_wc_get_switch_editor</a>(<a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> *target_revision,
<a name="l05739"></a>05739                          <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l05740"></a>05740                          <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l05741"></a>05741                          <span class="keyword">const</span> <span class="keywordtype">char</span> *switch_url,
<a name="l05742"></a>05742                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l05743"></a>05743                          <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l05744"></a>05744                          <a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2" title="Similar to svn_wc_notify_func2_t, but takes the information as arguments instead of struct fields...">svn_wc_notify_func_t</a> notify_func,
<a name="l05745"></a>05745                          <span class="keywordtype">void</span> *notify_baton,
<a name="l05746"></a>05746                          <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05747"></a>05747                          <span class="keywordtype">void</span> *cancel_baton,
<a name="l05748"></a>05748                          <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l05749"></a>05749                          <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l05750"></a>05750                          <span class="keywordtype">void</span> **edit_baton,
<a name="l05751"></a>05751                          <a class="code" href="group__svn__wc__externals.html#gae9a070074e7daebdd81214b0a692c9bf" title="Traversal information is information gathered by a working copy crawl or update.">svn_wc_traversal_info_t</a> *ti,
<a name="l05752"></a>05752                          apr_pool_t *pool);
<a name="l05753"></a>05753 <span class="comment"></span>
<a name="l05754"></a>05754 <span class="comment">/** @} */</span>
<a name="l05755"></a>05755 
<a name="l05756"></a>05756 <span class="comment"></span>
<a name="l05757"></a>05757 <span class="comment">/**</span>
<a name="l05758"></a>05758 <span class="comment"> * @defgroup svn_wc_properties Properties</span>
<a name="l05759"></a>05759 <span class="comment"> * @{</span>
<a name="l05760"></a>05760 <span class="comment"> */</span>
<a name="l05761"></a>05761 
<a name="l05762"></a>05762 <span class="comment">/* A word about the implementation of working copy property storage:</span>
<a name="l05763"></a>05763 <span class="comment"> *</span>
<a name="l05764"></a>05764 <span class="comment"> * Since properties are key/val pairs, you&#39;d think we store them in</span>
<a name="l05765"></a>05765 <span class="comment"> * some sort of Berkeley DB-ish format, and even store pending changes</span>
<a name="l05766"></a>05766 <span class="comment"> * to them that way too.</span>
<a name="l05767"></a>05767 <span class="comment"> *</span>
<a name="l05768"></a>05768 <span class="comment"> * However, we already have libsvn_subr/hashdump.c working, and it</span>
<a name="l05769"></a>05769 <span class="comment"> * uses a human-readable format.  That will be very handy when we&#39;re</span>
<a name="l05770"></a>05770 <span class="comment"> * debugging, and presumably we will not be dealing with any huge</span>
<a name="l05771"></a>05771 <span class="comment"> * properties or property lists initially.  Therefore, we will</span>
<a name="l05772"></a>05772 <span class="comment"> * continue to use hashdump as the internal mechanism for storing and</span>
<a name="l05773"></a>05773 <span class="comment"> * reading from property lists, but note that the interface here is</span>
<a name="l05774"></a>05774 <span class="comment"> * _not_ dependent on that.  We can swap in a DB-based implementation</span>
<a name="l05775"></a>05775 <span class="comment"> * at any time and users of this library will never know the</span>
<a name="l05776"></a>05776 <span class="comment"> * difference.</span>
<a name="l05777"></a>05777 <span class="comment"> */</span>
<a name="l05778"></a>05778 <span class="comment"></span>
<a name="l05779"></a>05779 <span class="comment">/** Set @a *props to a hash table mapping &lt;tt&gt;char *&lt;/tt&gt; names onto</span>
<a name="l05780"></a>05780 <span class="comment"> * &lt;tt&gt;svn_string_t *&lt;/tt&gt; values for all the regular properties of</span>
<a name="l05781"></a>05781 <span class="comment"> * @a local_abspath.  Allocate the table, names, and values in</span>
<a name="l05782"></a>05782 <span class="comment"> * @a result_pool.  If the node has no properties, then an empty hash</span>
<a name="l05783"></a>05783 <span class="comment"> * is returned.  Use @a wc_ctx to access the working copy, and @a</span>
<a name="l05784"></a>05784 <span class="comment"> * scratch_pool for temporary allocations.</span>
<a name="l05785"></a>05785 <span class="comment"> *</span>
<a name="l05786"></a>05786 <span class="comment"> * If the node does not exist, #SVN_ERR_WC_PATH_NOT_FOUND is returned.</span>
<a name="l05787"></a>05787 <span class="comment"> *</span>
<a name="l05788"></a>05788 <span class="comment"> * @since New in 1.7.</span>
<a name="l05789"></a>05789 <span class="comment"> */</span>
<a name="l05790"></a>05790 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05791"></a>05791 <a class="code" href="group__svn__wc__properties.html#ga58f8498e67b9feabe01119b057e82748" title="Set *props to a hash table mapping char * names onto svn_string_t * values for all the regular proper...">svn_wc_prop_list2</a>(apr_hash_t **props,
<a name="l05792"></a>05792                   <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l05793"></a>05793                   <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l05794"></a>05794                   apr_pool_t *result_pool,
<a name="l05795"></a>05795                   apr_pool_t *scratch_pool);
<a name="l05796"></a>05796 <span class="comment"></span>
<a name="l05797"></a>05797 <span class="comment">/** Similar to svn_wc_prop_list2() but with a #svn_wc_adm_access_t /</span>
<a name="l05798"></a>05798 <span class="comment"> * relative path parameter pair.</span>
<a name="l05799"></a>05799 <span class="comment"> *</span>
<a name="l05800"></a>05800 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l05801"></a>05801 <span class="comment"> */</span>
<a name="l05802"></a>05802 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05803"></a>05803 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05804"></a>05804 <a class="code" href="group__svn__wc__properties.html#ga322325037a30e90b19a0e07f077036a4" title="Similar to svn_wc_prop_list2() but with a svn_wc_adm_access_t / relative path parameter pair...">svn_wc_prop_list</a>(apr_hash_t **props,
<a name="l05805"></a>05805                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05806"></a>05806                  <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05807"></a>05807                  apr_pool_t *pool);
<a name="l05808"></a>05808 
<a name="l05809"></a>05809 <span class="comment"></span>
<a name="l05810"></a>05810 <span class="comment">/** Return the set of &quot;pristine&quot; properties for @a local_abspath.</span>
<a name="l05811"></a>05811 <span class="comment"> *</span>
<a name="l05812"></a>05812 <span class="comment"> * There are node states where properties do not make sense. For these</span>
<a name="l05813"></a>05813 <span class="comment"> * cases, NULL will be returned in @a *props. Otherwise, a hash table</span>
<a name="l05814"></a>05814 <span class="comment"> * will always be returned (but may be empty, indicating no properties).</span>
<a name="l05815"></a>05815 <span class="comment"> *</span>
<a name="l05816"></a>05816 <span class="comment"> * If the node is locally-added, then @a *props will be set to NULL since</span>
<a name="l05817"></a>05817 <span class="comment"> * pristine properties are undefined. Note: if this addition is replacing a</span>
<a name="l05818"></a>05818 <span class="comment"> * previously-deleted node, then the replaced node&#39;s properties are not</span>
<a name="l05819"></a>05819 <span class="comment"> * available until the addition is reverted.</span>
<a name="l05820"></a>05820 <span class="comment"> *</span>
<a name="l05821"></a>05821 <span class="comment"> * If the node has been copied (from another node in the repository), then</span>
<a name="l05822"></a>05822 <span class="comment"> * the pristine properties will correspond to those original properties.</span>
<a name="l05823"></a>05823 <span class="comment"> *</span>
<a name="l05824"></a>05824 <span class="comment"> * If the node is locally-deleted, these properties will correspond to</span>
<a name="l05825"></a>05825 <span class="comment"> * the BASE node&#39;s properties, as checked-out from the repository. Note: if</span>
<a name="l05826"></a>05826 <span class="comment"> * this deletion is a child of a copy, then the pristine properties will</span>
<a name="l05827"></a>05827 <span class="comment"> * correspond to that copy&#39;s properties, not any potential BASE node. The</span>
<a name="l05828"></a>05828 <span class="comment"> * BASE node&#39;s properties will not be accessible until the copy is reverted.</span>
<a name="l05829"></a>05829 <span class="comment"> *</span>
<a name="l05830"></a>05830 <span class="comment"> * Nodes that are incomplete, excluded, absent, or not present at the</span>
<a name="l05831"></a>05831 <span class="comment"> * node&#39;s revision will return NULL in @a props.</span>
<a name="l05832"></a>05832 <span class="comment"> *</span>
<a name="l05833"></a>05833 <span class="comment"> * If the node is not versioned, SVN_ERR_WC_PATH_NOT_FOUND will be returned.</span>
<a name="l05834"></a>05834 <span class="comment"> *</span>
<a name="l05835"></a>05835 <span class="comment"> * @a props will be allocated in @a result_pool, and all temporary</span>
<a name="l05836"></a>05836 <span class="comment"> * allocations will be performed in @a scratch_pool.</span>
<a name="l05837"></a>05837 <span class="comment"> *</span>
<a name="l05838"></a>05838 <span class="comment"> * @since New in 1.7.</span>
<a name="l05839"></a>05839 <span class="comment"> */</span>
<a name="l05840"></a>05840 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05841"></a>05841 <a class="code" href="group__svn__wc__properties.html#gae8cd763223664511630575e0fc2a2cd0" title="Return the set of &quot;pristine&quot; properties for local_abspath.">svn_wc_get_pristine_props</a>(apr_hash_t **props,
<a name="l05842"></a>05842                           <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l05843"></a>05843                           <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l05844"></a>05844                           apr_pool_t *result_pool,
<a name="l05845"></a>05845                           apr_pool_t *scratch_pool);
<a name="l05846"></a>05846 
<a name="l05847"></a>05847 <span class="comment"></span>
<a name="l05848"></a>05848 <span class="comment">/** Set @a *value to the value of property @a name for @a local_abspath,</span>
<a name="l05849"></a>05849 <span class="comment"> * allocating @a *value in @a result_pool.  If no such prop, set @a *value</span>
<a name="l05850"></a>05850 <span class="comment"> * to @c NULL. @a name may be a regular or wc property; if it is an</span>
<a name="l05851"></a>05851 <span class="comment"> * entry property, return the error #SVN_ERR_BAD_PROP_KIND.  @a wc_ctx</span>
<a name="l05852"></a>05852 <span class="comment"> * is used to access the working copy.</span>
<a name="l05853"></a>05853 <span class="comment"> *</span>
<a name="l05854"></a>05854 <span class="comment"> * If @a local_abspath is not a versioned path, return</span>
<a name="l05855"></a>05855 <span class="comment"> * #SVN_ERR_WC_PATH_NOT_FOUND</span>
<a name="l05856"></a>05856 <span class="comment"> *</span>
<a name="l05857"></a>05857 <span class="comment"> * @since New in 1.7.</span>
<a name="l05858"></a>05858 <span class="comment"> */</span>
<a name="l05859"></a>05859 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05860"></a>05860 <a class="code" href="group__svn__wc__properties.html#ga2babe951a30dcc462afaae8c6d769638" title="Set *value to the value of property name for local_abspath, allocating *value in result_pool.">svn_wc_prop_get2</a>(<span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> **value,
<a name="l05861"></a>05861                  <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l05862"></a>05862                  <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l05863"></a>05863                  <span class="keyword">const</span> <span class="keywordtype">char</span> *name,
<a name="l05864"></a>05864                  apr_pool_t *result_pool,
<a name="l05865"></a>05865                  apr_pool_t *scratch_pool);
<a name="l05866"></a>05866 <span class="comment"></span>
<a name="l05867"></a>05867 <span class="comment">/** Similar to svn_wc_prop_get2(), but with a #svn_wc_adm_access_t /</span>
<a name="l05868"></a>05868 <span class="comment"> * relative path parameter pair.</span>
<a name="l05869"></a>05869 <span class="comment"> *</span>
<a name="l05870"></a>05870 <span class="comment"> * When @a path is not versioned, set @a *value to NULL.</span>
<a name="l05871"></a>05871 <span class="comment"> *</span>
<a name="l05872"></a>05872 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l05873"></a>05873 <span class="comment"> */</span>
<a name="l05874"></a>05874 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05875"></a>05875 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05876"></a>05876 <a class="code" href="group__svn__wc__properties.html#gaebe46e0b5f512805ec52f6cedbc2027e" title="Similar to svn_wc_prop_get2(), but with a svn_wc_adm_access_t / relative path parameter pair...">svn_wc_prop_get</a>(<span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> **value,
<a name="l05877"></a>05877                 <span class="keyword">const</span> <span class="keywordtype">char</span> *name,
<a name="l05878"></a>05878                 <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05879"></a>05879                 <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05880"></a>05880                 apr_pool_t *pool);
<a name="l05881"></a>05881 <span class="comment"></span>
<a name="l05882"></a>05882 <span class="comment">/**</span>
<a name="l05883"></a>05883 <span class="comment"> * Set property @a name to @a value for @a local_abspath, or if @a value is</span>
<a name="l05884"></a>05884 <span class="comment"> * NULL, remove property @a name from @a local_abspath.  Use @a wc_ctx to</span>
<a name="l05885"></a>05885 <span class="comment"> * access @a local_abspath.</span>
<a name="l05886"></a>05886 <span class="comment"> *</span>
<a name="l05887"></a>05887 <span class="comment"> * If @a skip_checks is TRUE, do no validity checking.  But if @a</span>
<a name="l05888"></a>05888 <span class="comment"> * skip_checks is FALSE, and @a name is not a valid property for @a</span>
<a name="l05889"></a>05889 <span class="comment"> * path, return an error, either #SVN_ERR_ILLEGAL_TARGET (if the</span>
<a name="l05890"></a>05890 <span class="comment"> * property is not appropriate for @a path), or</span>
<a name="l05891"></a>05891 <span class="comment"> * #SVN_ERR_BAD_MIME_TYPE (if @a name is &quot;svn:mime-type&quot;, but @a value</span>
<a name="l05892"></a>05892 <span class="comment"> * is not a valid mime-type).</span>
<a name="l05893"></a>05893 <span class="comment"> *</span>
<a name="l05894"></a>05894 <span class="comment"> * @a depth follows the usual semeatic for depth.  If the property is a</span>
<a name="l05895"></a>05895 <span class="comment"> * wc property, @a depth must be #svn_depth_empty.</span>
<a name="l05896"></a>05896 <span class="comment"> *</span>
<a name="l05897"></a>05897 <span class="comment"> * @a name may be a wc property or a regular property; but if it is an</span>
<a name="l05898"></a>05898 <span class="comment"> * entry property, return the error #SVN_ERR_BAD_PROP_KIND, even if</span>
<a name="l05899"></a>05899 <span class="comment"> * @a skip_checks is TRUE.</span>
<a name="l05900"></a>05900 <span class="comment"> *</span>
<a name="l05901"></a>05901 <span class="comment"> * @a changelist_filter is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l05902"></a>05902 <span class="comment"> * names, used as a restrictive filter on items whose properties are</span>
<a name="l05903"></a>05903 <span class="comment"> * set; that is, don&#39;t set properties on any item unless it&#39;s a member</span>
<a name="l05904"></a>05904 <span class="comment"> * of one of those changelists.  If @a changelist_filter is empty (or</span>
<a name="l05905"></a>05905 <span class="comment"> * altogether @c NULL), no changelist filtering occurs.</span>
<a name="l05906"></a>05906 <span class="comment"> *</span>
<a name="l05907"></a>05907 <span class="comment"> * If @a cancel_func is non-NULL, then it will be invoked (with the</span>
<a name="l05908"></a>05908 <span class="comment"> * @a cancel_baton value passed) during the processing of the property</span>
<a name="l05909"></a>05909 <span class="comment"> * set (i.e. when @a depth indicates some amount of recursion).</span>
<a name="l05910"></a>05910 <span class="comment"> *</span>
<a name="l05911"></a>05911 <span class="comment"> * For each file or directory operated on, @a notify_func will be called</span>
<a name="l05912"></a>05912 <span class="comment"> * with its path and the @a notify_baton.  @a notify_func may be @c NULL</span>
<a name="l05913"></a>05913 <span class="comment"> * if you are not interested in this information.</span>
<a name="l05914"></a>05914 <span class="comment"> *</span>
<a name="l05915"></a>05915 <span class="comment"> * Use @a scratch_pool for temporary allocation.</span>
<a name="l05916"></a>05916 <span class="comment"> *</span>
<a name="l05917"></a>05917 <span class="comment"> * @since New in 1.7.</span>
<a name="l05918"></a>05918 <span class="comment"> */</span>
<a name="l05919"></a>05919 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05920"></a>05920 <a class="code" href="group__svn__wc__properties.html#ga899d15ace8e7cedc959c6fcc850761c6" title="Set property name to value for local_abspath, or if value is NULL, remove property name from local_ab...">svn_wc_prop_set4</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l05921"></a>05921                  <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l05922"></a>05922                  <span class="keyword">const</span> <span class="keywordtype">char</span> *name,
<a name="l05923"></a>05923                  <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *value,
<a name="l05924"></a>05924                  <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l05925"></a>05925                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> skip_checks,
<a name="l05926"></a>05926                  <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l05927"></a>05927                  <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l05928"></a>05928                  <span class="keywordtype">void</span> *cancel_baton,
<a name="l05929"></a>05929                  <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05930"></a>05930                  <span class="keywordtype">void</span> *notify_baton,
<a name="l05931"></a>05931                  apr_pool_t *scratch_pool);
<a name="l05932"></a>05932 <span class="comment"></span>
<a name="l05933"></a>05933 <span class="comment">/** Similar to svn_wc_prop_set4(), but with a #svn_wc_adm_access_t /</span>
<a name="l05934"></a>05934 <span class="comment"> * relative path parameter pair, no @a depth parameter, no changelist</span>
<a name="l05935"></a>05935 <span class="comment"> * filtering (for the depth-based property setting), and no cancelation.</span>
<a name="l05936"></a>05936 <span class="comment"> *</span>
<a name="l05937"></a>05937 <span class="comment"> * @since New in 1.6.</span>
<a name="l05938"></a>05938 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l05939"></a>05939 <span class="comment"> */</span>
<a name="l05940"></a>05940 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05941"></a>05941 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05942"></a>05942 <a class="code" href="group__svn__wc__properties.html#ga684ea7ff9da10eb60dd56b720df08394" title="Similar to svn_wc_prop_set4(), but with a svn_wc_adm_access_t / relative path parameter pair...">svn_wc_prop_set3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *name,
<a name="l05943"></a>05943                  <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *value,
<a name="l05944"></a>05944                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05945"></a>05945                  <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05946"></a>05946                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> skip_checks,
<a name="l05947"></a>05947                  <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l05948"></a>05948                  <span class="keywordtype">void</span> *notify_baton,
<a name="l05949"></a>05949                  apr_pool_t *pool);
<a name="l05950"></a>05950 
<a name="l05951"></a>05951 <span class="comment"></span>
<a name="l05952"></a>05952 <span class="comment">/**</span>
<a name="l05953"></a>05953 <span class="comment"> * Like svn_wc_prop_set3(), but without the notification callbacks.</span>
<a name="l05954"></a>05954 <span class="comment"> *</span>
<a name="l05955"></a>05955 <span class="comment"> * @since New in 1.2.</span>
<a name="l05956"></a>05956 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.5 API.</span>
<a name="l05957"></a>05957 <span class="comment"> */</span>
<a name="l05958"></a>05958 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05959"></a>05959 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05960"></a>05960 <a class="code" href="group__svn__wc__properties.html#gad0dbbee541ce8049ecbe6550634bd413" title="Like svn_wc_prop_set3(), but without the notification callbacks.">svn_wc_prop_set2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *name,
<a name="l05961"></a>05961                  <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *value,
<a name="l05962"></a>05962                  <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05963"></a>05963                  <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05964"></a>05964                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> skip_checks,
<a name="l05965"></a>05965                  apr_pool_t *pool);
<a name="l05966"></a>05966 
<a name="l05967"></a>05967 <span class="comment"></span>
<a name="l05968"></a>05968 <span class="comment">/**</span>
<a name="l05969"></a>05969 <span class="comment"> * Like svn_wc_prop_set2(), but with @a skip_checks always FALSE.</span>
<a name="l05970"></a>05970 <span class="comment"> *</span>
<a name="l05971"></a>05971 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l05972"></a>05972 <span class="comment"> */</span>
<a name="l05973"></a>05973 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l05974"></a>05974 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l05975"></a>05975 <a class="code" href="group__svn__wc__properties.html#ga699a3b15d724568b13850a7d9e5647b2" title="Like svn_wc_prop_set2(), but with skip_checks always FALSE.">svn_wc_prop_set</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *name,
<a name="l05976"></a>05976                 <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *value,
<a name="l05977"></a>05977                 <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l05978"></a>05978                 <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l05979"></a>05979                 apr_pool_t *pool);
<a name="l05980"></a>05980 
<a name="l05981"></a>05981 <span class="comment"></span>
<a name="l05982"></a>05982 <span class="comment">/** Return TRUE iff @a name is a &#39;normal&#39; property name.  &#39;Normal&#39; is</span>
<a name="l05983"></a>05983 <span class="comment"> * defined as a user-visible and user-tweakable property that shows up</span>
<a name="l05984"></a>05984 <span class="comment"> * when you fetch a proplist.</span>
<a name="l05985"></a>05985 <span class="comment"> *</span>
<a name="l05986"></a>05986 <span class="comment"> * The function currently parses the namespace like so:</span>
<a name="l05987"></a>05987 <span class="comment"> *</span>
<a name="l05988"></a>05988 <span class="comment"> *   - &#39;svn:wc:&#39;  ==&gt;  a wcprop, stored/accessed separately via different API.</span>
<a name="l05989"></a>05989 <span class="comment"> *</span>
<a name="l05990"></a>05990 <span class="comment"> *   - &#39;svn:entry:&#39; ==&gt; an &quot;entry&quot; prop, shunted into the &#39;entries&#39; file.</span>
<a name="l05991"></a>05991 <span class="comment"> *</span>
<a name="l05992"></a>05992 <span class="comment"> * If these patterns aren&#39;t found, then the property is assumed to be</span>
<a name="l05993"></a>05993 <span class="comment"> * Normal.</span>
<a name="l05994"></a>05994 <span class="comment"> */</span>
<a name="l05995"></a>05995 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a>
<a name="l05996"></a>05996 <a class="code" href="group__svn__wc__properties.html#ga149ed627bfb17542f99c3330c5140b08" title="Return TRUE iff name is a &#39;normal&#39; property name.">svn_wc_is_normal_prop</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *name);
<a name="l05997"></a>05997 
<a name="l05998"></a>05998 
<a name="l05999"></a>05999 <span class="comment"></span>
<a name="l06000"></a>06000 <span class="comment">/** Return TRUE iff @a name is a &#39;wc&#39; property name. */</span>
<a name="l06001"></a>06001 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a>
<a name="l06002"></a>06002 <a class="code" href="group__svn__wc__properties.html#ga4480b80aa866fd211c2c23608ae57e8e" title="Return TRUE iff name is a &#39;wc&#39; property name.">svn_wc_is_wc_prop</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *name);
<a name="l06003"></a>06003 <span class="comment"></span>
<a name="l06004"></a>06004 <span class="comment">/** Return TRUE iff @a name is a &#39;entry&#39; property name. */</span>
<a name="l06005"></a>06005 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a>
<a name="l06006"></a>06006 <a class="code" href="group__svn__wc__properties.html#gaf805a44c7f7220c2fd9fa86d9aaba126" title="Return TRUE iff name is a &#39;entry&#39; property name.">svn_wc_is_entry_prop</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *name);
<a name="l06007"></a>06007 <span class="comment"></span>
<a name="l06008"></a>06008 <span class="comment">/** Callback type used by #svn_wc_canonicalize_svn_prop.</span>
<a name="l06009"></a>06009 <span class="comment"> *</span>
<a name="l06010"></a>06010 <span class="comment"> * If @a mime_type is non-null, it sets @a *mime_type to the value of</span>
<a name="l06011"></a>06011 <span class="comment"> * #SVN_PROP_MIME_TYPE for the path passed to</span>
<a name="l06012"></a>06012 <span class="comment"> * #svn_wc_canonicalize_svn_prop (allocated from @a pool).  If @a</span>
<a name="l06013"></a>06013 <span class="comment"> * stream is non-null, it writes the contents of the file to @a</span>
<a name="l06014"></a>06014 <span class="comment"> * stream.</span>
<a name="l06015"></a>06015 <span class="comment"> *</span>
<a name="l06016"></a>06016 <span class="comment"> * (Currently, this is used if you are attempting to set the</span>
<a name="l06017"></a>06017 <span class="comment"> * #SVN_PROP_EOL_STYLE property, to make sure that the value matches</span>
<a name="l06018"></a>06018 <span class="comment"> * the mime type and contents.)</span>
<a name="l06019"></a>06019 <span class="comment"> */</span>
<a name="l06020"></a><a class="code" href="group__svn__wc__properties.html#ga8bf745d3662a99dcbdf03e0c5f724ed0">06020</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_canonicalize_svn_prop_get_file_t)(
<a name="l06021"></a>06021   <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> **mime_type,
<a name="l06022"></a>06022   <a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> *stream,
<a name="l06023"></a>06023   <span class="keywordtype">void</span> *baton,
<a name="l06024"></a>06024   apr_pool_t *pool);
<a name="l06025"></a>06025 
<a name="l06026"></a>06026 <span class="comment"></span>
<a name="l06027"></a>06027 <span class="comment">/** Canonicalize the value of an svn:* property @a propname with</span>
<a name="l06028"></a>06028 <span class="comment"> * value @a propval.</span>
<a name="l06029"></a>06029 <span class="comment"> *</span>
<a name="l06030"></a>06030 <span class="comment"> * If the property is not appropriate for a node of kind @a kind, or</span>
<a name="l06031"></a>06031 <span class="comment"> * is otherwise invalid, throw an error.  Otherwise, set @a *propval_p</span>
<a name="l06032"></a>06032 <span class="comment"> * to a canonicalized version of the property value.  If @a</span>
<a name="l06033"></a>06033 <span class="comment"> * skip_some_checks is TRUE, only some validity checks are taken.</span>
<a name="l06034"></a>06034 <span class="comment"> *</span>
<a name="l06035"></a>06035 <span class="comment"> * Some validity checks require access to the contents and MIME type</span>
<a name="l06036"></a>06036 <span class="comment"> * of the target if it is a file; they will call @a prop_getter with @a</span>
<a name="l06037"></a>06037 <span class="comment"> * getter_baton, which then needs to set the MIME type and print the</span>
<a name="l06038"></a>06038 <span class="comment"> * contents of the file to the given stream.</span>
<a name="l06039"></a>06039 <span class="comment"> *</span>
<a name="l06040"></a>06040 <span class="comment"> * @a path should be the path of the file in question; it is only used</span>
<a name="l06041"></a>06041 <span class="comment"> * for error messages.</span>
<a name="l06042"></a>06042 <span class="comment"> *</span>
<a name="l06043"></a>06043 <span class="comment"> * ### This is not actually related to the WC, but it does need to call</span>
<a name="l06044"></a>06044 <span class="comment"> * ### svn_wc_parse_externals_description2.</span>
<a name="l06045"></a>06045 <span class="comment"> */</span>
<a name="l06046"></a>06046 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06047"></a>06047 <a class="code" href="group__svn__wc__properties.html#ga83296313ec59cc825176224ac8282ec2" title="Canonicalize the value of an svn:* property propname with value propval.">svn_wc_canonicalize_svn_prop</a>(<span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> **propval_p,
<a name="l06048"></a>06048                              <span class="keyword">const</span> <span class="keywordtype">char</span> *propname,
<a name="l06049"></a>06049                              <span class="keyword">const</span> <a class="code" href="structsvn__string__t.html" title="A simple counted string.">svn_string_t</a> *propval,
<a name="l06050"></a>06050                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l06051"></a>06051                              <a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> kind,
<a name="l06052"></a>06052                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> skip_some_checks,
<a name="l06053"></a>06053                              <a class="code" href="group__svn__wc__properties.html#ga8bf745d3662a99dcbdf03e0c5f724ed0" title="Callback type used by svn_wc_canonicalize_svn_prop.">svn_wc_canonicalize_svn_prop_get_file_t</a> prop_getter,
<a name="l06054"></a>06054                              <span class="keywordtype">void</span> *getter_baton,
<a name="l06055"></a>06055                              apr_pool_t *pool);
<a name="l06056"></a>06056 <span class="comment"></span>
<a name="l06057"></a>06057 <span class="comment">/** @} */</span>
<a name="l06058"></a>06058 
<a name="l06059"></a>06059 <span class="comment"></span>
<a name="l06060"></a>06060 <span class="comment">/**</span>
<a name="l06061"></a>06061 <span class="comment"> * @defgroup svn_wc_diffs Diffs</span>
<a name="l06062"></a>06062 <span class="comment"> * @{</span>
<a name="l06063"></a>06063 <span class="comment"> */</span>
<a name="l06064"></a>06064 <span class="comment"></span>
<a name="l06065"></a>06065 <span class="comment">/**</span>
<a name="l06066"></a>06066 <span class="comment"> * Return an @a editor/@a edit_baton for diffing a working copy against the</span>
<a name="l06067"></a>06067 <span class="comment"> * repository. The editor is allocated in @a result_pool; temporary</span>
<a name="l06068"></a>06068 <span class="comment"> * calculations are performed in @a scratch_pool.</span>
<a name="l06069"></a>06069 <span class="comment"> *</span>
<a name="l06070"></a>06070 <span class="comment"> * This editor supports diffing either the actual files and properties in the</span>
<a name="l06071"></a>06071 <span class="comment"> * working copy (when @a use_text_base is #FALSE), or the current pristine</span>
<a name="l06072"></a>06072 <span class="comment"> * information (when @a use_text_base is #TRUE) against the editor driver.</span>
<a name="l06073"></a>06073 <span class="comment"> *</span>
<a name="l06074"></a>06074 <span class="comment"> * @a anchor_abspath/@a target represent the base of the hierarchy to be</span>
<a name="l06075"></a>06075 <span class="comment"> * compared. The diff callback paths will be relative to this path.</span>
<a name="l06076"></a>06076 <span class="comment"> *</span>
<a name="l06077"></a>06077 <span class="comment"> * Diffs will be reported as valid relpaths, with @a anchor_abspath being</span>
<a name="l06078"></a>06078 <span class="comment"> * the root (&quot;&quot;).</span>
<a name="l06079"></a>06079 <span class="comment"> *</span>
<a name="l06080"></a>06080 <span class="comment"> * @a callbacks/@a callback_baton is the callback table to use.</span>
<a name="l06081"></a>06081 <span class="comment"> *</span>
<a name="l06082"></a>06082 <span class="comment"> * If @a depth is #svn_depth_empty, just diff exactly @a target or</span>
<a name="l06083"></a>06083 <span class="comment"> * @a anchor_path if @a target is empty.  If #svn_depth_files then do the same</span>
<a name="l06084"></a>06084 <span class="comment"> * and for top-level file entries as well (if any).  If</span>
<a name="l06085"></a>06085 <span class="comment"> * #svn_depth_immediates, do the same as #svn_depth_files but also diff</span>
<a name="l06086"></a>06086 <span class="comment"> * top-level subdirectories at #svn_depth_empty.  If #svn_depth_infinity,</span>
<a name="l06087"></a>06087 <span class="comment"> * then diff fully recursively.</span>
<a name="l06088"></a>06088 <span class="comment"> *</span>
<a name="l06089"></a>06089 <span class="comment"> * @a ignore_ancestry determines whether paths that have discontinuous node</span>
<a name="l06090"></a>06090 <span class="comment"> * ancestry are treated as delete/add or as simple modifications.  If</span>
<a name="l06091"></a>06091 <span class="comment"> * @a ignore_ancestry is @c FALSE, then any discontinuous node ancestry will</span>
<a name="l06092"></a>06092 <span class="comment"> * result in the diff given as a full delete followed by an add.</span>
<a name="l06093"></a>06093 <span class="comment"> *</span>
<a name="l06094"></a>06094 <span class="comment"> * @a show_copies_as_adds determines whether paths added with history will</span>
<a name="l06095"></a>06095 <span class="comment"> * appear as a diff against their copy source, or whether such paths will</span>
<a name="l06096"></a>06096 <span class="comment"> * appear as if they were newly added in their entirety.</span>
<a name="l06097"></a>06097 <span class="comment"> *</span>
<a name="l06098"></a>06098 <span class="comment"> * If @a use_git_diff_format is TRUE, copied paths will be treated as added</span>
<a name="l06099"></a>06099 <span class="comment"> * if they weren&#39;t modified after being copied. This allows the callbacks</span>
<a name="l06100"></a>06100 <span class="comment"> * to generate appropriate --git diff headers for such files.</span>
<a name="l06101"></a>06101 <span class="comment"> *</span>
<a name="l06102"></a>06102 <span class="comment"> * Normally, the difference from repository-&gt;working_copy is shown.</span>
<a name="l06103"></a>06103 <span class="comment"> * If @a reverse_order is TRUE, then show working_copy-&gt;repository diffs.</span>
<a name="l06104"></a>06104 <span class="comment"> *</span>
<a name="l06105"></a>06105 <span class="comment"> * If @a cancel_func is non-NULL, it will be used along with @a cancel_baton</span>
<a name="l06106"></a>06106 <span class="comment"> * to periodically check if the client has canceled the operation.</span>
<a name="l06107"></a>06107 <span class="comment"> *</span>
<a name="l06108"></a>06108 <span class="comment"> * @a changelist_filter is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l06109"></a>06109 <span class="comment"> * names, used as a restrictive filter on items whose differences are</span>
<a name="l06110"></a>06110 <span class="comment"> * reported; that is, don&#39;t generate diffs about any item unless</span>
<a name="l06111"></a>06111 <span class="comment"> * it&#39;s a member of one of those changelists.  If @a changelist_filter is</span>
<a name="l06112"></a>06112 <span class="comment"> * empty (or altogether @c NULL), no changelist filtering occurs.</span>
<a name="l06113"></a>06113 <span class="comment"> *</span>
<a name="l06114"></a>06114 <span class="comment">  * If @a server_performs_filtering is TRUE, assume that the server handles</span>
<a name="l06115"></a>06115 <span class="comment"> * the ambient depth filtering, so this doesn&#39;t have to be handled in the</span>
<a name="l06116"></a>06116 <span class="comment"> * editor.</span>
<a name="l06117"></a>06117 <span class="comment"> *</span>
<a name="l06118"></a>06118 <span class="comment"> * @since New in 1.7.</span>
<a name="l06119"></a>06119 <span class="comment"> */</span>
<a name="l06120"></a>06120 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06121"></a>06121 <a class="code" href="group__svn__wc__diffs.html#ga9719471986396d190bbc341fab7b12aa" title="Return an editor/edit_baton for diffing a working copy against the repository.">svn_wc_get_diff_editor6</a>(<span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l06122"></a>06122                         <span class="keywordtype">void</span> **edit_baton,
<a name="l06123"></a>06123                         <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l06124"></a>06124                         <span class="keyword">const</span> <span class="keywordtype">char</span> *anchor_abspath,
<a name="l06125"></a>06125                         <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06126"></a>06126                         <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l06127"></a>06127                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l06128"></a>06128                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> show_copies_as_adds,
<a name="l06129"></a>06129                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_git_diff_format,
<a name="l06130"></a>06130                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_text_base,
<a name="l06131"></a>06131                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> reverse_order,
<a name="l06132"></a>06132                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> server_performs_filtering,
<a name="l06133"></a>06133                         <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l06134"></a>06134                         <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks4__t.html" title="A callback vtable invoked by our diff-editors, as they receive diffs from the server.">svn_wc_diff_callbacks4_t</a> *callbacks,
<a name="l06135"></a>06135                         <span class="keywordtype">void</span> *callback_baton,
<a name="l06136"></a>06136                         <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06137"></a>06137                         <span class="keywordtype">void</span> *cancel_baton,
<a name="l06138"></a>06138                         apr_pool_t *result_pool,
<a name="l06139"></a>06139                         apr_pool_t *scratch_pool);
<a name="l06140"></a>06140 <span class="comment"></span>
<a name="l06141"></a>06141 <span class="comment">/**</span>
<a name="l06142"></a>06142 <span class="comment"> * Similar to svn_wc_get_diff_editor6(), but with an access baton and relative</span>
<a name="l06143"></a>06143 <span class="comment"> * path. @a server_performs_filtering always true and with a</span>
<a name="l06144"></a>06144 <span class="comment"> * #svn_wc_diff_callbacks3_t instead of #svn_wc_diff_callbacks4_t,</span>
<a name="l06145"></a>06145 <span class="comment"> * @a show_copies_as_adds, and @a use_git_diff_format set to @c FALSE.</span>
<a name="l06146"></a>06146 <span class="comment"> *</span>
<a name="l06147"></a>06147 <span class="comment"> * Diffs will be reported as below the relative path stored in @a anchor.</span>
<a name="l06148"></a>06148 <span class="comment"> *</span>
<a name="l06149"></a>06149 <span class="comment"> * @since New in 1.6.</span>
<a name="l06150"></a>06150 <span class="comment"> *</span>
<a name="l06151"></a>06151 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l06152"></a>06152 <span class="comment"> */</span>
<a name="l06153"></a>06153 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06154"></a>06154 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06155"></a>06155 <a class="code" href="group__svn__wc__diffs.html#ga47c70ede4b9b323d2154dc0c45e50470" title="Similar to svn_wc_get_diff_editor6(), but with an access baton and relative path.">svn_wc_get_diff_editor5</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l06156"></a>06156                         <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06157"></a>06157                         <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks3__t.html" title="Similar to svn_wc_diff_callbacks4_t, but without copyfrom_path and copyfrom_revision arguments to fil...">svn_wc_diff_callbacks3_t</a> *callbacks,
<a name="l06158"></a>06158                         <span class="keywordtype">void</span> *callback_baton,
<a name="l06159"></a>06159                         <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l06160"></a>06160                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l06161"></a>06161                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_text_base,
<a name="l06162"></a>06162                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> reverse_order,
<a name="l06163"></a>06163                         <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06164"></a>06164                         <span class="keywordtype">void</span> *cancel_baton,
<a name="l06165"></a>06165                         <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l06166"></a>06166                         <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l06167"></a>06167                         <span class="keywordtype">void</span> **edit_baton,
<a name="l06168"></a>06168                         apr_pool_t *pool);
<a name="l06169"></a>06169 <span class="comment"></span>
<a name="l06170"></a>06170 <span class="comment">/**</span>
<a name="l06171"></a>06171 <span class="comment"> * Similar to svn_wc_get_diff_editor5(), but with an</span>
<a name="l06172"></a>06172 <span class="comment"> * #svn_wc_diff_callbacks2_t instead of #svn_wc_diff_callbacks3_t.</span>
<a name="l06173"></a>06173 <span class="comment"> *</span>
<a name="l06174"></a>06174 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l06175"></a>06175 <span class="comment"> */</span>
<a name="l06176"></a>06176 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06177"></a>06177 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06178"></a>06178 <a class="code" href="group__svn__wc__diffs.html#ga23942d8d0827df8257abd0d0032c1615" title="Similar to svn_wc_get_diff_editor5(), but with an svn_wc_diff_callbacks2_t instead of svn_wc_diff_cal...">svn_wc_get_diff_editor4</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l06179"></a>06179                         <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06180"></a>06180                         <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks2__t.html" title="Similar to svn_wc_diff_callbacks3_t, but without the dir_opened and dir_closed functions, and without the tree_conflicted argument to the functions.">svn_wc_diff_callbacks2_t</a> *callbacks,
<a name="l06181"></a>06181                         <span class="keywordtype">void</span> *callback_baton,
<a name="l06182"></a>06182                         <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l06183"></a>06183                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l06184"></a>06184                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_text_base,
<a name="l06185"></a>06185                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> reverse_order,
<a name="l06186"></a>06186                         <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06187"></a>06187                         <span class="keywordtype">void</span> *cancel_baton,
<a name="l06188"></a>06188                         <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l06189"></a>06189                         <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l06190"></a>06190                         <span class="keywordtype">void</span> **edit_baton,
<a name="l06191"></a>06191                         apr_pool_t *pool);
<a name="l06192"></a>06192 <span class="comment"></span>
<a name="l06193"></a>06193 <span class="comment">/**</span>
<a name="l06194"></a>06194 <span class="comment"> * Similar to svn_wc_get_diff_editor4(), but with @a changelist_filter</span>
<a name="l06195"></a>06195 <span class="comment"> * passed as @c NULL, and @a depth set to #svn_depth_infinity if @a</span>
<a name="l06196"></a>06196 <span class="comment"> * recurse is TRUE, or #svn_depth_files if @a recurse is FALSE.</span>
<a name="l06197"></a>06197 <span class="comment"> *</span>
<a name="l06198"></a>06198 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l06199"></a>06199 <span class="comment"></span>
<a name="l06200"></a>06200 <span class="comment"> * @since New in 1.2.</span>
<a name="l06201"></a>06201 <span class="comment"> */</span>
<a name="l06202"></a>06202 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06203"></a>06203 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06204"></a>06204 <a class="code" href="group__svn__wc__diffs.html#ga42795df6be2123caf6a39ba90869a525" title="Similar to svn_wc_get_diff_editor4(), but with changelist_filter passed as NULL, and depth set to svn...">svn_wc_get_diff_editor3</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l06205"></a>06205                         <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06206"></a>06206                         <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks2__t.html" title="Similar to svn_wc_diff_callbacks3_t, but without the dir_opened and dir_closed functions, and without the tree_conflicted argument to the functions.">svn_wc_diff_callbacks2_t</a> *callbacks,
<a name="l06207"></a>06207                         <span class="keywordtype">void</span> *callback_baton,
<a name="l06208"></a>06208                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l06209"></a>06209                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l06210"></a>06210                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_text_base,
<a name="l06211"></a>06211                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> reverse_order,
<a name="l06212"></a>06212                         <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06213"></a>06213                         <span class="keywordtype">void</span> *cancel_baton,
<a name="l06214"></a>06214                         <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l06215"></a>06215                         <span class="keywordtype">void</span> **edit_baton,
<a name="l06216"></a>06216                         apr_pool_t *pool);
<a name="l06217"></a>06217 
<a name="l06218"></a>06218 <span class="comment"></span>
<a name="l06219"></a>06219 <span class="comment">/**</span>
<a name="l06220"></a>06220 <span class="comment"> * Similar to svn_wc_get_diff_editor3(), but with an</span>
<a name="l06221"></a>06221 <span class="comment"> * #svn_wc_diff_callbacks_t instead of #svn_wc_diff_callbacks2_t.</span>
<a name="l06222"></a>06222 <span class="comment"> *</span>
<a name="l06223"></a>06223 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l06224"></a>06224 <span class="comment"> */</span>
<a name="l06225"></a>06225 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06226"></a>06226 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06227"></a>06227 <a class="code" href="group__svn__wc__diffs.html#ga8785b120adb2b39a6410c9e117476924" title="Similar to svn_wc_get_diff_editor3(), but with an svn_wc_diff_callbacks_t instead of svn_wc_diff_call...">svn_wc_get_diff_editor2</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l06228"></a>06228                         <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06229"></a>06229                         <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks__t.html" title="Similar to svn_wc_diff_callbacks2_t, but with file additions/content changes and property changes spl...">svn_wc_diff_callbacks_t</a> *callbacks,
<a name="l06230"></a>06230                         <span class="keywordtype">void</span> *callback_baton,
<a name="l06231"></a>06231                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l06232"></a>06232                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l06233"></a>06233                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_text_base,
<a name="l06234"></a>06234                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> reverse_order,
<a name="l06235"></a>06235                         <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06236"></a>06236                         <span class="keywordtype">void</span> *cancel_baton,
<a name="l06237"></a>06237                         <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l06238"></a>06238                         <span class="keywordtype">void</span> **edit_baton,
<a name="l06239"></a>06239                         apr_pool_t *pool);
<a name="l06240"></a>06240 
<a name="l06241"></a>06241 <span class="comment"></span>
<a name="l06242"></a>06242 <span class="comment">/**</span>
<a name="l06243"></a>06243 <span class="comment"> * Similar to svn_wc_get_diff_editor2(), but with @a ignore_ancestry</span>
<a name="l06244"></a>06244 <span class="comment"> * always set to @c FALSE.</span>
<a name="l06245"></a>06245 <span class="comment"> *</span>
<a name="l06246"></a>06246 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.0 API.</span>
<a name="l06247"></a>06247 <span class="comment"> */</span>
<a name="l06248"></a>06248 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06249"></a>06249 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06250"></a>06250 <a class="code" href="group__svn__wc__diffs.html#gacebcf14c708f3b218e99610bfc56b080" title="Similar to svn_wc_get_diff_editor2(), but with ignore_ancestry always set to FALSE.">svn_wc_get_diff_editor</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l06251"></a>06251                        <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06252"></a>06252                        <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks__t.html" title="Similar to svn_wc_diff_callbacks2_t, but with file additions/content changes and property changes spl...">svn_wc_diff_callbacks_t</a> *callbacks,
<a name="l06253"></a>06253                        <span class="keywordtype">void</span> *callback_baton,
<a name="l06254"></a>06254                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l06255"></a>06255                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_text_base,
<a name="l06256"></a>06256                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> reverse_order,
<a name="l06257"></a>06257                        <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06258"></a>06258                        <span class="keywordtype">void</span> *cancel_baton,
<a name="l06259"></a>06259                        <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> **editor,
<a name="l06260"></a>06260                        <span class="keywordtype">void</span> **edit_baton,
<a name="l06261"></a>06261                        apr_pool_t *pool);
<a name="l06262"></a>06262 
<a name="l06263"></a>06263 <span class="comment"></span>
<a name="l06264"></a>06264 <span class="comment">/**</span>
<a name="l06265"></a>06265 <span class="comment"> * Compare working copy against the text-base.</span>
<a name="l06266"></a>06266 <span class="comment"> *</span>
<a name="l06267"></a>06267 <span class="comment"> * @a target_abspath represents the base of the hierarchy to be compared.</span>
<a name="l06268"></a>06268 <span class="comment"> *</span>
<a name="l06269"></a>06269 <span class="comment"> * @a callbacks/@a callback_baton is the callback table to use when two</span>
<a name="l06270"></a>06270 <span class="comment"> * files are to be compared.</span>
<a name="l06271"></a>06271 <span class="comment"> *</span>
<a name="l06272"></a>06272 <span class="comment"> * If @a depth is #svn_depth_empty, just diff exactly @a target_path.</span>
<a name="l06273"></a>06273 <span class="comment"> * If #svn_depth_files then do the same</span>
<a name="l06274"></a>06274 <span class="comment"> * and for top-level file entries as well (if any).  If</span>
<a name="l06275"></a>06275 <span class="comment"> * #svn_depth_immediates, do the same as #svn_depth_files but also diff</span>
<a name="l06276"></a>06276 <span class="comment"> * top-level subdirectories at #svn_depth_empty.  If #svn_depth_infinity,</span>
<a name="l06277"></a>06277 <span class="comment"> * then diff fully recursively.</span>
<a name="l06278"></a>06278 <span class="comment"> *</span>
<a name="l06279"></a>06279 <span class="comment"> * @a ignore_ancestry determines whether paths that have discontinuous node</span>
<a name="l06280"></a>06280 <span class="comment"> * ancestry are treated as delete/add or as simple modifications.  If</span>
<a name="l06281"></a>06281 <span class="comment"> * @a ignore_ancestry is @c FALSE, then any discontinuous node ancestry will</span>
<a name="l06282"></a>06282 <span class="comment"> * result in the diff given as a full delete followed by an add.</span>
<a name="l06283"></a>06283 <span class="comment"> *</span>
<a name="l06284"></a>06284 <span class="comment"> * @a show_copies_as_adds determines whether paths added with history will</span>
<a name="l06285"></a>06285 <span class="comment"> * appear as a diff against their copy source, or whether such paths will</span>
<a name="l06286"></a>06286 <span class="comment"> * appear as if they were newly added in their entirety.</span>
<a name="l06287"></a>06287 <span class="comment"> *</span>
<a name="l06288"></a>06288 <span class="comment"> * If @a use_git_diff_format is TRUE, copied paths will be treated as added</span>
<a name="l06289"></a>06289 <span class="comment"> * if they weren&#39;t modified after being copied. This allows the callbacks</span>
<a name="l06290"></a>06290 <span class="comment"> * to generate appropriate --git diff headers for such files.</span>
<a name="l06291"></a>06291 <span class="comment"> *</span>
<a name="l06292"></a>06292 <span class="comment"> * @a changelist_filter is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l06293"></a>06293 <span class="comment"> * names, used as a restrictive filter on items whose differences are</span>
<a name="l06294"></a>06294 <span class="comment"> * reported; that is, don&#39;t generate diffs about any item unless</span>
<a name="l06295"></a>06295 <span class="comment"> * it&#39;s a member of one of those changelists.  If @a changelist_filter is</span>
<a name="l06296"></a>06296 <span class="comment"> * empty (or altogether @c NULL), no changelist filtering occurs.</span>
<a name="l06297"></a>06297 <span class="comment"> *</span>
<a name="l06298"></a>06298 <span class="comment"> * If @a cancel_func is non-NULL, invoke it with @a cancel_baton at various</span>
<a name="l06299"></a>06299 <span class="comment"> * points during the operation.  If it returns an error (typically</span>
<a name="l06300"></a>06300 <span class="comment"> * #SVN_ERR_CANCELLED), return that error immediately.</span>
<a name="l06301"></a>06301 <span class="comment"> *</span>
<a name="l06302"></a>06302 <span class="comment"> * @since New in 1.7.</span>
<a name="l06303"></a>06303 <span class="comment"> */</span>
<a name="l06304"></a>06304 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06305"></a>06305 <a class="code" href="group__svn__wc__diffs.html#ga06594dfa1bcbccc779c8949341ee7d0d" title="Compare working copy against the text-base.">svn_wc_diff6</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l06306"></a>06306              <span class="keyword">const</span> <span class="keywordtype">char</span> *target_abspath,
<a name="l06307"></a>06307              <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks4__t.html" title="A callback vtable invoked by our diff-editors, as they receive diffs from the server.">svn_wc_diff_callbacks4_t</a> *callbacks,
<a name="l06308"></a>06308              <span class="keywordtype">void</span> *callback_baton,
<a name="l06309"></a>06309              <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l06310"></a>06310              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l06311"></a>06311              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> show_copies_as_adds,
<a name="l06312"></a>06312              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_git_diff_format,
<a name="l06313"></a>06313              <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l06314"></a>06314              <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06315"></a>06315              <span class="keywordtype">void</span> *cancel_baton,
<a name="l06316"></a>06316              apr_pool_t *scratch_pool);
<a name="l06317"></a>06317 <span class="comment"></span>
<a name="l06318"></a>06318 <span class="comment">/**</span>
<a name="l06319"></a>06319 <span class="comment"> * Similar to svn_wc_diff6(), but with a #svn_wc_diff_callbacks3_t argument</span>
<a name="l06320"></a>06320 <span class="comment"> * instead of #svn_wc_diff_callbacks4_t, @a show_copies_as_adds,</span>
<a name="l06321"></a>06321 <span class="comment"> * and @a use_git_diff_format set to * @c FALSE.</span>
<a name="l06322"></a>06322 <span class="comment"> * It also doesn&#39;t allow specifying a cancel function.</span>
<a name="l06323"></a>06323 <span class="comment"> *</span>
<a name="l06324"></a>06324 <span class="comment"> * @since New in 1.6.</span>
<a name="l06325"></a>06325 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l06326"></a>06326 <span class="comment"> */</span>
<a name="l06327"></a>06327 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06328"></a>06328 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06329"></a>06329 <a class="code" href="group__svn__wc__diffs.html#gaa0f41f14337e6400c844f7d4a4608515" title="Similar to svn_wc_diff6(), but with a svn_wc_diff_callbacks3_t argument instead of svn_wc_diff_callba...">svn_wc_diff5</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l06330"></a>06330              <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06331"></a>06331              <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks3__t.html" title="Similar to svn_wc_diff_callbacks4_t, but without copyfrom_path and copyfrom_revision arguments to fil...">svn_wc_diff_callbacks3_t</a> *callbacks,
<a name="l06332"></a>06332              <span class="keywordtype">void</span> *callback_baton,
<a name="l06333"></a>06333              <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l06334"></a>06334              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l06335"></a>06335              <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l06336"></a>06336              apr_pool_t *pool);
<a name="l06337"></a>06337 <span class="comment"></span>
<a name="l06338"></a>06338 <span class="comment">/**</span>
<a name="l06339"></a>06339 <span class="comment"> * Similar to svn_wc_diff5(), but with a #svn_wc_diff_callbacks2_t argument</span>
<a name="l06340"></a>06340 <span class="comment"> * instead of #svn_wc_diff_callbacks3_t.</span>
<a name="l06341"></a>06341 <span class="comment"> *</span>
<a name="l06342"></a>06342 <span class="comment"> * @since New in 1.5.</span>
<a name="l06343"></a>06343 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.5 API.</span>
<a name="l06344"></a>06344 <span class="comment"> */</span>
<a name="l06345"></a>06345 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06346"></a>06346 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06347"></a>06347 <a class="code" href="group__svn__wc__diffs.html#gafebf12c04c6fd9ff24c9fdeae5325d07" title="Similar to svn_wc_diff5(), but with a svn_wc_diff_callbacks2_t argument instead of svn_wc_diff_callba...">svn_wc_diff4</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l06348"></a>06348              <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06349"></a>06349              <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks2__t.html" title="Similar to svn_wc_diff_callbacks3_t, but without the dir_opened and dir_closed functions, and without the tree_conflicted argument to the functions.">svn_wc_diff_callbacks2_t</a> *callbacks,
<a name="l06350"></a>06350              <span class="keywordtype">void</span> *callback_baton,
<a name="l06351"></a>06351              <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l06352"></a>06352              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l06353"></a>06353              <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l06354"></a>06354              apr_pool_t *pool);
<a name="l06355"></a>06355 <span class="comment"></span>
<a name="l06356"></a>06356 <span class="comment">/**</span>
<a name="l06357"></a>06357 <span class="comment"> * Similar to svn_wc_diff4(), but with @a changelist_filter passed @c NULL,</span>
<a name="l06358"></a>06358 <span class="comment"> * and @a depth set to #svn_depth_infinity if @a recurse is TRUE, or</span>
<a name="l06359"></a>06359 <span class="comment"> * #svn_depth_files if @a recurse is FALSE.</span>
<a name="l06360"></a>06360 <span class="comment"> *</span>
<a name="l06361"></a>06361 <span class="comment"> * @since New in 1.2.</span>
<a name="l06362"></a>06362 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l06363"></a>06363 <span class="comment"> */</span>
<a name="l06364"></a>06364 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06365"></a>06365 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06366"></a>06366 <a class="code" href="group__svn__wc__diffs.html#ga1389a5344e66448e4d82636ea7ae21b2" title="Similar to svn_wc_diff4(), but with changelist_filter passed NULL, and depth set to svn_depth_infinit...">svn_wc_diff3</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l06367"></a>06367              <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06368"></a>06368              <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks2__t.html" title="Similar to svn_wc_diff_callbacks3_t, but without the dir_opened and dir_closed functions, and without the tree_conflicted argument to the functions.">svn_wc_diff_callbacks2_t</a> *callbacks,
<a name="l06369"></a>06369              <span class="keywordtype">void</span> *callback_baton,
<a name="l06370"></a>06370              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l06371"></a>06371              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l06372"></a>06372              apr_pool_t *pool);
<a name="l06373"></a>06373 <span class="comment"></span>
<a name="l06374"></a>06374 <span class="comment">/**</span>
<a name="l06375"></a>06375 <span class="comment"> * Similar to svn_wc_diff3(), but with a #svn_wc_diff_callbacks_t argument</span>
<a name="l06376"></a>06376 <span class="comment"> * instead of #svn_wc_diff_callbacks2_t.</span>
<a name="l06377"></a>06377 <span class="comment"> *</span>
<a name="l06378"></a>06378 <span class="comment"> * @since New in 1.1.</span>
<a name="l06379"></a>06379 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l06380"></a>06380 <span class="comment"> */</span>
<a name="l06381"></a>06381 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06382"></a>06382 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06383"></a>06383 <a class="code" href="group__svn__wc__diffs.html#ga13e5f687a94f82aa363ec76945e86057" title="Similar to svn_wc_diff3(), but with a svn_wc_diff_callbacks_t argument instead of svn_wc_diff_callbac...">svn_wc_diff2</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l06384"></a>06384              <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06385"></a>06385              <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks__t.html" title="Similar to svn_wc_diff_callbacks2_t, but with file additions/content changes and property changes spl...">svn_wc_diff_callbacks_t</a> *callbacks,
<a name="l06386"></a>06386              <span class="keywordtype">void</span> *callback_baton,
<a name="l06387"></a>06387              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l06388"></a>06388              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> ignore_ancestry,
<a name="l06389"></a>06389              apr_pool_t *pool);
<a name="l06390"></a>06390 <span class="comment"></span>
<a name="l06391"></a>06391 <span class="comment">/**</span>
<a name="l06392"></a>06392 <span class="comment"> * Similar to svn_wc_diff2(), but with @a ignore_ancestry always set</span>
<a name="l06393"></a>06393 <span class="comment"> * to @c FALSE.</span>
<a name="l06394"></a>06394 <span class="comment"> *</span>
<a name="l06395"></a>06395 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.0 API.</span>
<a name="l06396"></a>06396 <span class="comment"> */</span>
<a name="l06397"></a>06397 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06398"></a>06398 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06399"></a>06399 <a class="code" href="group__svn__wc__diffs.html#gab31c7444c8a1e028ce53b00980154f38" title="Similar to svn_wc_diff2(), but with ignore_ancestry always set to FALSE.">svn_wc_diff</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l06400"></a>06400             <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l06401"></a>06401             <span class="keyword">const</span> <a class="code" href="structsvn__wc__diff__callbacks__t.html" title="Similar to svn_wc_diff_callbacks2_t, but with file additions/content changes and property changes spl...">svn_wc_diff_callbacks_t</a> *callbacks,
<a name="l06402"></a>06402             <span class="keywordtype">void</span> *callback_baton,
<a name="l06403"></a>06403             <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l06404"></a>06404             apr_pool_t *pool);
<a name="l06405"></a>06405 
<a name="l06406"></a>06406 <span class="comment"></span>
<a name="l06407"></a>06407 <span class="comment">/** Given a @a local_abspath to a file or directory under version control,</span>
<a name="l06408"></a>06408 <span class="comment"> * discover any local changes made to properties and/or the set of &#39;pristine&#39;</span>
<a name="l06409"></a>06409 <span class="comment"> * properties.  @a wc_ctx will be used to access the working copy.</span>
<a name="l06410"></a>06410 <span class="comment"> *</span>
<a name="l06411"></a>06411 <span class="comment"> * If @a propchanges is non-@c NULL, return these changes as an array of</span>
<a name="l06412"></a>06412 <span class="comment"> * #svn_prop_t structures stored in @a *propchanges.  The structures and</span>
<a name="l06413"></a>06413 <span class="comment"> * array will be allocated in @a result_pool.  If there are no local property</span>
<a name="l06414"></a>06414 <span class="comment"> * modifications on @a local_abspath, then set @a *propchanges will be empty.</span>
<a name="l06415"></a>06415 <span class="comment"> *</span>
<a name="l06416"></a>06416 <span class="comment"> * If @a original_props is non-@c NULL, then set @a *original_props to</span>
<a name="l06417"></a>06417 <span class="comment"> * hashtable (&lt;tt&gt;const char *name&lt;/tt&gt; -&gt; &lt;tt&gt;const svn_string_t *value&lt;/tt&gt;)</span>
<a name="l06418"></a>06418 <span class="comment"> * that represents the &#39;pristine&#39; property list of @a path.  This hashtable is</span>
<a name="l06419"></a>06419 <span class="comment"> * allocated in @a result_pool.</span>
<a name="l06420"></a>06420 <span class="comment"> *</span>
<a name="l06421"></a>06421 <span class="comment"> * Use @a scratch_pool for temporary allocations.</span>
<a name="l06422"></a>06422 <span class="comment"> */</span>
<a name="l06423"></a>06423 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06424"></a>06424 <a class="code" href="group__svn__wc__diffs.html#gae4d702bcd9246b2004063ac222c90750" title="Given a local_abspath to a file or directory under version control, discover any local changes made t...">svn_wc_get_prop_diffs2</a>(apr_array_header_t **propchanges,
<a name="l06425"></a>06425                        apr_hash_t **original_props,
<a name="l06426"></a>06426                        <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l06427"></a>06427                        <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l06428"></a>06428                        apr_pool_t *result_pool,
<a name="l06429"></a>06429                        apr_pool_t *scratch_pool);
<a name="l06430"></a>06430 <span class="comment"></span>
<a name="l06431"></a>06431 <span class="comment">/** Similar to svn_wc_get_prop_diffs2(), but with a #svn_wc_adm_access_t /</span>
<a name="l06432"></a>06432 <span class="comment"> * relative path parameter pair.</span>
<a name="l06433"></a>06433 <span class="comment"> *</span>
<a name="l06434"></a>06434 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l06435"></a>06435 <span class="comment"> */</span>
<a name="l06436"></a>06436 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06437"></a>06437 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06438"></a>06438 <a class="code" href="group__svn__wc__diffs.html#ga92e1ce831982f0046f3f1f38f622efe7" title="Similar to svn_wc_get_prop_diffs2(), but with a svn_wc_adm_access_t / relative path parameter pair...">svn_wc_get_prop_diffs</a>(apr_array_header_t **propchanges,
<a name="l06439"></a>06439                       apr_hash_t **original_props,
<a name="l06440"></a>06440                       <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l06441"></a>06441                       <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l06442"></a>06442                       apr_pool_t *pool);
<a name="l06443"></a>06443 <span class="comment"></span>
<a name="l06444"></a>06444 <span class="comment">/** @} */</span>
<a name="l06445"></a>06445 
<a name="l06446"></a>06446 <span class="comment"></span>
<a name="l06447"></a>06447 <span class="comment">/**</span>
<a name="l06448"></a>06448 <span class="comment"> * @defgroup svn_wc_merging Merging</span>
<a name="l06449"></a>06449 <span class="comment"> * @{</span>
<a name="l06450"></a>06450 <span class="comment"> */</span>
<a name="l06451"></a>06451 <span class="comment"></span>
<a name="l06452"></a>06452 <span class="comment">/** The outcome of a merge carried out (or tried as a dry-run) by</span>
<a name="l06453"></a>06453 <span class="comment"> * svn_wc_merge()</span>
<a name="l06454"></a>06454 <span class="comment"> */</span>
<a name="l06455"></a><a class="code" href="group__svn__wc__merging.html#ga82382c26ea0159c0da38fa714a4a72ec">06455</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="group__svn__wc__merging.html#ga82382c26ea0159c0da38fa714a4a72ec" title="The outcome of a merge carried out (or tried as a dry-run) by svn_wc_merge()">svn_wc_merge_outcome_t</a>
<a name="l06456"></a>06456 {<span class="comment"></span>
<a name="l06457"></a>06457 <span class="comment">   /** The working copy is (or would be) unchanged.  The changes to be</span>
<a name="l06458"></a>06458 <span class="comment">    * merged were already present in the working copy</span>
<a name="l06459"></a>06459 <span class="comment">    */</span>
<a name="l06460"></a><a class="code" href="group__svn__wc__merging.html#gga82382c26ea0159c0da38fa714a4a72eca68dc3add54610af6340e0fa26c84ebfa">06460</a>    <a class="code" href="group__svn__wc__merging.html#gga82382c26ea0159c0da38fa714a4a72eca68dc3add54610af6340e0fa26c84ebfa" title="The working copy is (or would be) unchanged.">svn_wc_merge_unchanged</a>,
<a name="l06461"></a>06461 <span class="comment"></span>
<a name="l06462"></a>06462 <span class="comment">   /** The working copy has been (or would be) changed. */</span>
<a name="l06463"></a><a class="code" href="group__svn__wc__merging.html#gga82382c26ea0159c0da38fa714a4a72eca7d664fd7bec9ba4e5e0571bcf8adbb0f">06463</a>    <a class="code" href="group__svn__wc__merging.html#gga82382c26ea0159c0da38fa714a4a72eca7d664fd7bec9ba4e5e0571bcf8adbb0f" title="The working copy has been (or would be) changed.">svn_wc_merge_merged</a>,
<a name="l06464"></a>06464 <span class="comment"></span>
<a name="l06465"></a>06465 <span class="comment">   /** The working copy has been (or would be) changed, but there was (or</span>
<a name="l06466"></a>06466 <span class="comment">    * would be) a conflict</span>
<a name="l06467"></a>06467 <span class="comment">    */</span>
<a name="l06468"></a><a class="code" href="group__svn__wc__merging.html#gga82382c26ea0159c0da38fa714a4a72ecac89631ea52d38202af6b4ce5fd286273">06468</a>    <a class="code" href="group__svn__wc__merging.html#gga82382c26ea0159c0da38fa714a4a72ecac89631ea52d38202af6b4ce5fd286273" title="The working copy has been (or would be) changed, but there was (or would be) a conflict.">svn_wc_merge_conflict</a>,
<a name="l06469"></a>06469 <span class="comment"></span>
<a name="l06470"></a>06470 <span class="comment">   /** No merge was performed, probably because the target file was</span>
<a name="l06471"></a>06471 <span class="comment">    * either absent or not under version control.</span>
<a name="l06472"></a>06472 <span class="comment">    */</span>
<a name="l06473"></a><a class="code" href="group__svn__wc__merging.html#gga82382c26ea0159c0da38fa714a4a72eca9c54bcd1bcd5834cd925ed63b2b1c488">06473</a>    <a class="code" href="group__svn__wc__merging.html#gga82382c26ea0159c0da38fa714a4a72eca9c54bcd1bcd5834cd925ed63b2b1c488" title="No merge was performed, probably because the target file was either absent or not under version contr...">svn_wc_merge_no_merge</a>
<a name="l06474"></a>06474 
<a name="l06475"></a>06475 } <a class="code" href="group__svn__wc__merging.html#ga82382c26ea0159c0da38fa714a4a72ec" title="The outcome of a merge carried out (or tried as a dry-run) by svn_wc_merge()">svn_wc_merge_outcome_t</a>;
<a name="l06476"></a>06476 <span class="comment"></span>
<a name="l06477"></a>06477 <span class="comment">/** Given absolute paths to three fulltexts, merge the differences between</span>
<a name="l06478"></a>06478 <span class="comment"> * @a left_abspath and @a right_abspath into @a target_abspath.</span>
<a name="l06479"></a>06479 <span class="comment"> * It may help to know that @a left_abspath, @a right_abspath and @a</span>
<a name="l06480"></a>06480 <span class="comment"> * target_abspath correspond to &quot;OLDER&quot;, &quot;YOURS&quot;, and &quot;MINE&quot;,</span>
<a name="l06481"></a>06481 <span class="comment"> * respectively, in the diff3 documentation.</span>
<a name="l06482"></a>06482 <span class="comment"> *</span>
<a name="l06483"></a>06483 <span class="comment"> * @a wc_ctx should contain a write lock for the directory containing @a</span>
<a name="l06484"></a>06484 <span class="comment"> * target_abspath.</span>
<a name="l06485"></a>06485 <span class="comment"> *</span>
<a name="l06486"></a>06486 <span class="comment"> * This function assumes that @a left_abspath and @a right_abspath are</span>
<a name="l06487"></a>06487 <span class="comment"> * in repository-normal form (linefeeds, with keywords contracted); if</span>
<a name="l06488"></a>06488 <span class="comment"> * necessary, @a target_abspath is temporarily converted to this form to</span>
<a name="l06489"></a>06489 <span class="comment"> * receive the changes, then translated back again.</span>
<a name="l06490"></a>06490 <span class="comment"> *</span>
<a name="l06491"></a>06491 <span class="comment"> * If @a target_abspath is absent, or present but not under version</span>
<a name="l06492"></a>06492 <span class="comment"> * control, then set @a *merge_outcome to #svn_wc_merge_no_merge and</span>
<a name="l06493"></a>06493 <span class="comment"> * return success without merging anything.  (The reasoning is that if</span>
<a name="l06494"></a>06494 <span class="comment"> * the file is not versioned, then it is probably unrelated to the</span>
<a name="l06495"></a>06495 <span class="comment"> * changes being considered, so they should not be merged into it.)</span>
<a name="l06496"></a>06496 <span class="comment"> *</span>
<a name="l06497"></a>06497 <span class="comment"> * @a dry_run determines whether the working copy is modified.  When it</span>
<a name="l06498"></a>06498 <span class="comment"> * is @c FALSE the merge will cause @a target_abspath to be modified, when</span>
<a name="l06499"></a>06499 <span class="comment"> * it is @c TRUE the merge will be carried out to determine the result but</span>
<a name="l06500"></a>06500 <span class="comment"> * @a target_abspath will not be modified.</span>
<a name="l06501"></a>06501 <span class="comment"> *</span>
<a name="l06502"></a>06502 <span class="comment"> * If @a diff3_cmd is non-NULL, then use it as the diff3 command for</span>
<a name="l06503"></a>06503 <span class="comment"> * any merging; otherwise, use the built-in merge code.  If @a</span>
<a name="l06504"></a>06504 <span class="comment"> * merge_options is non-NULL, either pass its elements to @a diff3_cmd or</span>
<a name="l06505"></a>06505 <span class="comment"> * parse it and use as options to the internal merge code (see</span>
<a name="l06506"></a>06506 <span class="comment"> * svn_diff_file_options_parse()).  @a merge_options must contain</span>
<a name="l06507"></a>06507 <span class="comment"> * &lt;tt&gt;const char *&lt;/tt&gt; elements.</span>
<a name="l06508"></a>06508 <span class="comment"> *</span>
<a name="l06509"></a>06509 <span class="comment"> * The outcome of the merge is returned in @a *merge_outcome. If there</span>
<a name="l06510"></a>06510 <span class="comment"> * is a conflict and @a dry_run is @c FALSE, then attempt to call @a</span>
<a name="l06511"></a>06511 <span class="comment"> * conflict_func with @a conflict_baton (if non-NULL).  If the</span>
<a name="l06512"></a>06512 <span class="comment"> * conflict callback cannot resolve the conflict, then:</span>
<a name="l06513"></a>06513 <span class="comment"> *</span>
<a name="l06514"></a>06514 <span class="comment"> *   * Put conflict markers around the conflicting regions in</span>
<a name="l06515"></a>06515 <span class="comment"> *     @a target_abspath, labeled with @a left_label, @a right_label, and</span>
<a name="l06516"></a>06516 <span class="comment"> *     @a target_label.  (If any of these labels are @c NULL, default</span>
<a name="l06517"></a>06517 <span class="comment"> *     values will be used.)</span>
<a name="l06518"></a>06518 <span class="comment"> *</span>
<a name="l06519"></a>06519 <span class="comment"> *   * Copy @a left_abspath, @a right_abspath, and the original @a</span>
<a name="l06520"></a>06520 <span class="comment"> *     target_abspath to unique names in the same directory as @a</span>
<a name="l06521"></a>06521 <span class="comment"> *     target_abspath, ending with the suffixes &quot;.LEFT_LABEL&quot;, &quot;.RIGHT_LABEL&quot;,</span>
<a name="l06522"></a>06522 <span class="comment"> *     and &quot;.TARGET_LABEL&quot; respectively.</span>
<a name="l06523"></a>06523 <span class="comment"> *</span>
<a name="l06524"></a>06524 <span class="comment"> *   * Mark @a target_abspath as &quot;text-conflicted&quot;, and track the above</span>
<a name="l06525"></a>06525 <span class="comment"> *     mentioned backup files as well.</span>
<a name="l06526"></a>06526 <span class="comment"> *</span>
<a name="l06527"></a>06527 <span class="comment"> *   * If @a left_version and/or @a right_version are not NULL, provide</span>
<a name="l06528"></a>06528 <span class="comment"> *     these values to the conflict handler and track these while the conflict</span>
<a name="l06529"></a>06529 <span class="comment"> *     exists.</span>
<a name="l06530"></a>06530 <span class="comment"> *</span>
<a name="l06531"></a>06531 <span class="comment"> * Binary case:</span>
<a name="l06532"></a>06532 <span class="comment"> *</span>
<a name="l06533"></a>06533 <span class="comment"> *  If @a target_abspath is a binary file, then no merging is attempted,</span>
<a name="l06534"></a>06534 <span class="comment"> *  the merge is deemed to be a conflict.  If @a dry_run is @c FALSE the</span>
<a name="l06535"></a>06535 <span class="comment"> *  working @a target_abspath is untouched, and copies of @a left_abspath and</span>
<a name="l06536"></a>06536 <span class="comment"> *  @a right_abspath are created next to it using @a left_label and</span>
<a name="l06537"></a>06537 <span class="comment"> *  @a right_label. @a target_abspath is marked as &quot;text-conflicted&quot;, and</span>
<a name="l06538"></a>06538 <span class="comment"> *  begins tracking the two backup files and the version information.</span>
<a name="l06539"></a>06539 <span class="comment"> *</span>
<a name="l06540"></a>06540 <span class="comment"> * If @a dry_run is @c TRUE no files are changed.  The outcome of the merge</span>
<a name="l06541"></a>06541 <span class="comment"> * is returned in @a *merge_outcome.</span>
<a name="l06542"></a>06542 <span class="comment"> *</span>
<a name="l06543"></a>06543 <span class="comment"> * Use @a scratch_pool for any temporary allocation.</span>
<a name="l06544"></a>06544 <span class="comment"> *</span>
<a name="l06545"></a>06545 <span class="comment"> * @since New in 1.7.</span>
<a name="l06546"></a>06546 <span class="comment"> */</span>
<a name="l06547"></a>06547 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06548"></a>06548 <a class="code" href="group__svn__wc__merging.html#ga36186f55084a18b52b1d5d57bcc4811f" title="Given absolute paths to three fulltexts, merge the differences between left_abspath and right_abspath...">svn_wc_merge4</a>(<span class="keyword">enum</span> <a class="code" href="group__svn__wc__merging.html#ga82382c26ea0159c0da38fa714a4a72ec" title="The outcome of a merge carried out (or tried as a dry-run) by svn_wc_merge()">svn_wc_merge_outcome_t</a> *merge_outcome,
<a name="l06549"></a>06549               <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l06550"></a>06550               <span class="keyword">const</span> <span class="keywordtype">char</span> *left_abspath,
<a name="l06551"></a>06551               <span class="keyword">const</span> <span class="keywordtype">char</span> *right_abspath,
<a name="l06552"></a>06552               <span class="keyword">const</span> <span class="keywordtype">char</span> *target_abspath,
<a name="l06553"></a>06553               <span class="keyword">const</span> <span class="keywordtype">char</span> *left_label,
<a name="l06554"></a>06554               <span class="keyword">const</span> <span class="keywordtype">char</span> *right_label,
<a name="l06555"></a>06555               <span class="keyword">const</span> <span class="keywordtype">char</span> *target_label,
<a name="l06556"></a>06556               <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *left_version,
<a name="l06557"></a>06557               <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *right_version,
<a name="l06558"></a>06558               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l06559"></a>06559               <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l06560"></a>06560               <span class="keyword">const</span> apr_array_header_t *merge_options,
<a name="l06561"></a>06561               <span class="keyword">const</span> apr_array_header_t *prop_diff,
<a name="l06562"></a>06562               <a class="code" href="group__svn__wc__conflict.html#gaaf65c206c4bb05353897170ad4453656" title="A callback used in merge, update and switch for resolving conflicts during the application of a tree ...">svn_wc_conflict_resolver_func2_t</a> conflict_func,
<a name="l06563"></a>06563               <span class="keywordtype">void</span> *conflict_baton,
<a name="l06564"></a>06564               <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06565"></a>06565               <span class="keywordtype">void</span> *cancel_baton,
<a name="l06566"></a>06566               apr_pool_t *scratch_pool);
<a name="l06567"></a>06567 <span class="comment"></span>
<a name="l06568"></a>06568 <span class="comment">/** Similar to svn_wc_merge4() but takes relative paths and an access</span>
<a name="l06569"></a>06569 <span class="comment"> * baton. It doesn&#39;t support a cancel function or tracking origin version</span>
<a name="l06570"></a>06570 <span class="comment"> * information.</span>
<a name="l06571"></a>06571 <span class="comment"> *</span>
<a name="l06572"></a>06572 <span class="comment"> * Uses a svn_wc_conflict_resolver_func_t conflict resolver instead of a</span>
<a name="l06573"></a>06573 <span class="comment"> * svn_wc_conflict_resolver_func2_t.</span>
<a name="l06574"></a>06574 <span class="comment"> *</span>
<a name="l06575"></a>06575 <span class="comment"> * This function assumes that @a diff3_cmd is path encoded. Later versions</span>
<a name="l06576"></a>06576 <span class="comment"> * assume utf-8.</span>
<a name="l06577"></a>06577 <span class="comment"> *</span>
<a name="l06578"></a>06578 <span class="comment"> * @since New in 1.5.</span>
<a name="l06579"></a>06579 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l06580"></a>06580 <span class="comment"> */</span>
<a name="l06581"></a>06581 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06582"></a>06582 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06583"></a>06583 <a class="code" href="group__svn__wc__merging.html#gafb827793f571070f2a6ba7ce9e06f6aa" title="Similar to svn_wc_merge4() but takes relative paths and an access baton.">svn_wc_merge3</a>(<span class="keyword">enum</span> <a class="code" href="group__svn__wc__merging.html#ga82382c26ea0159c0da38fa714a4a72ec" title="The outcome of a merge carried out (or tried as a dry-run) by svn_wc_merge()">svn_wc_merge_outcome_t</a> *merge_outcome,
<a name="l06584"></a>06584               <span class="keyword">const</span> <span class="keywordtype">char</span> *left,
<a name="l06585"></a>06585               <span class="keyword">const</span> <span class="keywordtype">char</span> *right,
<a name="l06586"></a>06586               <span class="keyword">const</span> <span class="keywordtype">char</span> *merge_target,
<a name="l06587"></a>06587               <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l06588"></a>06588               <span class="keyword">const</span> <span class="keywordtype">char</span> *left_label,
<a name="l06589"></a>06589               <span class="keyword">const</span> <span class="keywordtype">char</span> *right_label,
<a name="l06590"></a>06590               <span class="keyword">const</span> <span class="keywordtype">char</span> *target_label,
<a name="l06591"></a>06591               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l06592"></a>06592               <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l06593"></a>06593               <span class="keyword">const</span> apr_array_header_t *merge_options,
<a name="l06594"></a>06594               <span class="keyword">const</span> apr_array_header_t *prop_diff,
<a name="l06595"></a>06595               <a class="code" href="group__svn__wc__conflict.html#gaad913ce66a4c5efdd82397da73e6a21d" title="Similar to svn_wc_conflict_resolver_func2_t, but using svn_wc_conflict_description_t instead of svn_w...">svn_wc_conflict_resolver_func_t</a> conflict_func,
<a name="l06596"></a>06596               <span class="keywordtype">void</span> *conflict_baton,
<a name="l06597"></a>06597               apr_pool_t *pool);
<a name="l06598"></a>06598 
<a name="l06599"></a>06599 <span class="comment"></span>
<a name="l06600"></a>06600 <span class="comment">/** Similar to svn_wc_merge3(), but with @a prop_diff, @a</span>
<a name="l06601"></a>06601 <span class="comment"> * conflict_func, @a conflict_baton set to NULL.</span>
<a name="l06602"></a>06602 <span class="comment"> *</span>
<a name="l06603"></a>06603 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.4 API.</span>
<a name="l06604"></a>06604 <span class="comment"> */</span>
<a name="l06605"></a>06605 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06606"></a>06606 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06607"></a>06607 <a class="code" href="group__svn__wc__merging.html#ga02bf318d3ac776f96a2c600feaf82665" title="Similar to svn_wc_merge3(), but with prop_diff, conflict_func, conflict_baton set to NULL...">svn_wc_merge2</a>(<span class="keyword">enum</span> <a class="code" href="group__svn__wc__merging.html#ga82382c26ea0159c0da38fa714a4a72ec" title="The outcome of a merge carried out (or tried as a dry-run) by svn_wc_merge()">svn_wc_merge_outcome_t</a> *merge_outcome,
<a name="l06608"></a>06608               <span class="keyword">const</span> <span class="keywordtype">char</span> *left,
<a name="l06609"></a>06609               <span class="keyword">const</span> <span class="keywordtype">char</span> *right,
<a name="l06610"></a>06610               <span class="keyword">const</span> <span class="keywordtype">char</span> *merge_target,
<a name="l06611"></a>06611               <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l06612"></a>06612               <span class="keyword">const</span> <span class="keywordtype">char</span> *left_label,
<a name="l06613"></a>06613               <span class="keyword">const</span> <span class="keywordtype">char</span> *right_label,
<a name="l06614"></a>06614               <span class="keyword">const</span> <span class="keywordtype">char</span> *target_label,
<a name="l06615"></a>06615               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l06616"></a>06616               <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l06617"></a>06617               <span class="keyword">const</span> apr_array_header_t *merge_options,
<a name="l06618"></a>06618               apr_pool_t *pool);
<a name="l06619"></a>06619 
<a name="l06620"></a>06620 <span class="comment"></span>
<a name="l06621"></a>06621 <span class="comment">/** Similar to svn_wc_merge2(), but with @a merge_options set to NULL.</span>
<a name="l06622"></a>06622 <span class="comment"> *</span>
<a name="l06623"></a>06623 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.3 API.</span>
<a name="l06624"></a>06624 <span class="comment"> */</span>
<a name="l06625"></a>06625 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06626"></a>06626 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06627"></a>06627 <a class="code" href="group__svn__wc__merging.html#ga093302c0cd37f161c185dfc95e10f8d1" title="Similar to svn_wc_merge2(), but with merge_options set to NULL.">svn_wc_merge</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *left,
<a name="l06628"></a>06628              <span class="keyword">const</span> <span class="keywordtype">char</span> *right,
<a name="l06629"></a>06629              <span class="keyword">const</span> <span class="keywordtype">char</span> *merge_target,
<a name="l06630"></a>06630              <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l06631"></a>06631              <span class="keyword">const</span> <span class="keywordtype">char</span> *left_label,
<a name="l06632"></a>06632              <span class="keyword">const</span> <span class="keywordtype">char</span> *right_label,
<a name="l06633"></a>06633              <span class="keyword">const</span> <span class="keywordtype">char</span> *target_label,
<a name="l06634"></a>06634              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l06635"></a>06635              <span class="keyword">enum</span> <a class="code" href="group__svn__wc__merging.html#ga82382c26ea0159c0da38fa714a4a72ec" title="The outcome of a merge carried out (or tried as a dry-run) by svn_wc_merge()">svn_wc_merge_outcome_t</a> *merge_outcome,
<a name="l06636"></a>06636              <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l06637"></a>06637              apr_pool_t *pool);
<a name="l06638"></a>06638 
<a name="l06639"></a>06639 <span class="comment"></span>
<a name="l06640"></a>06640 <span class="comment">/** Given a @a local_abspath under version control, merge an array of @a</span>
<a name="l06641"></a>06641 <span class="comment"> * propchanges into the path&#39;s existing properties.  @a propchanges is</span>
<a name="l06642"></a>06642 <span class="comment"> * an array of #svn_prop_t objects, and @a baseprops is a hash</span>
<a name="l06643"></a>06643 <span class="comment"> * representing the original set of properties that @a propchanges is</span>
<a name="l06644"></a>06644 <span class="comment"> * working against.  @a wc_ctx contains a lock for @a local_abspath.</span>
<a name="l06645"></a>06645 <span class="comment"> *</span>
<a name="l06646"></a>06646 <span class="comment"> * Only the working properties will be changed.</span>
<a name="l06647"></a>06647 <span class="comment"> *</span>
<a name="l06648"></a>06648 <span class="comment"> * If @a state is non-NULL, set @a *state to the state of the properties</span>
<a name="l06649"></a>06649 <span class="comment"> * after the merge.</span>
<a name="l06650"></a>06650 <span class="comment"> *</span>
<a name="l06651"></a>06651 <span class="comment"> * If conflicts are found when merging working properties, they are</span>
<a name="l06652"></a>06652 <span class="comment"> * described in a temporary .prej file (or appended to an already-existing</span>
<a name="l06653"></a>06653 <span class="comment"> * .prej file), and the entry is marked &quot;conflicted&quot;.</span>
<a name="l06654"></a>06654 <span class="comment"> *</span>
<a name="l06655"></a>06655 <span class="comment"> * If @a cancel_func is non-NULL, invoke it with @a cancel_baton at various</span>
<a name="l06656"></a>06656 <span class="comment"> * points during the operation.  If it returns an error (typically</span>
<a name="l06657"></a>06657 <span class="comment"> * #SVN_ERR_CANCELLED), return that error immediately.</span>
<a name="l06658"></a>06658 <span class="comment"> *</span>
<a name="l06659"></a>06659 <span class="comment"> * If @a local_abspath is not under version control, return the error</span>
<a name="l06660"></a>06660 <span class="comment"> * #SVN_ERR_WC_PATH_NOT_FOUND and don&#39;t touch anyone&#39;s properties.</span>
<a name="l06661"></a>06661 <span class="comment"> *</span>
<a name="l06662"></a>06662 <span class="comment"> * If @a local_abspath has a status in which it doesn&#39;t have properties</span>
<a name="l06663"></a>06663 <span class="comment"> * (E.g. deleted) return the error SVN_ERR_WC_PATH_UNEXPECTED_STATUS.</span>
<a name="l06664"></a>06664 <span class="comment"> *</span>
<a name="l06665"></a>06665 <span class="comment"> * @since New in 1.7.</span>
<a name="l06666"></a>06666 <span class="comment"> */</span>
<a name="l06667"></a>06667 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06668"></a>06668 <a class="code" href="group__svn__wc__merging.html#gaf8ccf9f16397ff7453c7223ef0f6c650" title="Given a local_abspath under version control, merge an array of propchanges into the path&#39;s existing p...">svn_wc_merge_props3</a>(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l06669"></a>06669                     <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l06670"></a>06670                     <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l06671"></a>06671                     <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *left_version,
<a name="l06672"></a>06672                     <span class="keyword">const</span> <a class="code" href="structsvn__wc__conflict__version__t.html" title="Info about one of the conflicting versions of a node.">svn_wc_conflict_version_t</a> *right_version,
<a name="l06673"></a>06673                     apr_hash_t *baseprops,
<a name="l06674"></a>06674                     <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l06675"></a>06675                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l06676"></a>06676                     <a class="code" href="group__svn__wc__conflict.html#gaaf65c206c4bb05353897170ad4453656" title="A callback used in merge, update and switch for resolving conflicts during the application of a tree ...">svn_wc_conflict_resolver_func2_t</a> conflict_func,
<a name="l06677"></a>06677                     <span class="keywordtype">void</span> *conflict_baton,
<a name="l06678"></a>06678                     <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06679"></a>06679                     <span class="keywordtype">void</span> *cancel_baton,
<a name="l06680"></a>06680                     apr_pool_t *scratch_pool);
<a name="l06681"></a>06681 
<a name="l06682"></a>06682 <span class="comment"></span>
<a name="l06683"></a>06683 <span class="comment">/** Similar to svn_wc_merge_props3, but takes an access baton and relative</span>
<a name="l06684"></a>06684 <span class="comment"> * path, no cancel_function, and no left and right version.</span>
<a name="l06685"></a>06685 <span class="comment"> *</span>
<a name="l06686"></a>06686 <span class="comment"> * This function has the @a base_merge parameter which (when TRUE) will</span>
<a name="l06687"></a>06687 <span class="comment"> * apply @a propchanges to this node&#39;s pristine set of properties. This</span>
<a name="l06688"></a>06688 <span class="comment"> * functionality is not supported on newer APIs -- pristine information</span>
<a name="l06689"></a>06689 <span class="comment"> * should only be changed through an update editor drive.</span>
<a name="l06690"></a>06690 <span class="comment"> *</span>
<a name="l06691"></a>06691 <span class="comment"> * Uses a svn_wc_conflict_resolver_func_t conflict resolver instead of a</span>
<a name="l06692"></a>06692 <span class="comment"> * svn_wc_conflict_resolver_func2_t.</span>
<a name="l06693"></a>06693 <span class="comment"> *</span>
<a name="l06694"></a>06694 <span class="comment"> * For compatibility reasons this function returns</span>
<a name="l06695"></a>06695 <span class="comment"> * #SVN_ERR_UNVERSIONED_RESOURCE, when svn_wc_merge_props3 would return either</span>
<a name="l06696"></a>06696 <span class="comment"> * #SVN_ERR_WC_PATH_NOT_FOUND or #SVN_ERR_WC_PATH_UNEXPECTED_STATUS.</span>
<a name="l06697"></a>06697 <span class="comment"> *</span>
<a name="l06698"></a>06698 <span class="comment"> * @since New in 1.5.</span>
<a name="l06699"></a>06699 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l06700"></a>06700 <span class="comment"> */</span>
<a name="l06701"></a>06701 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06702"></a>06702 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06703"></a>06703 <a class="code" href="group__svn__wc__merging.html#ga327f68a60568b97a82a9fa08ae0fbab0" title="Similar to svn_wc_merge_props3, but takes an access baton and relative path, no cancel_function, and no left and right version.">svn_wc_merge_props2</a>(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l06704"></a>06704                     <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l06705"></a>06705                     <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l06706"></a>06706                     apr_hash_t *baseprops,
<a name="l06707"></a>06707                     <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l06708"></a>06708                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> base_merge,
<a name="l06709"></a>06709                     <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l06710"></a>06710                     <a class="code" href="group__svn__wc__conflict.html#gaad913ce66a4c5efdd82397da73e6a21d" title="Similar to svn_wc_conflict_resolver_func2_t, but using svn_wc_conflict_description_t instead of svn_w...">svn_wc_conflict_resolver_func_t</a> conflict_func,
<a name="l06711"></a>06711                     <span class="keywordtype">void</span> *conflict_baton,
<a name="l06712"></a>06712                     apr_pool_t *pool);
<a name="l06713"></a>06713 
<a name="l06714"></a>06714 <span class="comment"></span>
<a name="l06715"></a>06715 <span class="comment">/**</span>
<a name="l06716"></a>06716 <span class="comment"> * Same as svn_wc_merge_props2(), but with a @a conflict_func (and</span>
<a name="l06717"></a>06717 <span class="comment"> * baton) of NULL.</span>
<a name="l06718"></a>06718 <span class="comment"> *</span>
<a name="l06719"></a>06719 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l06720"></a>06720 <span class="comment"> */</span>
<a name="l06721"></a>06721 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06722"></a>06722 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06723"></a>06723 <a class="code" href="group__svn__wc__merging.html#ga33b523be44ef63c4f0f2c988bed556c8" title="Same as svn_wc_merge_props2(), but with a conflict_func (and baton) of NULL.">svn_wc_merge_props</a>(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l06724"></a>06724                    <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l06725"></a>06725                    <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l06726"></a>06726                    apr_hash_t *baseprops,
<a name="l06727"></a>06727                    <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l06728"></a>06728                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> base_merge,
<a name="l06729"></a>06729                    <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l06730"></a>06730                    apr_pool_t *pool);
<a name="l06731"></a>06731 
<a name="l06732"></a>06732 <span class="comment"></span>
<a name="l06733"></a>06733 <span class="comment">/**</span>
<a name="l06734"></a>06734 <span class="comment"> * Similar to svn_wc_merge_props(), but no baseprops are given.</span>
<a name="l06735"></a>06735 <span class="comment"> * Instead, it&#39;s assumed that the incoming propchanges are based</span>
<a name="l06736"></a>06736 <span class="comment"> * against the working copy&#39;s own baseprops.  While this assumption is</span>
<a name="l06737"></a>06737 <span class="comment"> * correct for &#39;svn update&#39;, it&#39;s incorrect for &#39;svn merge&#39;, and can</span>
<a name="l06738"></a>06738 <span class="comment"> * cause flawed behavior.  (See issue #2035.)</span>
<a name="l06739"></a>06739 <span class="comment"> *</span>
<a name="l06740"></a>06740 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.2 API.</span>
<a name="l06741"></a>06741 <span class="comment"> */</span>
<a name="l06742"></a>06742 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06743"></a>06743 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06744"></a>06744 <a class="code" href="group__svn__wc__merging.html#gac4519e4fd0c88f8504bd50c29130d8f6" title="Similar to svn_wc_merge_props(), but no baseprops are given.">svn_wc_merge_prop_diffs</a>(<a class="code" href="group__svn__wc__notifications.html#ga86188fa68605f8c57b7849857b1e6543" title="The type of notification that is occurring.">svn_wc_notify_state_t</a> *state,
<a name="l06745"></a>06745                         <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l06746"></a>06746                         <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l06747"></a>06747                         <span class="keyword">const</span> apr_array_header_t *propchanges,
<a name="l06748"></a>06748                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> base_merge,
<a name="l06749"></a>06749                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> dry_run,
<a name="l06750"></a>06750                         apr_pool_t *pool);
<a name="l06751"></a>06751 <span class="comment"></span>
<a name="l06752"></a>06752 <span class="comment">/** @} */</span>
<a name="l06753"></a>06753 
<a name="l06754"></a>06754 <span class="comment"></span>
<a name="l06755"></a>06755 <span class="comment">/** Given a @a path to a wc file, return in @a *contents a readonly stream to</span>
<a name="l06756"></a>06756 <span class="comment"> * the pristine contents of the file that would serve as base content for the</span>
<a name="l06757"></a>06757 <span class="comment"> * next commit. That means:</span>
<a name="l06758"></a>06758 <span class="comment"> *</span>
<a name="l06759"></a>06759 <span class="comment"> * When there is no change in node history scheduled, i.e. when there are only</span>
<a name="l06760"></a>06760 <span class="comment"> * local text-mods, prop-mods or a delete, return the last checked-out or</span>
<a name="l06761"></a>06761 <span class="comment"> * updated-/switched-to contents of the file.</span>
<a name="l06762"></a>06762 <span class="comment"> *</span>
<a name="l06763"></a>06763 <span class="comment"> * If the file is simply added or replaced (no copy-/move-here involved),</span>
<a name="l06764"></a>06764 <span class="comment"> * set @a *contents to @c NULL.</span>
<a name="l06765"></a>06765 <span class="comment"> *</span>
<a name="l06766"></a>06766 <span class="comment"> * When the file has been locally copied-/moved-here, return the contents of</span>
<a name="l06767"></a>06767 <span class="comment"> * the copy/move source (even if the copy-/move-here replaces a locally</span>
<a name="l06768"></a>06768 <span class="comment"> * deleted file).</span>
<a name="l06769"></a>06769 <span class="comment"> *</span>
<a name="l06770"></a>06770 <span class="comment"> * If @a local_abspath refers to an unversioned or non-existing path, return</span>
<a name="l06771"></a>06771 <span class="comment"> * @c SVN_ERR_WC_PATH_NOT_FOUND. Use @a wc_ctx to access the working copy.</span>
<a name="l06772"></a>06772 <span class="comment"> * @a contents may not be @c NULL (unlike @a *contents).</span>
<a name="l06773"></a>06773 <span class="comment"> *</span>
<a name="l06774"></a>06774 <span class="comment"> * @since New in 1.7. */</span>
<a name="l06775"></a>06775 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06776"></a>06776 <a class="code" href="group__svn__wc.html#gadbea4ed49d75849cf5879f46792caf4e" title="Given a path to a wc file, return in *contents a readonly stream to the pristine contents of the file...">svn_wc_get_pristine_contents2</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> **contents,
<a name="l06777"></a>06777                               <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l06778"></a>06778                               <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l06779"></a>06779                               apr_pool_t *result_pool,
<a name="l06780"></a>06780                               apr_pool_t *scratch_pool);
<a name="l06781"></a>06781 <span class="comment"></span>
<a name="l06782"></a>06782 <span class="comment">/** Similar to svn_wc_get_pristine_contents2, but takes no working copy</span>
<a name="l06783"></a>06783 <span class="comment"> * context and a path that can be relative</span>
<a name="l06784"></a>06784 <span class="comment"> *</span>
<a name="l06785"></a>06785 <span class="comment"> * @since New in 1.6.</span>
<a name="l06786"></a>06786 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l06787"></a>06787 <span class="comment"> */</span>
<a name="l06788"></a>06788 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06789"></a>06789 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06790"></a>06790 <a class="code" href="group__svn__wc.html#ga473bc0e61177ce7030af195ba09ee66a" title="Similar to svn_wc_get_pristine_contents2, but takes no working copy context and a path that can be re...">svn_wc_get_pristine_contents</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> **contents,
<a name="l06791"></a>06791                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l06792"></a>06792                              apr_pool_t *result_pool,
<a name="l06793"></a>06793                              apr_pool_t *scratch_pool);
<a name="l06794"></a>06794 
<a name="l06795"></a>06795 <span class="comment"></span>
<a name="l06796"></a>06796 <span class="comment">/** Set @a *pristine_path to the path of the &quot;normal&quot; pristine text file for</span>
<a name="l06797"></a>06797 <span class="comment"> * the versioned file @a path.</span>
<a name="l06798"></a>06798 <span class="comment"> *</span>
<a name="l06799"></a>06799 <span class="comment"> * If @a path does not have a pristine text, set @a *pristine_path to a path where</span>
<a name="l06800"></a>06800 <span class="comment"> * nothing exists on disk (in a directory that does exist).</span>
<a name="l06801"></a>06801 <span class="comment"> *</span>
<a name="l06802"></a>06802 <span class="comment"> * @note: Before version 1.7, the behaviour in that case was to provide the</span>
<a name="l06803"></a>06803 <span class="comment"> * path where the pristine text *would be* if it were present.  The new</span>
<a name="l06804"></a>06804 <span class="comment"> * behaviour is intended to provide backward compatibility for callers that</span>
<a name="l06805"></a>06805 <span class="comment"> * open or test the provided path immediately, and not for callers that</span>
<a name="l06806"></a>06806 <span class="comment"> * store the path for later use.</span>
<a name="l06807"></a>06807 <span class="comment"> *</span>
<a name="l06808"></a>06808 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.5 API.</span>
<a name="l06809"></a>06809 <span class="comment"> * Callers should use svn_wc_get_pristine_contents() instead.</span>
<a name="l06810"></a>06810 <span class="comment"> */</span>
<a name="l06811"></a>06811 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06812"></a>06812 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06813"></a>06813 <a class="code" href="group__svn__wc.html#ga9e0206f3daf7dbcdf677433ffd44bf48" title="Set *pristine_path to the path of the &quot;normal&quot; pristine text file for the versioned file path...">svn_wc_get_pristine_copy_path</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l06814"></a>06814                               <span class="keyword">const</span> <span class="keywordtype">char</span> **pristine_path,
<a name="l06815"></a>06815                               apr_pool_t *pool);
<a name="l06816"></a>06816 
<a name="l06817"></a>06817 <span class="comment"></span>
<a name="l06818"></a>06818 <span class="comment">/**</span>
<a name="l06819"></a>06819 <span class="comment"> * Recurse from @a local_abspath, cleaning up unfinished log business.  Perform</span>
<a name="l06820"></a>06820 <span class="comment"> * any temporary allocations in @a scratch_pool.  Any working copy locks under</span>
<a name="l06821"></a>06821 <span class="comment"> * @a local_abspath will be taken over and then cleared by this function.</span>
<a name="l06822"></a>06822 <span class="comment"> *</span>
<a name="l06823"></a>06823 <span class="comment"> * WARNING: there is no mechanism that will protect locks that are still being</span>
<a name="l06824"></a>06824 <span class="comment"> * used.</span>
<a name="l06825"></a>06825 <span class="comment"> *</span>
<a name="l06826"></a>06826 <span class="comment"> * If @a cancel_func is non-NULL, invoke it with @a cancel_baton at various</span>
<a name="l06827"></a>06827 <span class="comment"> * points during the operation.  If it returns an error (typically</span>
<a name="l06828"></a>06828 <span class="comment"> * #SVN_ERR_CANCELLED), return that error immediately.</span>
<a name="l06829"></a>06829 <span class="comment"> *</span>
<a name="l06830"></a>06830 <span class="comment"> * @since New in 1.7.</span>
<a name="l06831"></a>06831 <span class="comment"> */</span>
<a name="l06832"></a>06832 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06833"></a>06833 <a class="code" href="group__svn__wc.html#gad2c000b7ccf5f8e14f7d44d4a62ea3d7" title="Recurse from local_abspath, cleaning up unfinished log business.">svn_wc_cleanup3</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l06834"></a>06834                 <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l06835"></a>06835                 <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06836"></a>06836                 <span class="keywordtype">void</span> *cancel_baton,
<a name="l06837"></a>06837                 apr_pool_t *scratch_pool);
<a name="l06838"></a>06838 <span class="comment"></span>
<a name="l06839"></a>06839 <span class="comment">/**</span>
<a name="l06840"></a>06840 <span class="comment"> * Similar to svn_wc_cleanup3() but uses relative paths and creates its own</span>
<a name="l06841"></a>06841 <span class="comment"> * swn_wc_context_t.</span>
<a name="l06842"></a>06842 <span class="comment"> *</span>
<a name="l06843"></a>06843 <span class="comment"> * @since New in 1.2.</span>
<a name="l06844"></a>06844 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l06845"></a>06845 <span class="comment"> */</span>
<a name="l06846"></a>06846 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06847"></a>06847 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06848"></a>06848 <a class="code" href="group__svn__wc.html#gaa5b2ce85bad8598f27ece55359b37e40" title="Similar to svn_wc_cleanup3() but uses relative paths and creates its own swn_wc_context_t.">svn_wc_cleanup2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l06849"></a>06849                 <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l06850"></a>06850                 <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06851"></a>06851                 <span class="keywordtype">void</span> *cancel_baton,
<a name="l06852"></a>06852                 apr_pool_t *pool);
<a name="l06853"></a>06853 <span class="comment"></span>
<a name="l06854"></a>06854 <span class="comment">/**</span>
<a name="l06855"></a>06855 <span class="comment"> * Similar to svn_wc_cleanup2(). @a optional_adm_access is an historic</span>
<a name="l06856"></a>06856 <span class="comment"> * relic and not used, it may be NULL.</span>
<a name="l06857"></a>06857 <span class="comment"> *</span>
<a name="l06858"></a>06858 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l06859"></a>06859 <span class="comment"> */</span>
<a name="l06860"></a>06860 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06861"></a>06861 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06862"></a>06862 <a class="code" href="group__svn__wc.html#gabaac0f153e57c4f63ef5700256ff6fa7" title="Similar to svn_wc_cleanup2().">svn_wc_cleanup</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l06863"></a>06863                <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *optional_adm_access,
<a name="l06864"></a>06864                <span class="keyword">const</span> <span class="keywordtype">char</span> *diff3_cmd,
<a name="l06865"></a>06865                <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06866"></a>06866                <span class="keywordtype">void</span> *cancel_baton,
<a name="l06867"></a>06867                apr_pool_t *pool);
<a name="l06868"></a>06868 <span class="comment"></span>
<a name="l06869"></a>06869 <span class="comment">/** Callback for retrieving a repository root for a url from upgrade.</span>
<a name="l06870"></a>06870 <span class="comment"> *</span>
<a name="l06871"></a>06871 <span class="comment"> * Called by svn_wc_upgrade() when no repository root and/or repository</span>
<a name="l06872"></a>06872 <span class="comment"> * uuid are recorded in the working copy. For normal Subversion 1.5 and</span>
<a name="l06873"></a>06873 <span class="comment"> * later working copies, this callback will not be used.</span>
<a name="l06874"></a>06874 <span class="comment"> *</span>
<a name="l06875"></a>06875 <span class="comment"> * @since New in 1.7.</span>
<a name="l06876"></a>06876 <span class="comment"> */</span>
<a name="l06877"></a><a class="code" href="group__svn__wc.html#ga23bb8de568e76b867d26f5385729a760">06877</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> * (*svn_wc_upgrade_get_repos_info_t)(
<a name="l06878"></a>06878                                     <span class="keyword">const</span> <span class="keywordtype">char</span> **repos_root,
<a name="l06879"></a>06879                                     <span class="keyword">const</span> <span class="keywordtype">char</span> **repos_uuid,
<a name="l06880"></a>06880                                     <span class="keywordtype">void</span> *baton,
<a name="l06881"></a>06881                                     <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l06882"></a>06882                                     apr_pool_t *result_pool,
<a name="l06883"></a>06883                                     apr_pool_t *scratch_pool);
<a name="l06884"></a>06884 
<a name="l06885"></a>06885 <span class="comment"></span>
<a name="l06886"></a>06886 <span class="comment">/**</span>
<a name="l06887"></a>06887 <span class="comment"> * Upgrade the working copy at @a local_abspath to the latest metadata</span>
<a name="l06888"></a>06888 <span class="comment"> * storage format.  @a local_abspath should be an absolute path to the</span>
<a name="l06889"></a>06889 <span class="comment"> * root of the working copy.</span>
<a name="l06890"></a>06890 <span class="comment"> *</span>
<a name="l06891"></a>06891 <span class="comment"> * If @a cancel_func is non-NULL, invoke it with @a cancel_baton at</span>
<a name="l06892"></a>06892 <span class="comment"> * various points during the operation.  If it returns an error</span>
<a name="l06893"></a>06893 <span class="comment"> * (typically #SVN_ERR_CANCELLED), return that error immediately.</span>
<a name="l06894"></a>06894 <span class="comment"> *</span>
<a name="l06895"></a>06895 <span class="comment"> * For each directory converted, @a notify_func will be called with</span>
<a name="l06896"></a>06896 <span class="comment"> * in @a notify_baton action #svn_wc_notify_upgrade_path and as path</span>
<a name="l06897"></a>06897 <span class="comment"> * the path of the upgraded directory. @a notify_func may be @c NULL</span>
<a name="l06898"></a>06898 <span class="comment"> * if this notification is not needed.</span>
<a name="l06899"></a>06899 <span class="comment"> *</span>
<a name="l06900"></a>06900 <span class="comment"> * If the old working copy doesn&#39;t contain a repository root and/or</span>
<a name="l06901"></a>06901 <span class="comment"> * repository uuid, @a repos_info_func (if non-NULL) will be called</span>
<a name="l06902"></a>06902 <span class="comment"> * with @a repos_info_baton to provide the missing information.</span>
<a name="l06903"></a>06903 <span class="comment"> *</span>
<a name="l06904"></a>06904 <span class="comment"> * @since New in 1.7.</span>
<a name="l06905"></a>06905 <span class="comment"> */</span>
<a name="l06906"></a>06906 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06907"></a>06907 <a class="code" href="group__svn__wc.html#gac2608b41140a8604b873e1b6eacbfc86" title="Upgrade the working copy at local_abspath to the latest metadata storage format.">svn_wc_upgrade</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l06908"></a>06908                <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l06909"></a>06909                <a class="code" href="group__svn__wc.html#ga23bb8de568e76b867d26f5385729a760" title="Callback for retrieving a repository root for a url from upgrade.">svn_wc_upgrade_get_repos_info_t</a> repos_info_func,
<a name="l06910"></a>06910                <span class="keywordtype">void</span> *repos_info_baton,
<a name="l06911"></a>06911                <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l06912"></a>06912                <span class="keywordtype">void</span> *cancel_baton,
<a name="l06913"></a>06913                <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l06914"></a>06914                <span class="keywordtype">void</span> *notify_baton,
<a name="l06915"></a>06915                apr_pool_t *scratch_pool);
<a name="l06916"></a>06916 
<a name="l06917"></a>06917 <span class="comment"></span>
<a name="l06918"></a>06918 <span class="comment">/** Relocation validation callback typedef.</span>
<a name="l06919"></a>06919 <span class="comment"> *</span>
<a name="l06920"></a>06920 <span class="comment"> * Called for each relocated file/directory.  @a uuid, if non-NULL, contains</span>
<a name="l06921"></a>06921 <span class="comment"> * the expected repository UUID, @a url contains the tentative URL.</span>
<a name="l06922"></a>06922 <span class="comment"> *</span>
<a name="l06923"></a>06923 <span class="comment"> * @a baton is a closure object; it should be provided by the</span>
<a name="l06924"></a>06924 <span class="comment"> * implementation, and passed by the caller.</span>
<a name="l06925"></a>06925 <span class="comment"> *</span>
<a name="l06926"></a>06926 <span class="comment"> * If @a root_url is passed, then the implementation should make sure that</span>
<a name="l06927"></a>06927 <span class="comment"> * @a url is the repository root.</span>
<a name="l06928"></a>06928 <span class="comment"> * @a pool may be used for temporary allocations.</span>
<a name="l06929"></a>06929 <span class="comment"> *</span>
<a name="l06930"></a>06930 <span class="comment"> * @since New in 1.5.</span>
<a name="l06931"></a>06931 <span class="comment"> */</span>
<a name="l06932"></a><a class="code" href="group__svn__wc.html#gaa9addd7cee0df1441c76efe39ac8e0bd">06932</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_relocation_validator3_t)(<span class="keywordtype">void</span> *baton,
<a name="l06933"></a>06933                                                        <span class="keyword">const</span> <span class="keywordtype">char</span> *uuid,
<a name="l06934"></a>06934                                                        <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l06935"></a>06935                                                        <span class="keyword">const</span> <span class="keywordtype">char</span> *root_url,
<a name="l06936"></a>06936                                                        apr_pool_t *pool);
<a name="l06937"></a>06937 <span class="comment"></span>
<a name="l06938"></a>06938 <span class="comment">/** Similar to #svn_wc_relocation_validator3_t, but with</span>
<a name="l06939"></a>06939 <span class="comment"> * the @a root argument.</span>
<a name="l06940"></a>06940 <span class="comment"> *</span>
<a name="l06941"></a>06941 <span class="comment"> * If @a root is TRUE, then the implementation should make sure that @a url</span>
<a name="l06942"></a>06942 <span class="comment"> * is the repository root.  Else, it can be an URL inside the repository.</span>
<a name="l06943"></a>06943 <span class="comment"> *</span>
<a name="l06944"></a>06944 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.4 API.</span>
<a name="l06945"></a>06945 <span class="comment"> */</span>
<a name="l06946"></a><a class="code" href="group__svn__wc.html#ga3156f48a76033908b9dd80ac347938b8">06946</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_relocation_validator2_t)(<span class="keywordtype">void</span> *baton,
<a name="l06947"></a>06947                                                        <span class="keyword">const</span> <span class="keywordtype">char</span> *uuid,
<a name="l06948"></a>06948                                                        <span class="keyword">const</span> <span class="keywordtype">char</span> *url,
<a name="l06949"></a>06949                                                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> root,
<a name="l06950"></a>06950                                                        apr_pool_t *pool);
<a name="l06951"></a>06951 <span class="comment"></span>
<a name="l06952"></a>06952 <span class="comment">/** Similar to #svn_wc_relocation_validator2_t, but without</span>
<a name="l06953"></a>06953 <span class="comment"> * the @a root and @a pool arguments.  @a uuid will not be NULL in this version</span>
<a name="l06954"></a>06954 <span class="comment"> * of the function.</span>
<a name="l06955"></a>06955 <span class="comment"> *</span>
<a name="l06956"></a>06956 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.3 API.</span>
<a name="l06957"></a>06957 <span class="comment"> */</span>
<a name="l06958"></a><a class="code" href="group__svn__wc.html#ga5aef0943027834b2d1a4b7eda408f321">06958</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_wc_relocation_validator_t)(<span class="keywordtype">void</span> *baton,
<a name="l06959"></a>06959                                                       <span class="keyword">const</span> <span class="keywordtype">char</span> *uuid,
<a name="l06960"></a>06960                                                       <span class="keyword">const</span> <span class="keywordtype">char</span> *url);
<a name="l06961"></a>06961 <span class="comment"></span>
<a name="l06962"></a>06962 <span class="comment">/** Recursively change repository references at @a wcroot_abspath</span>
<a name="l06963"></a>06963 <span class="comment"> * (which is the root directory of a working copy).  The pre-change</span>
<a name="l06964"></a>06964 <span class="comment"> * URL should begin with @a from, and the post-change URL will begin</span>
<a name="l06965"></a>06965 <span class="comment"> * with @a to.  @a validator (and its baton, @a validator_baton), will</span>
<a name="l06966"></a>06966 <span class="comment"> * be called for the newly generated base URL and calculated repo</span>
<a name="l06967"></a>06967 <span class="comment"> * root.</span>
<a name="l06968"></a>06968 <span class="comment"> *</span>
<a name="l06969"></a>06969 <span class="comment"> * @a wc_ctx is an working copy context.</span>
<a name="l06970"></a>06970 <span class="comment"> *</span>
<a name="l06971"></a>06971 <span class="comment"> * @a scratch_pool will be used for temporary allocations.</span>
<a name="l06972"></a>06972 <span class="comment"> *</span>
<a name="l06973"></a>06973 <span class="comment"> * @since New in 1.7.</span>
<a name="l06974"></a>06974 <span class="comment"> */</span>
<a name="l06975"></a>06975 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06976"></a>06976 <a class="code" href="group__svn__wc.html#ga1a2fe02864df26f13e45f07d01ade7e5" title="Recursively change repository references at wcroot_abspath (which is the root directory of a working ...">svn_wc_relocate4</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l06977"></a>06977                  <span class="keyword">const</span> <span class="keywordtype">char</span> *wcroot_abspath,
<a name="l06978"></a>06978                  <span class="keyword">const</span> <span class="keywordtype">char</span> *from,
<a name="l06979"></a>06979                  <span class="keyword">const</span> <span class="keywordtype">char</span> *to,
<a name="l06980"></a>06980                  <a class="code" href="group__svn__wc.html#gaa9addd7cee0df1441c76efe39ac8e0bd" title="Relocation validation callback typedef.">svn_wc_relocation_validator3_t</a> validator,
<a name="l06981"></a>06981                  <span class="keywordtype">void</span> *validator_baton,
<a name="l06982"></a>06982                  apr_pool_t *scratch_pool);
<a name="l06983"></a>06983 <span class="comment"></span>
<a name="l06984"></a>06984 <span class="comment">/** Similar to svn_wc_relocate4(), but with a #svn_wc_adm_access_t /</span>
<a name="l06985"></a>06985 <span class="comment"> * relative path parameter pair.</span>
<a name="l06986"></a>06986 <span class="comment"> *</span>
<a name="l06987"></a>06987 <span class="comment"> * @note As of the 1.7 API, @a path is required to be a working copy</span>
<a name="l06988"></a>06988 <span class="comment"> * root directory, and @a recurse is required to be TRUE.</span>
<a name="l06989"></a>06989 <span class="comment"> *</span>
<a name="l06990"></a>06990 <span class="comment"> * @since New in 1.5.</span>
<a name="l06991"></a>06991 <span class="comment"> * @deprecated Provided for limited backwards compatibility with the</span>
<a name="l06992"></a>06992 <span class="comment"> * 1.6 API.</span>
<a name="l06993"></a>06993 <span class="comment"> */</span>
<a name="l06994"></a>06994 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l06995"></a>06995 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l06996"></a>06996 <a class="code" href="group__svn__wc.html#gada9d3d66c69c0f31cede9c90c4ab226e" title="Similar to svn_wc_relocate4(), but with a svn_wc_adm_access_t / relative path parameter pair...">svn_wc_relocate3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l06997"></a>06997                  <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l06998"></a>06998                  <span class="keyword">const</span> <span class="keywordtype">char</span> *from,
<a name="l06999"></a>06999                  <span class="keyword">const</span> <span class="keywordtype">char</span> *to,
<a name="l07000"></a>07000                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l07001"></a>07001                  <a class="code" href="group__svn__wc.html#gaa9addd7cee0df1441c76efe39ac8e0bd" title="Relocation validation callback typedef.">svn_wc_relocation_validator3_t</a> validator,
<a name="l07002"></a>07002                  <span class="keywordtype">void</span> *validator_baton,
<a name="l07003"></a>07003                  apr_pool_t *pool);
<a name="l07004"></a>07004 <span class="comment"></span>
<a name="l07005"></a>07005 <span class="comment">/** Similar to svn_wc_relocate3(), but uses #svn_wc_relocation_validator2_t.</span>
<a name="l07006"></a>07006 <span class="comment"> *</span>
<a name="l07007"></a>07007 <span class="comment"> * @since New in 1.4.</span>
<a name="l07008"></a>07008 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.4 API. */</span>
<a name="l07009"></a>07009 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07010"></a>07010 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07011"></a>07011 <a class="code" href="group__svn__wc.html#ga50cd30da614df6879b7882c55df93171" title="Similar to svn_wc_relocate3(), but uses svn_wc_relocation_validator2_t.">svn_wc_relocate2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07012"></a>07012                  <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07013"></a>07013                  <span class="keyword">const</span> <span class="keywordtype">char</span> *from,
<a name="l07014"></a>07014                  <span class="keyword">const</span> <span class="keywordtype">char</span> *to,
<a name="l07015"></a>07015                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l07016"></a>07016                  <a class="code" href="group__svn__wc.html#ga3156f48a76033908b9dd80ac347938b8" title="Similar to svn_wc_relocation_validator3_t, but with the root argument.">svn_wc_relocation_validator2_t</a> validator,
<a name="l07017"></a>07017                  <span class="keywordtype">void</span> *validator_baton,
<a name="l07018"></a>07018                  apr_pool_t *pool);
<a name="l07019"></a>07019 <span class="comment"></span>
<a name="l07020"></a>07020 <span class="comment">/** Similar to svn_wc_relocate2(), but uses #svn_wc_relocation_validator_t.</span>
<a name="l07021"></a>07021 <span class="comment"> *</span>
<a name="l07022"></a>07022 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.3 API. */</span>
<a name="l07023"></a>07023 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07024"></a>07024 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07025"></a>07025 <a class="code" href="group__svn__wc.html#gad72d6f9c9cf2db5d0199cc2c332dd50d" title="Similar to svn_wc_relocate2(), but uses svn_wc_relocation_validator_t.">svn_wc_relocate</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07026"></a>07026                 <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07027"></a>07027                 <span class="keyword">const</span> <span class="keywordtype">char</span> *from,
<a name="l07028"></a>07028                 <span class="keyword">const</span> <span class="keywordtype">char</span> *to,
<a name="l07029"></a>07029                 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recurse,
<a name="l07030"></a>07030                 <a class="code" href="group__svn__wc.html#ga5aef0943027834b2d1a4b7eda408f321" title="Similar to svn_wc_relocation_validator2_t, but without the root and pool arguments.">svn_wc_relocation_validator_t</a> validator,
<a name="l07031"></a>07031                 <span class="keywordtype">void</span> *validator_baton,
<a name="l07032"></a>07032                 apr_pool_t *pool);
<a name="l07033"></a>07033 
<a name="l07034"></a>07034 <span class="comment"></span>
<a name="l07035"></a>07035 <span class="comment">/**</span>
<a name="l07036"></a>07036 <span class="comment"> * Revert changes to @a local_abspath.  Perform necessary allocations in</span>
<a name="l07037"></a>07037 <span class="comment"> * @a scratch_pool.</span>
<a name="l07038"></a>07038 <span class="comment"> *</span>
<a name="l07039"></a>07039 <span class="comment"> * @a wc_ctx contains the necessary locks required for performing the</span>
<a name="l07040"></a>07040 <span class="comment"> * operation.</span>
<a name="l07041"></a>07041 <span class="comment"> *</span>
<a name="l07042"></a>07042 <span class="comment"> * If @a depth is #svn_depth_empty, revert just @a path (if a</span>
<a name="l07043"></a>07043 <span class="comment"> * directory, then revert just the properties on that directory).</span>
<a name="l07044"></a>07044 <span class="comment"> * Else if #svn_depth_files, revert @a path and any files</span>
<a name="l07045"></a>07045 <span class="comment"> * directly under @a path if it is directory.  Else if</span>
<a name="l07046"></a>07046 <span class="comment"> * #svn_depth_immediates, revert all of the preceding plus</span>
<a name="l07047"></a>07047 <span class="comment"> * properties on immediate subdirectories; else if #svn_depth_infinity,</span>
<a name="l07048"></a>07048 <span class="comment"> * revert path and everything under it fully recursively.</span>
<a name="l07049"></a>07049 <span class="comment"> *</span>
<a name="l07050"></a>07050 <span class="comment"> * @a changelist_filter is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l07051"></a>07051 <span class="comment"> * names, used as a restrictive filter on items reverted; that is,</span>
<a name="l07052"></a>07052 <span class="comment"> * don&#39;t revert any item unless it&#39;s a member of one of those</span>
<a name="l07053"></a>07053 <span class="comment"> * changelists.  If @a changelist_filter is empty (or altogether @c NULL),</span>
<a name="l07054"></a>07054 <span class="comment"> * no changelist filtering occurs.</span>
<a name="l07055"></a>07055 <span class="comment"> *</span>
<a name="l07056"></a>07056 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton at</span>
<a name="l07057"></a>07057 <span class="comment"> * various points during the reversion process.  If it returns an</span>
<a name="l07058"></a>07058 <span class="comment"> * error (typically #SVN_ERR_CANCELLED), return that error</span>
<a name="l07059"></a>07059 <span class="comment"> * immediately.</span>
<a name="l07060"></a>07060 <span class="comment"> *</span>
<a name="l07061"></a>07061 <span class="comment"> * If @a use_commit_times is TRUE, then all reverted working-files</span>
<a name="l07062"></a>07062 <span class="comment"> * will have their timestamp set to the last-committed-time.  If</span>
<a name="l07063"></a>07063 <span class="comment"> * FALSE, the reverted working-files will be touched with the &#39;now&#39; time.</span>
<a name="l07064"></a>07064 <span class="comment"> *</span>
<a name="l07065"></a>07065 <span class="comment"> * For each item reverted, @a notify_func will be called with @a notify_baton</span>
<a name="l07066"></a>07066 <span class="comment"> * and the path of the reverted item. @a notify_func may be @c NULL if this</span>
<a name="l07067"></a>07067 <span class="comment"> * notification is not needed.</span>
<a name="l07068"></a>07068 <span class="comment"> *</span>
<a name="l07069"></a>07069 <span class="comment"> * If @a path is not under version control, return the error</span>
<a name="l07070"></a>07070 <span class="comment"> * #SVN_ERR_UNVERSIONED_RESOURCE.</span>
<a name="l07071"></a>07071 <span class="comment"> *</span>
<a name="l07072"></a>07072 <span class="comment"> * @since New in 1.7.</span>
<a name="l07073"></a>07073 <span class="comment"> */</span>
<a name="l07074"></a>07074 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07075"></a>07075 <a class="code" href="group__svn__wc.html#gaaae2c0d170fed186462868bdb83d1dcf" title="Revert changes to local_abspath.">svn_wc_revert4</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07076"></a>07076                <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07077"></a>07077                <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l07078"></a>07078                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l07079"></a>07079                <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l07080"></a>07080                <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07081"></a>07081                <span class="keywordtype">void</span> *cancel_baton,
<a name="l07082"></a>07082                <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l07083"></a>07083                <span class="keywordtype">void</span> *notify_baton,
<a name="l07084"></a>07084                apr_pool_t *scratch_pool);
<a name="l07085"></a>07085 <span class="comment"></span>
<a name="l07086"></a>07086 <span class="comment">/** Similar to svn_wc_revert4() but takes a relative path and access baton.</span>
<a name="l07087"></a>07087 <span class="comment"> *</span>
<a name="l07088"></a>07088 <span class="comment"> * @since New in 1.5.</span>
<a name="l07089"></a>07089 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l07090"></a>07090 <span class="comment"> */</span>
<a name="l07091"></a>07091 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07092"></a>07092 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07093"></a>07093 <a class="code" href="group__svn__wc.html#gac3acf6396c162b33e4842df433662314" title="Similar to svn_wc_revert4() but takes a relative path and access baton.">svn_wc_revert3</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07094"></a>07094                <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *parent_access,
<a name="l07095"></a>07095                <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l07096"></a>07096                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l07097"></a>07097                <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l07098"></a>07098                <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07099"></a>07099                <span class="keywordtype">void</span> *cancel_baton,
<a name="l07100"></a>07100                <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l07101"></a>07101                <span class="keywordtype">void</span> *notify_baton,
<a name="l07102"></a>07102                apr_pool_t *pool);
<a name="l07103"></a>07103 <span class="comment"></span>
<a name="l07104"></a>07104 <span class="comment">/**</span>
<a name="l07105"></a>07105 <span class="comment"> * Similar to svn_wc_revert3(), but with @a changelist_filter passed as @c</span>
<a name="l07106"></a>07106 <span class="comment"> * NULL, and @a depth set according to @a recursive: if @a recursive</span>
<a name="l07107"></a>07107 <span class="comment"> * is TRUE, @a depth is #svn_depth_infinity; if FALSE, @a depth is</span>
<a name="l07108"></a>07108 <span class="comment"> * #svn_depth_empty.</span>
<a name="l07109"></a>07109 <span class="comment"> *</span>
<a name="l07110"></a>07110 <span class="comment"> * @note Most APIs map @a recurse==FALSE to @a depth==svn_depth_files;</span>
<a name="l07111"></a>07111 <span class="comment"> * revert is deliberately different.</span>
<a name="l07112"></a>07112 <span class="comment"> *</span>
<a name="l07113"></a>07113 <span class="comment"> * @since New in 1.2.</span>
<a name="l07114"></a>07114 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.4 API.</span>
<a name="l07115"></a>07115 <span class="comment"> */</span>
<a name="l07116"></a>07116 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07117"></a>07117 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07118"></a>07118 <a class="code" href="group__svn__wc.html#gaa0b3f2d0d6603b376cb4043891c630ee" title="Similar to svn_wc_revert3(), but with changelist_filter passed as NULL, and depth set according to re...">svn_wc_revert2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07119"></a>07119                <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *parent_access,
<a name="l07120"></a>07120                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recursive,
<a name="l07121"></a>07121                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l07122"></a>07122                <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07123"></a>07123                <span class="keywordtype">void</span> *cancel_baton,
<a name="l07124"></a>07124                <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l07125"></a>07125                <span class="keywordtype">void</span> *notify_baton,
<a name="l07126"></a>07126                apr_pool_t *pool);
<a name="l07127"></a>07127 <span class="comment"></span>
<a name="l07128"></a>07128 <span class="comment">/**</span>
<a name="l07129"></a>07129 <span class="comment"> * Similar to svn_wc_revert2(), but takes an #svn_wc_notify_func_t instead.</span>
<a name="l07130"></a>07130 <span class="comment"> *</span>
<a name="l07131"></a>07131 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.1 API.</span>
<a name="l07132"></a>07132 <span class="comment"> */</span>
<a name="l07133"></a>07133 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07134"></a>07134 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07135"></a>07135 <a class="code" href="group__svn__wc.html#ga30293931c5ad5d6ba77c7c11a59cc912" title="Similar to svn_wc_revert2(), but takes an svn_wc_notify_func_t instead.">svn_wc_revert</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07136"></a>07136               <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *parent_access,
<a name="l07137"></a>07137               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> recursive,
<a name="l07138"></a>07138               <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l07139"></a>07139               <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07140"></a>07140               <span class="keywordtype">void</span> *cancel_baton,
<a name="l07141"></a>07141               <a class="code" href="group__svn__wc__notifications.html#ga77d705cbd8f4c23c0c29492f84f8f6c2" title="Similar to svn_wc_notify_func2_t, but takes the information as arguments instead of struct fields...">svn_wc_notify_func_t</a> notify_func,
<a name="l07142"></a>07142               <span class="keywordtype">void</span> *notify_baton,
<a name="l07143"></a>07143               apr_pool_t *pool);
<a name="l07144"></a>07144 <span class="comment"></span>
<a name="l07145"></a>07145 <span class="comment">/**</span>
<a name="l07146"></a>07146 <span class="comment"> * Restores a missing node, @a local_abspath using the @a wc_ctx. Records</span>
<a name="l07147"></a>07147 <span class="comment"> * the new last modified time of the file for status processing.</span>
<a name="l07148"></a>07148 <span class="comment"> *</span>
<a name="l07149"></a>07149 <span class="comment"> * If @a use_commit_times is TRUE, then set restored files&#39; timestamps</span>
<a name="l07150"></a>07150 <span class="comment"> * to their last-commit-times.</span>
<a name="l07151"></a>07151 <span class="comment"> *</span>
<a name="l07152"></a>07152 <span class="comment"> * Returns SVN_ERROR_WC_PATH_NOT_FOUND if LOCAL_ABSPATH is not versioned and</span>
<a name="l07153"></a>07153 <span class="comment"> * SVN_ERROR_WC_PATH_UNEXPECTED_STATUS if LOCAL_ABSPATH is in a status where</span>
<a name="l07154"></a>07154 <span class="comment"> * it can&#39;t be restored.</span>
<a name="l07155"></a>07155 <span class="comment"> *</span>
<a name="l07156"></a>07156 <span class="comment"> * @since New in 1.7.</span>
<a name="l07157"></a>07157 <span class="comment"> */</span>
<a name="l07158"></a>07158 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07159"></a>07159 <a class="code" href="group__svn__wc.html#ga5b5fd7f34e31327571a1620596a00256" title="Restores a missing node, local_abspath using the wc_ctx.">svn_wc_restore</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07160"></a>07160                <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07161"></a>07161                <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> use_commit_times,
<a name="l07162"></a>07162                apr_pool_t *scratch_pool);
<a name="l07163"></a>07163 
<a name="l07164"></a>07164 
<a name="l07165"></a>07165 <span class="comment">/* Tmp files */</span>
<a name="l07166"></a>07166 <span class="comment"></span>
<a name="l07167"></a>07167 <span class="comment">/** Create a unique temporary file in administrative tmp/ area of</span>
<a name="l07168"></a>07168 <span class="comment"> * directory @a path.  Return a handle in @a *fp and the path</span>
<a name="l07169"></a>07169 <span class="comment"> * in @a *new_name. Either @a fp or @a new_name can be NULL.</span>
<a name="l07170"></a>07170 <span class="comment"> *</span>
<a name="l07171"></a>07171 <span class="comment"> * The flags will be &lt;tt&gt;APR_WRITE | APR_CREATE | APR_EXCL&lt;/tt&gt; and</span>
<a name="l07172"></a>07172 <span class="comment"> * optionally @c APR_DELONCLOSE (if the @a delete_when argument is</span>
<a name="l07173"></a>07173 <span class="comment"> * set to #svn_io_file_del_on_close).</span>
<a name="l07174"></a>07174 <span class="comment"> *</span>
<a name="l07175"></a>07175 <span class="comment"> * This means that as soon as @a fp is closed, the tmp file will vanish.</span>
<a name="l07176"></a>07176 <span class="comment"> *</span>
<a name="l07177"></a>07177 <span class="comment"> * @since New in 1.4</span>
<a name="l07178"></a>07178 <span class="comment"> * @deprecated For compatibility with 1.6 API</span>
<a name="l07179"></a>07179 <span class="comment"> */</span>
<a name="l07180"></a>07180 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07181"></a>07181 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07182"></a>07182 <a class="code" href="group__svn__wc.html#ga6818b0d51ffe2cf8c53b19397e41ddbc" title="Create a unique temporary file in administrative tmp/ area of directory path.">svn_wc_create_tmp_file2</a>(apr_file_t **fp,
<a name="l07183"></a>07183                         <span class="keyword">const</span> <span class="keywordtype">char</span> **new_name,
<a name="l07184"></a>07184                         <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07185"></a>07185                         <a class="code" href="svn__io_8h.html#aa78fffc81af962281813070c753d7884" title="Used as an argument when creating temporary files to indicate when a file should be removed...">svn_io_file_del_t</a> delete_when,
<a name="l07186"></a>07186                         apr_pool_t *pool);
<a name="l07187"></a>07187 
<a name="l07188"></a>07188 <span class="comment"></span>
<a name="l07189"></a>07189 <span class="comment">/** Same as svn_wc_create_tmp_file2(), but with @a new_name set to @c NULL,</span>
<a name="l07190"></a>07190 <span class="comment"> * and without the ability to delete the file on pool cleanup.</span>
<a name="l07191"></a>07191 <span class="comment"> *</span>
<a name="l07192"></a>07192 <span class="comment"> * @deprecated For compatibility with 1.3 API</span>
<a name="l07193"></a>07193 <span class="comment"> */</span>
<a name="l07194"></a>07194 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07195"></a>07195 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07196"></a>07196 <a class="code" href="group__svn__wc.html#gae048d6d99e03b9f8abb0afb82864c241" title="Same as svn_wc_create_tmp_file2(), but with new_name set to NULL, and without the ability to delete t...">svn_wc_create_tmp_file</a>(apr_file_t **fp,
<a name="l07197"></a>07197                        <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07198"></a>07198                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> delete_on_close,
<a name="l07199"></a>07199                        apr_pool_t *pool);
<a name="l07200"></a>07200 
<a name="l07201"></a>07201 <span class="comment"></span>
<a name="l07202"></a>07202 <span class="comment">/**</span>
<a name="l07203"></a>07203 <span class="comment"> * @defgroup svn_wc_translate EOL conversion and keyword expansion</span>
<a name="l07204"></a>07204 <span class="comment"> * @{</span>
<a name="l07205"></a>07205 <span class="comment"> */</span>
<a name="l07206"></a>07206 
<a name="l07207"></a>07207 <span class="comment"></span>
<a name="l07208"></a>07208 <span class="comment">/** Set @a xlated_path to a translated copy of @a src</span>
<a name="l07209"></a>07209 <span class="comment"> * or to @a src itself if no translation is necessary.</span>
<a name="l07210"></a>07210 <span class="comment"> * That is, if @a versioned_file&#39;s properties indicate newline conversion or</span>
<a name="l07211"></a>07211 <span class="comment"> * keyword expansion, point @a *xlated_path to a copy of @a src</span>
<a name="l07212"></a>07212 <span class="comment"> * whose newlines and keywords are converted using the translation</span>
<a name="l07213"></a>07213 <span class="comment"> * as requested by @a flags.</span>
<a name="l07214"></a>07214 <span class="comment"> *</span>
<a name="l07215"></a>07215 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton to determine</span>
<a name="l07216"></a>07216 <span class="comment"> * if the client has canceled the operation.</span>
<a name="l07217"></a>07217 <span class="comment"> *</span>
<a name="l07218"></a>07218 <span class="comment"> * When translating to the normal form, inconsistent eol styles will be</span>
<a name="l07219"></a>07219 <span class="comment"> * repaired when appropriate for the given setting.  When translating</span>
<a name="l07220"></a>07220 <span class="comment"> * from normal form, no EOL repair is performed (consistency is assumed).</span>
<a name="l07221"></a>07221 <span class="comment"> * This behaviour can be overridden by specifying</span>
<a name="l07222"></a>07222 <span class="comment"> * #SVN_WC_TRANSLATE_FORCE_EOL_REPAIR.</span>
<a name="l07223"></a>07223 <span class="comment"> *</span>
<a name="l07224"></a>07224 <span class="comment"> * The caller can explicitly request a new file to be returned by setting the</span>
<a name="l07225"></a>07225 <span class="comment"> * #SVN_WC_TRANSLATE_FORCE_COPY flag in @a flags.</span>
<a name="l07226"></a>07226 <span class="comment"> *</span>
<a name="l07227"></a>07227 <span class="comment"> * This function is generally used to get a file that can be compared</span>
<a name="l07228"></a>07228 <span class="comment"> * meaningfully against @a versioned_file&#39;s text base, if</span>
<a name="l07229"></a>07229 <span class="comment"> * @c SVN_WC_TRANSLATE_TO_NF is specified, against @a versioned_file itself</span>
<a name="l07230"></a>07230 <span class="comment"> * if @c SVN_WC_TRANSLATE_FROM_NF is specified.</span>
<a name="l07231"></a>07231 <span class="comment"> *</span>
<a name="l07232"></a>07232 <span class="comment"> * If a new output file is created, it is created in the temp file area</span>
<a name="l07233"></a>07233 <span class="comment"> * belonging to @a versioned_file.  By default it will be deleted at pool</span>
<a name="l07234"></a>07234 <span class="comment"> * cleanup.  If @c SVN_WC_TRANSLATE_NO_OUTPUT_CLEANUP is specified, the</span>
<a name="l07235"></a>07235 <span class="comment"> * default pool cleanup handler to remove @a *xlated_path is not registered.</span>
<a name="l07236"></a>07236 <span class="comment"> * If the input file is returned as the output, its lifetime is not</span>
<a name="l07237"></a>07237 <span class="comment"> * specified.</span>
<a name="l07238"></a>07238 <span class="comment"> *</span>
<a name="l07239"></a>07239 <span class="comment"> * If an error is returned, the effect on @a *xlated_path is undefined.</span>
<a name="l07240"></a>07240 <span class="comment"> *</span>
<a name="l07241"></a>07241 <span class="comment"> * @since New in 1.4</span>
<a name="l07242"></a>07242 <span class="comment"> * @deprecated Provided for compatibility with the 1.6 API</span>
<a name="l07243"></a>07243 <span class="comment"> */</span>
<a name="l07244"></a>07244 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07245"></a>07245 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07246"></a>07246 <a class="code" href="group__svn__wc__translate.html#ga3572a920c814a44c8c0cc3fb33eeafd7" title="Set xlated_path to a translated copy of src or to src itself if no translation is necessary...">svn_wc_translated_file2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **xlated_path,
<a name="l07247"></a>07247                         <span class="keyword">const</span> <span class="keywordtype">char</span> *src,
<a name="l07248"></a>07248                         <span class="keyword">const</span> <span class="keywordtype">char</span> *versioned_file,
<a name="l07249"></a>07249                         <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07250"></a>07250                         apr_uint32_t flags,
<a name="l07251"></a>07251                         apr_pool_t *pool);
<a name="l07252"></a>07252 
<a name="l07253"></a>07253 <span class="comment"></span>
<a name="l07254"></a>07254 <span class="comment">/** Same as svn_wc_translated_file2, but will never clean up</span>
<a name="l07255"></a>07255 <span class="comment"> * temporary files.</span>
<a name="l07256"></a>07256 <span class="comment"> *</span>
<a name="l07257"></a>07257 <span class="comment"> * @deprecated Provided for compatibility with the 1.3 API</span>
<a name="l07258"></a>07258 <span class="comment"> */</span>
<a name="l07259"></a>07259 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07260"></a>07260 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07261"></a>07261 <a class="code" href="group__svn__wc__translate.html#ga1b25d91aa475be5585b64d3a711fd0a4" title="Same as svn_wc_translated_file2, but will never clean up temporary files.">svn_wc_translated_file</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **xlated_p,
<a name="l07262"></a>07262                        <span class="keyword">const</span> <span class="keywordtype">char</span> *vfile,
<a name="l07263"></a>07263                        <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07264"></a>07264                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> force_repair,
<a name="l07265"></a>07265                        apr_pool_t *pool);
<a name="l07266"></a>07266 
<a name="l07267"></a>07267 <span class="comment"></span>
<a name="l07268"></a>07268 <span class="comment">/** Returns a @a stream allocated in @a pool with access to the given</span>
<a name="l07269"></a>07269 <span class="comment"> * @a path taking the file properties from @a versioned_file using</span>
<a name="l07270"></a>07270 <span class="comment"> * @a adm_access.</span>
<a name="l07271"></a>07271 <span class="comment"> *</span>
<a name="l07272"></a>07272 <span class="comment"> * If @a flags includes #SVN_WC_TRANSLATE_FROM_NF, the stream will</span>
<a name="l07273"></a>07273 <span class="comment"> * translate from Normal Form to working copy form while writing to</span>
<a name="l07274"></a>07274 <span class="comment"> * @a path; stream read operations are not supported.</span>
<a name="l07275"></a>07275 <span class="comment"> * Conversely, if @a flags includes #SVN_WC_TRANSLATE_TO_NF, the stream will</span>
<a name="l07276"></a>07276 <span class="comment"> * translate from working copy form to Normal Form while reading from</span>
<a name="l07277"></a>07277 <span class="comment"> * @a path; stream write operations are not supported.</span>
<a name="l07278"></a>07278 <span class="comment"> *</span>
<a name="l07279"></a>07279 <span class="comment"> * The @a flags are the same constants as those used for</span>
<a name="l07280"></a>07280 <span class="comment"> * svn_wc_translated_file2().</span>
<a name="l07281"></a>07281 <span class="comment"> *</span>
<a name="l07282"></a>07282 <span class="comment"> * @since New in 1.5.</span>
<a name="l07283"></a>07283 <span class="comment"> * @deprecated Provided for compatibility with the 1.6 API.</span>
<a name="l07284"></a>07284 <span class="comment"> */</span>
<a name="l07285"></a>07285 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07286"></a>07286 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07287"></a>07287 <a class="code" href="group__svn__wc__translate.html#ga46d04c429bbb7ce66b6d8c24a2cdb9c1" title="Returns a stream allocated in pool with access to the given path taking the file properties from vers...">svn_wc_translated_stream</a>(<a class="code" href="group__svn__io__byte__streams.html#ga06d6291c397e63f895deb92a2c14e6af" title="An abstract stream of bytes--either incoming or outgoing or both.">svn_stream_t</a> **stream,
<a name="l07288"></a>07288                          <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07289"></a>07289                          <span class="keyword">const</span> <span class="keywordtype">char</span> *versioned_file,
<a name="l07290"></a>07290                          <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07291"></a>07291                          apr_uint32_t flags,
<a name="l07292"></a>07292                          apr_pool_t *pool);
<a name="l07293"></a>07293 
<a name="l07294"></a>07294 <span class="comment">/** @} */</span>
<a name="l07295"></a>07295 
<a name="l07296"></a>07296 <span class="comment"></span>
<a name="l07297"></a>07297 <span class="comment">/**</span>
<a name="l07298"></a>07298 <span class="comment"> * @defgroup svn_wc_deltas Text/Prop Deltas Using an Editor</span>
<a name="l07299"></a>07299 <span class="comment"> * @{</span>
<a name="l07300"></a>07300 <span class="comment"> */</span>
<a name="l07301"></a>07301 <span class="comment"></span>
<a name="l07302"></a>07302 <span class="comment">/** Send the local modifications for versioned file @a local_abspath (with</span>
<a name="l07303"></a>07303 <span class="comment"> * matching @a file_baton) through @a editor, then close @a file_baton</span>
<a name="l07304"></a>07304 <span class="comment"> * afterwards.  Use @a scratch_pool for any temporary allocation.</span>
<a name="l07305"></a>07305 <span class="comment"> *</span>
<a name="l07306"></a>07306 <span class="comment"> * If @a new_text_base_md5_checksum is non-NULL, set</span>
<a name="l07307"></a>07307 <span class="comment"> * @a *new_text_base_md5_checksum to the MD5 checksum of (@a local_abspath</span>
<a name="l07308"></a>07308 <span class="comment"> * translated to repository-normal form), allocated in @a result_pool.</span>
<a name="l07309"></a>07309 <span class="comment"> *</span>
<a name="l07310"></a>07310 <span class="comment"> * If @a new_text_base_sha1_checksum in non-NULL, store a copy of (@a</span>
<a name="l07311"></a>07311 <span class="comment"> * local_abspath translated to repository-normal form) in the pristine text</span>
<a name="l07312"></a>07312 <span class="comment"> * store, and set @a *new_text_base_sha1_checksum to its SHA-1 checksum.</span>
<a name="l07313"></a>07313 <span class="comment"> *</span>
<a name="l07314"></a>07314 <span class="comment"> * If @a fulltext, send the untranslated copy of @a local_abspath through</span>
<a name="l07315"></a>07315 <span class="comment"> * @a editor as full-text; else send it as svndiff against the current text</span>
<a name="l07316"></a>07316 <span class="comment"> * base.</span>
<a name="l07317"></a>07317 <span class="comment"> *</span>
<a name="l07318"></a>07318 <span class="comment"> * If sending a diff, and the recorded checksum for @a local_abspath&#39;s</span>
<a name="l07319"></a>07319 <span class="comment"> * text-base does not match the current actual checksum, then remove the tmp</span>
<a name="l07320"></a>07320 <span class="comment"> * copy (and set @a *tempfile to NULL if appropriate), and return the</span>
<a name="l07321"></a>07321 <span class="comment"> * error #SVN_ERR_WC_CORRUPT_TEXT_BASE.</span>
<a name="l07322"></a>07322 <span class="comment"> *</span>
<a name="l07323"></a>07323 <span class="comment"> * @note This is intended for use with both infix and postfix</span>
<a name="l07324"></a>07324 <span class="comment"> * text-delta styled editor drivers.</span>
<a name="l07325"></a>07325 <span class="comment"> *</span>
<a name="l07326"></a>07326 <span class="comment"> * @since New in 1.7.</span>
<a name="l07327"></a>07327 <span class="comment"> */</span>
<a name="l07328"></a>07328 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07329"></a>07329 <a class="code" href="group__svn__wc__deltas.html#gac29174fb00efc889b44eeac5d73eaad7" title="Send the local modifications for versioned file local_abspath (with matching file_baton) through edit...">svn_wc_transmit_text_deltas3</a>(<span class="keyword">const</span> <a class="code" href="structsvn__checksum__t.html" title="A generic checksum representation.">svn_checksum_t</a> **new_text_base_md5_checksum,
<a name="l07330"></a>07330                              <span class="keyword">const</span> <a class="code" href="structsvn__checksum__t.html" title="A generic checksum representation.">svn_checksum_t</a> **new_text_base_sha1_checksum,
<a name="l07331"></a>07331                              <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07332"></a>07332                              <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07333"></a>07333                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> fulltext,
<a name="l07334"></a>07334                              <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> *editor,
<a name="l07335"></a>07335                              <span class="keywordtype">void</span> *file_baton,
<a name="l07336"></a>07336                              apr_pool_t *result_pool,
<a name="l07337"></a>07337                              apr_pool_t *scratch_pool);
<a name="l07338"></a>07338 <span class="comment"></span>
<a name="l07339"></a>07339 <span class="comment">/** Similar to svn_wc_transmit_text_deltas3(), but with a relative path</span>
<a name="l07340"></a>07340 <span class="comment"> * and adm_access baton, and the checksum output is an MD5 digest instead of</span>
<a name="l07341"></a>07341 <span class="comment"> * two svn_checksum_t objects.</span>
<a name="l07342"></a>07342 <span class="comment"> *</span>
<a name="l07343"></a>07343 <span class="comment"> * If @a tempfile is non-NULL, make a copy of @a path with keywords</span>
<a name="l07344"></a>07344 <span class="comment"> * and eol translated to repository-normal form, and set @a *tempfile to the</span>
<a name="l07345"></a>07345 <span class="comment"> * absolute path to this copy, allocated in @a result_pool.  The copy will</span>
<a name="l07346"></a>07346 <span class="comment"> * be in the temporary-text-base directory.  Do not clean up the copy;</span>
<a name="l07347"></a>07347 <span class="comment"> * caller can do that.  (The purpose of handing back the tmp copy is that it</span>
<a name="l07348"></a>07348 <span class="comment"> * is usually about to become the new text base anyway, but the installation</span>
<a name="l07349"></a>07349 <span class="comment"> * of the new text base is outside the scope of this function.)</span>
<a name="l07350"></a>07350 <span class="comment"> *</span>
<a name="l07351"></a>07351 <span class="comment"> * @since New in 1.4.</span>
<a name="l07352"></a>07352 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l07353"></a>07353 <span class="comment"> */</span>
<a name="l07354"></a>07354 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07355"></a>07355 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07356"></a>07356 <a class="code" href="group__svn__wc__deltas.html#gab0424358160c6b3e8c2ad0a68e6520dd" title="Similar to svn_wc_transmit_text_deltas3(), but with a relative path and adm_access baton...">svn_wc_transmit_text_deltas2</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> **tempfile,
<a name="l07357"></a>07357                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> digest[],
<a name="l07358"></a>07358                              <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07359"></a>07359                              <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07360"></a>07360                              <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> fulltext,
<a name="l07361"></a>07361                              <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> *editor,
<a name="l07362"></a>07362                              <span class="keywordtype">void</span> *file_baton,
<a name="l07363"></a>07363                              apr_pool_t *pool);
<a name="l07364"></a>07364 <span class="comment"></span>
<a name="l07365"></a>07365 <span class="comment">/** Similar to svn_wc_transmit_text_deltas2(), but with @a digest set to NULL.</span>
<a name="l07366"></a>07366 <span class="comment"> *</span>
<a name="l07367"></a>07367 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.3 API.</span>
<a name="l07368"></a>07368 <span class="comment"> */</span>
<a name="l07369"></a>07369 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07370"></a>07370 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07371"></a>07371 <a class="code" href="group__svn__wc__deltas.html#ga2f249ff77f4bb2162922a885ed22b0b1" title="Similar to svn_wc_transmit_text_deltas2(), but with digest set to NULL.">svn_wc_transmit_text_deltas</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07372"></a>07372                             <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07373"></a>07373                             <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> fulltext,
<a name="l07374"></a>07374                             <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> *editor,
<a name="l07375"></a>07375                             <span class="keywordtype">void</span> *file_baton,
<a name="l07376"></a>07376                             <span class="keyword">const</span> <span class="keywordtype">char</span> **tempfile,
<a name="l07377"></a>07377                             apr_pool_t *pool);
<a name="l07378"></a>07378 
<a name="l07379"></a>07379 <span class="comment"></span>
<a name="l07380"></a>07380 <span class="comment">/** Given a @a local_abspath, transmit all local property</span>
<a name="l07381"></a>07381 <span class="comment"> * modifications using the appropriate @a editor method (in conjunction</span>
<a name="l07382"></a>07382 <span class="comment"> * with @a baton). Use @a scratch_pool for any temporary allocation.</span>
<a name="l07383"></a>07383 <span class="comment"> *</span>
<a name="l07384"></a>07384 <span class="comment"> * @since New in 1.7.</span>
<a name="l07385"></a>07385 <span class="comment"> */</span>
<a name="l07386"></a>07386 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07387"></a>07387 <a class="code" href="group__svn__wc__deltas.html#gac09218deb5bc4de242d34f26f74cb6bd" title="Given a local_abspath, transmit all local property modifications using the appropriate editor method ...">svn_wc_transmit_prop_deltas2</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07388"></a>07388                              <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07389"></a>07389                              <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> *editor,
<a name="l07390"></a>07390                              <span class="keywordtype">void</span> *baton,
<a name="l07391"></a>07391                              apr_pool_t *scratch_pool);
<a name="l07392"></a>07392 
<a name="l07393"></a>07393 <span class="comment"></span>
<a name="l07394"></a>07394 <span class="comment">/** Similar to svn_wc_transmit_prop_deltas2(), but with a relative path,</span>
<a name="l07395"></a>07395 <span class="comment"> * adm_access baton and tempfile.</span>
<a name="l07396"></a>07396 <span class="comment"> *</span>
<a name="l07397"></a>07397 <span class="comment"> * If a temporary file remains after this function is finished, the</span>
<a name="l07398"></a>07398 <span class="comment"> * path to that file is returned in @a *tempfile (so the caller can</span>
<a name="l07399"></a>07399 <span class="comment"> * clean this up if it wishes to do so).</span>
<a name="l07400"></a>07400 <span class="comment"> *</span>
<a name="l07401"></a>07401 <span class="comment"> * @note Starting version 1.5, no tempfile will ever be returned</span>
<a name="l07402"></a>07402 <span class="comment"> *       anymore.  If @a *tempfile is passed, its value is set to @c NULL.</span>
<a name="l07403"></a>07403 <span class="comment"> *</span>
<a name="l07404"></a>07404 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l07405"></a>07405 <span class="comment"> */</span>
<a name="l07406"></a>07406 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07407"></a>07407 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07408"></a>07408 <a class="code" href="group__svn__wc__deltas.html#gaf58e3f11ca335ba128f34227270bb309" title="Similar to svn_wc_transmit_prop_deltas2(), but with a relative path, adm_access baton and tempfile...">svn_wc_transmit_prop_deltas</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07409"></a>07409                             <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07410"></a>07410                             <span class="keyword">const</span> <a class="code" href="structsvn__wc__entry__t.html" title="A working copy entry -- that is, revision control information about one versioned entity...">svn_wc_entry_t</a> *entry,
<a name="l07411"></a>07411                             <span class="keyword">const</span> <a class="code" href="structsvn__delta__editor__t.html" title="A structure full of callback functions the delta source will invoke as it produces the delta...">svn_delta_editor_t</a> *editor,
<a name="l07412"></a>07412                             <span class="keywordtype">void</span> *baton,
<a name="l07413"></a>07413                             <span class="keyword">const</span> <span class="keywordtype">char</span> **tempfile,
<a name="l07414"></a>07414                             apr_pool_t *pool);
<a name="l07415"></a>07415 <span class="comment"></span>
<a name="l07416"></a>07416 <span class="comment">/** @} */</span>
<a name="l07417"></a>07417 
<a name="l07418"></a>07418 <span class="comment"></span>
<a name="l07419"></a>07419 <span class="comment">/**</span>
<a name="l07420"></a>07420 <span class="comment"> * @defgroup svn_wc_ignore Ignoring unversioned files and directories</span>
<a name="l07421"></a>07421 <span class="comment"> * @{</span>
<a name="l07422"></a>07422 <span class="comment"> */</span>
<a name="l07423"></a>07423 <span class="comment"></span>
<a name="l07424"></a>07424 <span class="comment">/** Get the run-time configured list of ignore patterns from the</span>
<a name="l07425"></a>07425 <span class="comment"> * #svn_config_t&#39;s in the @a config hash, and store them in @a *patterns.</span>
<a name="l07426"></a>07426 <span class="comment"> * Allocate @a *patterns and its contents in @a pool.</span>
<a name="l07427"></a>07427 <span class="comment"> */</span>
<a name="l07428"></a>07428 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07429"></a>07429 <a class="code" href="group__svn__wc__ignore.html#ga5d7d722168944f4e2e2f4517efae8337" title="Get the run-time configured list of ignore patterns from the svn_config_t&#39;s in the config hash...">svn_wc_get_default_ignores</a>(apr_array_header_t **patterns,
<a name="l07430"></a>07430                            apr_hash_t *config,
<a name="l07431"></a>07431                            apr_pool_t *pool);
<a name="l07432"></a>07432 <span class="comment"></span>
<a name="l07433"></a>07433 <span class="comment">/** Get the list of ignore patterns from the #svn_config_t&#39;s in the</span>
<a name="l07434"></a>07434 <span class="comment"> * @a config hash and the local ignore patterns from the directory</span>
<a name="l07435"></a>07435 <span class="comment"> * at @a local_abspath, using @a wc_ctx, and store them in @a *patterns.</span>
<a name="l07436"></a>07436 <span class="comment"> * Allocate @a *patterns and its contents in @a result_pool, use @a</span>
<a name="l07437"></a>07437 <span class="comment"> * scratch_pool for temporary allocations.</span>
<a name="l07438"></a>07438 <span class="comment"> *</span>
<a name="l07439"></a>07439 <span class="comment"> * @since New in 1.7.</span>
<a name="l07440"></a>07440 <span class="comment"> */</span>
<a name="l07441"></a>07441 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07442"></a>07442 <a class="code" href="group__svn__wc__ignore.html#ga19ad3e9ab681d76c88a1a2afe3390c3d" title="Get the list of ignore patterns from the svn_config_t&#39;s in the config hash and the local ignore patte...">svn_wc_get_ignores2</a>(apr_array_header_t **patterns,
<a name="l07443"></a>07443                     <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07444"></a>07444                     <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07445"></a>07445                     apr_hash_t *config,
<a name="l07446"></a>07446                     apr_pool_t *result_pool,
<a name="l07447"></a>07447                     apr_pool_t *scratch_pool);
<a name="l07448"></a>07448 <span class="comment"></span>
<a name="l07449"></a>07449 <span class="comment">/** Similar to svn_wc_get_ignores2(), but with a #svn_wc_adm_access_t</span>
<a name="l07450"></a>07450 <span class="comment"> * parameter in place of #svn_wc_context_t and @c local_abspath parameters.</span>
<a name="l07451"></a>07451 <span class="comment"> *</span>
<a name="l07452"></a>07452 <span class="comment"> * @since New in 1.3.</span>
<a name="l07453"></a>07453 <span class="comment"> * @deprecated Provided for backwards compatibility with the 1.6 API.</span>
<a name="l07454"></a>07454 <span class="comment"> */</span>
<a name="l07455"></a>07455 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07456"></a>07456 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07457"></a>07457 <a class="code" href="group__svn__wc__ignore.html#ga64047f3fbcf56a1dfb8a1f99d71e9309" title="Similar to svn_wc_get_ignores2(), but with a svn_wc_adm_access_t parameter in place of svn_wc_context...">svn_wc_get_ignores</a>(apr_array_header_t **patterns,
<a name="l07458"></a>07458                    apr_hash_t *config,
<a name="l07459"></a>07459                    <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07460"></a>07460                    apr_pool_t *pool);
<a name="l07461"></a>07461 <span class="comment"></span>
<a name="l07462"></a>07462 <span class="comment">/** Return TRUE iff @a str matches any of the elements of @a list, a</span>
<a name="l07463"></a>07463 <span class="comment"> * list of zero or more ignore patterns.</span>
<a name="l07464"></a>07464 <span class="comment"> *</span>
<a name="l07465"></a>07465 <span class="comment"> * @since New in 1.5.</span>
<a name="l07466"></a>07466 <span class="comment"> */</span>
<a name="l07467"></a>07467 <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a>
<a name="l07468"></a>07468 <a class="code" href="group__svn__wc__ignore.html#gaff2f847c7de4b107323436d924841ec3" title="Return TRUE iff str matches any of the elements of list, a list of zero or more ignore patterns...">svn_wc_match_ignore_list</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *str,
<a name="l07469"></a>07469                          <span class="keyword">const</span> apr_array_header_t *list,
<a name="l07470"></a>07470                          apr_pool_t *pool);
<a name="l07471"></a>07471 <span class="comment"></span>
<a name="l07472"></a>07472 <span class="comment">/** @} */</span>
<a name="l07473"></a>07473 
<a name="l07474"></a>07474 <span class="comment"></span>
<a name="l07475"></a>07475 <span class="comment">/**</span>
<a name="l07476"></a>07476 <span class="comment"> * @defgroup svn_wc_repos_locks Repository locks</span>
<a name="l07477"></a>07477 <span class="comment"> * @{</span>
<a name="l07478"></a>07478 <span class="comment"> */</span>
<a name="l07479"></a>07479 <span class="comment"></span>
<a name="l07480"></a>07480 <span class="comment">/** Add @a lock to the working copy for @a local_abspath.  If @a</span>
<a name="l07481"></a>07481 <span class="comment"> * local_abspath is read-only, due to locking properties, make it writable.</span>
<a name="l07482"></a>07482 <span class="comment"> * Perform temporary allocations in @a scratch_pool.</span>
<a name="l07483"></a>07483 <span class="comment"> *</span>
<a name="l07484"></a>07484 <span class="comment"> * @since New in 1.7.</span>
<a name="l07485"></a>07485 <span class="comment"> */</span>
<a name="l07486"></a>07486 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07487"></a>07487 <a class="code" href="group__svn__wc__repos__locks.html#gaaaffecc4db721903d194064ca31acafd" title="Add lock to the working copy for local_abspath.">svn_wc_add_lock2</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07488"></a>07488                  <span class="keyword">const</span> <span class="keywordtype">char</span> *abspath,
<a name="l07489"></a>07489                  <span class="keyword">const</span> <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *lock,
<a name="l07490"></a>07490                  apr_pool_t *scratch_pool);
<a name="l07491"></a>07491 <span class="comment"></span>
<a name="l07492"></a>07492 <span class="comment">/**</span>
<a name="l07493"></a>07493 <span class="comment"> * Similar to svn_wc_add_lock2(), but with a #svn_wc_adm_access_t /</span>
<a name="l07494"></a>07494 <span class="comment"> * relative path parameter pair.</span>
<a name="l07495"></a>07495 <span class="comment"> *</span>
<a name="l07496"></a>07496 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l07497"></a>07497 <span class="comment"> * @since New in 1.2.</span>
<a name="l07498"></a>07498 <span class="comment"> */</span>
<a name="l07499"></a>07499 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07500"></a>07500 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07501"></a>07501 <a class="code" href="group__svn__wc__repos__locks.html#gaccb54000ef3a6efbd5a886ff28c579de" title="Similar to svn_wc_add_lock2(), but with a svn_wc_adm_access_t / relative path parameter pair...">svn_wc_add_lock</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07502"></a>07502                 <span class="keyword">const</span> <a class="code" href="structsvn__lock__t.html" title="A lock object, for client &amp; server to share.">svn_lock_t</a> *lock,
<a name="l07503"></a>07503                 <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07504"></a>07504                 apr_pool_t *pool);
<a name="l07505"></a>07505 <span class="comment"></span>
<a name="l07506"></a>07506 <span class="comment">/** Remove any lock from @a local_abspath.  If @a local_abspath has a</span>
<a name="l07507"></a>07507 <span class="comment"> * lock and the locking so specifies, make the file read-only.  Don&#39;t</span>
<a name="l07508"></a>07508 <span class="comment"> * return an error if @a local_abspath didn&#39;t have a lock.  Perform temporary</span>
<a name="l07509"></a>07509 <span class="comment"> * allocations in @a scratch_pool.</span>
<a name="l07510"></a>07510 <span class="comment"> *</span>
<a name="l07511"></a>07511 <span class="comment"> * @since New in 1.7.</span>
<a name="l07512"></a>07512 <span class="comment"> */</span>
<a name="l07513"></a>07513 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07514"></a>07514 <a class="code" href="group__svn__wc__repos__locks.html#ga2749a154d52021bfab4755087e589c61" title="Remove any lock from local_abspath.">svn_wc_remove_lock2</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07515"></a>07515                     <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07516"></a>07516                     apr_pool_t *scratch_pool);
<a name="l07517"></a>07517 <span class="comment"></span>
<a name="l07518"></a>07518 <span class="comment">/**</span>
<a name="l07519"></a>07519 <span class="comment"> * Similar to svn_wc_remove_lock2(), but with a #svn_wc_adm_access_t /</span>
<a name="l07520"></a>07520 <span class="comment"> * relative path parameter pair.</span>
<a name="l07521"></a>07521 <span class="comment"> *</span>
<a name="l07522"></a>07522 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l07523"></a>07523 <span class="comment"> * @since New in 1.2.</span>
<a name="l07524"></a>07524 <span class="comment"> */</span>
<a name="l07525"></a>07525 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07526"></a>07526 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07527"></a>07527 <a class="code" href="group__svn__wc__repos__locks.html#ga2b82fac0df9a0adac727b03ad2d2d48a" title="Similar to svn_wc_remove_lock2(), but with a svn_wc_adm_access_t / relative path parameter pair...">svn_wc_remove_lock</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07528"></a>07528                    <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07529"></a>07529                    apr_pool_t *pool);
<a name="l07530"></a>07530 <span class="comment"></span>
<a name="l07531"></a>07531 <span class="comment">/** @} */</span>
<a name="l07532"></a>07532 
<a name="l07533"></a>07533 <span class="comment"></span>
<a name="l07534"></a>07534 <span class="comment">/** A structure to report a summary of a working copy, including the</span>
<a name="l07535"></a>07535 <span class="comment"> * mix of revisions found within it, whether any parts are switched or</span>
<a name="l07536"></a>07536 <span class="comment"> * locally modified, and whether it is a sparse checkout.</span>
<a name="l07537"></a>07537 <span class="comment"> *</span>
<a name="l07538"></a>07538 <span class="comment"> * @note Fields may be added to the end of this structure in future</span>
<a name="l07539"></a>07539 <span class="comment"> * versions.  Therefore, to preserve binary compatibility, users</span>
<a name="l07540"></a>07540 <span class="comment"> * should not directly allocate structures of this type.</span>
<a name="l07541"></a>07541 <span class="comment"> *</span>
<a name="l07542"></a>07542 <span class="comment"> * @since New in 1.4</span>
<a name="l07543"></a>07543 <span class="comment"> */</span>
<a name="l07544"></a><a class="code" href="structsvn__wc__revision__status__t.html">07544</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structsvn__wc__revision__status__t.html" title="A structure to report a summary of a working copy, including the mix of revisions found within it...">svn_wc_revision_status_t</a>
<a name="l07545"></a>07545 {
<a name="l07546"></a><a class="code" href="structsvn__wc__revision__status__t.html#a91d4cfeee44fba7df2e795cede80f551">07546</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__wc__revision__status__t.html#a91d4cfeee44fba7df2e795cede80f551" title="Lowest revision found.">min_rev</a>;   <span class="comment">/**&lt; Lowest revision found */</span>
<a name="l07547"></a><a class="code" href="structsvn__wc__revision__status__t.html#a7128ba74d26761f87aab2d1510391271">07547</a>   <a class="code" href="svn__types_8h.html#af16427ed53d30f27da225c56552d2a89" title="About Special Files in Subversion.">svn_revnum_t</a> <a class="code" href="structsvn__wc__revision__status__t.html#a7128ba74d26761f87aab2d1510391271" title="Highest revision found.">max_rev</a>;   <span class="comment">/**&lt; Highest revision found */</span>
<a name="l07548"></a>07548 
<a name="l07549"></a><a class="code" href="structsvn__wc__revision__status__t.html#ab877a6bcd75687048f5f6fdc8d396b4c">07549</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__revision__status__t.html#ab877a6bcd75687048f5f6fdc8d396b4c" title="Is anything switched?">switched</a>; <span class="comment">/**&lt; Is anything switched? */</span>
<a name="l07550"></a><a class="code" href="structsvn__wc__revision__status__t.html#af1f2b458281ebec2b41a510f619abcf2">07550</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__revision__status__t.html#af1f2b458281ebec2b41a510f619abcf2" title="Is anything modified?">modified</a>; <span class="comment">/**&lt; Is anything modified? */</span>
<a name="l07551"></a>07551 <span class="comment"></span>
<a name="l07552"></a>07552 <span class="comment">  /** Whether any WC paths are at a depth other than #svn_depth_infinity.</span>
<a name="l07553"></a>07553 <span class="comment">   * @since New in 1.5.</span>
<a name="l07554"></a>07554 <span class="comment">   */</span>
<a name="l07555"></a><a class="code" href="structsvn__wc__revision__status__t.html#a9dfd6d6008e8805dd3502099cd3c9119">07555</a>   <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> <a class="code" href="structsvn__wc__revision__status__t.html#a9dfd6d6008e8805dd3502099cd3c9119" title="Whether any WC paths are at a depth other than svn_depth_infinity.">sparse_checkout</a>;
<a name="l07556"></a>07556 } <a class="code" href="group__svn__wc.html#ga7afb4e33a741065b8b079325240589ea" title="A structure to report a summary of a working copy, including the mix of revisions found within it...">svn_wc_revision_status_t</a>;
<a name="l07557"></a>07557 <span class="comment"></span>
<a name="l07558"></a>07558 <span class="comment">/** Set @a *result_p to point to a new #svn_wc_revision_status_t structure</span>
<a name="l07559"></a>07559 <span class="comment"> * containing a summary of the revision range and status of the working copy</span>
<a name="l07560"></a>07560 <span class="comment"> * at @a local_abspath (not including &quot;externals&quot;).  @a local_abspath must</span>
<a name="l07561"></a>07561 <span class="comment"> * be absolute. Return SVN_ERR_WC_PATH_NOT_FOUND if @a local_abspath is not</span>
<a name="l07562"></a>07562 <span class="comment"> * a working copy path.</span>
<a name="l07563"></a>07563 <span class="comment"> *</span>
<a name="l07564"></a>07564 <span class="comment"> * Set @a (*result_p)-&gt;min_rev and @a (*result_p)-&gt;max_rev respectively to the</span>
<a name="l07565"></a>07565 <span class="comment"> * lowest and highest revision numbers in the working copy.  If @a committed</span>
<a name="l07566"></a>07566 <span class="comment"> * is TRUE, summarize the last-changed revisions, else the base revisions.</span>
<a name="l07567"></a>07567 <span class="comment"> *</span>
<a name="l07568"></a>07568 <span class="comment"> * Set @a (*result_p)-&gt;switched to indicate whether any item in the WC is</span>
<a name="l07569"></a>07569 <span class="comment"> * switched relative to its parent.  If @a trail_url is non-NULL, use it to</span>
<a name="l07570"></a>07570 <span class="comment"> * determine if @a local_abspath itself is switched.  It should be any trailing</span>
<a name="l07571"></a>07571 <span class="comment"> * portion of @a local_abspath&#39;s expected URL, long enough to include any parts</span>
<a name="l07572"></a>07572 <span class="comment"> * that the caller considers might be changed by a switch.  If it does not</span>
<a name="l07573"></a>07573 <span class="comment"> * match the end of @a local_abspath&#39;s actual URL, then report a &quot;switched&quot;</span>
<a name="l07574"></a>07574 <span class="comment"> * status.</span>
<a name="l07575"></a>07575 <span class="comment"> *</span>
<a name="l07576"></a>07576 <span class="comment"> * Set @a (*result_p)-&gt;modified to indicate whether any item is locally</span>
<a name="l07577"></a>07577 <span class="comment"> * modified.</span>
<a name="l07578"></a>07578 <span class="comment"> *</span>
<a name="l07579"></a>07579 <span class="comment"> * If @a cancel_func is non-NULL, call it with @a cancel_baton to determine</span>
<a name="l07580"></a>07580 <span class="comment"> * if the client has canceled the operation.</span>
<a name="l07581"></a>07581 <span class="comment"> *</span>
<a name="l07582"></a>07582 <span class="comment"> * Allocate *result_p in @a result_pool, use @a scratch_pool for temporary</span>
<a name="l07583"></a>07583 <span class="comment"> * allocations.</span>
<a name="l07584"></a>07584 <span class="comment"> *</span>
<a name="l07585"></a>07585 <span class="comment"> * @a wc_ctx should be a valid working copy context.</span>
<a name="l07586"></a>07586 <span class="comment"> *</span>
<a name="l07587"></a>07587 <span class="comment"> * @since New in 1.7</span>
<a name="l07588"></a>07588 <span class="comment"> */</span>
<a name="l07589"></a>07589 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07590"></a>07590 <a class="code" href="group__svn__wc.html#gaaa0081a19ffa8b8f80d09951bca432c2" title="Set *result_p to point to a new svn_wc_revision_status_t structure containing a summary of the revisi...">svn_wc_revision_status2</a>(<a class="code" href="structsvn__wc__revision__status__t.html" title="A structure to report a summary of a working copy, including the mix of revisions found within it...">svn_wc_revision_status_t</a> **result_p,
<a name="l07591"></a>07591                         <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07592"></a>07592                         <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07593"></a>07593                         <span class="keyword">const</span> <span class="keywordtype">char</span> *trail_url,
<a name="l07594"></a>07594                         <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> committed,
<a name="l07595"></a>07595                         <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07596"></a>07596                         <span class="keywordtype">void</span> *cancel_baton,
<a name="l07597"></a>07597                         apr_pool_t *result_pool,
<a name="l07598"></a>07598                         apr_pool_t *scratch_pool);
<a name="l07599"></a>07599 
<a name="l07600"></a>07600 <span class="comment"></span>
<a name="l07601"></a>07601 <span class="comment">/** Similar to svn_wc_revision_status2(), but with a (possibly) local</span>
<a name="l07602"></a>07602 <span class="comment"> * path and no wc_ctx parameter.</span>
<a name="l07603"></a>07603 <span class="comment"> *</span>
<a name="l07604"></a>07604 <span class="comment"> * @since New in 1.4.</span>
<a name="l07605"></a>07605 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l07606"></a>07606 <span class="comment"> */</span>
<a name="l07607"></a>07607 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07608"></a>07608 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07609"></a>07609 <a class="code" href="group__svn__wc.html#ga6401b9142564d0ad162cae5cc0403d7f" title="Similar to svn_wc_revision_status2(), but with a (possibly) local path and no wc_ctx parameter...">svn_wc_revision_status</a>(<a class="code" href="structsvn__wc__revision__status__t.html" title="A structure to report a summary of a working copy, including the mix of revisions found within it...">svn_wc_revision_status_t</a> **result_p,
<a name="l07610"></a>07610                        <span class="keyword">const</span> <span class="keywordtype">char</span> *wc_path,
<a name="l07611"></a>07611                        <span class="keyword">const</span> <span class="keywordtype">char</span> *trail_url,
<a name="l07612"></a>07612                        <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> committed,
<a name="l07613"></a>07613                        <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07614"></a>07614                        <span class="keywordtype">void</span> *cancel_baton,
<a name="l07615"></a>07615                        apr_pool_t *pool);
<a name="l07616"></a>07616 
<a name="l07617"></a>07617 <span class="comment"></span>
<a name="l07618"></a>07618 <span class="comment">/**</span>
<a name="l07619"></a>07619 <span class="comment"> * Set @a local_abspath&#39;s &#39;changelist&#39; attribute to @a changelist iff</span>
<a name="l07620"></a>07620 <span class="comment"> * @a changelist is not @c NULL; otherwise, remove any current</span>
<a name="l07621"></a>07621 <span class="comment"> * changelist assignment from @a local_abspath.  @a changelist may not</span>
<a name="l07622"></a>07622 <span class="comment"> * be the empty string.  Recurse to @a depth.</span>
<a name="l07623"></a>07623 <span class="comment"> *</span>
<a name="l07624"></a>07624 <span class="comment"> * @a changelist_filter is an array of &lt;tt&gt;const char *&lt;/tt&gt; changelist</span>
<a name="l07625"></a>07625 <span class="comment"> * names, used as a restrictive filter on items whose changelist</span>
<a name="l07626"></a>07626 <span class="comment"> * assignments are adjusted; that is, don&#39;t tweak the changeset of any</span>
<a name="l07627"></a>07627 <span class="comment"> * item unless it&#39;s currently a member of one of those changelists.</span>
<a name="l07628"></a>07628 <span class="comment"> * If @a changelist_filter is empty (or altogether @c NULL), no changelist</span>
<a name="l07629"></a>07629 <span class="comment"> * filtering occurs.</span>
<a name="l07630"></a>07630 <span class="comment"> *</span>
<a name="l07631"></a>07631 <span class="comment"> * If @a cancel_func is not @c NULL, call it with @a cancel_baton to</span>
<a name="l07632"></a>07632 <span class="comment"> * determine if the client has canceled the operation.</span>
<a name="l07633"></a>07633 <span class="comment"> *</span>
<a name="l07634"></a>07634 <span class="comment"> * If @a notify_func is not @c NULL, call it with @a notify_baton to</span>
<a name="l07635"></a>07635 <span class="comment"> * report the change (using notification types</span>
<a name="l07636"></a>07636 <span class="comment"> * #svn_wc_notify_changelist_set and #svn_wc_notify_changelist_clear).</span>
<a name="l07637"></a>07637 <span class="comment"> *</span>
<a name="l07638"></a>07638 <span class="comment"> * Use @a scratch_pool for temporary allocations.</span>
<a name="l07639"></a>07639 <span class="comment"> *</span>
<a name="l07640"></a>07640 <span class="comment"> * @note For now, directories are NOT allowed to be associated with</span>
<a name="l07641"></a>07641 <span class="comment"> * changelists; there is confusion about whether they should behave</span>
<a name="l07642"></a>07642 <span class="comment"> * as depth-0 or depth-infinity objects.  If @a local_abspath is a directory,</span>
<a name="l07643"></a>07643 <span class="comment"> * return an error.</span>
<a name="l07644"></a>07644 <span class="comment"> *</span>
<a name="l07645"></a>07645 <span class="comment"> * @note This metadata is purely a client-side &quot;bookkeeping&quot;</span>
<a name="l07646"></a>07646 <span class="comment"> * convenience, and is entirely managed by the working copy.</span>
<a name="l07647"></a>07647 <span class="comment"> *</span>
<a name="l07648"></a>07648 <span class="comment"> * @since New in 1.7.</span>
<a name="l07649"></a>07649 <span class="comment"> */</span>
<a name="l07650"></a>07650 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07651"></a>07651 <a class="code" href="group__svn__wc.html#ga0234016e89a6666f503e84fcbb21de6c" title="Set local_abspath&#39;s &#39;changelist&#39; attribute to changelist iff changelist is not NULL; otherwise...">svn_wc_set_changelist2</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07652"></a>07652                        <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07653"></a>07653                        <span class="keyword">const</span> <span class="keywordtype">char</span> *changelist,
<a name="l07654"></a>07654                        <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l07655"></a>07655                        <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l07656"></a>07656                        <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07657"></a>07657                        <span class="keywordtype">void</span> *cancel_baton,
<a name="l07658"></a>07658                        <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l07659"></a>07659                        <span class="keywordtype">void</span> *notify_baton,
<a name="l07660"></a>07660                        apr_pool_t *scratch_pool);
<a name="l07661"></a>07661 <span class="comment"></span>
<a name="l07662"></a>07662 <span class="comment">/** Similar to svn_wc_set_changelist2(), but with an access baton and</span>
<a name="l07663"></a>07663 <span class="comment"> * relative path.</span>
<a name="l07664"></a>07664 <span class="comment"> *</span>
<a name="l07665"></a>07665 <span class="comment"> * @since New in 1.5.</span>
<a name="l07666"></a>07666 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l07667"></a>07667 <span class="comment"> */</span>
<a name="l07668"></a>07668 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07669"></a>07669 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07670"></a>07670 <a class="code" href="group__svn__wc.html#gaad29afe2a97824e108b08567d5f8a143" title="Similar to svn_wc_set_changelist2(), but with an access baton and relative path.">svn_wc_set_changelist</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07671"></a>07671                       <span class="keyword">const</span> <span class="keywordtype">char</span> *changelist,
<a name="l07672"></a>07672                       <a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *adm_access,
<a name="l07673"></a>07673                       <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07674"></a>07674                       <span class="keywordtype">void</span> *cancel_baton,
<a name="l07675"></a>07675                       <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l07676"></a>07676                       <span class="keywordtype">void</span> *notify_baton,
<a name="l07677"></a>07677                       apr_pool_t *pool);
<a name="l07678"></a>07678 
<a name="l07679"></a>07679 
<a name="l07680"></a>07680 <span class="comment"></span>
<a name="l07681"></a>07681 <span class="comment">/**</span>
<a name="l07682"></a>07682 <span class="comment"> * The callback type used by svn_client_get_changelists().</span>
<a name="l07683"></a>07683 <span class="comment"> *</span>
<a name="l07684"></a>07684 <span class="comment"> * On each invocation, @a path is a newly discovered member of the</span>
<a name="l07685"></a>07685 <span class="comment"> * changelist, and @a baton is a private function closure.</span>
<a name="l07686"></a>07686 <span class="comment"> *</span>
<a name="l07687"></a>07687 <span class="comment"> * @since New in 1.5.</span>
<a name="l07688"></a>07688 <span class="comment"> */</span>
<a name="l07689"></a><a class="code" href="group__svn__wc.html#gaae18ec52a5dadbfa1f56a67cd70c0bfc">07689</a> <span class="keyword">typedef</span> <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *(*svn_changelist_receiver_t) (<span class="keywordtype">void</span> *baton,
<a name="l07690"></a>07690                                                    <span class="keyword">const</span> <span class="keywordtype">char</span> *path,
<a name="l07691"></a>07691                                                    <span class="keyword">const</span> <span class="keywordtype">char</span> *changelist,
<a name="l07692"></a>07692                                                    apr_pool_t *pool);
<a name="l07693"></a>07693 
<a name="l07694"></a>07694 
<a name="l07695"></a>07695 <span class="comment">/* @since New in 1.7.</span>
<a name="l07696"></a>07696 <span class="comment"> */</span>
<a name="l07697"></a>07697 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07698"></a>07698 svn_wc_get_changelists(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07699"></a>07699                        <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07700"></a>07700                        <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l07701"></a>07701                        <span class="keyword">const</span> apr_array_header_t *changelist_filter,
<a name="l07702"></a>07702                        <a class="code" href="group__svn__wc.html#gaae18ec52a5dadbfa1f56a67cd70c0bfc" title="The callback type used by svn_client_get_changelists().">svn_changelist_receiver_t</a> callback_func,
<a name="l07703"></a>07703                        <span class="keywordtype">void</span> *callback_baton,
<a name="l07704"></a>07704                        <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07705"></a>07705                        <span class="keywordtype">void</span> *cancel_baton,
<a name="l07706"></a>07706                        apr_pool_t *scratch_pool);
<a name="l07707"></a>07707 
<a name="l07708"></a>07708 <span class="comment"></span>
<a name="l07709"></a>07709 <span class="comment">/** Crop @a local_abspath according to @a depth.</span>
<a name="l07710"></a>07710 <span class="comment"> *</span>
<a name="l07711"></a>07711 <span class="comment"> * Remove any item that exceeds the boundary of @a depth (relative to</span>
<a name="l07712"></a>07712 <span class="comment"> * @a local_abspath) from revision control.  Leave modified items behind</span>
<a name="l07713"></a>07713 <span class="comment"> * (unversioned), while removing unmodified ones completely.</span>
<a name="l07714"></a>07714 <span class="comment"> *</span>
<a name="l07715"></a>07715 <span class="comment"> * @a depth can be svn_depth_empty, svn_depth_files or svn_depth_immediates.</span>
<a name="l07716"></a>07716 <span class="comment"> * Excluding nodes is handled by svn_wc_exclude().</span>
<a name="l07717"></a>07717 <span class="comment"> *</span>
<a name="l07718"></a>07718 <span class="comment"> * If @a local_abspath starts out with a shallower depth than @a depth,</span>
<a name="l07719"></a>07719 <span class="comment"> * do not upgrade it to @a depth (that would not be cropping); however, do</span>
<a name="l07720"></a>07720 <span class="comment"> * check children and crop them appropriately according to @a depth.</span>
<a name="l07721"></a>07721 <span class="comment"> *</span>
<a name="l07722"></a>07722 <span class="comment"> * Returns immediately with an #SVN_ERR_UNSUPPORTED_FEATURE error if @a</span>
<a name="l07723"></a>07723 <span class="comment"> * local_abspath is not a directory, or if @a depth is not restrictive</span>
<a name="l07724"></a>07724 <span class="comment"> * (e.g., #svn_depth_infinity).</span>
<a name="l07725"></a>07725 <span class="comment"> *</span>
<a name="l07726"></a>07726 <span class="comment"> * @a wc_ctx contains a tree lock, for the local path to the working copy</span>
<a name="l07727"></a>07727 <span class="comment"> * which will be used as the root of this operation.</span>
<a name="l07728"></a>07728 <span class="comment"> *</span>
<a name="l07729"></a>07729 <span class="comment"> * If @a cancel_func is not @c NULL, call it with @a cancel_baton at</span>
<a name="l07730"></a>07730 <span class="comment"> * various points to determine if the client has canceled the operation.</span>
<a name="l07731"></a>07731 <span class="comment"> *</span>
<a name="l07732"></a>07732 <span class="comment"> * If @a notify_func is not @c NULL, call it with @a notify_baton to</span>
<a name="l07733"></a>07733 <span class="comment"> * report changes as they are made.</span>
<a name="l07734"></a>07734 <span class="comment"> *</span>
<a name="l07735"></a>07735 <span class="comment"> * @since New in 1.7</span>
<a name="l07736"></a>07736 <span class="comment"> */</span>
<a name="l07737"></a>07737 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07738"></a>07738 <a class="code" href="group__svn__wc.html#ga559310a4178b394103f6cb04c7467267" title="Crop local_abspath according to depth.">svn_wc_crop_tree2</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07739"></a>07739                   <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07740"></a>07740                   <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l07741"></a>07741                   <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07742"></a>07742                   <span class="keywordtype">void</span> *cancel_baton,
<a name="l07743"></a>07743                   <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l07744"></a>07744                   <span class="keywordtype">void</span> *notify_baton,
<a name="l07745"></a>07745                   apr_pool_t *scratch_pool);
<a name="l07746"></a>07746 <span class="comment"></span>
<a name="l07747"></a>07747 <span class="comment">/** Similar to svn_wc_crop_tree2(), but uses an access baton and target.</span>
<a name="l07748"></a>07748 <span class="comment"> *</span>
<a name="l07749"></a>07749 <span class="comment"> * svn_wc_crop_tree() also allows #svn_depth_exclude, which is now</span>
<a name="l07750"></a>07750 <span class="comment"> * handled via svn_wc_exclude()</span>
<a name="l07751"></a>07751 <span class="comment"> *</span>
<a name="l07752"></a>07752 <span class="comment"> * @a target is a basename in @a anchor or &quot;&quot; for @a anchor itself.</span>
<a name="l07753"></a>07753 <span class="comment"> *</span>
<a name="l07754"></a>07754 <span class="comment"> * @since New in 1.6</span>
<a name="l07755"></a>07755 <span class="comment"> * @deprecated Provided for backward compatibility with the 1.6 API.</span>
<a name="l07756"></a>07756 <span class="comment"> */</span>
<a name="l07757"></a>07757 <a class="code" href="svn__types_8h.html#aeced35b9b096eb3eb6f3d1af3e685aa1" title="Macro used to mark deprecated functions.">SVN_DEPRECATED</a>
<a name="l07758"></a>07758 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07759"></a>07759 <a class="code" href="group__svn__wc.html#ga6d1f174d2299f53237e6cc4d4f32ef04" title="Similar to svn_wc_crop_tree2(), but uses an access baton and target.">svn_wc_crop_tree</a>(<a class="code" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577" title="Baton for access to a working copy administrative area.">svn_wc_adm_access_t</a> *anchor,
<a name="l07760"></a>07760                  <span class="keyword">const</span> <span class="keywordtype">char</span> *target,
<a name="l07761"></a>07761                  <a class="code" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c" title="The concept of depth for directories.">svn_depth_t</a> depth,
<a name="l07762"></a>07762                  <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l07763"></a>07763                  <span class="keywordtype">void</span> *notify_baton,
<a name="l07764"></a>07764                  <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07765"></a>07765                  <span class="keywordtype">void</span> *cancel_baton,
<a name="l07766"></a>07766                  apr_pool_t *pool);
<a name="l07767"></a>07767 <span class="comment"></span>
<a name="l07768"></a>07768 <span class="comment">/** Remove the local node for @a local_abspath from the working copy and</span>
<a name="l07769"></a>07769 <span class="comment"> * add an excluded node placeholder in its place.</span>
<a name="l07770"></a>07770 <span class="comment"> *</span>
<a name="l07771"></a>07771 <span class="comment"> * This feature is only supported for unmodified nodes. An</span>
<a name="l07772"></a>07772 <span class="comment"> * #SVN_ERR_UNSUPPORTED_FEATURE error is returned if the node can&#39;t be</span>
<a name="l07773"></a>07773 <span class="comment"> * excluded in its current state.</span>
<a name="l07774"></a>07774 <span class="comment"> *</span>
<a name="l07775"></a>07775 <span class="comment"> * @a wc_ctx contains a tree lock, for the local path to the working copy</span>
<a name="l07776"></a>07776 <span class="comment"> * which will be used as the root of this operation</span>
<a name="l07777"></a>07777 <span class="comment"> *</span>
<a name="l07778"></a>07778 <span class="comment"> * If @a notify_func is not @c NULL, call it with @a notify_baton to</span>
<a name="l07779"></a>07779 <span class="comment"> * report changes as they are made.</span>
<a name="l07780"></a>07780 <span class="comment"> *</span>
<a name="l07781"></a>07781 <span class="comment"> * If @a cancel_func is not @c NULL, call it with @a cancel_baton at</span>
<a name="l07782"></a>07782 <span class="comment"> * various points to determine if the client has canceled the operation.</span>
<a name="l07783"></a>07783 <span class="comment"> *</span>
<a name="l07784"></a>07784 <span class="comment"> *</span>
<a name="l07785"></a>07785 <span class="comment"> * @since New in 1.7</span>
<a name="l07786"></a>07786 <span class="comment"> */</span>
<a name="l07787"></a>07787 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07788"></a>07788 <a class="code" href="group__svn__wc.html#gafe9ee9559ad3de4d7d81c6c63329b083" title="Remove the local node for local_abspath from the working copy and add an excluded node placeholder in...">svn_wc_exclude</a>(<a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07789"></a>07789                <span class="keyword">const</span> <span class="keywordtype">char</span> *local_abspath,
<a name="l07790"></a>07790                <a class="code" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc" title="A user defined callback that subversion will call with a user defined baton to see if the current ope...">svn_cancel_func_t</a> cancel_func,
<a name="l07791"></a>07791                <span class="keywordtype">void</span> *cancel_baton,
<a name="l07792"></a>07792                <a class="code" href="group__svn__wc__notifications.html#ga0b8a69b4e319400ddfd72c9b682abe62" title="Notify the world that notify-&gt;action has happened to notify-&gt;path.">svn_wc_notify_func2_t</a> notify_func,
<a name="l07793"></a>07793                <span class="keywordtype">void</span> *notify_baton,
<a name="l07794"></a>07794                apr_pool_t *scratch_pool);
<a name="l07795"></a>07795 
<a name="l07796"></a>07796 <span class="comment"></span>
<a name="l07797"></a>07797 <span class="comment">/** @} */</span>
<a name="l07798"></a>07798 <span class="comment"></span>
<a name="l07799"></a>07799 <span class="comment">/**</span>
<a name="l07800"></a>07800 <span class="comment"> * Set @a kind to the #svn_node_kind_t of @a abspath.  Use @a wc_ctx</span>
<a name="l07801"></a>07801 <span class="comment"> * to access the working copy, and @a scratch_pool for all temporary</span>
<a name="l07802"></a>07802 <span class="comment"> * allocations.</span>
<a name="l07803"></a>07803 <span class="comment"> *</span>
<a name="l07804"></a>07804 <span class="comment"> * If @a abspath is not under version control, set @a kind to #svn_node_none.</span>
<a name="l07805"></a>07805 <span class="comment"> * If it is versioned but hidden and @a show_hidden is @c FALSE, also return</span>
<a name="l07806"></a>07806 <span class="comment"> * #svn_node_none.</span>
<a name="l07807"></a>07807 <span class="comment"> *</span>
<a name="l07808"></a>07808 <span class="comment"> * ### What does hidden really mean?</span>
<a name="l07809"></a>07809 <span class="comment"> * ### What happens when show_hidden is TRUE?</span>
<a name="l07810"></a>07810 <span class="comment"> *</span>
<a name="l07811"></a>07811 <span class="comment"> * If the node&#39;s info is incomplete, it may or may not have a known node kind</span>
<a name="l07812"></a>07812 <span class="comment"> * set. If the kind is not known (yet), set @a kind to #svn_node_unknown.</span>
<a name="l07813"></a>07813 <span class="comment"> * Otherwise return the node kind even though the node is marked incomplete.</span>
<a name="l07814"></a>07814 <span class="comment"> *</span>
<a name="l07815"></a>07815 <span class="comment"> * @since New in 1.7.</span>
<a name="l07816"></a>07816 <span class="comment"> */</span>
<a name="l07817"></a>07817 <a class="code" href="structsvn__error__t.html" title="Subversion error object.">svn_error_t</a> *
<a name="l07818"></a>07818 <a class="code" href="svn__wc_8h.html#a19aa469c47fc21bb8660de20ba5422bf" title="Set kind to the svn_node_kind_t of abspath.">svn_wc_read_kind</a>(<a class="code" href="svn__types_8h.html#ac3ca125707a8ca1289c73236b5ce7f9a" title="The various types of nodes in the Subversion filesystem.">svn_node_kind_t</a> *kind,
<a name="l07819"></a>07819                  <a class="code" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions.">svn_wc_context_t</a> *wc_ctx,
<a name="l07820"></a>07820                  <span class="keyword">const</span> <span class="keywordtype">char</span> *abspath,
<a name="l07821"></a>07821                  <a class="code" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024" title="YABT: Yet Another Boolean Type.">svn_boolean_t</a> show_hidden,
<a name="l07822"></a>07822                  apr_pool_t *scratch_pool);
<a name="l07823"></a>07823 
<a name="l07824"></a>07824 <span class="comment"></span>
<a name="l07825"></a>07825 <span class="comment">/** @} */</span>
<a name="l07826"></a>07826 
<a name="l07827"></a>07827 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l07828"></a>07828 <span class="preprocessor"></span>}
<a name="l07829"></a>07829 <span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span>
<a name="l07830"></a>07830 
<a name="l07831"></a>07831 <span class="preprocessor">#endif  </span><span class="comment">/* SVN_WC_H */</span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Fri Dec 23 2011 09:20:37 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.5.1
</small></address>

</body>
</html>
