<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: (deprecated) AuthZ client subsystem</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">(deprecated) AuthZ client subsystem<div class="ingroups"><a class="el" href="group__clnt__support.html">Client supporting subsystem</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>The new authentication system allows the RA layer to "pull" information as needed from libsvn_client.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gac48f373d9e23557fe39d6326f778beff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#gac48f373d9e23557fe39d6326f778beff">svn_client_get_simple_prompt_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#gab3e889e27559677e7e1a13a9142a381d">svn_auth_simple_prompt_func_t</a> prompt_func, void *prompt_baton, int retry_limit, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gac48f373d9e23557fe39d6326f778beff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a> that gets information by prompting the user with <em>prompt_func</em> and <em>prompt_baton</em>.  <a href="#gac48f373d9e23557fe39d6326f778beff">More...</a><br/></td></tr>
<tr class="separator:gac48f373d9e23557fe39d6326f778beff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ec77aeb4c8a7f3ceac74eec0f365cff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#ga3ec77aeb4c8a7f3ceac74eec0f365cff">svn_client_get_username_prompt_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#gaf05167cb101739421c2e9542e27d5a88">svn_auth_username_prompt_func_t</a> prompt_func, void *prompt_baton, int retry_limit, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga3ec77aeb4c8a7f3ceac74eec0f365cff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__username__t.html" title="SVN_AUTH_CRED_USERNAME credentials. ">svn_auth_cred_username_t</a> that gets information by prompting the user with <em>prompt_func</em> and <em>prompt_baton</em>.  <a href="#ga3ec77aeb4c8a7f3ceac74eec0f365cff">More...</a><br/></td></tr>
<tr class="separator:ga3ec77aeb4c8a7f3ceac74eec0f365cff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d34f6704d7d95da3b6bad548d3bcf58"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#ga6d34f6704d7d95da3b6bad548d3bcf58">svn_client_get_simple_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga6d34f6704d7d95da3b6bad548d3bcf58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#ga6d34f6704d7d95da3b6bad548d3bcf58">More...</a><br/></td></tr>
<tr class="separator:ga6d34f6704d7d95da3b6bad548d3bcf58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0038b72473f387cb4ce574ab1f0e97a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#gaa0038b72473f387cb4ce574ab1f0e97a">svn_client_get_windows_simple_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaa0038b72473f387cb4ce574ab1f0e97a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a> that gets/sets information from the user's ~/.subversion configuration directory.  <a href="#gaa0038b72473f387cb4ce574ab1f0e97a">More...</a><br/></td></tr>
<tr class="separator:gaa0038b72473f387cb4ce574ab1f0e97a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7cad62f927b0c5f37d58255a695ed15a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#ga7cad62f927b0c5f37d58255a695ed15a">svn_client_get_username_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga7cad62f927b0c5f37d58255a695ed15a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__username__t.html" title="SVN_AUTH_CRED_USERNAME credentials. ">svn_auth_cred_username_t</a> that gets/sets information from a user's ~/.subversion configuration directory.  <a href="#ga7cad62f927b0c5f37d58255a695ed15a">More...</a><br/></td></tr>
<tr class="separator:ga7cad62f927b0c5f37d58255a695ed15a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf45bf7daebda5b3aa64e7a6c822943d0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#gaf45bf7daebda5b3aa64e7a6c822943d0">svn_client_get_ssl_server_trust_file_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaf45bf7daebda5b3aa64e7a6c822943d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. ">svn_auth_cred_ssl_server_trust_t</a>, allocated in <em>pool</em>.  <a href="#gaf45bf7daebda5b3aa64e7a6c822943d0">More...</a><br/></td></tr>
<tr class="separator:gaf45bf7daebda5b3aa64e7a6c822943d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4478650a91ea335900b846e485dba14"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#gaf4478650a91ea335900b846e485dba14">svn_client_get_ssl_client_cert_file_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaf4478650a91ea335900b846e485dba14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT credentials. ">svn_auth_cred_ssl_client_cert_t</a>, allocated in <em>pool</em>.  <a href="#gaf4478650a91ea335900b846e485dba14">More...</a><br/></td></tr>
<tr class="separator:gaf4478650a91ea335900b846e485dba14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3c621371933d52e2b1791aea07b31d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#gac3c621371933d52e2b1791aea07b31d3">svn_client_get_ssl_client_cert_pw_file_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gac3c621371933d52e2b1791aea07b31d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a>, allocated in <em>pool</em>.  <a href="#gac3c621371933d52e2b1791aea07b31d3">More...</a><br/></td></tr>
<tr class="separator:gac3c621371933d52e2b1791aea07b31d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a800d7a8eb83518fce700b2b7ab27df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#ga2a800d7a8eb83518fce700b2b7ab27df">svn_client_get_ssl_server_trust_prompt_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#gac5805f633a96271f97b919297e9908a3">svn_auth_ssl_server_trust_prompt_func_t</a> prompt_func, void *prompt_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga2a800d7a8eb83518fce700b2b7ab27df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. ">svn_auth_cred_ssl_server_trust_t</a>, allocated in <em>pool</em>.  <a href="#ga2a800d7a8eb83518fce700b2b7ab27df">More...</a><br/></td></tr>
<tr class="separator:ga2a800d7a8eb83518fce700b2b7ab27df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaacabebf3b905a98232c743f735574166"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#gaacabebf3b905a98232c743f735574166">svn_client_get_ssl_client_cert_prompt_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#ga5afb52c44e95354a2ec52f6fe030c5d2">svn_auth_ssl_client_cert_prompt_func_t</a> prompt_func, void *prompt_baton, int retry_limit, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaacabebf3b905a98232c743f735574166"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT credentials. ">svn_auth_cred_ssl_client_cert_t</a>, allocated in <em>pool</em>.  <a href="#gaacabebf3b905a98232c743f735574166">More...</a><br/></td></tr>
<tr class="separator:gaacabebf3b905a98232c743f735574166"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga84751b034cf4dbc07bac2b26250b0494"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__auth__fns__depr.html#ga84751b034cf4dbc07bac2b26250b0494">svn_client_get_ssl_client_cert_pw_prompt_provider</a> (<a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **provider, <a class="el" href="group__auth__fns.html#gafeb529b5bafaed2e3f423e4186d60f06">svn_auth_ssl_client_cert_pw_prompt_func_t</a> prompt_func, void *prompt_baton, int retry_limit, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga84751b034cf4dbc07bac2b26250b0494"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a>, allocated in <em>pool</em>.  <a href="#ga84751b034cf4dbc07bac2b26250b0494">More...</a><br/></td></tr>
<tr class="separator:ga84751b034cf4dbc07bac2b26250b0494"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>The new authentication system allows the RA layer to "pull" information as needed from libsvn_client. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000016">Deprecated:</a></b></dt><dd>Replaced by the svn_auth_* functions. </dd></dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="group__auth__fns.html" title="Overview of the svn authentication system. ">Authentication functions</a> </dd></dl>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gac48f373d9e23557fe39d6326f778beff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_simple_prompt_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#gab3e889e27559677e7e1a13a9142a381d">svn_auth_simple_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>retry_limit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a> that gets information by prompting the user with <em>prompt_func</em> and <em>prompt_baton</em>. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>If both <a class="el" href="group__auth__fns.html#ga1479a16508589f534d1216471da6bde6" title="Default username provided by the application itself (e.g. ">SVN_AUTH_PARAM_DEFAULT_USERNAME</a> and <a class="el" href="group__auth__fns.html#gafbff53d2e2a6ce8044a1885ada2b3175" title="Default password provided by the application itself (e.g. ">SVN_AUTH_PARAM_DEFAULT_PASSWORD</a> are defined as runtime parameters in the <code>auth_baton</code>, then <em>*provider</em> will return the default arguments when <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> is called. If <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> fails, then <em>*provider</em> will re-prompt <em>retry_limit</em> times (via <a class="el" href="group__auth__fns.html#gab18c2431ea55881ef52b647815600cd3" title="Get another set of credentials, assuming previous ones failed to authenticate. ">svn_auth_next_credentials()</a>). For infinite retries, set <em>retry_limit</em> to value less than 0.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000017">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#a0d1cf74b8f9e2f55a92f1be7a942adb3" title="Set *provider to an authentication provider of type svn_auth_cred_simple_t that gets information by p...">svn_auth_get_simple_prompt_provider()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6d34f6704d7d95da3b6bad548d3bcf58"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_simple_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>If a default username or password is available, <em>*provider</em> will honor them as well, and return them when <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> is called. (see <a class="el" href="group__auth__fns.html#ga1479a16508589f534d1216471da6bde6" title="Default username provided by the application itself (e.g. ">SVN_AUTH_PARAM_DEFAULT_USERNAME</a> and <a class="el" href="group__auth__fns.html#gafbff53d2e2a6ce8044a1885ada2b3175" title="Default password provided by the application itself (e.g. ">SVN_AUTH_PARAM_DEFAULT_PASSWORD</a>).</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000019">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#adbe6e4f9a56ed5108f06f95d40b8042e" title="Set *provider to an authentication provider of type svn_auth_cred_simple_t that gets/sets information...">svn_auth_get_simple_provider2()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf4478650a91ea335900b846e485dba14"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_ssl_client_cert_file_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT credentials. ">svn_auth_cred_ssl_client_cert_t</a>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials from the configuration mechanism. The returned credential is used to load the appropriate client certificate for authentication when requested by a server.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000023">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#aa2fa9ec4071016474d7a927cb4dbacf7" title="Set *provider to an authentication provider of type svn_auth_cred_ssl_client_cert_t, allocated in pool. ">svn_auth_get_ssl_client_cert_file_provider()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="gaacabebf3b905a98232c743f735574166"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_ssl_client_cert_prompt_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#ga5afb52c44e95354a2ec52f6fe030c5d2">svn_auth_ssl_client_cert_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>retry_limit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__client__cert__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT credentials. ">svn_auth_cred_ssl_client_cert_t</a>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials by using the <em>prompt_func</em> and <em>prompt_baton</em>. The returned credential is used to load the appropriate client certificate for authentication when requested by a server. The prompt will be retried <em>retry_limit</em> times. For infinite retries, set <em>retry_limit</em> to value less than 0.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000026">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#a091023baac1bdc7846dbb9c3a1b0fdfc" title="Set *provider to an authentication provider of type svn_auth_cred_ssl_client_cert_t, allocated in pool. ">svn_auth_get_ssl_client_cert_prompt_provider()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="gac3c621371933d52e2b1791aea07b31d3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_ssl_client_cert_pw_file_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials from the configuration mechanism. The returned credential is used when a loaded client certificate is protected by a passphrase.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000024">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#a6daa69fd91b8a658c3af25f27ab40a20" title="Set *provider to an authentication provider of type svn_auth_cred_ssl_client_cert_pw_t that gets/sets...">svn_auth_get_ssl_client_cert_pw_file_provider2()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="ga84751b034cf4dbc07bac2b26250b0494"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_ssl_client_cert_pw_prompt_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#gafeb529b5bafaed2e3f423e4186d60f06">svn_auth_ssl_client_cert_pw_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>retry_limit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__client__cert__pw__t.html" title="SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. ">svn_auth_cred_ssl_client_cert_pw_t</a>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials by using the <em>prompt_func</em> and <em>prompt_baton</em>. The returned credential is used when a loaded client certificate is protected by a passphrase. The prompt will be retried <em>retry_limit</em> times. For infinite retries, set <em>retry_limit</em> to value less than 0.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000027">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#afe35741fb55873c3c4227d237e19bc14" title="Set *provider to an authentication provider of type svn_auth_cred_ssl_client_cert_pw_t, allocated in pool. ">svn_auth_get_ssl_client_cert_pw_prompt_provider()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf45bf7daebda5b3aa64e7a6c822943d0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_ssl_server_trust_file_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. ">svn_auth_cred_ssl_server_trust_t</a>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials from the configuration mechanism. The returned credential is used to override SSL security on an error.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000022">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#aaa8fe3918d02a179811ab9a03ddaec99" title="Set *provider to an authentication provider of type svn_auth_cred_ssl_server_trust_t, allocated in pool. ">svn_auth_get_ssl_server_trust_file_provider()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2a800d7a8eb83518fce700b2b7ab27df"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_ssl_server_trust_prompt_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#gac5805f633a96271f97b919297e9908a3">svn_auth_ssl_server_trust_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__ssl__server__trust__t.html" title="SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. ">svn_auth_cred_ssl_server_trust_t</a>, allocated in <em>pool</em>. </p>
<p><em>*provider</em> retrieves its credentials by using the <em>prompt_func</em> and <em>prompt_baton</em>. The returned credential is used to override SSL security on an error.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000025">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#a204388c3be43bff3c51e4490d7f40f43" title="Set *provider to an authentication provider of type svn_auth_cred_ssl_server_trust_t, allocated in pool. ">svn_auth_get_ssl_server_trust_prompt_provider()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3ec77aeb4c8a7f3ceac74eec0f365cff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_username_prompt_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__auth__fns.html#gaf05167cb101739421c2e9542e27d5a88">svn_auth_username_prompt_func_t</a>&#160;</td>
          <td class="paramname"><em>prompt_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>prompt_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>retry_limit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__username__t.html" title="SVN_AUTH_CRED_USERNAME credentials. ">svn_auth_cred_username_t</a> that gets information by prompting the user with <em>prompt_func</em> and <em>prompt_baton</em>. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>If <a class="el" href="group__auth__fns.html#ga1479a16508589f534d1216471da6bde6" title="Default username provided by the application itself (e.g. ">SVN_AUTH_PARAM_DEFAULT_USERNAME</a> is defined as a runtime parameter in the <code>auth_baton</code>, then <em>*provider</em> will return the default argument when <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> is called. If <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> fails, then <em>*provider</em> will re-prompt <em>retry_limit</em> times (via <a class="el" href="group__auth__fns.html#gab18c2431ea55881ef52b647815600cd3" title="Get another set of credentials, assuming previous ones failed to authenticate. ">svn_auth_next_credentials()</a>). For infinite retries, set <em>retry_limit</em> to value less than 0.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000018">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#a99da7f5d7e4b64aadaed2b94d958aebb" title="Set *provider to an authentication provider of type svn_auth_cred_username_t that gets information by...">svn_auth_get_username_prompt_provider()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7cad62f927b0c5f37d58255a695ed15a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_username_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__username__t.html" title="SVN_AUTH_CRED_USERNAME credentials. ">svn_auth_cred_username_t</a> that gets/sets information from a user's ~/.subversion configuration directory. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>If a default username is available, <em>*provider</em> will honor it, and return it when <a class="el" href="group__auth__fns.html#gae830b04d8a93c8b60f802d6809425665" title="Get an initial set of credentials. ">svn_auth_first_credentials()</a> is called. (see <a class="el" href="group__auth__fns.html#ga1479a16508589f534d1216471da6bde6" title="Default username provided by the application itself (e.g. ">SVN_AUTH_PARAM_DEFAULT_USERNAME</a>).</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000021">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#ac107e10d2325dbe7d4805a64aa6bd6c4" title="Set *provider to an authentication provider of type svn_auth_cred_username_t that gets/sets informati...">svn_auth_get_username_provider()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa0038b72473f387cb4ce574ab1f0e97a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_client_get_windows_simple_provider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsvn__auth__provider__object__t.html">svn_auth_provider_object_t</a> **&#160;</td>
          <td class="paramname"><em>provider</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create and return <em>*provider</em>, an authentication provider of type <a class="el" href="structsvn__auth__cred__simple__t.html" title="SVN_AUTH_CRED_SIMPLE credentials. ">svn_auth_cred_simple_t</a> that gets/sets information from the user's ~/.subversion configuration directory. </p>
<p>Allocate <em>*provider</em> in <em>pool</em>.</p>
<p>This is like <a class="el" href="group__auth__fns__depr.html#ga6d34f6704d7d95da3b6bad548d3bcf58" title="Create and return *provider, an authentication provider of type svn_auth_cred_simple_t that gets/sets...">svn_client_get_simple_provider()</a>, except that, when running on Window 2000 or newer (or any other Windows version that includes the CryptoAPI), the provider encrypts the password before storing it to disk. On earlier versions of Windows, the provider does nothing.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.2. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function is only available on Windows.</dd>
<dd>
An administrative password reset may invalidate the account's secret key. This function will detect that situation and behave as if the password were not cached at all.</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000020">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. Use <a class="el" href="svn__auth_8h.html#a150ee5110b383bcdb2ce9b341dc26798" title="Set *provider to an authentication provider of type svn_auth_cred_simple_t that gets/sets information...">svn_auth_get_windows_simple_provider()</a> instead. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:17:27 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
