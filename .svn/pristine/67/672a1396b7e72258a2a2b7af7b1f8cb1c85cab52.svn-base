<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Subversion: Merge changes between branches.</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Merge changes between branches.</div>  </div>
<div class="ingroups"><a class="el" href="group__clnt__wc.html">Client working copy management</a></div></div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#ga1da524323431a0aec5837ab02bc43fe3">svn_client_merge4</a> (const char *source1, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision1, const char *source2, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision2, const char *target_wcpath, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_ancestry, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> force, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> record_only, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> dry_run, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> allow_mixed_rev, const apr_array_header_t *merge_options, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Merge changes from <em>source1/<em>revision1</em> to</em> <em>source2/<em>revision2</em> into</em> the working-copy path <em>target_wcpath</em>.  <a href="#ga1da524323431a0aec5837ab02bc43fe3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#ga5acd0a13c8c9d608ff1fd5df1f2e30f1">svn_client_merge3</a> (const char *source1, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision1, const char *source2, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision2, const char *target_wcpath, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_ancestry, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> force, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> record_only, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> dry_run, const apr_array_header_t *merge_options, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__Merge.html#ga1da524323431a0aec5837ab02bc43fe3" title="Merge changes from source1/revision1 to source2/revision2 into the working-copy path target_wcpath...">svn_client_merge4()</a>, but with <em>allow_mixed_rev</em> set to <code>TRUE</code>.  <a href="#ga5acd0a13c8c9d608ff1fd5df1f2e30f1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#gac4e8f005eb32546d489f412a21361c9a">svn_client_merge2</a> (const char *source1, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision1, const char *source2, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision2, const char *target_wcpath, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> recurse, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_ancestry, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> force, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> dry_run, const apr_array_header_t *merge_options, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__Merge.html#ga5acd0a13c8c9d608ff1fd5df1f2e30f1" title="Similar to svn_client_merge4(), but with allow_mixed_rev set to TRUE.">svn_client_merge3()</a>, but with <em>record_only</em> set to <code>FALSE</code>, and <em>depth</em> set according to <em>recurse:</em> if <em>recurse</em> is TRUE, set <em>depth</em> to <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a>, if <em>recurse</em> is FALSE, set <em>depth</em> to <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca0c4df7073a6d268f0e26bbf961f35345" title="D + its file children, but not subdirs.">svn_depth_files</a>.  <a href="#gac4e8f005eb32546d489f412a21361c9a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#gabe2333311fbf2f4a76dcb5d043d13a1f">svn_client_merge</a> (const char *source1, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision1, const char *source2, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision2, const char *target_wcpath, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> recurse, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_ancestry, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> force, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> dry_run, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__Merge.html#gac4e8f005eb32546d489f412a21361c9a" title="Similar to svn_client_merge3(), but with record_only set to FALSE, and depth set according to recurse...">svn_client_merge2()</a>, but with <em>merge_options</em> set to NULL.  <a href="#gabe2333311fbf2f4a76dcb5d043d13a1f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#gac8791af39c490be7eff250929a68fb41">svn_client_merge_reintegrate</a> (const char *source, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *peg_revision, const char *target_wcpath, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> dry_run, const apr_array_header_t *merge_options, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a reintegration merge of <em>source</em> at <em>peg_revision</em> into <em>target_wcpath</em>.  <a href="#gac8791af39c490be7eff250929a68fb41"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#ga9f9185aaade1a1c029b378b9bd6c12f9">svn_client_merge_peg4</a> (const char *source, const apr_array_header_t *ranges_to_merge, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *peg_revision, const char *target_wcpath, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_ancestry, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> force, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> record_only, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> dry_run, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> allow_mixed_rev, const apr_array_header_t *merge_options, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Merge the changes between the filesystem object <em>source</em> in peg revision <em>peg_revision</em>, as it changed between the ranges described in <em>ranges_to_merge</em>.  <a href="#ga9f9185aaade1a1c029b378b9bd6c12f9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#ga12005bd5f73bafa3ee56349ec7cf3716">svn_client_merge_peg3</a> (const char *source, const apr_array_header_t *ranges_to_merge, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *peg_revision, const char *target_wcpath, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_ancestry, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> force, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> record_only, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> dry_run, const apr_array_header_t *merge_options, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__Merge.html#ga9f9185aaade1a1c029b378b9bd6c12f9" title="Merge the changes between the filesystem object source in peg revision peg_revision, as it changed between the ranges described in ranges_to_merge.">svn_client_merge_peg4()</a>, but with <em>allow_mixed_rev</em> set to <code>TRUE</code>.  <a href="#ga12005bd5f73bafa3ee56349ec7cf3716"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#gadbb47dae0b3e6e0ae27aad5509840f04">svn_client_merge_peg2</a> (const char *source, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision1, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision2, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *peg_revision, const char *target_wcpath, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> recurse, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_ancestry, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> force, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> dry_run, const apr_array_header_t *merge_options, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__Merge.html#ga12005bd5f73bafa3ee56349ec7cf3716" title="Similar to svn_client_merge_peg4(), but with allow_mixed_rev set to TRUE.">svn_client_merge_peg3()</a>, but with <em>record_only</em> set to <code>FALSE</code>, and <em>depth</em> set according to <em>recurse:</em> if <em>recurse</em> is TRUE, set <em>depth</em> to <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a>, if <em>recurse</em> is FALSE, set <em>depth</em> to <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca0c4df7073a6d268f0e26bbf961f35345" title="D + its file children, but not subdirs.">svn_depth_files</a>.  <a href="#gadbb47dae0b3e6e0ae27aad5509840f04"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#gab3b7ffa4842894088a311d69bf4f39b8">svn_client_merge_peg</a> (const char *source, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision1, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *revision2, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *peg_revision, const char *target_wcpath, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> recurse, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> ignore_ancestry, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> force, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> dry_run, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__Merge.html#gadbb47dae0b3e6e0ae27aad5509840f04" title="Similar to svn_client_merge_peg3(), but with record_only set to FALSE, and depth set according to rec...">svn_client_merge_peg2()</a>, but with <em>merge_options</em> set to NULL.  <a href="#gab3b7ffa4842894088a311d69bf4f39b8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#ga05713f5c424fd4a2f20a09447075b048">svn_client_suggest_merge_sources</a> (apr_array_header_t **suggestions, const char *path_or_url, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *peg_revision, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>suggestions</em> to an ordered array of <code>const</code> char * potential merge sources (expressed as full repository URLs) for <em>path_or_url</em> at <em>peg_revision</em>.  <a href="#ga05713f5c424fd4a2f20a09447075b048"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#gac53de23a6617aeba3a30844171fa3439">svn_client_mergeinfo_get_merged</a> (apr_hash_t **mergeinfo, const char *path_or_url, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *peg_revision, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*mergeinfo</em> to a hash mapping <code>const char *</code> merge source URLs to <code>apr_array_header_t *</code> rangelists (arrays of <code><a class="el" href="structsvn__merge__range__t.html" title="Mergeinfo representing a merge of a range of revisions.">svn_merge_range_t</a> *</code> ranges) describing the ranges which have been merged into <em>path_or_url</em> as of <em>peg_revision</em>, per <em>path_or_url's</em> explicit mergeinfo or inherited mergeinfo if no explicit mergeinfo if found.  <a href="#gac53de23a6617aeba3a30844171fa3439"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#ga32a42723031754fd41d88688bea2f38b">svn_client_mergeinfo_log</a> (<a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> finding_merged, const char *path_or_url, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *peg_revision, const char *merge_source_path_or_url, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *src_peg_revision, <a class="el" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb">svn_log_entry_receiver_t</a> receiver, void *receiver_baton, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> discover_changed_paths, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a> depth, const apr_array_header_t *revprops, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *scratch_pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>finding_merged</em> is TRUE, then drive log entry callbacks <em>receiver</em> / <em>receiver_baton</em> with the revisions merged from <em>merge_source_path_or_url</em> (as of <em>src_peg_revision</em>) into <em>path_or_url</em> (as of <em>peg_revision</em>).  <a href="#ga32a42723031754fd41d88688bea2f38b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#ga5490a793f43eaaa306d645d5b1b3bdaa">svn_client_mergeinfo_log_merged</a> (const char *path_or_url, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *peg_revision, const char *merge_source_path_or_url, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *src_peg_revision, <a class="el" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb">svn_log_entry_receiver_t</a> receiver, void *receiver_baton, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> discover_changed_paths, const apr_array_header_t *revprops, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__Merge.html#ga32a42723031754fd41d88688bea2f38b" title="If finding_merged is TRUE, then drive log entry callbacks receiver / receiver_baton with the revision...">svn_client_mergeinfo_log()</a>, but finds only merged revisions and always operates at <em>depth</em> <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca8783254e886077b74a05341491fc353c" title="Just the named directory D, no entries.">svn_depth_empty</a>.  <a href="#ga5490a793f43eaaa306d645d5b1b3bdaa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__Merge.html#ga1ebab9ce5d36348a5765b594bdaa73cd">svn_client_mergeinfo_log_eligible</a> (const char *path_or_url, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *peg_revision, const char *merge_source_path_or_url, const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *src_peg_revision, <a class="el" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb">svn_log_entry_receiver_t</a> receiver, void *receiver_baton, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> discover_changed_paths, const apr_array_header_t *revprops, <a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *ctx, apr_pool_t *pool)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__Merge.html#ga32a42723031754fd41d88688bea2f38b" title="If finding_merged is TRUE, then drive log entry callbacks receiver / receiver_baton with the revision...">svn_client_mergeinfo_log()</a>, but finds only eligible revisions and always operates at <em>depth</em> <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca8783254e886077b74a05341491fc353c" title="Just the named directory D, no entries.">svn_depth_empty</a>.  <a href="#ga1ebab9ce5d36348a5765b594bdaa73cd"></a><br/></td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="gabe2333311fbf2f4a76dcb5d043d13a1f"></a><!-- doxytag: member="svn_client.h::svn_client_merge" ref="gabe2333311fbf2f4a76dcb5d043d13a1f" args="(const char *source1, const svn_opt_revision_t *revision1, const char *source2, const svn_opt_revision_t *revision2, const char *target_wcpath, svn_boolean_t recurse, svn_boolean_t ignore_ancestry, svn_boolean_t force, svn_boolean_t dry_run, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_merge </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target_wcpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>recurse</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_ancestry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>force</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>dry_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Similar to <a class="el" href="group__Merge.html#gac4e8f005eb32546d489f412a21361c9a" title="Similar to svn_client_merge3(), but with record_only set to FALSE, and depth set according to recurse...">svn_client_merge2()</a>, but with <em>merge_options</em> set to NULL. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000076">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.3 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gac4e8f005eb32546d489f412a21361c9a"></a><!-- doxytag: member="svn_client.h::svn_client_merge2" ref="gac4e8f005eb32546d489f412a21361c9a" args="(const char *source1, const svn_opt_revision_t *revision1, const char *source2, const svn_opt_revision_t *revision2, const char *target_wcpath, svn_boolean_t recurse, svn_boolean_t ignore_ancestry, svn_boolean_t force, svn_boolean_t dry_run, const apr_array_header_t *merge_options, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_merge2 </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target_wcpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>recurse</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_ancestry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>force</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>dry_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>merge_options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Similar to <a class="el" href="group__Merge.html#ga5acd0a13c8c9d608ff1fd5df1f2e30f1" title="Similar to svn_client_merge4(), but with allow_mixed_rev set to TRUE.">svn_client_merge3()</a>, but with <em>record_only</em> set to <code>FALSE</code>, and <em>depth</em> set according to <em>recurse:</em> if <em>recurse</em> is TRUE, set <em>depth</em> to <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a>, if <em>recurse</em> is FALSE, set <em>depth</em> to <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca0c4df7073a6d268f0e26bbf961f35345" title="D + its file children, but not subdirs.">svn_depth_files</a>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000075">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.4 API.</dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5acd0a13c8c9d608ff1fd5df1f2e30f1"></a><!-- doxytag: member="svn_client.h::svn_client_merge3" ref="ga5acd0a13c8c9d608ff1fd5df1f2e30f1" args="(const char *source1, const svn_opt_revision_t *revision1, const char *source2, const svn_opt_revision_t *revision2, const char *target_wcpath, svn_depth_t depth, svn_boolean_t ignore_ancestry, svn_boolean_t force, svn_boolean_t record_only, svn_boolean_t dry_run, const apr_array_header_t *merge_options, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_merge3 </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target_wcpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_ancestry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>force</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>record_only</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>dry_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>merge_options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Similar to <a class="el" href="group__Merge.html#ga1da524323431a0aec5837ab02bc43fe3" title="Merge changes from source1/revision1 to source2/revision2 into the working-copy path target_wcpath...">svn_client_merge4()</a>, but with <em>allow_mixed_rev</em> set to <code>TRUE</code>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000074">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API.</dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.5. </dd></dl>

</div>
</div>
<a class="anchor" id="ga1da524323431a0aec5837ab02bc43fe3"></a><!-- doxytag: member="svn_client.h::svn_client_merge4" ref="ga1da524323431a0aec5837ab02bc43fe3" args="(const char *source1, const svn_opt_revision_t *revision1, const char *source2, const svn_opt_revision_t *revision2, const char *target_wcpath, svn_depth_t depth, svn_boolean_t ignore_ancestry, svn_boolean_t force, svn_boolean_t record_only, svn_boolean_t dry_run, svn_boolean_t allow_mixed_rev, const apr_array_header_t *merge_options, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_merge4 </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target_wcpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_ancestry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>force</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>record_only</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>dry_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>allow_mixed_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>merge_options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Merge changes from <em>source1/<em>revision1</em> to</em> <em>source2/<em>revision2</em> into</em> the working-copy path <em>target_wcpath</em>. </p>
<p><em>source1</em> and <em>source2</em> are either URLs that refer to entries in the repository, or paths to entries in the working copy.</p>
<p>By "merging", we mean: apply file differences using <a class="el" href="group__svn__wc__merging.html#ga093302c0cd37f161c185dfc95e10f8d1" title="Similar to svn_wc_merge2(), but with merge_options set to NULL.">svn_wc_merge()</a>, and schedule additions &amp; deletions when appropriate.</p>
<p><em>source1</em> and <em>source2</em> must both represent the same node kind -- that is, if <em>source1</em> is a directory, <em>source2</em> must also be, and if <em>source1</em> is a file, <em>source2</em> must also be.</p>
<p>If either <em>revision1</em> or <em>revision2</em> has an `unspecified' or unrecognized `kind', return <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660a7b4bd2cc6081ab306cb8f1729f5cea04" title="&quot;Bogus revision information given&quot;">SVN_ERR_CLIENT_BAD_REVISION</a>.</p>
<p>If <em>depth</em> is <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a>, merge fully recursively. Else if <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca68873e015456e384e4f63f3bbd515c8a" title="D + immediate children (D and its entries).">svn_depth_immediates</a>, merge changes at most to files that are immediate children of <em>target_wcpath</em> and to directory properties of <em>target_wcpath</em> and its immediate subdirectory children. Else if <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca0c4df7073a6d268f0e26bbf961f35345" title="D + its file children, but not subdirs.">svn_depth_files</a>, merge at most to immediate file children of <em>target_wcpath</em> and to <em>target_wcpath</em> itself. Else if <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca8783254e886077b74a05341491fc353c" title="Just the named directory D, no entries.">svn_depth_empty</a>, apply changes only to <em>target_wcpath</em> (i.e., directory property changes only)</p>
<p>If <em>depth</em> is <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2cacf4538edb8e8823b0b9cdeaaac245ebf" title="Depth undetermined or ignored.">svn_depth_unknown</a>, use the depth of <em>target_wcpath</em>.</p>
<p>Use <em>ignore_ancestry</em> to control whether or not items being diffed will be checked for relatedness first. Unrelated items are typically transmitted to the editor as a deletion of one thing and the addition of another, but if this flag is TRUE, unrelated items will be diffed as if they were related.</p>
<p>If <em>force</em> is false and the merge involves deleting a file whose content differs from the source-left version, or a locally modified directory, or an unversioned item, then the operation will fail. If <em>force</em> is true then all such items will be deleted.</p>
<p><em>merge_options</em> (an array of <code>const char *</code>), if non-NULL, is used to pass additional command line arguments to the merge processes (internal or external). </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="svn__diff_8h.html#a212d408eee817f2193737fa4e8307a9e" title="Parse args, an array of const char * command line switches and adjust options accordingly.">svn_diff_file_options_parse()</a>.</dd></dl>
<p>If <em>ctx-&gt;notify_func2</em> is non-NULL, then call <em>ctx-&gt;notify_func2</em> with <em>ctx-&gt;notify_baton2</em> once for each merged target, passing the target's local path.</p>
<p>If <em>record_only</em> is TRUE, the merge is performed, but is limited only to mergeinfo property changes on existing paths in <em>target_wcpath</em>.</p>
<p>If <em>dry_run</em> is TRUE, the merge is carried out, and full notification feedback is provided, but the working copy is not modified.</p>
<p>If allow_mixed_rev is <code>FALSE</code>, and <em>merge_target</em> is a mixed-revision working copy, raise <code>SVN_ERR_CLIENT_MERGE_UPDATE_REQUIRED</code>. Because users rarely intend to merge into mixed-revision working copies, it is recommended to set this parameter to FALSE by default unless the user has explicitly requested a merge into a mixed-revision working copy.</p>
<p>The authentication baton cached in <em>ctx</em> is used to communicate with the repository.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.7. </dd></dl>

</div>
</div>
<a class="anchor" id="gab3b7ffa4842894088a311d69bf4f39b8"></a><!-- doxytag: member="svn_client.h::svn_client_merge_peg" ref="gab3b7ffa4842894088a311d69bf4f39b8" args="(const char *source, const svn_opt_revision_t *revision1, const svn_opt_revision_t *revision2, const svn_opt_revision_t *peg_revision, const char *target_wcpath, svn_boolean_t recurse, svn_boolean_t ignore_ancestry, svn_boolean_t force, svn_boolean_t dry_run, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_merge_peg </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target_wcpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>recurse</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_ancestry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>force</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>dry_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Similar to <a class="el" href="group__Merge.html#gadbb47dae0b3e6e0ae27aad5509840f04" title="Similar to svn_client_merge_peg3(), but with record_only set to FALSE, and depth set according to rec...">svn_client_merge_peg2()</a>, but with <em>merge_options</em> set to NULL. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000079">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.3 API.</dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.1. </dd></dl>

</div>
</div>
<a class="anchor" id="gadbb47dae0b3e6e0ae27aad5509840f04"></a><!-- doxytag: member="svn_client.h::svn_client_merge_peg2" ref="gadbb47dae0b3e6e0ae27aad5509840f04" args="(const char *source, const svn_opt_revision_t *revision1, const svn_opt_revision_t *revision2, const svn_opt_revision_t *peg_revision, const char *target_wcpath, svn_boolean_t recurse, svn_boolean_t ignore_ancestry, svn_boolean_t force, svn_boolean_t dry_run, const apr_array_header_t *merge_options, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_merge_peg2 </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>revision2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target_wcpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>recurse</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_ancestry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>force</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>dry_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>merge_options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Similar to <a class="el" href="group__Merge.html#ga12005bd5f73bafa3ee56349ec7cf3716" title="Similar to svn_client_merge_peg4(), but with allow_mixed_rev set to TRUE.">svn_client_merge_peg3()</a>, but with <em>record_only</em> set to <code>FALSE</code>, and <em>depth</em> set according to <em>recurse:</em> if <em>recurse</em> is TRUE, set <em>depth</em> to <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a>, if <em>recurse</em> is FALSE, set <em>depth</em> to <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca0c4df7073a6d268f0e26bbf961f35345" title="D + its file children, but not subdirs.">svn_depth_files</a>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000078">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.4 API.</dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="ga12005bd5f73bafa3ee56349ec7cf3716"></a><!-- doxytag: member="svn_client.h::svn_client_merge_peg3" ref="ga12005bd5f73bafa3ee56349ec7cf3716" args="(const char *source, const apr_array_header_t *ranges_to_merge, const svn_opt_revision_t *peg_revision, const char *target_wcpath, svn_depth_t depth, svn_boolean_t ignore_ancestry, svn_boolean_t force, svn_boolean_t record_only, svn_boolean_t dry_run, const apr_array_header_t *merge_options, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_merge_peg3 </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>ranges_to_merge</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target_wcpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_ancestry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>force</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>record_only</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>dry_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>merge_options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Similar to <a class="el" href="group__Merge.html#ga9f9185aaade1a1c029b378b9bd6c12f9" title="Merge the changes between the filesystem object source in peg revision peg_revision, as it changed between the ranges described in ranges_to_merge.">svn_client_merge_peg4()</a>, but with <em>allow_mixed_rev</em> set to <code>TRUE</code>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000077">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API.</dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.5. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9f9185aaade1a1c029b378b9bd6c12f9"></a><!-- doxytag: member="svn_client.h::svn_client_merge_peg4" ref="ga9f9185aaade1a1c029b378b9bd6c12f9" args="(const char *source, const apr_array_header_t *ranges_to_merge, const svn_opt_revision_t *peg_revision, const char *target_wcpath, svn_depth_t depth, svn_boolean_t ignore_ancestry, svn_boolean_t force, svn_boolean_t record_only, svn_boolean_t dry_run, svn_boolean_t allow_mixed_rev, const apr_array_header_t *merge_options, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_merge_peg4 </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>ranges_to_merge</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target_wcpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>ignore_ancestry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>force</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>record_only</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>dry_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>allow_mixed_rev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>merge_options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Merge the changes between the filesystem object <em>source</em> in peg revision <em>peg_revision</em>, as it changed between the ranges described in <em>ranges_to_merge</em>. </p>
<p><em>ranges_to_merge</em> is an array of <code><a class="el" href="structsvn__opt__revision__range__t.html" title="A revision range, specified in one of svn_opt_revision_kind ways.">svn_opt_revision_range_t</a> *</code> ranges. These ranges may describe additive and/or subtractive merge ranges, they may overlap fully or partially, and/or they may partially or fully negate each other. This rangelist is not required to be sorted. If any revision in the list of provided ranges has an `unspecified' or unrecognized `kind', return <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660a7b4bd2cc6081ab306cb8f1729f5cea04" title="&quot;Bogus revision information given&quot;">SVN_ERR_CLIENT_BAD_REVISION</a>.</p>
<p>All other options are handled identically to <a class="el" href="group__Merge.html#ga1da524323431a0aec5837ab02bc43fe3" title="Merge changes from source1/revision1 to source2/revision2 into the working-copy path target_wcpath...">svn_client_merge4()</a>.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.7. </dd></dl>

</div>
</div>
<a class="anchor" id="gac8791af39c490be7eff250929a68fb41"></a><!-- doxytag: member="svn_client.h::svn_client_merge_reintegrate" ref="gac8791af39c490be7eff250929a68fb41" args="(const char *source, const svn_opt_revision_t *peg_revision, const char *target_wcpath, svn_boolean_t dry_run, const apr_array_header_t *merge_options, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_merge_reintegrate </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>target_wcpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>dry_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>merge_options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Perform a reintegration merge of <em>source</em> at <em>peg_revision</em> into <em>target_wcpath</em>. </p>
<p><em>target_wcpath</em> must be a single-revision, <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a>, pristine, unswitched working copy -- in other words, it must reflect a single revision tree, the "target". The mergeinfo on <em>source</em> must reflect that all of the target has been merged into it. Then this behaves like a merge with <a class="el" href="group__Merge.html#ga5acd0a13c8c9d608ff1fd5df1f2e30f1" title="Similar to svn_client_merge4(), but with allow_mixed_rev set to TRUE.">svn_client_merge3()</a> from the target's URL to the source.</p>
<p>All other options are handled identically to <a class="el" href="group__Merge.html#ga5acd0a13c8c9d608ff1fd5df1f2e30f1" title="Similar to svn_client_merge4(), but with allow_mixed_rev set to TRUE.">svn_client_merge3()</a>. The depth of the merge is always <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a>.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.5. </dd></dl>

</div>
</div>
<a class="anchor" id="gac53de23a6617aeba3a30844171fa3439"></a><!-- doxytag: member="svn_client.h::svn_client_mergeinfo_get_merged" ref="gac53de23a6617aeba3a30844171fa3439" args="(apr_hash_t **mergeinfo, const char *path_or_url, const svn_opt_revision_t *peg_revision, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_mergeinfo_get_merged </td>
          <td>(</td>
          <td class="paramtype">apr_hash_t **&#160;</td>
          <td class="paramname"><em>mergeinfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path_or_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set <em>*mergeinfo</em> to a hash mapping <code>const char *</code> merge source URLs to <code>apr_array_header_t *</code> rangelists (arrays of <code><a class="el" href="structsvn__merge__range__t.html" title="Mergeinfo representing a merge of a range of revisions.">svn_merge_range_t</a> *</code> ranges) describing the ranges which have been merged into <em>path_or_url</em> as of <em>peg_revision</em>, per <em>path_or_url's</em> explicit mergeinfo or inherited mergeinfo if no explicit mergeinfo if found. </p>
<p>If no explicit or inherited mergeinfo is found, then set <em>*mergeinfo</em> to NULL.</p>
<p>Use <em>pool</em> for all necessary allocations.</p>
<p>If the server doesn't support retrieval of mergeinfo (which will never happen for <a href="file://">file://</a> URLs), return an <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660a4152fa8f6143f7bcd6f2f7d656096c8b" title="&quot;Trying to use an unsupported feature&quot;">SVN_ERR_UNSUPPORTED_FEATURE</a> error.</p>
<dl class="note"><dt><b>Note:</b></dt><dd>Unlike most APIs which deal with mergeinfo, this one returns data where the keys of the hash are absolute repository URLs rather than repository filesystem paths.</dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.5. </dd></dl>

</div>
</div>
<a class="anchor" id="ga32a42723031754fd41d88688bea2f38b"></a><!-- doxytag: member="svn_client.h::svn_client_mergeinfo_log" ref="ga32a42723031754fd41d88688bea2f38b" args="(svn_boolean_t finding_merged, const char *path_or_url, const svn_opt_revision_t *peg_revision, const char *merge_source_path_or_url, const svn_opt_revision_t *src_peg_revision, svn_log_entry_receiver_t receiver, void *receiver_baton, svn_boolean_t discover_changed_paths, svn_depth_t depth, const apr_array_header_t *revprops, svn_client_ctx_t *ctx, apr_pool_t *scratch_pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_mergeinfo_log </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>finding_merged</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path_or_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>merge_source_path_or_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>src_peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb">svn_log_entry_receiver_t</a>&#160;</td>
          <td class="paramname"><em>receiver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>receiver_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>discover_changed_paths</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2c">svn_depth_t</a>&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>revprops</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>scratch_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>If <em>finding_merged</em> is TRUE, then drive log entry callbacks <em>receiver</em> / <em>receiver_baton</em> with the revisions merged from <em>merge_source_path_or_url</em> (as of <em>src_peg_revision</em>) into <em>path_or_url</em> (as of <em>peg_revision</em>). </p>
<p>If <em>finding_merged</em> is FALSE then find the revisions eligible for merging.</p>
<p>If <em>depth</em> is <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca8783254e886077b74a05341491fc353c" title="Just the named directory D, no entries.">svn_depth_empty</a> consider only the explicit or inherited mergeinfo on <em>path_or_url</em> when calculating merged revisions from <em>merge_source_path_or_url</em>. If <em>depth</em> is <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a> then also consider the explicit subtree mergeinfo under <em>path_or_url</em>. If a depth other than <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca8783254e886077b74a05341491fc353c" title="Just the named directory D, no entries.">svn_depth_empty</a> or <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca9c9a00ca9d05799d0d2a7646d4f0cbf2" title="D + all descendants (full recursion from D).">svn_depth_infinity</a> is requested then return a <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660a4152fa8f6143f7bcd6f2f7d656096c8b" title="&quot;Trying to use an unsupported feature&quot;">SVN_ERR_UNSUPPORTED_FEATURE</a> error.</p>
<p><em>discover_changed_paths</em> and <em>revprops</em> are the same as for <a class="el" href="group__Log.html#ga6907dbe5f0117b0beee65c41fa6d0837" title="Invoke receiver with receiver_baton on each log message from each (svn_opt_revision_range_t *) range ...">svn_client_log5()</a>. Use <em>scratch_pool</em> for all temporary allocations.</p>
<p><em>ctx</em> is a context used for authentication.</p>
<p>If the server doesn't support retrieval of mergeinfo, return an <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660a4152fa8f6143f7bcd6f2f7d656096c8b" title="&quot;Trying to use an unsupported feature&quot;">SVN_ERR_UNSUPPORTED_FEATURE</a> error.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.7. </dd></dl>

</div>
</div>
<a class="anchor" id="ga1ebab9ce5d36348a5765b594bdaa73cd"></a><!-- doxytag: member="svn_client.h::svn_client_mergeinfo_log_eligible" ref="ga1ebab9ce5d36348a5765b594bdaa73cd" args="(const char *path_or_url, const svn_opt_revision_t *peg_revision, const char *merge_source_path_or_url, const svn_opt_revision_t *src_peg_revision, svn_log_entry_receiver_t receiver, void *receiver_baton, svn_boolean_t discover_changed_paths, const apr_array_header_t *revprops, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_mergeinfo_log_eligible </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path_or_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>merge_source_path_or_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>src_peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb">svn_log_entry_receiver_t</a>&#160;</td>
          <td class="paramname"><em>receiver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>receiver_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>discover_changed_paths</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>revprops</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Similar to <a class="el" href="group__Merge.html#ga32a42723031754fd41d88688bea2f38b" title="If finding_merged is TRUE, then drive log entry callbacks receiver / receiver_baton with the revision...">svn_client_mergeinfo_log()</a>, but finds only eligible revisions and always operates at <em>depth</em> <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca8783254e886077b74a05341491fc353c" title="Just the named directory D, no entries.">svn_depth_empty</a>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000081">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.6 API. Use <a class="el" href="group__Merge.html#ga32a42723031754fd41d88688bea2f38b" title="If finding_merged is TRUE, then drive log entry callbacks receiver / receiver_baton with the revision...">svn_client_mergeinfo_log()</a> instead. </dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.5. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5490a793f43eaaa306d645d5b1b3bdaa"></a><!-- doxytag: member="svn_client.h::svn_client_mergeinfo_log_merged" ref="ga5490a793f43eaaa306d645d5b1b3bdaa" args="(const char *path_or_url, const svn_opt_revision_t *peg_revision, const char *merge_source_path_or_url, const svn_opt_revision_t *src_peg_revision, svn_log_entry_receiver_t receiver, void *receiver_baton, svn_boolean_t discover_changed_paths, const apr_array_header_t *revprops, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_mergeinfo_log_merged </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path_or_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>merge_source_path_or_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>src_peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#afb30054d6301afbcd8b00d8dc11d7ddb">svn_log_entry_receiver_t</a>&#160;</td>
          <td class="paramname"><em>receiver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>receiver_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>discover_changed_paths</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const apr_array_header_t *&#160;</td>
          <td class="paramname"><em>revprops</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Similar to <a class="el" href="group__Merge.html#ga32a42723031754fd41d88688bea2f38b" title="If finding_merged is TRUE, then drive log entry callbacks receiver / receiver_baton with the revision...">svn_client_mergeinfo_log()</a>, but finds only merged revisions and always operates at <em>depth</em> <a class="el" href="svn__types_8h.html#a21dd8b080111fa6fb5d59156299f3a2ca8783254e886077b74a05341491fc353c" title="Just the named directory D, no entries.">svn_depth_empty</a>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000080">Deprecated:</a></b></dt><dd>Provided for backwards compatibility with the 1.6 API. Use <a class="el" href="group__Merge.html#ga32a42723031754fd41d88688bea2f38b" title="If finding_merged is TRUE, then drive log entry callbacks receiver / receiver_baton with the revision...">svn_client_mergeinfo_log()</a> instead. </dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.5. </dd></dl>

</div>
</div>
<a class="anchor" id="ga05713f5c424fd4a2f20a09447075b048"></a><!-- doxytag: member="svn_client.h::svn_client_suggest_merge_sources" ref="ga05713f5c424fd4a2f20a09447075b048" args="(apr_array_header_t **suggestions, const char *path_or_url, const svn_opt_revision_t *peg_revision, svn_client_ctx_t *ctx, apr_pool_t *pool)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_client_suggest_merge_sources </td>
          <td>(</td>
          <td class="paramtype">apr_array_header_t **&#160;</td>
          <td class="paramname"><em>suggestions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path_or_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsvn__opt__revision__t.html">svn_opt_revision_t</a> *&#160;</td>
          <td class="paramname"><em>peg_revision</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsvn__client__ctx__t.html">svn_client_ctx_t</a> *&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set <em>suggestions</em> to an ordered array of <code>const</code> char * potential merge sources (expressed as full repository URLs) for <em>path_or_url</em> at <em>peg_revision</em>. </p>
<p><em>path_or_url</em> is a working copy path or repository URL. <em>ctx</em> is a context used for authentication in the repository case. Use <em>pool</em> for all allocations.</p>
<dl class="since"><dt><b>Since:</b></dt><dd>New in 1.5. </dd></dl>

</div>
</div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Fri Dec 23 2011 09:20:40 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.5.1
</small></address>

</body>
</html>
