<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: svn_utf.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_c37f7789c49aa9e5999234152b1ef6ed.html">subversion</a></li><li class="navelem"><a class="el" href="dir_334478eea8dba5ae935f94af9469978f.html">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">svn_utf.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>UTF-8 conversion routines.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;apr_pools.h&gt;</code><br/>
<code>#include &lt;apr_xlate.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="svn__types_8h_source.html">svn_types.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="svn__string_8h_source.html">svn_string.h</a>&quot;</code><br/>
</div>
<p><a href="svn__utf_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:abf58c58c74a33667f5649ca275dc8130"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abf58c58c74a33667f5649ca275dc8130"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_APR_LOCALE_CHARSET</b>&#160;&#160;&#160;APR_LOCALE_CHARSET</td></tr>
<tr class="separator:abf58c58c74a33667f5649ca275dc8130"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a332360a2e328656981fbf9d7bedcc6a4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a332360a2e328656981fbf9d7bedcc6a4"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SVN_APR_DEFAULT_CHARSET</b>&#160;&#160;&#160;APR_DEFAULT_CHARSET</td></tr>
<tr class="separator:a332360a2e328656981fbf9d7bedcc6a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae56e72c26c4547a6ecde62da2d97321b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#ae56e72c26c4547a6ecde62da2d97321b">svn_utf_initialize2</a> (<a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> assume_native_utf8, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ae56e72c26c4547a6ecde62da2d97321b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the UTF-8 encoding/decoding routines.  <a href="#ae56e72c26c4547a6ecde62da2d97321b">More...</a><br/></td></tr>
<tr class="separator:ae56e72c26c4547a6ecde62da2d97321b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0eb451857e73fe18690e2261c6f92af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#af0eb451857e73fe18690e2261c6f92af">svn_utf_initialize</a> (apr_pool_t *pool)</td></tr>
<tr class="memdesc:af0eb451857e73fe18690e2261c6f92af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like <a class="el" href="svn__utf_8h.html#ae56e72c26c4547a6ecde62da2d97321b" title="Initialize the UTF-8 encoding/decoding routines. ">svn_utf_initialize2()</a> but without the ability to force the native encoding to UTF-8.  <a href="#af0eb451857e73fe18690e2261c6f92af">More...</a><br/></td></tr>
<tr class="separator:af0eb451857e73fe18690e2261c6f92af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa014652a1811ad17c9f9fcdce440ec89"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa014652a1811ad17c9f9fcdce440ec89"></a>
<a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#aa014652a1811ad17c9f9fcdce440ec89">svn_utf_stringbuf_to_utf8</a> (<a class="el" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> **dest, const <a class="el" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> *src, apr_pool_t *pool)</td></tr>
<tr class="memdesc:aa014652a1811ad17c9f9fcdce440ec89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*dest</em> to a utf8-encoded stringbuf from native stringbuf <em>src</em>; allocate <em>*dest</em> in <em>pool</em>. <br/></td></tr>
<tr class="separator:aa014652a1811ad17c9f9fcdce440ec89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6aa616f8a8f6aef589a02de9d547f193"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6aa616f8a8f6aef589a02de9d547f193"></a>
<a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#a6aa616f8a8f6aef589a02de9d547f193">svn_utf_string_to_utf8</a> (const <a class="el" href="structsvn__string__t.html">svn_string_t</a> **dest, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *src, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a6aa616f8a8f6aef589a02de9d547f193"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*dest</em> to a utf8-encoded string from native string <em>src</em>; allocate <em>*dest</em> in <em>pool</em>. <br/></td></tr>
<tr class="separator:a6aa616f8a8f6aef589a02de9d547f193"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60643c7068eaf42cd72ede39d15df8ea"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a60643c7068eaf42cd72ede39d15df8ea"></a>
<a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#a60643c7068eaf42cd72ede39d15df8ea">svn_utf_cstring_to_utf8</a> (const char **dest, const char *src, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a60643c7068eaf42cd72ede39d15df8ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*dest</em> to a utf8-encoded C string from native C string <em>src</em>; allocate <em>*dest</em> in <em>pool</em>. <br/></td></tr>
<tr class="separator:a60643c7068eaf42cd72ede39d15df8ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc46ab8e7269b0e0e3d2f7b2750b1e23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#afc46ab8e7269b0e0e3d2f7b2750b1e23">svn_utf_cstring_to_utf8_ex2</a> (const char **dest, const char *src, const char *frompage, apr_pool_t *pool)</td></tr>
<tr class="memdesc:afc46ab8e7269b0e0e3d2f7b2750b1e23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*dest</em> to a utf8 encoded C string from <em>frompage</em> encoded C string <em>src</em>; allocate <em>*dest</em> in <em>pool</em>.  <a href="#afc46ab8e7269b0e0e3d2f7b2750b1e23">More...</a><br/></td></tr>
<tr class="separator:afc46ab8e7269b0e0e3d2f7b2750b1e23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad4fb10333a0acdc656afd8c29aed3dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#aad4fb10333a0acdc656afd8c29aed3dd">svn_utf_cstring_to_utf8_ex</a> (const char **dest, const char *src, const char *frompage, const char *convset_key, apr_pool_t *pool)</td></tr>
<tr class="memdesc:aad4fb10333a0acdc656afd8c29aed3dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like <a class="el" href="svn__utf_8h.html#afc46ab8e7269b0e0e3d2f7b2750b1e23" title="Set *dest to a utf8 encoded C string from frompage encoded C string src; allocate *dest in pool...">svn_utf_cstring_to_utf8_ex2()</a> but with <em>convset_key</em> which is ignored.  <a href="#aad4fb10333a0acdc656afd8c29aed3dd">More...</a><br/></td></tr>
<tr class="separator:aad4fb10333a0acdc656afd8c29aed3dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addd3589acabb10304141250d39f73f38"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="addd3589acabb10304141250d39f73f38"></a>
<a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#addd3589acabb10304141250d39f73f38">svn_utf_stringbuf_from_utf8</a> (<a class="el" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> **dest, const <a class="el" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> *src, apr_pool_t *pool)</td></tr>
<tr class="memdesc:addd3589acabb10304141250d39f73f38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*dest</em> to a natively-encoded stringbuf from utf8 stringbuf <em>src</em>; allocate <em>*dest</em> in <em>pool</em>. <br/></td></tr>
<tr class="separator:addd3589acabb10304141250d39f73f38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3eb8fdf677baa5605da3a9d1300704c8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3eb8fdf677baa5605da3a9d1300704c8"></a>
<a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#a3eb8fdf677baa5605da3a9d1300704c8">svn_utf_string_from_utf8</a> (const <a class="el" href="structsvn__string__t.html">svn_string_t</a> **dest, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *src, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a3eb8fdf677baa5605da3a9d1300704c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*dest</em> to a natively-encoded string from utf8 string <em>src</em>; allocate <em>*dest</em> in <em>pool</em>. <br/></td></tr>
<tr class="separator:a3eb8fdf677baa5605da3a9d1300704c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2172680e78136308c224bdb64dc8566"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa2172680e78136308c224bdb64dc8566"></a>
<a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#aa2172680e78136308c224bdb64dc8566">svn_utf_cstring_from_utf8</a> (const char **dest, const char *src, apr_pool_t *pool)</td></tr>
<tr class="memdesc:aa2172680e78136308c224bdb64dc8566"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*dest</em> to a natively-encoded C string from utf8 C string <em>src</em>; allocate <em>*dest</em> in <em>pool</em>. <br/></td></tr>
<tr class="separator:aa2172680e78136308c224bdb64dc8566"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3fc8b8da227d8450bea3b8fdbe3c676"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#af3fc8b8da227d8450bea3b8fdbe3c676">svn_utf_cstring_from_utf8_ex2</a> (const char **dest, const char *src, const char *topage, apr_pool_t *pool)</td></tr>
<tr class="memdesc:af3fc8b8da227d8450bea3b8fdbe3c676"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*dest</em> to a <em>topage</em> encoded C string from utf8 encoded C string <em>src</em>; allocate <em>*dest</em> in <em>pool</em>.  <a href="#af3fc8b8da227d8450bea3b8fdbe3c676">More...</a><br/></td></tr>
<tr class="separator:af3fc8b8da227d8450bea3b8fdbe3c676"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc513fbd1ea98495c3e64f6fb2a69d30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#adc513fbd1ea98495c3e64f6fb2a69d30">svn_utf_cstring_from_utf8_ex</a> (const char **dest, const char *src, const char *topage, const char *convset_key, apr_pool_t *pool)</td></tr>
<tr class="memdesc:adc513fbd1ea98495c3e64f6fb2a69d30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like <a class="el" href="svn__utf_8h.html#af3fc8b8da227d8450bea3b8fdbe3c676" title="Set *dest to a topage encoded C string from utf8 encoded C string src; allocate *dest in pool...">svn_utf_cstring_from_utf8_ex2()</a> but with <em>convset_key</em> which is ignored.  <a href="#adc513fbd1ea98495c3e64f6fb2a69d30">More...</a><br/></td></tr>
<tr class="separator:adc513fbd1ea98495c3e64f6fb2a69d30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fe0b3c68f4ebe78569ae3964b810d1c"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#a7fe0b3c68f4ebe78569ae3964b810d1c">svn_utf_cstring_from_utf8_fuzzy</a> (const char *src, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a7fe0b3c68f4ebe78569ae3964b810d1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a fuzzily native-encoded C string from utf8 C string <em>src</em>, allocated in <em>pool</em>.  <a href="#a7fe0b3c68f4ebe78569ae3964b810d1c">More...</a><br/></td></tr>
<tr class="separator:a7fe0b3c68f4ebe78569ae3964b810d1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8d14aad49446aefa9f612151c6c9687"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad8d14aad49446aefa9f612151c6c9687"></a>
<a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#ad8d14aad49446aefa9f612151c6c9687">svn_utf_cstring_from_utf8_stringbuf</a> (const char **dest, const <a class="el" href="structsvn__stringbuf__t.html">svn_stringbuf_t</a> *src, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ad8d14aad49446aefa9f612151c6c9687"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*dest</em> to a natively-encoded C string from utf8 stringbuf <em>src</em>; allocate <em>*dest</em> in <em>pool</em>. <br/></td></tr>
<tr class="separator:ad8d14aad49446aefa9f612151c6c9687"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d7d5a8619549857b017b7e9af201c40"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4d7d5a8619549857b017b7e9af201c40"></a>
<a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#a4d7d5a8619549857b017b7e9af201c40">svn_utf_cstring_from_utf8_string</a> (const char **dest, const <a class="el" href="structsvn__string__t.html">svn_string_t</a> *src, apr_pool_t *pool)</td></tr>
<tr class="memdesc:a4d7d5a8619549857b017b7e9af201c40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set <em>*dest</em> to a natively-encoded C string from utf8 string <em>src</em>; allocate <em>*dest</em> in <em>pool</em>. <br/></td></tr>
<tr class="separator:a4d7d5a8619549857b017b7e9af201c40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a790f3065c603f4b0311659aabeaf96d1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="svn__utf_8h.html#a790f3065c603f4b0311659aabeaf96d1">svn_utf_cstring_utf8_width</a> (const char *cstr)</td></tr>
<tr class="memdesc:a790f3065c603f4b0311659aabeaf96d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the display width of UTF-8-encoded C string <em>cstr</em>.  <a href="#a790f3065c603f4b0311659aabeaf96d1">More...</a><br/></td></tr>
<tr class="separator:a790f3065c603f4b0311659aabeaf96d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>UTF-8 conversion routines. </p>
<p>Whenever a conversion routine cannot convert to or from UTF-8, the error returned has code <code>APR_EINVAL</code>. </p>

<p>Definition in file <a class="el" href="svn__utf_8h_source.html">svn_utf.h</a>.</p>
</div><h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="adc513fbd1ea98495c3e64f6fb2a69d30"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_utf_cstring_from_utf8_ex </td>
          <td>(</td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>topage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>convset_key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Like <a class="el" href="svn__utf_8h.html#af3fc8b8da227d8450bea3b8fdbe3c676" title="Set *dest to a topage encoded C string from utf8 encoded C string src; allocate *dest in pool...">svn_utf_cstring_from_utf8_ex2()</a> but with <em>convset_key</em> which is ignored. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000450">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. </dd></dl>

</div>
</div>
<a class="anchor" id="af3fc8b8da227d8450bea3b8fdbe3c676"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_utf_cstring_from_utf8_ex2 </td>
          <td>(</td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>topage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*dest</em> to a <em>topage</em> encoded C string from utf8 encoded C string <em>src</em>; allocate <em>*dest</em> in <em>pool</em>. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="a7fe0b3c68f4ebe78569ae3964b810d1c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* svn_utf_cstring_from_utf8_fuzzy </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return a fuzzily native-encoded C string from utf8 C string <em>src</em>, allocated in <em>pool</em>. </p>
<p>A fuzzy recoding leaves all 7-bit ascii characters the same, and substitutes "?\\XXX" for others, where XXX is the unsigned decimal code for that character.</p>
<p>This function cannot error; it is guaranteed to return something. First it will recode as described above and then attempt to convert the (new) 7-bit UTF-8 string to native encoding. If that fails, it will return the raw fuzzily recoded string, which may or may not be meaningful in the client's locale, but is (presumably) better than nothing.</p>
<h3>Notes:</h3>
<p>Improvement is possible, even imminent. The original problem was that if you converted a UTF-8 string (say, a log message) into a locale that couldn't represent all the characters, you'd just get a static placeholder saying "[unconvertible log message]". Then Justin Erenkrantz pointed out how on platforms that didn't support conversion at all, "svn log" would still fail completely when it encountered unconvertible data.</p>
<p>Now for both cases, the caller can at least fall back on this function, which converts the message as best it can, substituting "?\\XXX" escape codes for the non-ascii characters.</p>
<p>Ultimately, some callers may prefer the iconv "//TRANSLIT" option, so when we can detect that at configure time, things will change. Also, this should (?) be moved to apr/apu eventually.</p>
<p>See <a href="http://subversion.tigris.org/issues/show_bug.cgi?id=807">http://subversion.tigris.org/issues/show_bug.cgi?id=807</a> for details. </p>

</div>
</div>
<a class="anchor" id="aad4fb10333a0acdc656afd8c29aed3dd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_utf_cstring_to_utf8_ex </td>
          <td>(</td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>frompage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>convset_key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Like <a class="el" href="svn__utf_8h.html#afc46ab8e7269b0e0e3d2f7b2750b1e23" title="Set *dest to a utf8 encoded C string from frompage encoded C string src; allocate *dest in pool...">svn_utf_cstring_to_utf8_ex2()</a> but with <em>convset_key</em> which is ignored. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000449">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.3 API. </dd></dl>

</div>
</div>
<a class="anchor" id="afc46ab8e7269b0e0e3d2f7b2750b1e23"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_utf_cstring_to_utf8_ex2 </td>
          <td>(</td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>frompage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set <em>*dest</em> to a utf8 encoded C string from <em>frompage</em> encoded C string <em>src</em>; allocate <em>*dest</em> in <em>pool</em>. </p>
<dl class="section since"><dt>Since</dt><dd>New in 1.4. </dd></dl>

</div>
</div>
<a class="anchor" id="a790f3065c603f4b0311659aabeaf96d1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int svn_utf_cstring_utf8_width </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>cstr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the display width of UTF-8-encoded C string <em>cstr</em>. </p>
<p>If the string is not printable or invalid UTF-8, return -1.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.8. </dd></dl>

</div>
</div>
<a class="anchor" id="af0eb451857e73fe18690e2261c6f92af"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_utf_initialize </td>
          <td>(</td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Like <a class="el" href="svn__utf_8h.html#ae56e72c26c4547a6ecde62da2d97321b" title="Initialize the UTF-8 encoding/decoding routines. ">svn_utf_initialize2()</a> but without the ability to force the native encoding to UTF-8. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000448">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.7 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ae56e72c26c4547a6ecde62da2d97321b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void svn_utf_initialize2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>assume_native_utf8</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize the UTF-8 encoding/decoding routines. </p>
<p>Allocate cached translation handles in a subpool of <em>pool</em>.</p>
<p>If <em>assume_native_utf8</em> is TRUE, the native character set is assumed to be UTF-8, i.e. conversion is a no-op. This is useful in contexts where the native character set is ASCII but UTF-8 should be used regardless (e.g. for mod_dav_svn which runs within httpd and always uses the "C" locale).</p>
<dl class="section note"><dt>Note</dt><dd>It is optional to call this function, but if it is used, no other svn function may be in use in other threads during the call of this function or when <em>pool</em> is cleared or destroyed. Initializing the UTF-8 routines will improve performance.</dd></dl>
<dl class="section since"><dt>Since</dt><dd>New in 1.8. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:17:26 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
