<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Subversion: Adm access batons (deprecated)</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Subversion
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Adm access batons (deprecated)<div class="ingroups"><a class="el" href="group__svn__wc.html">Working copy management</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Locking/Opening/Closing using adm access batons.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga2c3046ab8806025e6670a763aa223577"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a></td></tr>
<tr class="memdesc:ga2c3046ab8806025e6670a763aa223577"><td class="mdescLeft">&#160;</td><td class="mdescRight">Baton for access to a working copy administrative area.  <a href="#ga2c3046ab8806025e6670a763aa223577">More...</a><br/></td></tr>
<tr class="separator:ga2c3046ab8806025e6670a763aa223577"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaddf0e029434ea0c11afca9aaec37989e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#gaddf0e029434ea0c11afca9aaec37989e">svn_wc_adm_open3</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> write_lock, int levels_to_lock, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gaddf0e029434ea0c11afca9aaec37989e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return, in <em>*adm_access</em>, a pointer to a new access baton for the working copy administrative area associated with the directory <em>path</em>.  <a href="#gaddf0e029434ea0c11afca9aaec37989e">More...</a><br/></td></tr>
<tr class="separator:gaddf0e029434ea0c11afca9aaec37989e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga118cf24d8f4dbd85c2fd377873489715"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga118cf24d8f4dbd85c2fd377873489715">svn_wc_adm_open2</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> write_lock, int levels_to_lock, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga118cf24d8f4dbd85c2fd377873489715"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__wc__adm__access.html#gaddf0e029434ea0c11afca9aaec37989e" title="Return, in *adm_access, a pointer to a new access baton for the working copy administrative area asso...">svn_wc_adm_open3()</a>, but without cancellation support.  <a href="#ga118cf24d8f4dbd85c2fd377873489715">More...</a><br/></td></tr>
<tr class="separator:ga118cf24d8f4dbd85c2fd377873489715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga80292eb05f5147165bf64a5125318a43"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga80292eb05f5147165bf64a5125318a43">svn_wc_adm_open</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> write_lock, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> tree_lock, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga80292eb05f5147165bf64a5125318a43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__wc__adm__access.html#ga118cf24d8f4dbd85c2fd377873489715" title="Similar to svn_wc_adm_open3(), but without cancellation support. ">svn_wc_adm_open2()</a>, but with <em>tree_lock</em> instead of <em>levels_to_lock</em>.  <a href="#ga80292eb05f5147165bf64a5125318a43">More...</a><br/></td></tr>
<tr class="separator:ga80292eb05f5147165bf64a5125318a43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga971e7caac7597c29fd0e8e7d5e29da78"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga971e7caac7597c29fd0e8e7d5e29da78">svn_wc_adm_probe_open3</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> write_lock, int levels_to_lock, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga971e7caac7597c29fd0e8e7d5e29da78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks the working copy to determine the node type of <em>path</em>.  <a href="#ga971e7caac7597c29fd0e8e7d5e29da78">More...</a><br/></td></tr>
<tr class="separator:ga971e7caac7597c29fd0e8e7d5e29da78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b354346d178c60dcb2c65c223f5b6b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga0b354346d178c60dcb2c65c223f5b6b4">svn_wc_adm_probe_open2</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> write_lock, int levels_to_lock, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga0b354346d178c60dcb2c65c223f5b6b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__wc__adm__access.html#ga971e7caac7597c29fd0e8e7d5e29da78" title="Checks the working copy to determine the node type of path. ">svn_wc_adm_probe_open3()</a> without the cancel functionality.  <a href="#ga0b354346d178c60dcb2c65c223f5b6b4">More...</a><br/></td></tr>
<tr class="separator:ga0b354346d178c60dcb2c65c223f5b6b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8f6dc11fdaf7444b29eb04ca58a9ec06"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga8f6dc11fdaf7444b29eb04ca58a9ec06">svn_wc_adm_probe_open</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> write_lock, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> tree_lock, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga8f6dc11fdaf7444b29eb04ca58a9ec06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__wc__adm__access.html#ga0b354346d178c60dcb2c65c223f5b6b4" title="Similar to svn_wc_adm_probe_open3() without the cancel functionality. ">svn_wc_adm_probe_open2()</a>, but with <em>tree_lock</em> instead of <em>levels_to_lock</em>.  <a href="#ga8f6dc11fdaf7444b29eb04ca58a9ec06">More...</a><br/></td></tr>
<tr class="separator:ga8f6dc11fdaf7444b29eb04ca58a9ec06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga815baadf43d3b81c1d24acfd77a80881"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga815baadf43d3b81c1d24acfd77a80881">svn_wc_adm_open_anchor</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **anchor_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **target_access, const char **target, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> write_lock, int levels_to_lock, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga815baadf43d3b81c1d24acfd77a80881"><td class="mdescLeft">&#160;</td><td class="mdescRight">Open access batons for <em>path</em> and return in <em>*anchor_access</em> and <em>*target</em> the anchor and target required to drive an editor.  <a href="#ga815baadf43d3b81c1d24acfd77a80881">More...</a><br/></td></tr>
<tr class="separator:ga815baadf43d3b81c1d24acfd77a80881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafcb8ef7b4025bdff2c0fdf277bdadf09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#gafcb8ef7b4025bdff2c0fdf277bdadf09">svn_wc_adm_retrieve</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gafcb8ef7b4025bdff2c0fdf277bdadf09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return, in <em>*adm_access</em>, a pointer to an existing access baton associated with <em>path</em>.  <a href="#gafcb8ef7b4025bdff2c0fdf277bdadf09">More...</a><br/></td></tr>
<tr class="separator:gafcb8ef7b4025bdff2c0fdf277bdadf09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47b1104d8a1376cd9c8532a261805e6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga47b1104d8a1376cd9c8532a261805e6e">svn_wc_adm_probe_retrieve</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga47b1104d8a1376cd9c8532a261805e6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check the working copy to determine the node type of <em>path</em>.  <a href="#ga47b1104d8a1376cd9c8532a261805e6e">More...</a><br/></td></tr>
<tr class="separator:ga47b1104d8a1376cd9c8532a261805e6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga94b2ca8feb1118f5c234ed2951e3ae73"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga94b2ca8feb1118f5c234ed2951e3ae73">svn_wc_adm_probe_try3</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> write_lock, int levels_to_lock, <a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a> cancel_func, void *cancel_baton, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga94b2ca8feb1118f5c234ed2951e3ae73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Try various ways to obtain an access baton for <em>path</em>.  <a href="#ga94b2ca8feb1118f5c234ed2951e3ae73">More...</a><br/></td></tr>
<tr class="separator:ga94b2ca8feb1118f5c234ed2951e3ae73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga631aca7597279d301659392f21ea00a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga631aca7597279d301659392f21ea00a8">svn_wc_adm_probe_try2</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> write_lock, int levels_to_lock, apr_pool_t *pool)</td></tr>
<tr class="memdesc:ga631aca7597279d301659392f21ea00a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__wc__adm__access.html#ga94b2ca8feb1118f5c234ed2951e3ae73" title="Try various ways to obtain an access baton for path. ">svn_wc_adm_probe_try3()</a> without the cancel functionality.  <a href="#ga631aca7597279d301659392f21ea00a8">More...</a><br/></td></tr>
<tr class="separator:ga631aca7597279d301659392f21ea00a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4d2de08de13ffc40789a2b2c3736d0a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#gae4d2de08de13ffc40789a2b2c3736d0a">svn_wc_adm_probe_try</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **adm_access, <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *associated, const char *path, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> write_lock, <a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> tree_lock, apr_pool_t *pool)</td></tr>
<tr class="memdesc:gae4d2de08de13ffc40789a2b2c3736d0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__wc__adm__access.html#ga631aca7597279d301659392f21ea00a8" title="Similar to svn_wc_adm_probe_try3() without the cancel functionality. ">svn_wc_adm_probe_try2()</a>, but with <em>tree_lock</em> instead of <em>levels_to_lock</em>.  <a href="#gae4d2de08de13ffc40789a2b2c3736d0a">More...</a><br/></td></tr>
<tr class="separator:gae4d2de08de13ffc40789a2b2c3736d0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e08699d39123ad0a10f25864ff18cc8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga0e08699d39123ad0a10f25864ff18cc8">svn_wc_adm_close2</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *adm_access, apr_pool_t *scratch_pool)</td></tr>
<tr class="memdesc:ga0e08699d39123ad0a10f25864ff18cc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Give up the access baton <em>adm_access</em>, and its lock if any.  <a href="#ga0e08699d39123ad0a10f25864ff18cc8">More...</a><br/></td></tr>
<tr class="separator:ga0e08699d39123ad0a10f25864ff18cc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d68fda6ceadb30d83c93d7ef67cf612"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structsvn__error__t.html">svn_error_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga3d68fda6ceadb30d83c93d7ef67cf612">svn_wc_adm_close</a> (<a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *adm_access)</td></tr>
<tr class="memdesc:ga3d68fda6ceadb30d83c93d7ef67cf612"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="group__svn__wc__adm__access.html#ga0e08699d39123ad0a10f25864ff18cc8" title="Give up the access baton adm_access, and its lock if any. ">svn_wc_adm_close2()</a>, but with the internal pool of <em>adm_access</em> used for temporary allocations.  <a href="#ga3d68fda6ceadb30d83c93d7ef67cf612">More...</a><br/></td></tr>
<tr class="separator:ga3d68fda6ceadb30d83c93d7ef67cf612"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ae775ef2795b1185f5045cba43220f9"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga1ae775ef2795b1185f5045cba43220f9">svn_wc_adm_access_path</a> (const <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *adm_access)</td></tr>
<tr class="memdesc:ga1ae775ef2795b1185f5045cba43220f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the path used to open the access baton <em>adm_access</em>.  <a href="#ga1ae775ef2795b1185f5045cba43220f9">More...</a><br/></td></tr>
<tr class="separator:ga1ae775ef2795b1185f5045cba43220f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b41cc9abfa8bc0b3c7ff6c93994dbd2"><td class="memItemLeft" align="right" valign="top">apr_pool_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#ga5b41cc9abfa8bc0b3c7ff6c93994dbd2">svn_wc_adm_access_pool</a> (const <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *adm_access)</td></tr>
<tr class="memdesc:ga5b41cc9abfa8bc0b3c7ff6c93994dbd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the pool used by access baton <em>adm_access</em>.  <a href="#ga5b41cc9abfa8bc0b3c7ff6c93994dbd2">More...</a><br/></td></tr>
<tr class="separator:ga5b41cc9abfa8bc0b3c7ff6c93994dbd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad32ff3d5066d7997af0f7f91cb62eeb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__svn__wc__adm__access.html#gad32ff3d5066d7997af0f7f91cb62eeb2">svn_wc_adm_locked</a> (const <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *adm_access)</td></tr>
<tr class="memdesc:gad32ff3d5066d7997af0f7f91cb62eeb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return <code>TRUE</code> is the access baton <em>adm_access</em> has a write lock, <code>FALSE</code> otherwise.  <a href="#gad32ff3d5066d7997af0f7f91cb62eeb2">More...</a><br/></td></tr>
<tr class="separator:gad32ff3d5066d7997af0f7f91cb62eeb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Locking/Opening/Closing using adm access batons. </p>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="ga2c3046ab8806025e6670a763aa223577"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Baton for access to a working copy administrative area. </p>
<p>Access batons can be grouped into sets, by passing an existing open baton when opening a new baton. Given one baton in a set, other batons may be retrieved. This allows an entire hierarchy to be locked, and then the set of batons can be passed around by passing a single baton.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000454">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. New code should use a <a class="el" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions. ">svn_wc_context_t</a> object to access the working copy. </dd></dl>

<p>Definition at line <a class="el" href="svn__wc_8h_source.html#l00237">237</a> of file <a class="el" href="svn__wc_8h_source.html">svn_wc.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga1ae775ef2795b1185f5045cba43220f9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* svn_wc_adm_access_path </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>adm_access</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the path used to open the access baton <em>adm_access</em>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000469">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5b41cc9abfa8bc0b3c7ff6c93994dbd2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">apr_pool_t* svn_wc_adm_access_pool </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>adm_access</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the pool used by access baton <em>adm_access</em>. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000470">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3d68fda6ceadb30d83c93d7ef67cf612"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_close </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>adm_access</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__wc__adm__access.html#ga0e08699d39123ad0a10f25864ff18cc8" title="Give up the access baton adm_access, and its lock if any. ">svn_wc_adm_close2()</a>, but with the internal pool of <em>adm_access</em> used for temporary allocations. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000468">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.5 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0e08699d39123ad0a10f25864ff18cc8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_close2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>scratch_pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Give up the access baton <em>adm_access</em>, and its lock if any. </p>
<p>This will recursively close any batons in the same set that are direct subdirectories of <em>adm_access</em>. Any physical locks will be removed from the working copy. Lock removal is unconditional, there is no check to determine if cleanup is required.</p>
<p>Any temporary allocations are performed using <em>scratch_pool</em>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.6 </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000467">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gad32ff3d5066d7997af0f7f91cb62eeb2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a> svn_wc_adm_locked </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>adm_access</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return <code>TRUE</code> is the access baton <em>adm_access</em> has a write lock, <code>FALSE</code> otherwise. </p>
<p>Compared to <a class="el" href="group__svn__wc.html#ga8b66a2c9cc512699bc7e764f2ccd13b3" title="Set *locked to non-zero if path is locked, else set it to zero. ">svn_wc_locked()</a> this is a cheap, fast function that doesn't access the filesystem.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000471">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. New code should use <a class="el" href="group__svn__wc.html#ga54914757b40d17e4c82604ac10eef3c7" title="Gets up to two booleans indicating whether a path is locked for writing. ">svn_wc_locked2()</a> instead. </dd></dl>

</div>
</div>
<a class="anchor" id="ga80292eb05f5147165bf64a5125318a43"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>write_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>tree_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__wc__adm__access.html#ga118cf24d8f4dbd85c2fd377873489715" title="Similar to svn_wc_adm_open3(), but without cancellation support. ">svn_wc_adm_open2()</a>, but with <em>tree_lock</em> instead of <em>levels_to_lock</em>. </p>
<p><em>levels_to_lock</em> is set to -1 if <em>tree_lock</em> is <code>TRUE</code>, else 0.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000457">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.0 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga118cf24d8f4dbd85c2fd377873489715"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_open2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>write_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>levels_to_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__wc__adm__access.html#gaddf0e029434ea0c11afca9aaec37989e" title="Return, in *adm_access, a pointer to a new access baton for the working copy administrative area asso...">svn_wc_adm_open3()</a>, but without cancellation support. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000456">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.1 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gaddf0e029434ea0c11afca9aaec37989e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_open3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>write_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>levels_to_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return, in <em>*adm_access</em>, a pointer to a new access baton for the working copy administrative area associated with the directory <em>path</em>. </p>
<p>If <em>write_lock</em> is TRUE the baton will include a write lock, otherwise the baton can only be used for read access. If <em>path</em> refers to a directory that is already write locked then the error <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660ab0cd6ad013c35caeb447fb236fcaee53" title="&quot;Attempted to lock an already-locked dir&quot; ">SVN_ERR_WC_LOCKED</a> will be returned. The error <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660a8622175b5afdcca5900ada6a26fbc359" title="&quot;Path is not a working copy directory&quot; ">SVN_ERR_WC_NOT_DIRECTORY</a> will be returned if <em>path</em> is not a versioned directory.</p>
<p>If <em>associated</em> is an open access baton then <em>adm_access</em> will be added to the set containing <em>associated</em>. <em>associated</em> can be <code>NULL</code>, in which case <em>adm_access</em> is the start of a new set.</p>
<p><em>levels_to_lock</em> specifies how far to lock. Zero means just the specified directory. Any negative value means to lock the entire working copy directory hierarchy under <em>path</em>. A positive value indicates the number of levels of directories to lock &ndash; 1 means just immediate subdirectories, 2 means immediate subdirectories and their subdirectories, etc. All the access batons will become part of the set containing <em>adm_access</em>. This is an all-or-nothing option, if it is not possible to lock all the requested directories then an error will be returned and <em>adm_access</em> will be invalid, with the exception that subdirectories of <em>path</em> that are missing from the physical filesystem will not be locked and will not cause an error. The error <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660ab0cd6ad013c35caeb447fb236fcaee53" title="&quot;Attempted to lock an already-locked dir&quot; ">SVN_ERR_WC_LOCKED</a> will be returned if a subdirectory of <em>path</em> is already write locked.</p>
<p>If <em>cancel_func</em> is non-NULL, call it with <em>cancel_baton</em> to determine if the client has canceled the operation.</p>
<p><em>pool</em> will be used to allocate memory for the baton and any subsequently cached items. If <em>adm_access</em> has not been closed when the pool is cleared, it will be closed automatically at that point, and removed from its set. A baton closed in this way will not remove physical locks from the working copy if cleanup is required.</p>
<p>The first baton in a set, with <em>associated</em> passed as <code>NULL</code>, must have the longest lifetime of all the batons in the set. This implies it must be the root of the hierarchy.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.2. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000455">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. Callers should use a <a class="el" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions. ">svn_wc_context_t</a> object to access the working copy. </dd></dl>

</div>
</div>
<a class="anchor" id="ga815baadf43d3b81c1d24acfd77a80881"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_open_anchor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>anchor_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>target_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>write_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>levels_to_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Open access batons for <em>path</em> and return in <em>*anchor_access</em> and <em>*target</em> the anchor and target required to drive an editor. </p>
<p>Return in <em>*target_access</em> the access baton for the target, which may be the same as <em>*anchor_access</em> (in which case <em>*target</em> is the empty string, never NULL). All the access batons will be in the <em>*anchor_access</em> set.</p>
<p><em>levels_to_lock</em> determines the levels_to_lock used when opening <em>path</em> if <em>path</em> is a versioned directory, <em>levels_to_lock</em> is ignored otherwise. If <em>write_lock</em> is <code>TRUE</code> the access batons will hold write locks.</p>
<p>If <em>cancel_func</em> is non-NULL, call it with <em>cancel_baton</em> to determine if the client has canceled the operation.</p>
<p>This function is essentially a combination of <a class="el" href="group__svn__wc__adm__access.html#gaddf0e029434ea0c11afca9aaec37989e" title="Return, in *adm_access, a pointer to a new access baton for the working copy administrative area asso...">svn_wc_adm_open3()</a> and <a class="el" href="group__svn__wc.html#gab56f7f5c239f34d5ac75fb65567410e6" title="Similar to svn_wc_get_actual_target2(), but without the wc context, and with a absolute path...">svn_wc_get_actual_target()</a>, with the emphasis on reducing physical IO.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.2. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000461">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. Callers should use a <a class="el" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions. ">svn_wc_context_t</a> object to access the working copy. </dd></dl>

</div>
</div>
<a class="anchor" id="ga8f6dc11fdaf7444b29eb04ca58a9ec06"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_probe_open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>write_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>tree_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__wc__adm__access.html#ga0b354346d178c60dcb2c65c223f5b6b4" title="Similar to svn_wc_adm_probe_open3() without the cancel functionality. ">svn_wc_adm_probe_open2()</a>, but with <em>tree_lock</em> instead of <em>levels_to_lock</em>. </p>
<p><em>levels_to_lock</em> is set to -1 if <em>tree_lock</em> is <code>TRUE</code>, else 0.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000460">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.0 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0b354346d178c60dcb2c65c223f5b6b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_probe_open2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>write_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>levels_to_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__wc__adm__access.html#ga971e7caac7597c29fd0e8e7d5e29da78" title="Checks the working copy to determine the node type of path. ">svn_wc_adm_probe_open3()</a> without the cancel functionality. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000459">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.1 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga971e7caac7597c29fd0e8e7d5e29da78"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_probe_open3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>write_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>levels_to_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks the working copy to determine the node type of <em>path</em>. </p>
<p>If <em>path</em> is a versioned directory then the behaviour is like that of <a class="el" href="group__svn__wc__adm__access.html#gaddf0e029434ea0c11afca9aaec37989e" title="Return, in *adm_access, a pointer to a new access baton for the working copy administrative area asso...">svn_wc_adm_open3()</a>, otherwise, if <em>path</em> is a file or does not exist, then the behaviour is like that of <a class="el" href="group__svn__wc__adm__access.html#gaddf0e029434ea0c11afca9aaec37989e" title="Return, in *adm_access, a pointer to a new access baton for the working copy administrative area asso...">svn_wc_adm_open3()</a> with <em>path</em> replaced by the parent directory of <em>path</em>. If <em>path</em> is an unversioned directory, the behaviour is also like that of <a class="el" href="group__svn__wc__adm__access.html#gaddf0e029434ea0c11afca9aaec37989e" title="Return, in *adm_access, a pointer to a new access baton for the working copy administrative area asso...">svn_wc_adm_open3()</a> on the parent, except that if the open fails, then the returned <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660a8622175b5afdcca5900ada6a26fbc359" title="&quot;Path is not a working copy directory&quot; ">SVN_ERR_WC_NOT_DIRECTORY</a> error refers to <em>path</em>, not to <em>path's</em> parent.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.2. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000458">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. Callers should use a <a class="el" href="group__svn__wc__context.html#ga0db3536906d8b476d8189d7fd4277bae" title="The context for all working copy interactions. ">svn_wc_context_t</a> object to access the working copy. </dd></dl>

</div>
</div>
<a class="anchor" id="ga47b1104d8a1376cd9c8532a261805e6e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_probe_retrieve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check the working copy to determine the node type of <em>path</em>. </p>
<p>If <em>path</em> is a versioned directory then the behaviour is like that of <a class="el" href="group__svn__wc__adm__access.html#gafcb8ef7b4025bdff2c0fdf277bdadf09" title="Return, in *adm_access, a pointer to an existing access baton associated with path. ">svn_wc_adm_retrieve()</a>, otherwise, if <em>path</em> is a file, an unversioned directory, or does not exist, then the behaviour is like that of <a class="el" href="group__svn__wc__adm__access.html#gafcb8ef7b4025bdff2c0fdf277bdadf09" title="Return, in *adm_access, a pointer to an existing access baton associated with path. ">svn_wc_adm_retrieve()</a> with <em>path</em> replaced by the parent directory of <em>path</em>.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000463">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gae4d2de08de13ffc40789a2b2c3736d0a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_probe_try </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>write_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>tree_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__wc__adm__access.html#ga631aca7597279d301659392f21ea00a8" title="Similar to svn_wc_adm_probe_try3() without the cancel functionality. ">svn_wc_adm_probe_try2()</a>, but with <em>tree_lock</em> instead of <em>levels_to_lock</em>. </p>
<p><em>levels_to_lock</em> is set to -1 if <em>tree_lock</em> is <code>TRUE</code>, else 0.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000466">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.0 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga631aca7597279d301659392f21ea00a8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_probe_try2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>write_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>levels_to_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="group__svn__wc__adm__access.html#ga94b2ca8feb1118f5c234ed2951e3ae73" title="Try various ways to obtain an access baton for path. ">svn_wc_adm_probe_try3()</a> without the cancel functionality. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000465">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.1 API. </dd></dl>

</div>
</div>
<a class="anchor" id="ga94b2ca8feb1118f5c234ed2951e3ae73"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_probe_try3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#a22b35baddc4213c688d1bb12feea1024">svn_boolean_t</a>&#160;</td>
          <td class="paramname"><em>write_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>levels_to_lock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="svn__types_8h.html#addaab83431a3d41b6c62e9d501cd5ecc">svn_cancel_func_t</a>&#160;</td>
          <td class="paramname"><em>cancel_func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>cancel_baton</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Try various ways to obtain an access baton for <em>path</em>. </p>
<p>First, try to obtain <em>*adm_access</em> via <a class="el" href="group__svn__wc__adm__access.html#ga47b1104d8a1376cd9c8532a261805e6e" title="Check the working copy to determine the node type of path. ">svn_wc_adm_probe_retrieve()</a>, but if this fails because <em>associated</em> can't give a baton for <em>path</em> or <em>path's</em> parent, then try <a class="el" href="group__svn__wc__adm__access.html#ga971e7caac7597c29fd0e8e7d5e29da78" title="Checks the working copy to determine the node type of path. ">svn_wc_adm_probe_open3()</a>, this time passing <em>write_lock</em> and <em>levels_to_lock</em>. If there is still no access because <em>path</em> is not a versioned directory, then just set <em>*adm_access</em> to NULL and return success. But if it is because <em>path</em> is locked, then return the error <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660ab0cd6ad013c35caeb447fb236fcaee53" title="&quot;Attempted to lock an already-locked dir&quot; ">SVN_ERR_WC_LOCKED</a>, and the effect on <em>*adm_access</em> is undefined. (Or if the attempt fails for any other reason, return the corresponding error, and the effect on <em>*adm_access</em> is also undefined.)</p>
<p>If <a class="el" href="group__svn__wc__adm__access.html#ga971e7caac7597c29fd0e8e7d5e29da78" title="Checks the working copy to determine the node type of path. ">svn_wc_adm_probe_open3()</a> succeeds, then add <em>*adm_access</em> to <em>associated</em>.</p>
<p>If <em>cancel_func</em> is non-NULL, call it with <em>cancel_baton</em> to determine if the client has canceled the operation.</p>
<p>Use <em>pool</em> only for local processing, not to allocate <em>*adm_access</em>.</p>
<dl class="section since"><dt>Since</dt><dd>New in 1.2. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000464">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
<a class="anchor" id="gafcb8ef7b4025bdff2c0fdf277bdadf09"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structsvn__error__t.html">svn_error_t</a>* svn_wc_adm_retrieve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> **&#160;</td>
          <td class="paramname"><em>adm_access</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__svn__wc__adm__access.html#ga2c3046ab8806025e6670a763aa223577">svn_wc_adm_access_t</a> *&#160;</td>
          <td class="paramname"><em>associated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">apr_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return, in <em>*adm_access</em>, a pointer to an existing access baton associated with <em>path</em>. </p>
<p><em>path</em> must be a directory that is locked as part of the set containing the <em>associated</em> access baton.</p>
<p>If the requested access baton is marked as missing in, or is simply absent from, <em>associated</em>, return <a class="el" href="svn__error__codes_8h.html#ac8784565366c15a28d456c4997963660a309831a0fe699de2ab7e89a9de7a7a3e" title="&quot;Working copy not locked; this is probably a bug, please report&quot; ">SVN_ERR_WC_NOT_LOCKED</a>.</p>
<p><em>pool</em> is used only for local processing, it is not used for the batons.</p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000462">Deprecated:</a></b></dt><dd>Provided for backward compatibility with the 1.6 API. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 19 2015 09:17:28 for Subversion by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
